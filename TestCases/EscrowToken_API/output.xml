<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200329 01:34:49.905" rpa="false">
<suite id="s1" name="Token TestCases" source="C:\Users\perennial\PycharmProjects\EscrowAPI\TestCases\EscrowToken_API\Token_TestCases.robot">
<test id="s1-t1" name="TC_05 GetSellerDetails with Valid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200329 01:34:50.425" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200329 01:34:50.425" endtime="20200329 01:34:50.426"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200329 01:34:50.426" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200329 01:34:50.426" endtime="20200329 01:34:50.426"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:50.427" endtime="20200329 01:34:50.427"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200329 01:34:50.427" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200329 01:34:50.427" endtime="20200329 01:34:50.427"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200329 01:34:50.429" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200329 01:34:50.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200329 01:34:50.428" endtime="20200329 01:34:50.608"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200329 01:34:50.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200329 01:34:50.609" endtime="20200329 01:34:50.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200329 01:34:50.610" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUNTZGVVUnZCTUkxaFdCZTdpUFRIVjI0QlpVREhMRUlvMTZ2RWR1YytKUmQzcGJUQnpnOTF0TkJlcEFqTk42MFRRaENWcnNtMGFEZzF6T0syOXF1Mm89IiwibmJmIjoxNTg1NDI1ODkwLCJleHAiOjE1ODU0MjU5NTAsImlhdCI6MTU4NTQyNTg5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.R1Kp9IsSMk_Zo9aKXBYOcZHcT9n8kWPCGq2Gm-tMP9Y</msg>
<status status="PASS" starttime="20200329 01:34:50.609" endtime="20200329 01:34:50.610"></status>
</kw>
<msg timestamp="20200329 01:34:50.611" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUNTZGVVUnZCTUkxaFdCZTdpUFRIVjI0QlpVREhMRUl...</msg>
<status status="PASS" starttime="20200329 01:34:50.425" endtime="20200329 01:34:50.611"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${IdNumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200329 01:34:50.612" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200329 01:34:50.612" endtime="20200329 01:34:50.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200329 01:34:50.613" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200329 01:34:50.613" endtime="20200329 01:34:50.613"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:50.614" endtime="20200329 01:34:50.614"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200329 01:34:50.615" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200329 01:34:50.614" endtime="20200329 01:34:50.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200329 01:34:50.616" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200329 01:34:51.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200329 01:34:50.615" endtime="20200329 01:34:51.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200329 01:34:51.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200329 01:34:51.105" endtime="20200329 01:34:51.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200329 01:34:51.106" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0Q5RmNsU3ByaDRjTk9zOHZWUDdXK3FmQU03TWZlUTJ6MkY5dnRycFZvaHA1SjJrYlVmc1loR2lyZGNpR1V2WDV1M2ZtOWhiSWFQaWhCY3dqUk5Kc0U9IiwibmJmIjoxNTg1NDI1ODkwLCJleHAiOjE1ODU0MjU5NTAsImlhdCI6MTU4NTQyNTg5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yVDEHI1q7Dq4JR2J9Ixg7EJ6ionC0RdzR81GmZouzCM</msg>
<status status="PASS" starttime="20200329 01:34:51.106" endtime="20200329 01:34:51.106"></status>
</kw>
<msg timestamp="20200329 01:34:51.107" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0Q5RmNsU3ByaDRjTk9zOHZWUDdXK3FmQU03TWZlUTJ...</msg>
<status status="PASS" starttime="20200329 01:34:50.612" endtime="20200329 01:34:51.107"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200329 01:34:51.108" level="INFO">${Id} = 16343339982233</msg>
<status status="PASS" starttime="20200329 01:34:51.107" endtime="20200329 01:34:51.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200329 01:34:51.108" level="INFO">${IdNumber} = 16343339982233</msg>
<status status="PASS" starttime="20200329 01:34:51.108" endtime="20200329 01:34:51.108"></status>
</kw>
<msg timestamp="20200329 01:34:51.109" level="INFO">${idNum} = 16343339982233</msg>
<status status="PASS" starttime="20200329 01:34:51.107" endtime="20200329 01:34:51.109"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200329 01:34:51.110" level="INFO">${mobile} = 7405117294</msg>
<status status="PASS" starttime="20200329 01:34:51.109" endtime="20200329 01:34:51.110"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200329 01:34:51.110" level="INFO">${mobileNo} = 7405117294</msg>
<status status="PASS" starttime="20200329 01:34:51.110" endtime="20200329 01:34:51.110"></status>
</kw>
<msg timestamp="20200329 01:34:51.110" level="INFO">${MobNo} = 7405117294</msg>
<status status="PASS" starttime="20200329 01:34:51.109" endtime="20200329 01:34:51.110"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200329 01:34:51.112" level="INFO">${Emailnum} = 15510</msg>
<status status="PASS" starttime="20200329 01:34:51.111" endtime="20200329 01:34:51.112"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200329 01:34:51.112" level="INFO">${enum} = 15510</msg>
<status status="PASS" starttime="20200329 01:34:51.112" endtime="20200329 01:34:51.112"></status>
</kw>
<msg timestamp="20200329 01:34:51.112" level="INFO">${num} = 15510</msg>
<status status="PASS" starttime="20200329 01:34:51.111" endtime="20200329 01:34:51.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200329 01:34:51.113" level="INFO">${emailid} = pavan15510@2c2p.com</msg>
<status status="PASS" starttime="20200329 01:34:51.113" endtime="20200329 01:34:51.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200329 01:34:51.114" level="INFO">${email} = pavan15510@2c2p.com</msg>
<status status="PASS" starttime="20200329 01:34:51.113" endtime="20200329 01:34:51.114"></status>
</kw>
<msg timestamp="20200329 01:34:51.114" level="INFO">${emailid} = pavan15510@2c2p.com</msg>
<status status="PASS" starttime="20200329 01:34:51.111" endtime="20200329 01:34:51.114"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200329 01:34:51.116" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200329 01:34:51.116" endtime="20200329 01:34:51.117"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200329 01:34:51.117" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200329 01:34:51.117" endtime="20200329 01:34:51.117"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200329 01:34:51.118" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200329 01:34:51.118" endtime="20200329 01:34:51.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200329 01:34:51.119" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200329 01:34:51.118" endtime="20200329 01:34:51.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200329 01:34:51.121" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200329 01:34:51.120" endtime="20200329 01:34:51.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200329 01:34:51.124" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '16343339982233', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7405117294', 'email': 'pavan15510@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200329 01:34:51.121" endtime="20200329 01:34:51.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200329 01:34:51.124" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0Q5RmNsU3ByaDRjTk9zOHZWUDdXK3FmQU03...</msg>
<status status="PASS" starttime="20200329 01:34:51.124" endtime="20200329 01:34:51.124"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200329 01:34:51.125" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200329 01:34:51.124" endtime="20200329 01:34:51.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200329 01:34:51.126" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0Q5RmNsU3ByaDRjTk9zOHZWUDdXK3FmQU03TWZlUTJ6MkY5dnRycFZvaHA1SjJrYlVmc1loR2lyZGNpR1V2WDV1M2ZtOWhiSWFQaWhCY3dqUk5Kc0U9IiwibmJmIjoxNTg1NDI1ODkwLCJleHAiOjE1ODU0MjU5NTAsImlhdCI6MTU4NTQyNTg5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yVDEHI1q7Dq4JR2J9Ixg7EJ6ionC0RdzR81GmZouzCM'} 
data={"escrowCompanyId": "001", "idNumber": "16343339982233", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7405117294", "email": "pavan15510@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200329 01:34:51.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200329 01:34:51.125" endtime="20200329 01:34:51.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200329 01:34:51.364" level="INFO">{"sellerId":"92476460-70a0-45fe-9bcf-606b4087e8bb","responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200329 01:34:51.364" endtime="20200329 01:34:51.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200329 01:34:51.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200329 01:34:51.365" endtime="20200329 01:34:51.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:51.366" endtime="20200329 01:34:51.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:51.366" endtime="20200329 01:34:51.367"></status>
</kw>
<msg timestamp="20200329 01:34:51.367" level="INFO">${sellerid} = 92476460-70a0-45fe-9bcf-606b4087e8bb</msg>
<status status="PASS" starttime="20200329 01:34:51.114" endtime="20200329 01:34:51.367"></status>
</kw>
<msg timestamp="20200329 01:34:51.367" level="INFO">${SellerId} = 92476460-70a0-45fe-9bcf-606b4087e8bb</msg>
<msg timestamp="20200329 01:34:51.367" level="INFO">${IdNumber} = 16343339982233</msg>
<status status="PASS" starttime="20200329 01:34:50.611" endtime="20200329 01:34:51.367"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200329 01:34:51.369" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200329 01:34:51.369" endtime="20200329 01:34:51.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200329 01:34:51.370" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '92476460-70a0-45fe-9bcf-606b4087e8bb'}</msg>
<status status="PASS" starttime="20200329 01:34:51.369" endtime="20200329 01:34:51.370"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200329 01:34:51.370" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUNTZGVVUnZCTUkxaFdCZTdpUFRIVjI0QlpV...</msg>
<status status="PASS" starttime="20200329 01:34:51.370" endtime="20200329 01:34:51.370"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200329 01:34:51.371" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200329 01:34:51.370" endtime="20200329 01:34:51.371"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200329 01:34:51.371" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUNTZGVVUnZCTUkxaFdCZTdpUFRIVjI0QlpVREhMRUlvMTZ2RWR1YytKUmQzcGJUQnpnOTF0TkJlcEFqTk42MFRRaENWcnNtMGFEZzF6T0syOXF1Mm89IiwibmJmIjoxNTg1NDI1ODkwLCJleHAiOjE1ODU0MjU5NTAsImlhdCI6MTU4NTQyNTg5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.R1Kp9IsSMk_Zo9aKXBYOcZHcT9n8kWPCGq2Gm-tMP9Y'} 
data={"escrowCompanyId": "001", "sellerID": "92476460-70a0-45fe-9bcf-606b4087e8bb"} 
json=None</msg>
<msg timestamp="20200329 01:34:57.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200329 01:34:51.371" endtime="20200329 01:34:57.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200329 01:34:57.577" level="INFO">{"escrowCompanyId":"001","sellerId":"92476460-70a0-45fe-9bcf-606b4087e8bb","idNumber":"16343339982233","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7405117294","email":"pavan15510@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"29/03/2020 03:04:50","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200329 01:34:57.576" endtime="20200329 01:34:57.577"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200329 01:34:57.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200329 01:34:57.578" endtime="20200329 01:34:57.578"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:57.578" endtime="20200329 01:34:57.579"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200329 01:34:57.579" endtime="20200329 01:34:57.580"></status>
</kw>
<status status="PASS" starttime="20200329 01:34:51.368" endtime="20200329 01:34:57.580"></status>
</kw>
<doc>Valid: To check API response with valid JWT token</doc>
<tags>
<tag>thisone</tag>
</tags>
<status status="PASS" starttime="20200329 01:34:50.424" endtime="20200329 01:34:57.580" critical="yes"></status>
</test>
<status status="PASS" starttime="20200329 01:34:49.907" endtime="20200329 01:34:57.582"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">thisone</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Token TestCases">Token TestCases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
