<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200402 09:50:13.544" rpa="false">
<suite id="s1" name="Token TestCases" source="C:\Users\perennial\PycharmProjects\EscrowAPI\TestCases\EscrowToken_API\Token_TestCases.robot">
<test id="s1-t1" name="TC_01 RegisterNewSeller with Empty JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:50:16.131" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:50:14.129" endtime="20200402 09:50:16.131"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:50:16.132" level="INFO">${Id} = 69079307337262</msg>
<status status="PASS" starttime="20200402 09:50:16.132" endtime="20200402 09:50:16.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:50:16.133" level="INFO">${IdNumber} = 69079307337262</msg>
<status status="PASS" starttime="20200402 09:50:16.133" endtime="20200402 09:50:16.133"></status>
</kw>
<msg timestamp="20200402 09:50:16.133" level="INFO">${IdNumber} = 69079307337262</msg>
<status status="PASS" starttime="20200402 09:50:16.132" endtime="20200402 09:50:16.133"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:50:16.135" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:50:16.134" endtime="20200402 09:50:16.135"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:50:16.135" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 09:50:16.135" endtime="20200402 09:50:16.136"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:50:16.136" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:50:16.136" endtime="20200402 09:50:16.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:50:16.137" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '69079307337262', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 09:50:16.136" endtime="20200402 09:50:16.137"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:50:16.138" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200402 09:50:16.137" endtime="20200402 09:50:16.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:50:16.138" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200402 09:50:16.138" endtime="20200402 09:50:16.138"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:50:16.139" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "idNumber": "69079307337262", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 09:50:16.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:50:16.138" endtime="20200402 09:50:16.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:50:16.629" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 09:50:16.628" endtime="20200402 09:50:16.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:50:16.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:50:16.629" endtime="20200402 09:50:16.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:16.630" endtime="20200402 09:50:16.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:16.631" endtime="20200402 09:50:16.631"></status>
</kw>
<status status="PASS" starttime="20200402 09:50:16.134" endtime="20200402 09:50:16.631"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 09:50:14.127" endtime="20200402 09:50:16.632" critical="yes"></status>
</test>
<test id="s1-t2" name="TC_02 RegisterNewSeller with Invalid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:50:18.635" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:50:16.634" endtime="20200402 09:50:18.635"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:50:18.637" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:50:18.636" endtime="20200402 09:50:18.637"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:50:18.637" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:50:18.637" endtime="20200402 09:50:18.637"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:18.638" endtime="20200402 09:50:18.638"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:50:18.638" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:50:18.638" endtime="20200402 09:50:18.638"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:50:18.639" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:50:19.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:50:18.639" endtime="20200402 09:50:19.201"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:50:19.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:50:19.201" endtime="20200402 09:50:19.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:50:19.202" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEY3UnV4cTJSTE5JOTNuTGFQL0piZGJraEd4VXkrUjFVTnNiLzBZV3J4NldKTzhIbmY2K0pXaVg2aFBSL2FzZzQwalB4NThnSnljVHBkRDhJeHkrSzg9IiwibmJmIjoxNTg1ODAxMjE3LCJleHAiOjE1ODU4MDEyNzcsImlhdCI6MTU4NTgwMTIxNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bwfJNbyu-QOhY7E52wCKgVW-js_bupgs7qrHxXZXlmE</msg>
<status status="PASS" starttime="20200402 09:50:19.202" endtime="20200402 09:50:19.203"></status>
</kw>
<msg timestamp="20200402 09:50:19.203" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEY3UnV4cTJSTE5JOTNuTGFQL0piZGJraEd4VXkrUjF...</msg>
<status status="PASS" starttime="20200402 09:50:18.636" endtime="20200402 09:50:19.203"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:50:19.204" level="INFO">${Id} = 00292848636710</msg>
<status status="PASS" starttime="20200402 09:50:19.204" endtime="20200402 09:50:19.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:50:19.205" level="INFO">${IdNumber} = 00292848636710</msg>
<status status="PASS" starttime="20200402 09:50:19.205" endtime="20200402 09:50:19.205"></status>
</kw>
<msg timestamp="20200402 09:50:19.205" level="INFO">${IdNumber} = 00292848636710</msg>
<status status="PASS" starttime="20200402 09:50:19.204" endtime="20200402 09:50:19.205"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}1a2b3</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:50:19.207" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:50:19.206" endtime="20200402 09:50:19.207"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:50:19.207" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 09:50:19.207" endtime="20200402 09:50:19.207"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:50:19.208" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:50:19.208" endtime="20200402 09:50:19.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:50:19.209" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '00292848636710', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 09:50:19.208" endtime="20200402 09:50:19.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:50:19.210" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEY3UnV4cTJSTE5JOTNuTGFQL0piZGJraEd4...</msg>
<status status="PASS" starttime="20200402 09:50:19.209" endtime="20200402 09:50:19.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:50:19.211" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:50:19.210" endtime="20200402 09:50:19.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:50:19.212" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEY3UnV4cTJSTE5JOTNuTGFQL0piZGJraEd4VXkrUjFVTnNiLzBZV3J4NldKTzhIbmY2K0pXaVg2aFBSL2FzZzQwalB4NThnSnljVHBkRDhJeHkrSzg9IiwibmJmIjoxNTg1ODAxMjE3LCJleHAiOjE1ODU4MDEyNzcsImlhdCI6MTU4NTgwMTIxNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bwfJNbyu-QOhY7E52wCKgVW-js_bupgs7qrHxXZXlmE1a2b3'} 
data={"escrowCompanyId": "001", "idNumber": "00292848636710", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 09:50:20.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:50:19.211" endtime="20200402 09:50:20.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:50:20.119" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 09:50:20.119" endtime="20200402 09:50:20.120"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:50:20.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:50:20.120" endtime="20200402 09:50:20.121"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:20.121" endtime="20200402 09:50:20.121"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:20.121" endtime="20200402 09:50:20.122"></status>
</kw>
<status status="PASS" starttime="20200402 09:50:19.206" endtime="20200402 09:50:20.122"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 09:50:16.633" endtime="20200402 09:50:20.122" critical="yes"></status>
</test>
<test id="s1-t3" name="TC_03 RegisterNewSeller with Expired JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:50:22.127" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:50:20.125" endtime="20200402 09:50:22.127"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:50:22.128" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:50:22.128" endtime="20200402 09:50:22.129"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:50:22.130" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:50:22.129" endtime="20200402 09:50:22.130"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:50:22.130" endtime="20200402 09:50:22.131"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:50:22.132" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:50:22.131" endtime="20200402 09:50:22.132"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:50:22.133" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:50:23.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:50:22.132" endtime="20200402 09:50:23.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:50:23.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:50:23.545" endtime="20200402 09:50:23.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:50:23.546" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMng4RElKQnpHVG1IaEF3VzNYdWVBVzY5alJQVlVsZi92VDR4MmkyekFxaUhhR0dmbHF0Ny9NdGpEY29QcDNCVzB4VndjdGp1eUVSWjVMaHV0Zi9mWVU9IiwibmJmIjoxNTg1ODAxMjIxLCJleHAiOjE1ODU4MDEyODEsImlhdCI6MTU4NTgwMTIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.nEcuYfdBxuLSMifz_2MgQrb006rFLEoB2PYxZuPgEDg</msg>
<status status="PASS" starttime="20200402 09:50:23.546" endtime="20200402 09:50:23.546"></status>
</kw>
<msg timestamp="20200402 09:50:23.546" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMng4RElKQnpHVG1IaEF3VzNYdWVBVzY5alJQVlVsZi9...</msg>
<status status="PASS" starttime="20200402 09:50:22.128" endtime="20200402 09:50:23.546"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:50:23.548" level="INFO">${Id} = 73246362288645</msg>
<status status="PASS" starttime="20200402 09:50:23.547" endtime="20200402 09:50:23.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:50:23.548" level="INFO">${IdNumber} = 73246362288645</msg>
<status status="PASS" starttime="20200402 09:50:23.548" endtime="20200402 09:50:23.548"></status>
</kw>
<msg timestamp="20200402 09:50:23.548" level="INFO">${IdNumber} = 73246362288645</msg>
<status status="PASS" starttime="20200402 09:50:23.547" endtime="20200402 09:50:23.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200402 09:57:23.550" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200402 09:50:23.549" endtime="20200402 09:57:23.550"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:23.552" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:23.552" endtime="20200402 09:57:23.552"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:23.553" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 09:57:23.552" endtime="20200402 09:57:23.553"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:23.553" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:23.553" endtime="20200402 09:57:23.553"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:23.554" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '73246362288645', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 09:57:23.554" endtime="20200402 09:57:23.554"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:23.555" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMng4RElKQnpHVG1IaEF3VzNYdWVBVzY5alJQ...</msg>
<status status="PASS" starttime="20200402 09:57:23.555" endtime="20200402 09:57:23.555"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:23.556" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:23.555" endtime="20200402 09:57:23.556"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:23.557" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMng4RElKQnpHVG1IaEF3VzNYdWVBVzY5alJQVlVsZi92VDR4MmkyekFxaUhhR0dmbHF0Ny9NdGpEY29QcDNCVzB4VndjdGp1eUVSWjVMaHV0Zi9mWVU9IiwibmJmIjoxNTg1ODAxMjIxLCJleHAiOjE1ODU4MDEyODEsImlhdCI6MTU4NTgwMTIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.nEcuYfdBxuLSMifz_2MgQrb006rFLEoB2PYxZuPgEDg'} 
data={"escrowCompanyId": "001", "idNumber": "73246362288645", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 09:57:23.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:23.556" endtime="20200402 09:57:23.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:23.841" level="INFO">{"responseCode":"A02","resDescription":"Access token expired"}</msg>
<status status="PASS" starttime="20200402 09:57:23.840" endtime="20200402 09:57:23.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:23.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:23.842" endtime="20200402 09:57:23.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:23.843" endtime="20200402 09:57:23.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:23.845" endtime="20200402 09:57:23.846"></status>
</kw>
<status status="PASS" starttime="20200402 09:57:23.551" endtime="20200402 09:57:23.846"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token.</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200402 09:50:20.124" endtime="20200402 09:57:23.846" critical="yes"></status>
</test>
<test id="s1-t4" name="TC_04 RegisterNewSeller with Other Company JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:57:25.850" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:57:23.849" endtime="20200402 09:57:25.850"></status>
</kw>
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 09:57:25.852" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200402 09:57:25.851" endtime="20200402 09:57:25.852"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 09:57:25.868" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 09:57:25.853" endtime="20200402 09:57:25.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200402 09:57:25.869" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 09:57:25.868" endtime="20200402 09:57:25.869"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:25.870" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:25.869" endtime="20200402 09:57:25.870"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:25.871" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200402 09:57:25.871" endtime="20200402 09:57:25.871"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:25.872" endtime="20200402 09:57:25.872"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:25.873" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:25.873" endtime="20200402 09:57:25.873"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:25.875" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200402 09:57:26.794" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200402 09:57:26.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:25.874" endtime="20200402 09:57:26.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:26.795" level="INFO">{"access_token":"sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmRM7-dNhnrBDmoYELKSbCDFBVtOPKmGLvq1Dth7HROsijAd9Zo9ZVOU9KCczO23xXVCjqrxG4g6AAbEGS0lPkYLeiNys","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200402 09:57:26.795" endtime="20200402 09:57:26.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:26.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:26.796" endtime="20200402 09:57:26.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 09:57:26.797" level="INFO">sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmRM7-dNhnrBDmoYELKSbCDFBVtOPKmGLvq1Dth7HROsijAd9Zo9ZVOU9KCczO23xXVCjqrxG4g6AAbEGS0lPkYLeiNys</msg>
<status status="PASS" starttime="20200402 09:57:26.797" endtime="20200402 09:57:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200402 09:57:26.798" level="INFO">bearer</msg>
<status status="PASS" starttime="20200402 09:57:26.798" endtime="20200402 09:57:26.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 09:57:26.799" level="INFO">sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmRM7-dNhnrBDmoYELKSbCDFBVtOPKmGLvq1Dth7HROsijAd9Zo9ZVOU9KCczO23xXVCjqrxG4g6AAbEGS0lPkYLeiNys</msg>
<status status="PASS" starttime="20200402 09:57:26.798" endtime="20200402 09:57:26.799"></status>
</kw>
<msg timestamp="20200402 09:57:26.799" level="INFO">${TokenEscrow} = sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmRM7-dNhn...</msg>
<status status="PASS" starttime="20200402 09:57:25.850" endtime="20200402 09:57:26.799"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:57:26.801" level="INFO">${Id} = 55612846649313</msg>
<status status="PASS" starttime="20200402 09:57:26.800" endtime="20200402 09:57:26.801"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:57:26.801" level="INFO">${IdNumber} = 55612846649313</msg>
<status status="PASS" starttime="20200402 09:57:26.801" endtime="20200402 09:57:26.801"></status>
</kw>
<msg timestamp="20200402 09:57:26.802" level="INFO">${IdNumber} = 55612846649313</msg>
<status status="PASS" starttime="20200402 09:57:26.800" endtime="20200402 09:57:26.802"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:26.803" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:26.803" endtime="20200402 09:57:26.803"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:26.804" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 09:57:26.804" endtime="20200402 09:57:26.804"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:26.804" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:26.804" endtime="20200402 09:57:26.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:26.805" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '55612846649313', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 09:57:26.805" endtime="20200402 09:57:26.805"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:26.806" level="INFO">${AuthToken} = bearer sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmR...</msg>
<status status="PASS" starttime="20200402 09:57:26.806" endtime="20200402 09:57:26.806"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:26.807" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCS...</msg>
<status status="PASS" starttime="20200402 09:57:26.806" endtime="20200402 09:57:26.807"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:26.808" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer sZYyzN0-qBfmKBzn9eqgwEKiEJfrDEZg8j5NTvs-pfobx-y8H66PcXfOYZ24qhq7ivkmRuvSAd_XTsLU7b6YuikrsCAwYCsn2-zQshd96l_xr8X1ONYaHWlzGwfPYAc4ESVPnNipCSiLYautIHcmNwBATNRyyJnbIoj9-co3mIGJYhv20TRP7rvzEQ0BQ9BmRM7-dNhnrBDmoYELKSbCDFBVtOPKmGLvq1Dth7HROsijAd9Zo9ZVOU9KCczO23xXVCjqrxG4g6AAbEGS0lPkYLeiNys'} 
data={"escrowCompanyId": "001", "idNumber": "55612846649313", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 09:57:27.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:26.807" endtime="20200402 09:57:27.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:27.637" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 09:57:27.636" endtime="20200402 09:57:27.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:27.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:27.637" endtime="20200402 09:57:27.638"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:27.638" endtime="20200402 09:57:27.639"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:27.640" endtime="20200402 09:57:27.641"></status>
</kw>
<status status="PASS" starttime="20200402 09:57:26.802" endtime="20200402 09:57:27.641"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 09:57:23.847" endtime="20200402 09:57:27.641" critical="yes"></status>
</test>
<test id="s1-t5" name="TC_05 RegisterNewSeller with Valid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:57:29.645" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:57:27.644" endtime="20200402 09:57:29.645"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:29.647" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:29.647" endtime="20200402 09:57:29.647"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:29.648" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:29.647" endtime="20200402 09:57:29.648"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:29.648" endtime="20200402 09:57:29.648"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:29.649" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:29.649" endtime="20200402 09:57:29.649"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:29.650" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:30.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:29.649" endtime="20200402 09:57:30.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:30.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:30.226" endtime="20200402 09:57:30.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:30.228" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFPK2Q4NU1haG5aZ2V6UVdleXVHbU9HZDJqSUlxQnVRSGV6d0hzTEdCcnJsQjdUNC9kWllEM0tONXJpWVVOZkdqTC9zV1E1a3Y3WHVHcENkbnZrUlU9IiwibmJmIjoxNTg1ODAxNjQ4LCJleHAiOjE1ODU4MDE3MDgsImlhdCI6MTU4NTgwMTY0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ByMdqFuRtsgBnI1AfPK-Kt6ayyY10ufEK1JK1Ul6Xmo</msg>
<status status="PASS" starttime="20200402 09:57:30.228" endtime="20200402 09:57:30.228"></status>
</kw>
<msg timestamp="20200402 09:57:30.229" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFPK2Q4NU1haG5aZ2V6UVdleXVHbU9HZDJqSUlxQnV...</msg>
<status status="PASS" starttime="20200402 09:57:29.646" endtime="20200402 09:57:30.229"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:57:30.230" level="INFO">${Id} = 33053193852666</msg>
<status status="PASS" starttime="20200402 09:57:30.230" endtime="20200402 09:57:30.230"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:57:30.231" level="INFO">${IdNumber} = 33053193852666</msg>
<status status="PASS" starttime="20200402 09:57:30.231" endtime="20200402 09:57:30.231"></status>
</kw>
<msg timestamp="20200402 09:57:30.231" level="INFO">${IdNumber} = 33053193852666</msg>
<status status="PASS" starttime="20200402 09:57:30.230" endtime="20200402 09:57:30.231"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:30.233" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:30.232" endtime="20200402 09:57:30.233"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:30.233" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 09:57:30.233" endtime="20200402 09:57:30.233"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:30.234" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:30.234" endtime="20200402 09:57:30.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:30.235" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '33053193852666', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 09:57:30.234" endtime="20200402 09:57:30.235"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:30.235" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFPK2Q4NU1haG5aZ2V6UVdleXVHbU9HZDJq...</msg>
<status status="PASS" starttime="20200402 09:57:30.235" endtime="20200402 09:57:30.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:30.236" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:30.236" endtime="20200402 09:57:30.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:30.237" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFPK2Q4NU1haG5aZ2V6UVdleXVHbU9HZDJqSUlxQnVRSGV6d0hzTEdCcnJsQjdUNC9kWllEM0tONXJpWVVOZkdqTC9zV1E1a3Y3WHVHcENkbnZrUlU9IiwibmJmIjoxNTg1ODAxNjQ4LCJleHAiOjE1ODU4MDE3MDgsImlhdCI6MTU4NTgwMTY0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ByMdqFuRtsgBnI1AfPK-Kt6ayyY10ufEK1JK1Ul6Xmo'} 
data={"escrowCompanyId": "001", "idNumber": "33053193852666", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 09:57:30.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:30.236" endtime="20200402 09:57:30.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:30.442" level="INFO">{"sellerId":"5d5f246f-bd9e-4ee6-9fed-b00fa5ffff8b","responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 09:57:30.442" endtime="20200402 09:57:30.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:30.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:30.443" endtime="20200402 09:57:30.444"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:30.444" endtime="20200402 09:57:30.444"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:30.444" endtime="20200402 09:57:30.445"></status>
</kw>
<status status="PASS" starttime="20200402 09:57:30.232" endtime="20200402 09:57:30.445"></status>
</kw>
<doc>Valid: To check API response with valid JWT token.</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 09:57:27.643" endtime="20200402 09:57:30.445" critical="yes"></status>
</test>
<test id="s1-t6" name="TC_01 UpdateSellerStatus with Empty JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:57:32.449" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:57:30.448" endtime="20200402 09:57:32.449"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.450" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:32.449" endtime="20200402 09:57:32.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:32.451" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:32.450" endtime="20200402 09:57:32.451"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:32.451" endtime="20200402 09:57:32.451"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:32.452" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:32.451" endtime="20200402 09:57:32.452"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:32.452" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:32.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:32.452" endtime="20200402 09:57:32.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:32.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:32.927" endtime="20200402 09:57:32.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.928" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjB1TnArais5YVVEUW5xS2JaZ25UZWZjY1ptVjdtKzR5VkRaRWlpMG1HQWJJanVpUE5tbHVoUDhFVnBpaVIvMW1xRHF4L01EY1NET0xKbE9BWDBCb2s9IiwibmJmIjoxNTg1ODAxNjUwLCJleHAiOjE1ODU4MDE3MTAsImlhdCI6MTU4NTgwMTY1MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1at80itr_1X8-ePtkaswITij_w9qR6dPgNeNxAgnoOU</msg>
<status status="PASS" starttime="20200402 09:57:32.928" endtime="20200402 09:57:32.928"></status>
</kw>
<msg timestamp="20200402 09:57:32.929" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjB1TnArais5YVVEUW5xS2JaZ25UZWZjY1ptVjdtKzR...</msg>
<status status="PASS" starttime="20200402 09:57:32.449" endtime="20200402 09:57:32.929"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:57:32.930" level="INFO">${Id} = 08286874377810</msg>
<status status="PASS" starttime="20200402 09:57:32.929" endtime="20200402 09:57:32.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.930" level="INFO">${IdNumber} = 08286874377810</msg>
<status status="PASS" starttime="20200402 09:57:32.930" endtime="20200402 09:57:32.930"></status>
</kw>
<msg timestamp="20200402 09:57:32.930" level="INFO">${idNum} = 08286874377810</msg>
<status status="PASS" starttime="20200402 09:57:32.929" endtime="20200402 09:57:32.930"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 09:57:32.931" level="INFO">${mobile} = 6214608145</msg>
<status status="PASS" starttime="20200402 09:57:32.931" endtime="20200402 09:57:32.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.932" level="INFO">${mobileNo} = 6214608145</msg>
<status status="PASS" starttime="20200402 09:57:32.931" endtime="20200402 09:57:32.932"></status>
</kw>
<msg timestamp="20200402 09:57:32.932" level="INFO">${MobNo} = 6214608145</msg>
<status status="PASS" starttime="20200402 09:57:32.931" endtime="20200402 09:57:32.932"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 09:57:32.934" level="INFO">${Emailnum} = 64498</msg>
<status status="PASS" starttime="20200402 09:57:32.934" endtime="20200402 09:57:32.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.934" level="INFO">${enum} = 64498</msg>
<status status="PASS" starttime="20200402 09:57:32.934" endtime="20200402 09:57:32.934"></status>
</kw>
<msg timestamp="20200402 09:57:32.935" level="INFO">${num} = 64498</msg>
<status status="PASS" starttime="20200402 09:57:32.933" endtime="20200402 09:57:32.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 09:57:32.935" level="INFO">${emailid} = pavan64498@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:32.935" endtime="20200402 09:57:32.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 09:57:32.936" level="INFO">${email} = pavan64498@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:32.935" endtime="20200402 09:57:32.936"></status>
</kw>
<msg timestamp="20200402 09:57:32.936" level="INFO">${emailid} = pavan64498@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:32.933" endtime="20200402 09:57:32.936"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:32.938" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:32.938" endtime="20200402 09:57:32.939"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:32.939" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 09:57:32.939" endtime="20200402 09:57:32.939"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:32.940" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:32.939" endtime="20200402 09:57:32.940"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 09:57:32.941" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:32.940" endtime="20200402 09:57:32.941"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 09:57:32.942" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:32.941" endtime="20200402 09:57:32.942"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:32.945" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '08286874377810', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6214608145', 'email': 'pavan64498@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 09:57:32.943" endtime="20200402 09:57:32.945"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:32.945" endtime="20200402 09:57:32.946"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:32.946" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjB1TnArais5YVVEUW5xS2JaZ25UZWZjY1pt...</msg>
<status status="PASS" starttime="20200402 09:57:32.946" endtime="20200402 09:57:32.946"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:32.947" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:32.946" endtime="20200402 09:57:32.947"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:32.948" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjB1TnArais5YVVEUW5xS2JaZ25UZWZjY1ptVjdtKzR5VkRaRWlpMG1HQWJJanVpUE5tbHVoUDhFVnBpaVIvMW1xRHF4L01EY1NET0xKbE9BWDBCb2s9IiwibmJmIjoxNTg1ODAxNjUwLCJleHAiOjE1ODU4MDE3MTAsImlhdCI6MTU4NTgwMTY1MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1at80itr_1X8-ePtkaswITij_w9qR6dPgNeNxAgnoOU'} 
data={"escrowCompanyId": "001", "idNumber": "08286874377810", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6214608145", "email": "pavan64498@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 09:57:33.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:32.947" endtime="20200402 09:57:33.312"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:33.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:33.312" endtime="20200402 09:57:33.313"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:33.313" endtime="20200402 09:57:33.313"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:33.313" endtime="20200402 09:57:33.314"></status>
</kw>
<msg timestamp="20200402 09:57:33.314" level="INFO">${sellerid} = 6c902620-e2ec-46fa-a73e-cc11a139ce61</msg>
<status status="PASS" starttime="20200402 09:57:32.936" endtime="20200402 09:57:33.315"></status>
</kw>
<msg timestamp="20200402 09:57:33.315" level="INFO">${SellerId} = ['6c902620-e2ec-46fa-a73e-cc11a139ce61', '08286874377810']</msg>
<status status="PASS" starttime="20200402 09:57:32.449" endtime="20200402 09:57:33.315"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:33.316" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:33.315" endtime="20200402 09:57:33.316"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 09:57:33.316" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 09:57:33.316" endtime="20200402 09:57:33.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:33.317" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['6c902620-e2ec-46fa-a73e-cc11a139ce61', '08286874377810'], 'status': 4}</msg>
<status status="PASS" starttime="20200402 09:57:33.317" endtime="20200402 09:57:33.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:33.318" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200402 09:57:33.317" endtime="20200402 09:57:33.318"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:33.318" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200402 09:57:33.318" endtime="20200402 09:57:33.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:33.319" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "sellerId": ["6c902620-e2ec-46fa-a73e-cc11a139ce61", "08286874377810"], "status": 4} 
json=None</msg>
<msg timestamp="20200402 09:57:33.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:33.318" endtime="20200402 09:57:33.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:33.797" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 09:57:33.797" endtime="20200402 09:57:33.798"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:33.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:33.798" endtime="20200402 09:57:33.798"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:33.799" endtime="20200402 09:57:33.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:33.799" endtime="20200402 09:57:33.800"></status>
</kw>
<status status="PASS" starttime="20200402 09:57:33.315" endtime="20200402 09:57:33.800"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 09:57:30.447" endtime="20200402 09:57:33.800" critical="yes"></status>
</test>
<test id="s1-t7" name="TC_02 UpdateSellerStatus with Invalid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:57:35.805" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:57:33.803" endtime="20200402 09:57:35.805"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:35.807" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:35.806" endtime="20200402 09:57:35.807"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:35.808" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:35.807" endtime="20200402 09:57:35.808"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:35.808" endtime="20200402 09:57:35.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:35.809" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:35.808" endtime="20200402 09:57:35.809"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:35.809" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:36.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:35.809" endtime="20200402 09:57:36.289"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:36.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:36.290" endtime="20200402 09:57:36.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:36.291" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEVGazQydlBINGtPN0V6aDc3Rk5nSlc1Wk1KbkJVVko1b3pTdWc2OUNlWUU5dEx5ZTkrQXMvQWxZRHBSSjRRSnhJb1dBZ0VHNStCSzRISkh6RFJpRUU9IiwibmJmIjoxNTg1ODAxNjU0LCJleHAiOjE1ODU4MDE3MTQsImlhdCI6MTU4NTgwMTY1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EmweYl5kB8ThrRjX-E1T253J2ApY8Wnnm5Icl4UyDBE</msg>
<status status="PASS" starttime="20200402 09:57:36.290" endtime="20200402 09:57:36.291"></status>
</kw>
<msg timestamp="20200402 09:57:36.291" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEVGazQydlBINGtPN0V6aDc3Rk5nSlc1Wk1KbkJVVko...</msg>
<status status="PASS" starttime="20200402 09:57:35.806" endtime="20200402 09:57:36.291"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:36.293" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:36.292" endtime="20200402 09:57:36.293"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:36.293" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:36.293" endtime="20200402 09:57:36.293"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:36.294" endtime="20200402 09:57:36.294"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:36.294" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:36.294" endtime="20200402 09:57:36.294"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:36.295" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:37.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:36.295" endtime="20200402 09:57:37.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:37.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:37.149" endtime="20200402 09:57:37.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:37.150" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK2hZRGt1UW1hbS81dWtiY00vRCs1WU45YVYyNVNsUmZKZGlMdHVrNTZjR25iY3BnNUk4S1Z4eUZYaWt3eCsxdUU5WVJ1SlZaMDRJNWVvVGdTNjJuWXM9IiwibmJmIjoxNTg1ODAxNjU1LCJleHAiOjE1ODU4MDE3MTUsImlhdCI6MTU4NTgwMTY1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dlAIOFQYYGHjqzjfy5P-cf0aihjcpebx8CS3jYYfMlM</msg>
<status status="PASS" starttime="20200402 09:57:37.150" endtime="20200402 09:57:37.151"></status>
</kw>
<msg timestamp="20200402 09:57:37.151" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK2hZRGt1UW1hbS81dWtiY00vRCs1WU45YVYyNVNsUmZ...</msg>
<status status="PASS" starttime="20200402 09:57:36.292" endtime="20200402 09:57:37.151"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:57:37.152" level="INFO">${Id} = 67767512551842</msg>
<status status="PASS" starttime="20200402 09:57:37.151" endtime="20200402 09:57:37.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:57:37.152" level="INFO">${IdNumber} = 67767512551842</msg>
<status status="PASS" starttime="20200402 09:57:37.152" endtime="20200402 09:57:37.152"></status>
</kw>
<msg timestamp="20200402 09:57:37.153" level="INFO">${idNum} = 67767512551842</msg>
<status status="PASS" starttime="20200402 09:57:37.151" endtime="20200402 09:57:37.153"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 09:57:37.154" level="INFO">${mobile} = 3723483611</msg>
<status status="PASS" starttime="20200402 09:57:37.153" endtime="20200402 09:57:37.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 09:57:37.154" level="INFO">${mobileNo} = 3723483611</msg>
<status status="PASS" starttime="20200402 09:57:37.154" endtime="20200402 09:57:37.154"></status>
</kw>
<msg timestamp="20200402 09:57:37.154" level="INFO">${MobNo} = 3723483611</msg>
<status status="PASS" starttime="20200402 09:57:37.153" endtime="20200402 09:57:37.154"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 09:57:37.156" level="INFO">${Emailnum} = 59491</msg>
<status status="PASS" starttime="20200402 09:57:37.155" endtime="20200402 09:57:37.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 09:57:37.156" level="INFO">${enum} = 59491</msg>
<status status="PASS" starttime="20200402 09:57:37.156" endtime="20200402 09:57:37.156"></status>
</kw>
<msg timestamp="20200402 09:57:37.157" level="INFO">${num} = 59491</msg>
<status status="PASS" starttime="20200402 09:57:37.155" endtime="20200402 09:57:37.157"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 09:57:37.157" level="INFO">${emailid} = pavan59491@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:37.157" endtime="20200402 09:57:37.157"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 09:57:37.158" level="INFO">${email} = pavan59491@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:37.158" endtime="20200402 09:57:37.158"></status>
</kw>
<msg timestamp="20200402 09:57:37.158" level="INFO">${emailid} = pavan59491@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:37.155" endtime="20200402 09:57:37.158"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:37.161" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:37.161" endtime="20200402 09:57:37.161"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:37.162" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 09:57:37.161" endtime="20200402 09:57:37.162"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:37.162" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:37.162" endtime="20200402 09:57:37.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 09:57:37.163" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:37.162" endtime="20200402 09:57:37.163"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 09:57:37.165" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:37.164" endtime="20200402 09:57:37.165"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:37.167" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '67767512551842', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3723483611', 'email': 'pavan59491@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 09:57:37.165" endtime="20200402 09:57:37.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:37.168" endtime="20200402 09:57:37.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:37.169" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK2hZRGt1UW1hbS81dWtiY00vRCs1WU45YVYy...</msg>
<status status="PASS" starttime="20200402 09:57:37.169" endtime="20200402 09:57:37.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:37.170" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:37.169" endtime="20200402 09:57:37.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:37.170" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK2hZRGt1UW1hbS81dWtiY00vRCs1WU45YVYyNVNsUmZKZGlMdHVrNTZjR25iY3BnNUk4S1Z4eUZYaWt3eCsxdUU5WVJ1SlZaMDRJNWVvVGdTNjJuWXM9IiwibmJmIjoxNTg1ODAxNjU1LCJleHAiOjE1ODU4MDE3MTUsImlhdCI6MTU4NTgwMTY1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dlAIOFQYYGHjqzjfy5P-cf0aihjcpebx8CS3jYYfMlM'} 
data={"escrowCompanyId": "001", "idNumber": "67767512551842", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3723483611", "email": "pavan59491@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 09:57:37.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:37.170" endtime="20200402 09:57:37.398"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:37.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:37.398" endtime="20200402 09:57:37.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:37.399" endtime="20200402 09:57:37.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:37.400" endtime="20200402 09:57:37.400"></status>
</kw>
<msg timestamp="20200402 09:57:37.401" level="INFO">${sellerid} = ba4feecc-bf46-40ed-a1ee-692ed8908abf</msg>
<status status="PASS" starttime="20200402 09:57:37.159" endtime="20200402 09:57:37.401"></status>
</kw>
<msg timestamp="20200402 09:57:37.401" level="INFO">${SellerId} = ['ba4feecc-bf46-40ed-a1ee-692ed8908abf', '67767512551842']</msg>
<status status="PASS" starttime="20200402 09:57:36.292" endtime="20200402 09:57:37.401"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}2c2p</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:37.402" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:37.402" endtime="20200402 09:57:37.403"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 09:57:37.403" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 09:57:37.403" endtime="20200402 09:57:37.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:37.404" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['ba4feecc-bf46-40ed-a1ee-692ed8908abf', '67767512551842'], 'status': 4}</msg>
<status status="PASS" starttime="20200402 09:57:37.404" endtime="20200402 09:57:37.404"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:37.405" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEVGazQydlBINGtPN0V6aDc3Rk5nSlc1Wk1K...</msg>
<status status="PASS" starttime="20200402 09:57:37.404" endtime="20200402 09:57:37.405"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:37.405" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:37.405" endtime="20200402 09:57:37.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:37.406" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEVGazQydlBINGtPN0V6aDc3Rk5nSlc1Wk1KbkJVVko1b3pTdWc2OUNlWUU5dEx5ZTkrQXMvQWxZRHBSSjRRSnhJb1dBZ0VHNStCSzRISkh6RFJpRUU9IiwibmJmIjoxNTg1ODAxNjU0LCJleHAiOjE1ODU4MDE3MTQsImlhdCI6MTU4NTgwMTY1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EmweYl5kB8ThrRjX-E1T253J2ApY8Wnnm5Icl4UyDBE2c2p'} 
data={"escrowCompanyId": "001", "sellerId": ["ba4feecc-bf46-40ed-a1ee-692ed8908abf", "67767512551842"], "status": 4} 
json=None</msg>
<msg timestamp="20200402 09:57:37.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:37.405" endtime="20200402 09:57:37.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 09:57:37.885" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 09:57:37.884" endtime="20200402 09:57:37.886"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:37.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:37.886" endtime="20200402 09:57:37.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:37.887" endtime="20200402 09:57:37.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:37.887" endtime="20200402 09:57:37.888"></status>
</kw>
<status status="PASS" starttime="20200402 09:57:37.402" endtime="20200402 09:57:37.888"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 09:57:33.802" endtime="20200402 09:57:37.888" critical="yes"></status>
</test>
<test id="s1-t8" name="TC_03 UpdateSellerStatus with Expired JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 09:57:39.892" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 09:57:37.891" endtime="20200402 09:57:39.892"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:39.893" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:39.893" endtime="20200402 09:57:39.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:39.895" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:39.894" endtime="20200402 09:57:39.895"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:39.895" endtime="20200402 09:57:39.895"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:39.896" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:39.895" endtime="20200402 09:57:39.896"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:39.896" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:40.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:39.896" endtime="20200402 09:57:40.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:40.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:40.134" endtime="20200402 09:57:40.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.135" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxRTUZ0ck1GaFVwODFMMlJZU1dJRE5TUWdKdlc1RWg3RHY3M05ocFJxS3l5aW11czdFZ2U4V1p1dHFCY3NTOEE1TUY5VG9NdXA0SXNkRDQ4M3BVOHM9IiwibmJmIjoxNTg1ODAxNjU4LCJleHAiOjE1ODU4MDE3MTgsImlhdCI6MTU4NTgwMTY1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.RhUwAuY-vWms-ArEn7mxKT249Dw1b7beFptQTqEYj7I</msg>
<status status="PASS" starttime="20200402 09:57:40.135" endtime="20200402 09:57:40.136"></status>
</kw>
<msg timestamp="20200402 09:57:40.136" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxRTUZ0ck1GaFVwODFMMlJZU1dJRE5TUWdKdlc1RWg...</msg>
<status status="PASS" starttime="20200402 09:57:39.893" endtime="20200402 09:57:40.136"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.138" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:40.137" endtime="20200402 09:57:40.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:40.138" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 09:57:40.138" endtime="20200402 09:57:40.138"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:40.139" endtime="20200402 09:57:40.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 09:57:40.139" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 09:57:40.139" endtime="20200402 09:57:40.139"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:40.140" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 09:57:40.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:40.140" endtime="20200402 09:57:40.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:40.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:40.629" endtime="20200402 09:57:40.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.630" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tyT28reUNRU0d2VXpyNEJRMUNOcHJrVGJuNDFoSXJIaHJaV3RSa3RQNGZ0QUR0TVcvVE5sSXp6SlBuSmJlSHZIQ2lnREIrUGovN3JwWDNzS2ZjejA9IiwibmJmIjoxNTg1ODAxNjU4LCJleHAiOjE1ODU4MDE3MTgsImlhdCI6MTU4NTgwMTY1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.YEQ0kE11MZyfMSprTavMmcJrVjLrakduJw6iQLZ-KKs</msg>
<status status="PASS" starttime="20200402 09:57:40.630" endtime="20200402 09:57:40.630"></status>
</kw>
<msg timestamp="20200402 09:57:40.631" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tyT28reUNRU0d2VXpyNEJRMUNOcHJrVGJuNDFoSXJ...</msg>
<status status="PASS" starttime="20200402 09:57:40.137" endtime="20200402 09:57:40.631"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 09:57:40.631" level="INFO">${Id} = 72986519158357</msg>
<status status="PASS" starttime="20200402 09:57:40.631" endtime="20200402 09:57:40.631"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.632" level="INFO">${IdNumber} = 72986519158357</msg>
<status status="PASS" starttime="20200402 09:57:40.632" endtime="20200402 09:57:40.632"></status>
</kw>
<msg timestamp="20200402 09:57:40.632" level="INFO">${idNum} = 72986519158357</msg>
<status status="PASS" starttime="20200402 09:57:40.631" endtime="20200402 09:57:40.632"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 09:57:40.633" level="INFO">${mobile} = 5130208780</msg>
<status status="PASS" starttime="20200402 09:57:40.633" endtime="20200402 09:57:40.633"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.634" level="INFO">${mobileNo} = 5130208780</msg>
<status status="PASS" starttime="20200402 09:57:40.633" endtime="20200402 09:57:40.634"></status>
</kw>
<msg timestamp="20200402 09:57:40.634" level="INFO">${MobNo} = 5130208780</msg>
<status status="PASS" starttime="20200402 09:57:40.632" endtime="20200402 09:57:40.634"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 09:57:40.635" level="INFO">${Emailnum} = 56800</msg>
<status status="PASS" starttime="20200402 09:57:40.635" endtime="20200402 09:57:40.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.636" level="INFO">${enum} = 56800</msg>
<status status="PASS" starttime="20200402 09:57:40.635" endtime="20200402 09:57:40.636"></status>
</kw>
<msg timestamp="20200402 09:57:40.636" level="INFO">${num} = 56800</msg>
<status status="PASS" starttime="20200402 09:57:40.634" endtime="20200402 09:57:40.636"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 09:57:40.636" level="INFO">${emailid} = pavan56800@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:40.636" endtime="20200402 09:57:40.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 09:57:40.637" level="INFO">${email} = pavan56800@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:40.637" endtime="20200402 09:57:40.637"></status>
</kw>
<msg timestamp="20200402 09:57:40.637" level="INFO">${emailid} = pavan56800@2c2p.com</msg>
<status status="PASS" starttime="20200402 09:57:40.634" endtime="20200402 09:57:40.637"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 09:57:40.639" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 09:57:40.639" endtime="20200402 09:57:40.640"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 09:57:40.640" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 09:57:40.640" endtime="20200402 09:57:40.640"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 09:57:40.641" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 09:57:40.640" endtime="20200402 09:57:40.641"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 09:57:40.642" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:40.641" endtime="20200402 09:57:40.642"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 09:57:40.643" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 09:57:40.642" endtime="20200402 09:57:40.644"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 09:57:40.646" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '72986519158357', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5130208780', 'email': 'pavan56800@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 09:57:40.644" endtime="20200402 09:57:40.646"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:40.646" endtime="20200402 09:57:40.647"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 09:57:40.647" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tyT28reUNRU0d2VXpyNEJRMUNOcHJrVGJu...</msg>
<status status="PASS" starttime="20200402 09:57:40.647" endtime="20200402 09:57:40.647"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 09:57:40.648" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 09:57:40.648" endtime="20200402 09:57:40.648"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 09:57:40.649" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tyT28reUNRU0d2VXpyNEJRMUNOcHJrVGJuNDFoSXJIaHJaV3RSa3RQNGZ0QUR0TVcvVE5sSXp6SlBuSmJlSHZIQ2lnREIrUGovN3JwWDNzS2ZjejA9IiwibmJmIjoxNTg1ODAxNjU4LCJleHAiOjE1ODU4MDE3MTgsImlhdCI6MTU4NTgwMTY1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.YEQ0kE11MZyfMSprTavMmcJrVjLrakduJw6iQLZ-KKs'} 
data={"escrowCompanyId": "001", "idNumber": "72986519158357", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5130208780", "email": "pavan56800@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 09:57:40.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 09:57:40.648" endtime="20200402 09:57:40.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 09:57:40.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 09:57:40.909" endtime="20200402 09:57:40.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:40.910" endtime="20200402 09:57:40.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 09:57:40.910" endtime="20200402 09:57:40.911"></status>
</kw>
<msg timestamp="20200402 09:57:40.911" level="INFO">${sellerid} = 342d6fea-1c0d-4574-b252-4a79878fb922</msg>
<status status="PASS" starttime="20200402 09:57:40.637" endtime="20200402 09:57:40.911"></status>
</kw>
<msg timestamp="20200402 09:57:40.911" level="INFO">${SellerId} = ['342d6fea-1c0d-4574-b252-4a79878fb922', '72986519158357']</msg>
<status status="PASS" starttime="20200402 09:57:40.137" endtime="20200402 09:57:40.911"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200402 10:04:40.913" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200402 09:57:40.913" endtime="20200402 10:04:40.913"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${1}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:40.915" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:40.915" endtime="20200402 10:04:40.915"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 10:04:40.916" level="INFO">${STATUS1} = 1</msg>
<status status="PASS" starttime="20200402 10:04:40.915" endtime="20200402 10:04:40.916"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:40.916" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['342d6fea-1c0d-4574-b252-4a79878fb922', '72986519158357'], 'status': 1}</msg>
<status status="PASS" starttime="20200402 10:04:40.916" endtime="20200402 10:04:40.916"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:40.917" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxRTUZ0ck1GaFVwODFMMlJZU1dJRE5TUWdK...</msg>
<status status="PASS" starttime="20200402 10:04:40.917" endtime="20200402 10:04:40.917"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:40.918" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:40.917" endtime="20200402 10:04:40.918"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:40.918" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxRTUZ0ck1GaFVwODFMMlJZU1dJRE5TUWdKdlc1RWg3RHY3M05ocFJxS3l5aW11czdFZ2U4V1p1dHFCY3NTOEE1TUY5VG9NdXA0SXNkRDQ4M3BVOHM9IiwibmJmIjoxNTg1ODAxNjU4LCJleHAiOjE1ODU4MDE3MTgsImlhdCI6MTU4NTgwMTY1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.RhUwAuY-vWms-ArEn7mxKT249Dw1b7beFptQTqEYj7I'} 
data={"escrowCompanyId": "001", "sellerId": ["342d6fea-1c0d-4574-b252-4a79878fb922", "72986519158357"], "status": 1} 
json=None</msg>
<msg timestamp="20200402 10:04:41.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:40.918" endtime="20200402 10:04:41.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:04:41.147" level="INFO">{"responseCode":"A02","resDescription":"Access token expired"}</msg>
<status status="PASS" starttime="20200402 10:04:41.146" endtime="20200402 10:04:41.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:41.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:41.147" endtime="20200402 10:04:41.148"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:41.148" endtime="20200402 10:04:41.148"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:41.148" endtime="20200402 10:04:41.149"></status>
</kw>
<status status="PASS" starttime="20200402 10:04:40.914" endtime="20200402 10:04:41.149"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200402 09:57:37.890" endtime="20200402 10:04:41.150" critical="yes"></status>
</test>
<test id="s1-t9" name="TC_04 UpdateSellerStatus with Other Company JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:04:43.153" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:04:41.152" endtime="20200402 10:04:43.153"></status>
</kw>
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:04:43.155" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200402 10:04:43.154" endtime="20200402 10:04:43.155"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:04:43.157" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:04:43.155" endtime="20200402 10:04:43.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.157" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:04:43.157" endtime="20200402 10:04:43.158"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.158" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:43.158" endtime="20200402 10:04:43.158"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:43.159" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200402 10:04:43.158" endtime="20200402 10:04:43.159"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:43.159" endtime="20200402 10:04:43.159"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:43.160" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:43.160" endtime="20200402 10:04:43.160"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:43.160" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200402 10:04:43.871" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200402 10:04:43.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:43.160" endtime="20200402 10:04:43.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:04:43.872" level="INFO">{"access_token":"a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6ROpdG6Alvz0wOU3Lxus1s-xmooo-ayAedULLXhwHtj_rXlQ3I5s9JT0JBXcjK7ZEpuls9jI085rSecmb81Gmeu0ZjQ","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200402 10:04:43.871" endtime="20200402 10:04:43.872"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:43.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:43.872" endtime="20200402 10:04:43.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.873" level="INFO">a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6ROpdG6Alvz0wOU3Lxus1s-xmooo-ayAedULLXhwHtj_rXlQ3I5s9JT0JBXcjK7ZEpuls9jI085rSecmb81Gmeu0ZjQ</msg>
<status status="PASS" starttime="20200402 10:04:43.873" endtime="20200402 10:04:43.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.873" level="INFO">bearer</msg>
<status status="PASS" starttime="20200402 10:04:43.873" endtime="20200402 10:04:43.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.874" level="INFO">a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6ROpdG6Alvz0wOU3Lxus1s-xmooo-ayAedULLXhwHtj_rXlQ3I5s9JT0JBXcjK7ZEpuls9jI085rSecmb81Gmeu0ZjQ</msg>
<status status="PASS" starttime="20200402 10:04:43.874" endtime="20200402 10:04:43.874"></status>
</kw>
<msg timestamp="20200402 10:04:43.875" level="INFO">${TokenEscrow} = a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6ROpdG6A...</msg>
<status status="PASS" starttime="20200402 10:04:43.154" endtime="20200402 10:04:43.875"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:43.877" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:43.876" endtime="20200402 10:04:43.877"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:43.878" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:43.877" endtime="20200402 10:04:43.878"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:43.878" endtime="20200402 10:04:43.878"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:43.879" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:43.878" endtime="20200402 10:04:43.879"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:43.879" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:44.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:43.879" endtime="20200402 10:04:44.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:44.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:44.621" endtime="20200402 10:04:44.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:44.622" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0xGbENnSDkvV2V6cmdjRHp3V1JWd2UzY211bDFxdGpHRmF6MlFKRXc2c1IweDFzZmN3U1d6ZXZOMnlqcHZBMnYwTm8zVXM5RER4VEdkNXU4S1d5aGc9IiwibmJmIjoxNTg1ODAyMDgyLCJleHAiOjE1ODU4MDIxNDIsImlhdCI6MTU4NTgwMjA4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cdjiOl7r4-Fd77q1uWfFL6vSfVZOenYrg2dAUVBkfTY</msg>
<status status="PASS" starttime="20200402 10:04:44.622" endtime="20200402 10:04:44.622"></status>
</kw>
<msg timestamp="20200402 10:04:44.622" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0xGbENnSDkvV2V6cmdjRHp3V1JWd2UzY211bDFxdGp...</msg>
<status status="PASS" starttime="20200402 10:04:43.876" endtime="20200402 10:04:44.622"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:44.624" level="INFO">${Id} = 15522761252498</msg>
<status status="PASS" starttime="20200402 10:04:44.623" endtime="20200402 10:04:44.624"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:44.625" level="INFO">${IdNumber} = 15522761252498</msg>
<status status="PASS" starttime="20200402 10:04:44.624" endtime="20200402 10:04:44.625"></status>
</kw>
<msg timestamp="20200402 10:04:44.625" level="INFO">${idNum} = 15522761252498</msg>
<status status="PASS" starttime="20200402 10:04:44.623" endtime="20200402 10:04:44.625"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:04:44.626" level="INFO">${mobile} = 5079327656</msg>
<status status="PASS" starttime="20200402 10:04:44.625" endtime="20200402 10:04:44.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:04:44.626" level="INFO">${mobileNo} = 5079327656</msg>
<status status="PASS" starttime="20200402 10:04:44.626" endtime="20200402 10:04:44.626"></status>
</kw>
<msg timestamp="20200402 10:04:44.626" level="INFO">${MobNo} = 5079327656</msg>
<status status="PASS" starttime="20200402 10:04:44.625" endtime="20200402 10:04:44.626"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:04:44.627" level="INFO">${Emailnum} = 90476</msg>
<status status="PASS" starttime="20200402 10:04:44.627" endtime="20200402 10:04:44.627"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:04:44.628" level="INFO">${enum} = 90476</msg>
<status status="PASS" starttime="20200402 10:04:44.628" endtime="20200402 10:04:44.628"></status>
</kw>
<msg timestamp="20200402 10:04:44.628" level="INFO">${num} = 90476</msg>
<status status="PASS" starttime="20200402 10:04:44.627" endtime="20200402 10:04:44.628"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:04:44.629" level="INFO">${emailid} = pavan90476@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:44.628" endtime="20200402 10:04:44.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:04:44.629" level="INFO">${email} = pavan90476@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:44.629" endtime="20200402 10:04:44.629"></status>
</kw>
<msg timestamp="20200402 10:04:44.629" level="INFO">${emailid} = pavan90476@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:44.627" endtime="20200402 10:04:44.630"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:44.632" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:44.632" endtime="20200402 10:04:44.632"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:44.633" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:04:44.632" endtime="20200402 10:04:44.633"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:44.633" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:44.633" endtime="20200402 10:04:44.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:04:44.634" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:44.633" endtime="20200402 10:04:44.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:04:44.636" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:44.635" endtime="20200402 10:04:44.636"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:44.639" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '15522761252498', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5079327656', 'email': 'pavan90476@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:04:44.636" endtime="20200402 10:04:44.639"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:44.639" endtime="20200402 10:04:44.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:44.640" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0xGbENnSDkvV2V6cmdjRHp3V1JWd2UzY211...</msg>
<status status="PASS" starttime="20200402 10:04:44.640" endtime="20200402 10:04:44.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:44.641" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:44.640" endtime="20200402 10:04:44.641"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:44.642" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0xGbENnSDkvV2V6cmdjRHp3V1JWd2UzY211bDFxdGpHRmF6MlFKRXc2c1IweDFzZmN3U1d6ZXZOMnlqcHZBMnYwTm8zVXM5RER4VEdkNXU4S1d5aGc9IiwibmJmIjoxNTg1ODAyMDgyLCJleHAiOjE1ODU4MDIxNDIsImlhdCI6MTU4NTgwMjA4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cdjiOl7r4-Fd77q1uWfFL6vSfVZOenYrg2dAUVBkfTY'} 
data={"escrowCompanyId": "001", "idNumber": "15522761252498", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5079327656", "email": "pavan90476@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:04:44.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:44.641" endtime="20200402 10:04:44.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:44.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:44.998" endtime="20200402 10:04:44.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:44.999" endtime="20200402 10:04:45.000"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:45.000" endtime="20200402 10:04:45.000"></status>
</kw>
<msg timestamp="20200402 10:04:45.000" level="INFO">${sellerid} = a05aa3b2-955a-4935-8c59-44411f251123</msg>
<status status="PASS" starttime="20200402 10:04:44.630" endtime="20200402 10:04:45.001"></status>
</kw>
<msg timestamp="20200402 10:04:45.001" level="INFO">${SellerId} = ['a05aa3b2-955a-4935-8c59-44411f251123', '15522761252498']</msg>
<status status="PASS" starttime="20200402 10:04:43.876" endtime="20200402 10:04:45.001"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:45.002" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:45.002" endtime="20200402 10:04:45.003"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 10:04:45.003" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 10:04:45.003" endtime="20200402 10:04:45.003"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:45.004" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['a05aa3b2-955a-4935-8c59-44411f251123', '15522761252498'], 'status': 4}</msg>
<status status="PASS" starttime="20200402 10:04:45.003" endtime="20200402 10:04:45.004"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:45.004" level="INFO">${AuthToken} = bearer a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6...</msg>
<status status="PASS" starttime="20200402 10:04:45.004" endtime="20200402 10:04:45.004"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:45.005" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8C...</msg>
<status status="PASS" starttime="20200402 10:04:45.005" endtime="20200402 10:04:45.005"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:45.006" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer a_47a3lR4umurNZ4iX97-yQv4K_S0YW5tBkNWioUQ7aWrUZHfT5-BZexpSuuhgHO5S2kIed1IQhvkXgBPsE_nKFHLsY2Y1OrQd1gcwEpucy9Bf5bVCdO1hR-j4NOeOPbUttU5inq8CARHlaEyEaaBw_tOruq0btJRCmhfVs9VTEgpYPmf8vi8s6L4nAd4fEe6ROpdG6Alvz0wOU3Lxus1s-xmooo-ayAedULLXhwHtj_rXlQ3I5s9JT0JBXcjK7ZEpuls9jI085rSecmb81Gmeu0ZjQ'} 
data={"escrowCompanyId": "001", "sellerId": ["a05aa3b2-955a-4935-8c59-44411f251123", "15522761252498"], "status": 4} 
json=None</msg>
<msg timestamp="20200402 10:04:45.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:45.005" endtime="20200402 10:04:45.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:04:45.550" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 10:04:45.550" endtime="20200402 10:04:45.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:45.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:45.551" endtime="20200402 10:04:45.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:45.552" endtime="20200402 10:04:45.552"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:45.552" endtime="20200402 10:04:45.553"></status>
</kw>
<status status="PASS" starttime="20200402 10:04:45.001" endtime="20200402 10:04:45.553"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:04:41.151" endtime="20200402 10:04:45.554" critical="yes"></status>
</test>
<test id="s1-t10" name="TC_05 UpdateSellerStatus with Valid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:04:47.556" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:04:45.556" endtime="20200402 10:04:47.556"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:47.558" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:47.557" endtime="20200402 10:04:47.558"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:47.558" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:47.558" endtime="20200402 10:04:47.558"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:47.559" endtime="20200402 10:04:47.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:47.559" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:47.559" endtime="20200402 10:04:47.560"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:47.560" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:47.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:47.560" endtime="20200402 10:04:47.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:47.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:47.797" endtime="20200402 10:04:47.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:47.798" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUtEc3RWV1JObmVqUld3M3VRWEtmemlHQnhXdFV2enhpbXlqRGFPNU5Xc2xFZDd3LzdYZEpWZ2FnaGYzRVFHalJJUmMrOVVTdlljV3lvendpYW1wdDQ9IiwibmJmIjoxNTg1ODAyMDg1LCJleHAiOjE1ODU4MDIxNDUsImlhdCI6MTU4NTgwMjA4NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.PYBnkUqfcepgmJMBO-UiWE0jg8LFQEn9G5_WOCieZy4</msg>
<status status="PASS" starttime="20200402 10:04:47.797" endtime="20200402 10:04:47.798"></status>
</kw>
<msg timestamp="20200402 10:04:47.798" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUtEc3RWV1JObmVqUld3M3VRWEtmemlHQnhXdFV2enh...</msg>
<status status="PASS" starttime="20200402 10:04:47.557" endtime="20200402 10:04:47.798"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:47.800" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:47.799" endtime="20200402 10:04:47.800"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:47.800" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:47.800" endtime="20200402 10:04:47.800"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:47.801" endtime="20200402 10:04:47.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:47.801" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:47.801" endtime="20200402 10:04:47.801"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:47.802" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:48.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:47.802" endtime="20200402 10:04:48.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:48.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:48.336" endtime="20200402 10:04:48.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.337" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNjR1SUpiWDZlQWo3S1puVzkwZXU1SEMyaWlkYWtWamFWdFRsWXI3dVBoTVBSOEhrOWNmaDdrbEU3d3lWN3FGaWo2NEFYd0VwVE0vRlBacFVYL1lNSVk9IiwibmJmIjoxNTg1ODAyMDg2LCJleHAiOjE1ODU4MDIxNDYsImlhdCI6MTU4NTgwMjA4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6Sz2lQdQL54LvZm_xarh3hJ0Flk05ycK8A-Y4M3Tt04</msg>
<status status="PASS" starttime="20200402 10:04:48.337" endtime="20200402 10:04:48.337"></status>
</kw>
<msg timestamp="20200402 10:04:48.337" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNjR1SUpiWDZlQWo3S1puVzkwZXU1SEMyaWlkYWtWamF...</msg>
<status status="PASS" starttime="20200402 10:04:47.799" endtime="20200402 10:04:48.337"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:48.338" level="INFO">${Id} = 17285032063282</msg>
<status status="PASS" starttime="20200402 10:04:48.338" endtime="20200402 10:04:48.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.339" level="INFO">${IdNumber} = 17285032063282</msg>
<status status="PASS" starttime="20200402 10:04:48.338" endtime="20200402 10:04:48.339"></status>
</kw>
<msg timestamp="20200402 10:04:48.339" level="INFO">${idNum} = 17285032063282</msg>
<status status="PASS" starttime="20200402 10:04:48.338" endtime="20200402 10:04:48.339"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:04:48.340" level="INFO">${mobile} = 9038535213</msg>
<status status="PASS" starttime="20200402 10:04:48.340" endtime="20200402 10:04:48.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.341" level="INFO">${mobileNo} = 9038535213</msg>
<status status="PASS" starttime="20200402 10:04:48.341" endtime="20200402 10:04:48.341"></status>
</kw>
<msg timestamp="20200402 10:04:48.341" level="INFO">${MobNo} = 9038535213</msg>
<status status="PASS" starttime="20200402 10:04:48.339" endtime="20200402 10:04:48.341"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:04:48.343" level="INFO">${Emailnum} = 81653</msg>
<status status="PASS" starttime="20200402 10:04:48.342" endtime="20200402 10:04:48.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.343" level="INFO">${enum} = 81653</msg>
<status status="PASS" starttime="20200402 10:04:48.343" endtime="20200402 10:04:48.343"></status>
</kw>
<msg timestamp="20200402 10:04:48.343" level="INFO">${num} = 81653</msg>
<status status="PASS" starttime="20200402 10:04:48.342" endtime="20200402 10:04:48.343"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:04:48.344" level="INFO">${emailid} = pavan81653@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:48.344" endtime="20200402 10:04:48.344"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.345" level="INFO">${email} = pavan81653@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:48.344" endtime="20200402 10:04:48.345"></status>
</kw>
<msg timestamp="20200402 10:04:48.345" level="INFO">${emailid} = pavan81653@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:48.342" endtime="20200402 10:04:48.345"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:48.347" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:48.347" endtime="20200402 10:04:48.348"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:48.348" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:04:48.348" endtime="20200402 10:04:48.348"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:48.349" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:48.348" endtime="20200402 10:04:48.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:04:48.350" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:48.349" endtime="20200402 10:04:48.350"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:04:48.351" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:48.350" endtime="20200402 10:04:48.351"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:48.354" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '17285032063282', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9038535213', 'email': 'pavan81653@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:04:48.352" endtime="20200402 10:04:48.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:48.354" endtime="20200402 10:04:48.355"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:48.356" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNjR1SUpiWDZlQWo3S1puVzkwZXU1SEMyaWlk...</msg>
<status status="PASS" starttime="20200402 10:04:48.355" endtime="20200402 10:04:48.356"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:48.356" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:48.356" endtime="20200402 10:04:48.356"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:48.357" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNjR1SUpiWDZlQWo3S1puVzkwZXU1SEMyaWlkYWtWamFWdFRsWXI3dVBoTVBSOEhrOWNmaDdrbEU3d3lWN3FGaWo2NEFYd0VwVE0vRlBacFVYL1lNSVk9IiwibmJmIjoxNTg1ODAyMDg2LCJleHAiOjE1ODU4MDIxNDYsImlhdCI6MTU4NTgwMjA4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6Sz2lQdQL54LvZm_xarh3hJ0Flk05ycK8A-Y4M3Tt04'} 
data={"escrowCompanyId": "001", "idNumber": "17285032063282", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9038535213", "email": "pavan81653@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:04:48.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:48.356" endtime="20200402 10:04:48.560"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:48.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:48.560" endtime="20200402 10:04:48.560"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 10:04:48.561" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 10:04:48.561" endtime="20200402 10:04:48.561"></status>
</kw>
<status status="FAIL" starttime="20200402 10:04:48.345" endtime="20200402 10:04:48.561"></status>
</kw>
<status status="FAIL" starttime="20200402 10:04:47.799" endtime="20200402 10:04:48.562"></status>
</kw>
<doc>Valid: To check API response with valid JWT token.</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 10:04:45.554" endtime="20200402 10:04:48.562" critical="yes">R03 != 000</status>
</test>
<test id="s1-t11" name="TC_01 UpdateSellerDetails with Empty JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:04:50.565" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:04:48.565" endtime="20200402 10:04:50.565"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:50.566" level="INFO">${Id} = 69735438195694</msg>
<status status="PASS" starttime="20200402 10:04:50.566" endtime="20200402 10:04:50.566"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.567" level="INFO">${IdNumber} = 69735438195694</msg>
<status status="PASS" starttime="20200402 10:04:50.567" endtime="20200402 10:04:50.567"></status>
</kw>
<msg timestamp="20200402 10:04:50.567" level="INFO">${idNum} = 69735438195694</msg>
<status status="PASS" starttime="20200402 10:04:50.566" endtime="20200402 10:04:50.567"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.569" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:50.569" endtime="20200402 10:04:50.569"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:50.570" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:50.570" endtime="20200402 10:04:50.570"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:50.570" endtime="20200402 10:04:50.571"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:50.571" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:50.571" endtime="20200402 10:04:50.571"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:50.572" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:50.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:50.572" endtime="20200402 10:04:50.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:50.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:50.762" endtime="20200402 10:04:50.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.763" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVlFTS9vb3BpcGgyZ2N6NVpxckJNMjFyNGdyczNOcnI4cHEvR2wxd3R5SHlLTnlQZDVkSG40a1E1eU9rR09RTGRLR0RvSU1YWTk4MDJnQVBYQVdpY1E9IiwibmJmIjoxNTg1ODAyMDg4LCJleHAiOjE1ODU4MDIxNDgsImlhdCI6MTU4NTgwMjA4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fKoILBELsZyqn7jjeK5dAhy3TyOc8FNjFP82arlxyuA</msg>
<status status="PASS" starttime="20200402 10:04:50.763" endtime="20200402 10:04:50.763"></status>
</kw>
<msg timestamp="20200402 10:04:50.764" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVlFTS9vb3BpcGgyZ2N6NVpxckJNMjFyNGdyczNOcnI...</msg>
<status status="PASS" starttime="20200402 10:04:50.568" endtime="20200402 10:04:50.764"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:50.764" level="INFO">${Id} = 88016526898869</msg>
<status status="PASS" starttime="20200402 10:04:50.764" endtime="20200402 10:04:50.764"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.765" level="INFO">${IdNumber} = 88016526898869</msg>
<status status="PASS" starttime="20200402 10:04:50.765" endtime="20200402 10:04:50.765"></status>
</kw>
<msg timestamp="20200402 10:04:50.765" level="INFO">${idNum} = 88016526898869</msg>
<status status="PASS" starttime="20200402 10:04:50.764" endtime="20200402 10:04:50.765"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:04:50.766" level="INFO">${mobile} = 9454080721</msg>
<status status="PASS" starttime="20200402 10:04:50.766" endtime="20200402 10:04:50.766"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.767" level="INFO">${mobileNo} = 9454080721</msg>
<status status="PASS" starttime="20200402 10:04:50.766" endtime="20200402 10:04:50.767"></status>
</kw>
<msg timestamp="20200402 10:04:50.767" level="INFO">${MobNo} = 9454080721</msg>
<status status="PASS" starttime="20200402 10:04:50.766" endtime="20200402 10:04:50.767"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:04:50.768" level="INFO">${Emailnum} = 54234</msg>
<status status="PASS" starttime="20200402 10:04:50.768" endtime="20200402 10:04:50.768"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.769" level="INFO">${enum} = 54234</msg>
<status status="PASS" starttime="20200402 10:04:50.768" endtime="20200402 10:04:50.769"></status>
</kw>
<msg timestamp="20200402 10:04:50.769" level="INFO">${num} = 54234</msg>
<status status="PASS" starttime="20200402 10:04:50.767" endtime="20200402 10:04:50.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:04:50.769" level="INFO">${emailid} = pavan54234@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:50.769" endtime="20200402 10:04:50.769"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:04:50.770" level="INFO">${email} = pavan54234@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:50.770" endtime="20200402 10:04:50.770"></status>
</kw>
<msg timestamp="20200402 10:04:50.770" level="INFO">${emailid} = pavan54234@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:50.767" endtime="20200402 10:04:50.770"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:50.773" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:50.772" endtime="20200402 10:04:50.773"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:50.773" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:04:50.773" endtime="20200402 10:04:50.773"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:50.774" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:50.774" endtime="20200402 10:04:50.774"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:04:50.775" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:50.774" endtime="20200402 10:04:50.775"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:04:50.777" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:50.776" endtime="20200402 10:04:50.777"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:50.779" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '88016526898869', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9454080721', 'email': 'pavan54234@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:04:50.777" endtime="20200402 10:04:50.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:50.779" endtime="20200402 10:04:50.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:50.780" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVlFTS9vb3BpcGgyZ2N6NVpxckJNMjFyNGdy...</msg>
<status status="PASS" starttime="20200402 10:04:50.780" endtime="20200402 10:04:50.781"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:50.781" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:50.781" endtime="20200402 10:04:50.781"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:50.782" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVlFTS9vb3BpcGgyZ2N6NVpxckJNMjFyNGdyczNOcnI4cHEvR2wxd3R5SHlLTnlQZDVkSG40a1E1eU9rR09RTGRLR0RvSU1YWTk4MDJnQVBYQVdpY1E9IiwibmJmIjoxNTg1ODAyMDg4LCJleHAiOjE1ODU4MDIxNDgsImlhdCI6MTU4NTgwMjA4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fKoILBELsZyqn7jjeK5dAhy3TyOc8FNjFP82arlxyuA'} 
data={"escrowCompanyId": "001", "idNumber": "88016526898869", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9454080721", "email": "pavan54234@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:04:51.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:50.781" endtime="20200402 10:04:51.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:51.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:51.094" endtime="20200402 10:04:51.095"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:51.095" endtime="20200402 10:04:51.095"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:51.095" endtime="20200402 10:04:51.096"></status>
</kw>
<msg timestamp="20200402 10:04:51.096" level="INFO">${sellerid} = 24da26d2-9934-4e45-aaf0-0cfcd4ac4afb</msg>
<status status="PASS" starttime="20200402 10:04:50.770" endtime="20200402 10:04:51.096"></status>
</kw>
<msg timestamp="20200402 10:04:51.096" level="INFO">${SellerId} = ['24da26d2-9934-4e45-aaf0-0cfcd4ac4afb', '88016526898869']</msg>
<status status="PASS" starttime="20200402 10:04:50.568" endtime="20200402 10:04:51.097"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:51.098" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:51.097" endtime="20200402 10:04:51.098"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:51.098" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 10:04:51.098" endtime="20200402 10:04:51.098"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:51.099" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:51.099" endtime="20200402 10:04:51.099"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:51.100" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['24da26d2-9934-4e45-aaf0-0cfcd4ac4afb', '88016526898869'], 'idNumber': '69735438195694', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 10:04:51.099" endtime="20200402 10:04:51.100"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:51.100" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200402 10:04:51.100" endtime="20200402 10:04:51.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:51.101" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200402 10:04:51.101" endtime="20200402 10:04:51.101"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:51.102" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "SELLERId": ["24da26d2-9934-4e45-aaf0-0cfcd4ac4afb", "88016526898869"], "idNumber": "69735438195694", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 10:04:52.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:51.101" endtime="20200402 10:04:52.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:04:52.329" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 10:04:52.328" endtime="20200402 10:04:52.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:52.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:52.329" endtime="20200402 10:04:52.330"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:52.330" endtime="20200402 10:04:52.331"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:52.331" endtime="20200402 10:04:52.332"></status>
</kw>
<status status="PASS" starttime="20200402 10:04:51.097" endtime="20200402 10:04:52.332"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:04:48.564" endtime="20200402 10:04:52.333" critical="yes"></status>
</test>
<test id="s1-t12" name="TC_02 UpdateSellerDetails with Invalid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:04:54.335" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:04:52.335" endtime="20200402 10:04:54.335"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:54.336" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:54.336" endtime="20200402 10:04:54.337"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:54.337" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:54.337" endtime="20200402 10:04:54.337"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:54.337" endtime="20200402 10:04:54.338"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:54.338" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:54.338" endtime="20200402 10:04:54.338"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:54.339" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:54.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:54.338" endtime="20200402 10:04:54.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:54.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:54.832" endtime="20200402 10:04:54.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:54.833" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVhVa0tQWEtlcWlPc2locFV0Y0VhWEhOTWFUN21BdFNzbFlIdFJhM2xXbVlwdWhyZjcvMm0xS21pYmJGd1pRMGMvdy9adFJ5K2NjQVdDWGdCVzdZVEk9IiwibmJmIjoxNTg1ODAyMDkyLCJleHAiOjE1ODU4MDIxNTIsImlhdCI6MTU4NTgwMjA5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.GhZInZEswIBg7DiPc4WxxVYATc-2m9Gtk5ipy21he_o</msg>
<status status="PASS" starttime="20200402 10:04:54.833" endtime="20200402 10:04:54.833"></status>
</kw>
<msg timestamp="20200402 10:04:54.833" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVhVa0tQWEtlcWlPc2locFV0Y0VhWEhOTWFUN21BdFN...</msg>
<status status="PASS" starttime="20200402 10:04:54.336" endtime="20200402 10:04:54.833"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:54.834" level="INFO">${Id} = 26662910347791</msg>
<status status="PASS" starttime="20200402 10:04:54.834" endtime="20200402 10:04:54.834"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:54.835" level="INFO">${IdNumber} = 26662910347791</msg>
<status status="PASS" starttime="20200402 10:04:54.835" endtime="20200402 10:04:54.835"></status>
</kw>
<msg timestamp="20200402 10:04:54.835" level="INFO">${idNum} = 26662910347791</msg>
<status status="PASS" starttime="20200402 10:04:54.834" endtime="20200402 10:04:54.835"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:54.837" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:54.836" endtime="20200402 10:04:54.837"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:54.837" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:54.837" endtime="20200402 10:04:54.837"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:54.838" endtime="20200402 10:04:54.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:54.838" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:54.838" endtime="20200402 10:04:54.838"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:54.839" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:55.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:54.839" endtime="20200402 10:04:55.333"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:55.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:55.333" endtime="20200402 10:04:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:55.334" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlJtR2FwNTYwSzgzTzMvQ2UzR1YvRXdTc3B4V2RsclhqaGFaaHpiMmRnYzFSMndJSXRJQ1J3VUUxNHZWVjlEVFlrQnNSU2sxSlRiaEVhYzJWT0k2YTA9IiwibmJmIjoxNTg1ODAyMDkzLCJleHAiOjE1ODU4MDIxNTMsImlhdCI6MTU4NTgwMjA5MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0T2-xfMQ505u22R0K5R5g0-XVflWRX_munYI3Sc0iEA</msg>
<status status="PASS" starttime="20200402 10:04:55.334" endtime="20200402 10:04:55.334"></status>
</kw>
<msg timestamp="20200402 10:04:55.335" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlJtR2FwNTYwSzgzTzMvQ2UzR1YvRXdTc3B4V2Rsclh...</msg>
<status status="PASS" starttime="20200402 10:04:54.836" endtime="20200402 10:04:55.335"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:55.335" level="INFO">${Id} = 70737233176166</msg>
<status status="PASS" starttime="20200402 10:04:55.335" endtime="20200402 10:04:55.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:55.336" level="INFO">${IdNumber} = 70737233176166</msg>
<status status="PASS" starttime="20200402 10:04:55.336" endtime="20200402 10:04:55.336"></status>
</kw>
<msg timestamp="20200402 10:04:55.336" level="INFO">${idNum} = 70737233176166</msg>
<status status="PASS" starttime="20200402 10:04:55.335" endtime="20200402 10:04:55.336"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:04:55.338" level="INFO">${mobile} = 0194256044</msg>
<status status="PASS" starttime="20200402 10:04:55.337" endtime="20200402 10:04:55.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:04:55.339" level="INFO">${mobileNo} = 0194256044</msg>
<status status="PASS" starttime="20200402 10:04:55.338" endtime="20200402 10:04:55.339"></status>
</kw>
<msg timestamp="20200402 10:04:55.340" level="INFO">${MobNo} = 0194256044</msg>
<status status="PASS" starttime="20200402 10:04:55.336" endtime="20200402 10:04:55.340"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:04:55.341" level="INFO">${Emailnum} = 41567</msg>
<status status="PASS" starttime="20200402 10:04:55.341" endtime="20200402 10:04:55.341"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:04:55.342" level="INFO">${enum} = 41567</msg>
<status status="PASS" starttime="20200402 10:04:55.341" endtime="20200402 10:04:55.342"></status>
</kw>
<msg timestamp="20200402 10:04:55.342" level="INFO">${num} = 41567</msg>
<status status="PASS" starttime="20200402 10:04:55.340" endtime="20200402 10:04:55.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:04:55.342" level="INFO">${emailid} = pavan41567@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:55.342" endtime="20200402 10:04:55.342"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:04:55.343" level="INFO">${email} = pavan41567@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:55.343" endtime="20200402 10:04:55.343"></status>
</kw>
<msg timestamp="20200402 10:04:55.343" level="INFO">${emailid} = pavan41567@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:55.340" endtime="20200402 10:04:55.343"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:55.346" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:55.346" endtime="20200402 10:04:55.346"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:55.347" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:04:55.346" endtime="20200402 10:04:55.347"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:55.347" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:55.347" endtime="20200402 10:04:55.347"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:04:55.349" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:55.348" endtime="20200402 10:04:55.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:04:55.351" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:55.349" endtime="20200402 10:04:55.351"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:55.353" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '70737233176166', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0194256044', 'email': 'pavan41567@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:04:55.351" endtime="20200402 10:04:55.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:55.353" endtime="20200402 10:04:55.354"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:55.355" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlJtR2FwNTYwSzgzTzMvQ2UzR1YvRXdTc3B4...</msg>
<status status="PASS" starttime="20200402 10:04:55.354" endtime="20200402 10:04:55.355"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:55.355" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:55.355" endtime="20200402 10:04:55.355"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:55.356" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlJtR2FwNTYwSzgzTzMvQ2UzR1YvRXdTc3B4V2RsclhqaGFaaHpiMmRnYzFSMndJSXRJQ1J3VUUxNHZWVjlEVFlrQnNSU2sxSlRiaEVhYzJWT0k2YTA9IiwibmJmIjoxNTg1ODAyMDkzLCJleHAiOjE1ODU4MDIxNTMsImlhdCI6MTU4NTgwMjA5MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0T2-xfMQ505u22R0K5R5g0-XVflWRX_munYI3Sc0iEA'} 
data={"escrowCompanyId": "001", "idNumber": "70737233176166", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0194256044", "email": "pavan41567@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:04:55.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:55.355" endtime="20200402 10:04:55.577"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:55.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:55.578" endtime="20200402 10:04:55.578"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:55.578" endtime="20200402 10:04:55.579"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:55.579" endtime="20200402 10:04:55.579"></status>
</kw>
<msg timestamp="20200402 10:04:55.580" level="INFO">${sellerid} = e9be9014-ca74-41e6-849d-32c50c1ea3c9</msg>
<status status="PASS" starttime="20200402 10:04:55.344" endtime="20200402 10:04:55.580"></status>
</kw>
<msg timestamp="20200402 10:04:55.580" level="INFO">${SellerId} = ['e9be9014-ca74-41e6-849d-32c50c1ea3c9', '70737233176166']</msg>
<status status="PASS" starttime="20200402 10:04:54.836" endtime="20200402 10:04:55.580"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}2c2p</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:55.581" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:55.581" endtime="20200402 10:04:55.582"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:55.582" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 10:04:55.582" endtime="20200402 10:04:55.582"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:55.583" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:55.582" endtime="20200402 10:04:55.583"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:55.584" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['e9be9014-ca74-41e6-849d-32c50c1ea3c9', '70737233176166'], 'idNumber': '26662910347791', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 10:04:55.583" endtime="20200402 10:04:55.584"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:55.584" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVhVa0tQWEtlcWlPc2locFV0Y0VhWEhOTWFU...</msg>
<status status="PASS" starttime="20200402 10:04:55.584" endtime="20200402 10:04:55.584"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:55.585" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:55.584" endtime="20200402 10:04:55.585"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:55.585" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVhVa0tQWEtlcWlPc2locFV0Y0VhWEhOTWFUN21BdFNzbFlIdFJhM2xXbVlwdWhyZjcvMm0xS21pYmJGd1pRMGMvdy9adFJ5K2NjQVdDWGdCVzdZVEk9IiwibmJmIjoxNTg1ODAyMDkyLCJleHAiOjE1ODU4MDIxNTIsImlhdCI6MTU4NTgwMjA5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.GhZInZEswIBg7DiPc4WxxVYATc-2m9Gtk5ipy21he_o2c2p'} 
data={"escrowCompanyId": "001", "SELLERId": ["e9be9014-ca74-41e6-849d-32c50c1ea3c9", "70737233176166"], "idNumber": "26662910347791", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 10:04:56.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:55.585" endtime="20200402 10:04:56.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:04:56.113" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 10:04:56.112" endtime="20200402 10:04:56.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:56.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:56.114" endtime="20200402 10:04:56.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:56.114" endtime="20200402 10:04:56.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:56.115" endtime="20200402 10:04:56.115"></status>
</kw>
<status status="PASS" starttime="20200402 10:04:55.581" endtime="20200402 10:04:56.116"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:04:52.334" endtime="20200402 10:04:56.116" critical="yes"></status>
</test>
<test id="s1-t13" name="TC_03 UpdateSellerDetails with Expired JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:04:58.118" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:04:56.118" endtime="20200402 10:04:58.118"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:58.119" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:58.119" endtime="20200402 10:04:58.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:58.120" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:58.120" endtime="20200402 10:04:58.120"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:58.121" endtime="20200402 10:04:58.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:58.121" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:58.121" endtime="20200402 10:04:58.121"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:58.122" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:58.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:58.122" endtime="20200402 10:04:58.901"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:58.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:58.901" endtime="20200402 10:04:58.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:58.902" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUxZenlBdXlDTmZ5cHNLczcwTElKOWhCSTlzaTVucm1yUEVlUDFKOHp2RW9yQWZqTXoyZEo4alRXZlpXUkxPSGR4YnMvQ2p1T1k3K3RES2dpZHIyMWs9IiwibmJmIjoxNTg1ODAyMDk2LCJleHAiOjE1ODU4MDIxNTYsImlhdCI6MTU4NTgwMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ItccGJHJPcjzNwXhZbcMcApmvE2531fMFjwaNgZufaE</msg>
<status status="PASS" starttime="20200402 10:04:58.902" endtime="20200402 10:04:58.902"></status>
</kw>
<msg timestamp="20200402 10:04:58.902" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUxZenlBdXlDTmZ5cHNLczcwTElKOWhCSTlzaTVucm1...</msg>
<status status="PASS" starttime="20200402 10:04:58.119" endtime="20200402 10:04:58.902"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:58.904" level="INFO">${Id} = 77002062752166</msg>
<status status="PASS" starttime="20200402 10:04:58.903" endtime="20200402 10:04:58.904"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:58.904" level="INFO">${IdNumber} = 77002062752166</msg>
<status status="PASS" starttime="20200402 10:04:58.904" endtime="20200402 10:04:58.904"></status>
</kw>
<msg timestamp="20200402 10:04:58.904" level="INFO">${idNum} = 77002062752166</msg>
<status status="PASS" starttime="20200402 10:04:58.903" endtime="20200402 10:04:58.905"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:04:58.906" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:58.906" endtime="20200402 10:04:58.906"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:58.907" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:04:58.907" endtime="20200402 10:04:58.907"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:58.907" endtime="20200402 10:04:58.907"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:04:58.908" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:04:58.908" endtime="20200402 10:04:58.908"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:58.909" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:04:59.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:58.908" endtime="20200402 10:04:59.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:59.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:59.478" endtime="20200402 10:04:59.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:04:59.479" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5ZVi9UcmM2ZE92ZnN1UWZ0TWp5d0VtUFkyTlpZbFRVSnplN0d5eEVjcWRPYklIYmxDbitxTWI0bWpPN0NMZUt2NEVvQW1JUUloYjlXQVF3STZHTEE9IiwibmJmIjoxNTg1ODAyMDk3LCJleHAiOjE1ODU4MDIxNTcsImlhdCI6MTU4NTgwMjA5NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0cB-izLm94Q4-eGErX3kf71cId82gTizY0310rzjLKY</msg>
<status status="PASS" starttime="20200402 10:04:59.479" endtime="20200402 10:04:59.480"></status>
</kw>
<msg timestamp="20200402 10:04:59.480" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5ZVi9UcmM2ZE92ZnN1UWZ0TWp5d0VtUFkyTlpZbFR...</msg>
<status status="PASS" starttime="20200402 10:04:58.905" endtime="20200402 10:04:59.480"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:04:59.481" level="INFO">${Id} = 66449791552390</msg>
<status status="PASS" starttime="20200402 10:04:59.481" endtime="20200402 10:04:59.481"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:04:59.481" level="INFO">${IdNumber} = 66449791552390</msg>
<status status="PASS" starttime="20200402 10:04:59.481" endtime="20200402 10:04:59.481"></status>
</kw>
<msg timestamp="20200402 10:04:59.482" level="INFO">${idNum} = 66449791552390</msg>
<status status="PASS" starttime="20200402 10:04:59.480" endtime="20200402 10:04:59.482"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:04:59.483" level="INFO">${mobile} = 8151735112</msg>
<status status="PASS" starttime="20200402 10:04:59.482" endtime="20200402 10:04:59.483"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:04:59.483" level="INFO">${mobileNo} = 8151735112</msg>
<status status="PASS" starttime="20200402 10:04:59.483" endtime="20200402 10:04:59.483"></status>
</kw>
<msg timestamp="20200402 10:04:59.483" level="INFO">${MobNo} = 8151735112</msg>
<status status="PASS" starttime="20200402 10:04:59.482" endtime="20200402 10:04:59.483"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:04:59.484" level="INFO">${Emailnum} = 45614</msg>
<status status="PASS" starttime="20200402 10:04:59.484" endtime="20200402 10:04:59.485"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:04:59.485" level="INFO">${enum} = 45614</msg>
<status status="PASS" starttime="20200402 10:04:59.485" endtime="20200402 10:04:59.485"></status>
</kw>
<msg timestamp="20200402 10:04:59.485" level="INFO">${num} = 45614</msg>
<status status="PASS" starttime="20200402 10:04:59.484" endtime="20200402 10:04:59.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:04:59.486" level="INFO">${emailid} = pavan45614@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:59.486" endtime="20200402 10:04:59.486"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:04:59.486" level="INFO">${email} = pavan45614@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:59.486" endtime="20200402 10:04:59.486"></status>
</kw>
<msg timestamp="20200402 10:04:59.487" level="INFO">${emailid} = pavan45614@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:04:59.484" endtime="20200402 10:04:59.487"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:04:59.489" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:04:59.489" endtime="20200402 10:04:59.489"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:04:59.490" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:04:59.489" endtime="20200402 10:04:59.490"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:04:59.490" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:04:59.490" endtime="20200402 10:04:59.490"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:04:59.492" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:59.490" endtime="20200402 10:04:59.492"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:04:59.494" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:04:59.492" endtime="20200402 10:04:59.494"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:04:59.496" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '66449791552390', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8151735112', 'email': 'pavan45614@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:04:59.494" endtime="20200402 10:04:59.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:59.496" endtime="20200402 10:04:59.497"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:04:59.497" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5ZVi9UcmM2ZE92ZnN1UWZ0TWp5d0VtUFky...</msg>
<status status="PASS" starttime="20200402 10:04:59.497" endtime="20200402 10:04:59.497"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:04:59.498" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:04:59.498" endtime="20200402 10:04:59.498"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:04:59.499" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5ZVi9UcmM2ZE92ZnN1UWZ0TWp5d0VtUFkyTlpZbFRVSnplN0d5eEVjcWRPYklIYmxDbitxTWI0bWpPN0NMZUt2NEVvQW1JUUloYjlXQVF3STZHTEE9IiwibmJmIjoxNTg1ODAyMDk3LCJleHAiOjE1ODU4MDIxNTcsImlhdCI6MTU4NTgwMjA5NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0cB-izLm94Q4-eGErX3kf71cId82gTizY0310rzjLKY'} 
data={"escrowCompanyId": "001", "idNumber": "66449791552390", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8151735112", "email": "pavan45614@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:04:59.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:04:59.499" endtime="20200402 10:04:59.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:04:59.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:04:59.722" endtime="20200402 10:04:59.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:59.722" endtime="20200402 10:04:59.723"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:04:59.723" endtime="20200402 10:04:59.723"></status>
</kw>
<msg timestamp="20200402 10:04:59.724" level="INFO">${sellerid} = d228c3b2-4f95-4f62-9a0b-ce81699f3cee</msg>
<status status="PASS" starttime="20200402 10:04:59.487" endtime="20200402 10:04:59.724"></status>
</kw>
<msg timestamp="20200402 10:04:59.724" level="INFO">${SellerId} = ['d228c3b2-4f95-4f62-9a0b-ce81699f3cee', '66449791552390']</msg>
<status status="PASS" starttime="20200402 10:04:58.905" endtime="20200402 10:04:59.724"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200402 10:11:59.725" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200402 10:04:59.725" endtime="20200402 10:11:59.725"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:11:59.727" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:11:59.727" endtime="20200402 10:11:59.727"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:11:59.728" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 10:11:59.727" endtime="20200402 10:11:59.728"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:11:59.728" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:11:59.728" endtime="20200402 10:11:59.728"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:11:59.729" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['d228c3b2-4f95-4f62-9a0b-ce81699f3cee', '66449791552390'], 'idNumber': '77002062752166', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 10:11:59.728" endtime="20200402 10:11:59.729"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:11:59.729" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUxZenlBdXlDTmZ5cHNLczcwTElKOWhCSTlz...</msg>
<status status="PASS" starttime="20200402 10:11:59.729" endtime="20200402 10:11:59.730"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:11:59.730" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:11:59.730" endtime="20200402 10:11:59.730"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:11:59.731" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUxZenlBdXlDTmZ5cHNLczcwTElKOWhCSTlzaTVucm1yUEVlUDFKOHp2RW9yQWZqTXoyZEo4alRXZlpXUkxPSGR4YnMvQ2p1T1k3K3RES2dpZHIyMWs9IiwibmJmIjoxNTg1ODAyMDk2LCJleHAiOjE1ODU4MDIxNTYsImlhdCI6MTU4NTgwMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ItccGJHJPcjzNwXhZbcMcApmvE2531fMFjwaNgZufaE'} 
data={"escrowCompanyId": "001", "SELLERId": ["d228c3b2-4f95-4f62-9a0b-ce81699f3cee", "66449791552390"], "idNumber": "77002062752166", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 10:11:59.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:11:59.731" endtime="20200402 10:11:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:11:59.894" level="INFO">{"responseCode":"A02","resDescription":"Access token expired"}</msg>
<status status="PASS" starttime="20200402 10:11:59.894" endtime="20200402 10:11:59.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:11:59.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:11:59.895" endtime="20200402 10:11:59.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:11:59.896" endtime="20200402 10:11:59.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:11:59.896" endtime="20200402 10:11:59.897"></status>
</kw>
<status status="PASS" starttime="20200402 10:11:59.726" endtime="20200402 10:11:59.897"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200402 10:04:56.117" endtime="20200402 10:11:59.898" critical="yes"></status>
</test>
<test id="s1-t14" name="TC_04 UpdateSellerDetails with other company JWT token.">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:12:01.903" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:11:59.900" endtime="20200402 10:12:01.903"></status>
</kw>
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:12:01.904" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200402 10:12:01.904" endtime="20200402 10:12:01.904"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:12:01.907" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:12:01.905" endtime="20200402 10:12:01.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200402 10:12:01.907" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:12:01.907" endtime="20200402 10:12:01.907"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:01.908" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:01.908" endtime="20200402 10:12:01.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:01.909" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200402 10:12:01.908" endtime="20200402 10:12:01.909"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:01.909" endtime="20200402 10:12:01.909"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:01.910" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:01.909" endtime="20200402 10:12:01.910"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:01.911" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200402 10:12:02.650" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200402 10:12:02.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:01.910" endtime="20200402 10:12:02.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:12:02.651" level="INFO">{"access_token":"N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoaNnzpn89wIiak_DVQou4j_Xl9YQDpM8uLmpV5IkbawD0IsmlE68hgQb9h_jYq5MFUPGoCbWbNIFdHFpRnSPgmuv5ph8","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200402 10:12:02.651" endtime="20200402 10:12:02.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:02.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:02.652" endtime="20200402 10:12:02.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.654" level="INFO">N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoaNnzpn89wIiak_DVQou4j_Xl9YQDpM8uLmpV5IkbawD0IsmlE68hgQb9h_jYq5MFUPGoCbWbNIFdHFpRnSPgmuv5ph8</msg>
<status status="PASS" starttime="20200402 10:12:02.653" endtime="20200402 10:12:02.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.655" level="INFO">bearer</msg>
<status status="PASS" starttime="20200402 10:12:02.654" endtime="20200402 10:12:02.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.656" level="INFO">N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoaNnzpn89wIiak_DVQou4j_Xl9YQDpM8uLmpV5IkbawD0IsmlE68hgQb9h_jYq5MFUPGoCbWbNIFdHFpRnSPgmuv5ph8</msg>
<status status="PASS" starttime="20200402 10:12:02.655" endtime="20200402 10:12:02.656"></status>
</kw>
<msg timestamp="20200402 10:12:02.657" level="INFO">${TokenEscrow} = N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoaNnzpn89...</msg>
<status status="PASS" starttime="20200402 10:12:01.904" endtime="20200402 10:12:02.657"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:02.658" level="INFO">${Id} = 53019381319340</msg>
<status status="PASS" starttime="20200402 10:12:02.658" endtime="20200402 10:12:02.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.659" level="INFO">${IdNumber} = 53019381319340</msg>
<status status="PASS" starttime="20200402 10:12:02.659" endtime="20200402 10:12:02.659"></status>
</kw>
<msg timestamp="20200402 10:12:02.659" level="INFO">${idNum} = 53019381319340</msg>
<status status="PASS" starttime="20200402 10:12:02.657" endtime="20200402 10:12:02.659"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.661" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:02.661" endtime="20200402 10:12:02.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:02.662" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:02.662" endtime="20200402 10:12:02.662"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:02.662" endtime="20200402 10:12:02.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:02.663" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:02.663" endtime="20200402 10:12:02.663"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:02.663" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:02.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:02.663" endtime="20200402 10:12:02.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:02.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:02.843" endtime="20200402 10:12:02.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.844" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGNLa0FEWnVlVUNQbkFDTGdJSmlGaFZrdytZTk5ab1prTFZZYUF2QURMc3RqekE1dkVuZlY5OUNCWDJLYUQ2MEErZEJjVjlVNzZRRi9jTFY2eUNCYTA9IiwibmJmIjoxNTg1ODAyNTIwLCJleHAiOjE1ODU4MDI1ODAsImlhdCI6MTU4NTgwMjUyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHbPHg2wSfAl_HNja5oHxpwvRZPOF8UgE3MJUAOUlQo</msg>
<status status="PASS" starttime="20200402 10:12:02.844" endtime="20200402 10:12:02.844"></status>
</kw>
<msg timestamp="20200402 10:12:02.845" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGNLa0FEWnVlVUNQbkFDTGdJSmlGaFZrdytZTk5ab1p...</msg>
<status status="PASS" starttime="20200402 10:12:02.660" endtime="20200402 10:12:02.845"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:02.846" level="INFO">${Id} = 10439263840795</msg>
<status status="PASS" starttime="20200402 10:12:02.845" endtime="20200402 10:12:02.846"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.846" level="INFO">${IdNumber} = 10439263840795</msg>
<status status="PASS" starttime="20200402 10:12:02.846" endtime="20200402 10:12:02.847"></status>
</kw>
<msg timestamp="20200402 10:12:02.847" level="INFO">${idNum} = 10439263840795</msg>
<status status="PASS" starttime="20200402 10:12:02.845" endtime="20200402 10:12:02.847"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:12:02.848" level="INFO">${mobile} = 3092031501</msg>
<status status="PASS" starttime="20200402 10:12:02.847" endtime="20200402 10:12:02.848"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.848" level="INFO">${mobileNo} = 3092031501</msg>
<status status="PASS" starttime="20200402 10:12:02.848" endtime="20200402 10:12:02.848"></status>
</kw>
<msg timestamp="20200402 10:12:02.848" level="INFO">${MobNo} = 3092031501</msg>
<status status="PASS" starttime="20200402 10:12:02.847" endtime="20200402 10:12:02.849"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:12:02.850" level="INFO">${Emailnum} = 21080</msg>
<status status="PASS" starttime="20200402 10:12:02.849" endtime="20200402 10:12:02.850"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.850" level="INFO">${enum} = 21080</msg>
<status status="PASS" starttime="20200402 10:12:02.850" endtime="20200402 10:12:02.850"></status>
</kw>
<msg timestamp="20200402 10:12:02.850" level="INFO">${num} = 21080</msg>
<status status="PASS" starttime="20200402 10:12:02.849" endtime="20200402 10:12:02.851"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:12:02.851" level="INFO">${emailid} = pavan21080@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:02.851" endtime="20200402 10:12:02.851"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:12:02.852" level="INFO">${email} = pavan21080@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:02.851" endtime="20200402 10:12:02.852"></status>
</kw>
<msg timestamp="20200402 10:12:02.852" level="INFO">${emailid} = pavan21080@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:02.849" endtime="20200402 10:12:02.852"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:02.854" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:02.854" endtime="20200402 10:12:02.855"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:02.855" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:12:02.855" endtime="20200402 10:12:02.855"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:02.856" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:02.856" endtime="20200402 10:12:02.856"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:12:02.857" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:02.856" endtime="20200402 10:12:02.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:12:02.859" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:02.858" endtime="20200402 10:12:02.859"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:02.861" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '10439263840795', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3092031501', 'email': 'pavan21080@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:12:02.859" endtime="20200402 10:12:02.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:02.862" endtime="20200402 10:12:02.862"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:02.862" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGNLa0FEWnVlVUNQbkFDTGdJSmlGaFZrdytZ...</msg>
<status status="PASS" starttime="20200402 10:12:02.862" endtime="20200402 10:12:02.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:02.863" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:02.863" endtime="20200402 10:12:02.863"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:02.864" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGNLa0FEWnVlVUNQbkFDTGdJSmlGaFZrdytZTk5ab1prTFZZYUF2QURMc3RqekE1dkVuZlY5OUNCWDJLYUQ2MEErZEJjVjlVNzZRRi9jTFY2eUNCYTA9IiwibmJmIjoxNTg1ODAyNTIwLCJleHAiOjE1ODU4MDI1ODAsImlhdCI6MTU4NTgwMjUyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHbPHg2wSfAl_HNja5oHxpwvRZPOF8UgE3MJUAOUlQo'} 
data={"escrowCompanyId": "001", "idNumber": "10439263840795", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3092031501", "email": "pavan21080@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:12:03.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:02.863" endtime="20200402 10:12:03.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:03.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:03.146" endtime="20200402 10:12:03.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:03.147" endtime="20200402 10:12:03.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:03.147" endtime="20200402 10:12:03.148"></status>
</kw>
<msg timestamp="20200402 10:12:03.148" level="INFO">${sellerid} = 2635d7c4-137e-46b5-97ad-83116c18a52c</msg>
<status status="PASS" starttime="20200402 10:12:02.852" endtime="20200402 10:12:03.148"></status>
</kw>
<msg timestamp="20200402 10:12:03.148" level="INFO">${SellerId} = ['2635d7c4-137e-46b5-97ad-83116c18a52c', '10439263840795']</msg>
<status status="PASS" starttime="20200402 10:12:02.660" endtime="20200402 10:12:03.148"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:03.150" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:03.150" endtime="20200402 10:12:03.151"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:03.151" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 10:12:03.151" endtime="20200402 10:12:03.151"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:03.152" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:03.151" endtime="20200402 10:12:03.152"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:03.153" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['2635d7c4-137e-46b5-97ad-83116c18a52c', '10439263840795'], 'idNumber': '53019381319340', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 10:12:03.152" endtime="20200402 10:12:03.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:03.153" level="INFO">${AuthToken} = bearer N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoa...</msg>
<status status="PASS" starttime="20200402 10:12:03.153" endtime="20200402 10:12:03.153"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:03.154" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9Bwubsq...</msg>
<status status="PASS" starttime="20200402 10:12:03.154" endtime="20200402 10:12:03.154"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:03.155" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer N8d7XMV39PC14MZHyZUjNp3uKSgr80QCTkHVkBBlIewvm3MZYGEzqbOgRJ87M8pb3CJ55zXPZ7yU6ZRs0x72RjYd0bosx-sj0x-va2TpdYxUh6DqSNLNcwZ3AqVBGqcpO1-9BwubsqRu7i-jrZUe7w2QQZ6UMjPgRr_ZXpxpU7jJ8Tnr8UPqJekPIb7nufCoaNnzpn89wIiak_DVQou4j_Xl9YQDpM8uLmpV5IkbawD0IsmlE68hgQb9h_jYq5MFUPGoCbWbNIFdHFpRnSPgmuv5ph8'} 
data={"escrowCompanyId": "001", "SELLERId": ["2635d7c4-137e-46b5-97ad-83116c18a52c", "10439263840795"], "idNumber": "53019381319340", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 10:12:03.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:03.154" endtime="20200402 10:12:03.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:12:03.663" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200402 10:12:03.662" endtime="20200402 10:12:03.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:03.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:03.664" endtime="20200402 10:12:03.665"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:03.665" endtime="20200402 10:12:03.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:03.666" endtime="20200402 10:12:03.667"></status>
</kw>
<status status="PASS" starttime="20200402 10:12:03.149" endtime="20200402 10:12:03.668"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:11:59.899" endtime="20200402 10:12:03.668" critical="yes"></status>
</test>
<test id="s1-t15" name="TC_05 UpdateSellerDetails with valid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:12:05.685" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:12:03.684" endtime="20200402 10:12:05.685"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:05.686" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:05.686" endtime="20200402 10:12:05.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:05.687" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:05.687" endtime="20200402 10:12:05.687"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:05.688" endtime="20200402 10:12:05.688"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:05.688" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:05.688" endtime="20200402 10:12:05.689"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:05.689" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:06.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:05.689" endtime="20200402 10:12:06.505"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:06.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:06.505" endtime="20200402 10:12:06.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:06.506" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmtFM0s5WVAvQytQNXJ6am9ZRkczSHBxN1pwN1VkMVd6eit2T1k5RzArcXFpbkpTUVptQTZ0Ym9aWFdjVGNyN1h3anlOSkFVV2hWNzMvd09Rc1VzNW89IiwibmJmIjoxNTg1ODAyNTI0LCJleHAiOjE1ODU4MDI1ODQsImlhdCI6MTU4NTgwMjUyNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.XJY1ILXTeGkXses_qNrda7BbZsSiCyrzE6h82zf7umk</msg>
<status status="PASS" starttime="20200402 10:12:06.506" endtime="20200402 10:12:06.506"></status>
</kw>
<msg timestamp="20200402 10:12:06.507" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmtFM0s5WVAvQytQNXJ6am9ZRkczSHBxN1pwN1VkMVd...</msg>
<status status="PASS" starttime="20200402 10:12:05.685" endtime="20200402 10:12:06.507"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idNum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:06.509" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:06.509" endtime="20200402 10:12:06.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:06.510" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:06.509" endtime="20200402 10:12:06.510"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:06.510" endtime="20200402 10:12:06.510"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:06.511" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:06.510" endtime="20200402 10:12:06.511"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:06.511" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:07.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:06.511" endtime="20200402 10:12:07.026"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:07.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:07.026" endtime="20200402 10:12:07.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:07.027" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhJaEF2aTJ1aWJ4N2NNb0lNUDh3VWNhNGRFVHZoTi9ZRU9TdDdEY2txbC9vNmhOZ3d0Z3pHTXdYTFYvOTVNSGl6dWpiMVFHdmhRbDBQYzk4TGF3U3c9IiwibmJmIjoxNTg1ODAyNTI0LCJleHAiOjE1ODU4MDI1ODQsImlhdCI6MTU4NTgwMjUyNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9J-AYDyQPa4EQ2usVLBRLPGBr0j1meHlclxydeJ6wSA</msg>
<status status="PASS" starttime="20200402 10:12:07.027" endtime="20200402 10:12:07.027"></status>
</kw>
<msg timestamp="20200402 10:12:07.027" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhJaEF2aTJ1aWJ4N2NNb0lNUDh3VWNhNGRFVHZoTi9...</msg>
<status status="PASS" starttime="20200402 10:12:06.508" endtime="20200402 10:12:07.027"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:07.028" level="INFO">${Id} = 95331391893025</msg>
<status status="PASS" starttime="20200402 10:12:07.028" endtime="20200402 10:12:07.028"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:07.029" level="INFO">${IdNumber} = 95331391893025</msg>
<status status="PASS" starttime="20200402 10:12:07.028" endtime="20200402 10:12:07.029"></status>
</kw>
<msg timestamp="20200402 10:12:07.029" level="INFO">${idNum} = 95331391893025</msg>
<status status="PASS" starttime="20200402 10:12:07.027" endtime="20200402 10:12:07.029"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:12:07.030" level="INFO">${mobile} = 6242152728</msg>
<status status="PASS" starttime="20200402 10:12:07.030" endtime="20200402 10:12:07.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:12:07.031" level="INFO">${mobileNo} = 6242152728</msg>
<status status="PASS" starttime="20200402 10:12:07.030" endtime="20200402 10:12:07.031"></status>
</kw>
<msg timestamp="20200402 10:12:07.031" level="INFO">${MobNo} = 6242152728</msg>
<status status="PASS" starttime="20200402 10:12:07.030" endtime="20200402 10:12:07.031"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:12:07.032" level="INFO">${Emailnum} = 55086</msg>
<status status="PASS" starttime="20200402 10:12:07.032" endtime="20200402 10:12:07.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:12:07.033" level="INFO">${enum} = 55086</msg>
<status status="PASS" starttime="20200402 10:12:07.032" endtime="20200402 10:12:07.033"></status>
</kw>
<msg timestamp="20200402 10:12:07.033" level="INFO">${num} = 55086</msg>
<status status="PASS" starttime="20200402 10:12:07.032" endtime="20200402 10:12:07.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:12:07.034" level="INFO">${emailid} = pavan55086@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:07.033" endtime="20200402 10:12:07.034"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:12:07.034" level="INFO">${email} = pavan55086@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:07.034" endtime="20200402 10:12:07.034"></status>
</kw>
<msg timestamp="20200402 10:12:07.034" level="INFO">${emailid} = pavan55086@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:07.031" endtime="20200402 10:12:07.034"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:07.037" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:07.036" endtime="20200402 10:12:07.037"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:07.038" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:12:07.037" endtime="20200402 10:12:07.038"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:07.038" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:07.038" endtime="20200402 10:12:07.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:12:07.040" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:07.038" endtime="20200402 10:12:07.040"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:12:07.041" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:07.040" endtime="20200402 10:12:07.041"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:07.043" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '95331391893025', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6242152728', 'email': 'pavan55086@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:12:07.041" endtime="20200402 10:12:07.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:07.044" endtime="20200402 10:12:07.044"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:07.045" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhJaEF2aTJ1aWJ4N2NNb0lNUDh3VWNhNGRF...</msg>
<status status="PASS" starttime="20200402 10:12:07.045" endtime="20200402 10:12:07.045"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:07.046" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:07.045" endtime="20200402 10:12:07.046"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:07.047" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhJaEF2aTJ1aWJ4N2NNb0lNUDh3VWNhNGRFVHZoTi9ZRU9TdDdEY2txbC9vNmhOZ3d0Z3pHTXdYTFYvOTVNSGl6dWpiMVFHdmhRbDBQYzk4TGF3U3c9IiwibmJmIjoxNTg1ODAyNTI0LCJleHAiOjE1ODU4MDI1ODQsImlhdCI6MTU4NTgwMjUyNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9J-AYDyQPa4EQ2usVLBRLPGBr0j1meHlclxydeJ6wSA'} 
data={"escrowCompanyId": "001", "idNumber": "95331391893025", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6242152728", "email": "pavan55086@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:12:07.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:07.046" endtime="20200402 10:12:07.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:07.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:07.292" endtime="20200402 10:12:07.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:07.293" endtime="20200402 10:12:07.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:07.294" endtime="20200402 10:12:07.294"></status>
</kw>
<msg timestamp="20200402 10:12:07.295" level="INFO">${sellerid} = e171b5fa-0598-4e52-908d-641b08bdd7d9</msg>
<status status="PASS" starttime="20200402 10:12:07.034" endtime="20200402 10:12:07.295"></status>
</kw>
<msg timestamp="20200402 10:12:07.295" level="INFO">${SellerId} = e171b5fa-0598-4e52-908d-641b08bdd7d9</msg>
<msg timestamp="20200402 10:12:07.295" level="INFO">${idNum} = 95331391893025</msg>
<status status="PASS" starttime="20200402 10:12:06.507" endtime="20200402 10:12:07.295"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:07.297" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:07.297" endtime="20200402 10:12:07.297"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:07.298" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 10:12:07.297" endtime="20200402 10:12:07.298"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:07.298" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:07.298" endtime="20200402 10:12:07.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:07.299" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'e171b5fa-0598-4e52-908d-641b08bdd7d9', 'idNumber': '95331391893025', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 10:12:07.298" endtime="20200402 10:12:07.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:07.300" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmtFM0s5WVAvQytQNXJ6am9ZRkczSHBxN1pw...</msg>
<status status="PASS" starttime="20200402 10:12:07.299" endtime="20200402 10:12:07.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:07.300" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:07.300" endtime="20200402 10:12:07.300"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:07.301" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmtFM0s5WVAvQytQNXJ6am9ZRkczSHBxN1pwN1VkMVd6eit2T1k5RzArcXFpbkpTUVptQTZ0Ym9aWFdjVGNyN1h3anlOSkFVV2hWNzMvd09Rc1VzNW89IiwibmJmIjoxNTg1ODAyNTI0LCJleHAiOjE1ODU4MDI1ODQsImlhdCI6MTU4NTgwMjUyNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.XJY1ILXTeGkXses_qNrda7BbZsSiCyrzE6h82zf7umk'} 
data={"escrowCompanyId": "001", "SELLERId": "e171b5fa-0598-4e52-908d-641b08bdd7d9", "idNumber": "95331391893025", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 10:12:07.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:07.301" endtime="20200402 10:12:07.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:12:07.837" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 10:12:07.837" endtime="20200402 10:12:07.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:07.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:07.838" endtime="20200402 10:12:07.839"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:07.839" endtime="20200402 10:12:07.840"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:07.840" endtime="20200402 10:12:07.840"></status>
</kw>
<status status="PASS" starttime="20200402 10:12:07.296" endtime="20200402 10:12:07.840"></status>
</kw>
<doc>Valid: To check API response with valid JWT token.</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 10:12:03.683" endtime="20200402 10:12:07.841" critical="yes"></status>
</test>
<test id="s1-t16" name="TC_01 GetSellerDetails with Empty JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:12:09.844" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:12:07.843" endtime="20200402 10:12:09.844"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:09.846" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:09.846" endtime="20200402 10:12:09.846"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:09.847" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:09.846" endtime="20200402 10:12:09.847"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:09.847" endtime="20200402 10:12:09.847"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:09.848" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:09.847" endtime="20200402 10:12:09.848"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:09.848" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:10.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:09.848" endtime="20200402 10:12:10.022"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:10.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:10.022" endtime="20200402 10:12:10.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:10.023" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dydVlYdEwyQ0g5cE9aaWpDYW1mOUYvaHA2TTNsS0g1YnFxVVdjNHF4ZS9KVXhWSWczWUYwd2VFS1MyTVVXUGVRMTZFTGpNTWtyQmgwS241RGJkOG89IiwibmJmIjoxNTg1ODAyNTI3LCJleHAiOjE1ODU4MDI1ODcsImlhdCI6MTU4NTgwMjUyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IUyKU2uYIvf9ufkZ8v5Owphbm8-B-HCL1utf_nNgeu4</msg>
<status status="PASS" starttime="20200402 10:12:10.023" endtime="20200402 10:12:10.024"></status>
</kw>
<msg timestamp="20200402 10:12:10.024" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dydVlYdEwyQ0g5cE9aaWpDYW1mOUYvaHA2TTNsS0g...</msg>
<status status="PASS" starttime="20200402 10:12:09.845" endtime="20200402 10:12:10.024"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:10.025" level="INFO">${Id} = 21649927156572</msg>
<status status="PASS" starttime="20200402 10:12:10.025" endtime="20200402 10:12:10.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:10.026" level="INFO">${IdNumber} = 21649927156572</msg>
<status status="PASS" starttime="20200402 10:12:10.025" endtime="20200402 10:12:10.026"></status>
</kw>
<msg timestamp="20200402 10:12:10.026" level="INFO">${idNum} = 21649927156572</msg>
<status status="PASS" starttime="20200402 10:12:10.024" endtime="20200402 10:12:10.026"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:12:10.027" level="INFO">${mobile} = 9670660503</msg>
<status status="PASS" starttime="20200402 10:12:10.026" endtime="20200402 10:12:10.027"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:12:10.027" level="INFO">${mobileNo} = 9670660503</msg>
<status status="PASS" starttime="20200402 10:12:10.027" endtime="20200402 10:12:10.027"></status>
</kw>
<msg timestamp="20200402 10:12:10.028" level="INFO">${MobNo} = 9670660503</msg>
<status status="PASS" starttime="20200402 10:12:10.026" endtime="20200402 10:12:10.028"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:12:10.029" level="INFO">${Emailnum} = 08756</msg>
<status status="PASS" starttime="20200402 10:12:10.028" endtime="20200402 10:12:10.029"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:12:10.029" level="INFO">${enum} = 08756</msg>
<status status="PASS" starttime="20200402 10:12:10.029" endtime="20200402 10:12:10.029"></status>
</kw>
<msg timestamp="20200402 10:12:10.030" level="INFO">${num} = 08756</msg>
<status status="PASS" starttime="20200402 10:12:10.028" endtime="20200402 10:12:10.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:12:10.030" level="INFO">${emailid} = pavan08756@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:10.030" endtime="20200402 10:12:10.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:12:10.031" level="INFO">${email} = pavan08756@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:10.030" endtime="20200402 10:12:10.031"></status>
</kw>
<msg timestamp="20200402 10:12:10.031" level="INFO">${emailid} = pavan08756@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:10.028" endtime="20200402 10:12:10.031"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:10.034" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:10.034" endtime="20200402 10:12:10.034"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:10.035" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:12:10.034" endtime="20200402 10:12:10.035"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:10.035" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:10.035" endtime="20200402 10:12:10.035"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:12:10.037" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:10.036" endtime="20200402 10:12:10.037"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:12:10.038" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:10.037" endtime="20200402 10:12:10.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:10.042" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '21649927156572', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9670660503', 'email': 'pavan08756@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:12:10.039" endtime="20200402 10:12:10.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:10.042" endtime="20200402 10:12:10.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:10.043" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dydVlYdEwyQ0g5cE9aaWpDYW1mOUYvaHA2...</msg>
<status status="PASS" starttime="20200402 10:12:10.043" endtime="20200402 10:12:10.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:10.044" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:10.043" endtime="20200402 10:12:10.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:10.045" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dydVlYdEwyQ0g5cE9aaWpDYW1mOUYvaHA2TTNsS0g1YnFxVVdjNHF4ZS9KVXhWSWczWUYwd2VFS1MyTVVXUGVRMTZFTGpNTWtyQmgwS241RGJkOG89IiwibmJmIjoxNTg1ODAyNTI3LCJleHAiOjE1ODU4MDI1ODcsImlhdCI6MTU4NTgwMjUyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IUyKU2uYIvf9ufkZ8v5Owphbm8-B-HCL1utf_nNgeu4'} 
data={"escrowCompanyId": "001", "idNumber": "21649927156572", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9670660503", "email": "pavan08756@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:12:10.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:10.044" endtime="20200402 10:12:10.280"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:10.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:10.280" endtime="20200402 10:12:10.281"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:10.281" endtime="20200402 10:12:10.281"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:10.282" endtime="20200402 10:12:10.282"></status>
</kw>
<msg timestamp="20200402 10:12:10.282" level="INFO">${sellerid} = b3a7e3e2-7822-4d53-8246-3df0a95fe283</msg>
<status status="PASS" starttime="20200402 10:12:10.031" endtime="20200402 10:12:10.282"></status>
</kw>
<msg timestamp="20200402 10:12:10.283" level="INFO">${SellerId} = ['b3a7e3e2-7822-4d53-8246-3df0a95fe283', '21649927156572']</msg>
<status status="PASS" starttime="20200402 10:12:09.845" endtime="20200402 10:12:10.283"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:10.284" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:10.284" endtime="20200402 10:12:10.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:10.285" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': ['b3a7e3e2-7822-4d53-8246-3df0a95fe283', '21649927156572']}</msg>
<status status="PASS" starttime="20200402 10:12:10.285" endtime="20200402 10:12:10.285"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:10.286" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200402 10:12:10.286" endtime="20200402 10:12:10.286"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:10.287" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200402 10:12:10.286" endtime="20200402 10:12:10.287"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:10.288" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "sellerID": ["b3a7e3e2-7822-4d53-8246-3df0a95fe283", "21649927156572"]} 
json=None</msg>
<msg timestamp="20200402 10:12:10.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:10.287" endtime="20200402 10:12:10.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:10.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:10.450" endtime="20200402 10:12:10.451"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:10.451" endtime="20200402 10:12:10.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:10.452" endtime="20200402 10:12:10.452"></status>
</kw>
<status status="PASS" starttime="20200402 10:12:10.283" endtime="20200402 10:12:10.453"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:12:07.842" endtime="20200402 10:12:10.453" critical="yes"></status>
</test>
<test id="s1-t17" name="TC_02 GetSellerDetails with Invalid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:12:12.457" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:12:10.457" endtime="20200402 10:12:12.457"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:12.458" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:12.458" endtime="20200402 10:12:12.459"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:12.459" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:12.459" endtime="20200402 10:12:12.459"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:12.460" endtime="20200402 10:12:12.460"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:12.460" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:12.460" endtime="20200402 10:12:12.460"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:12.461" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:12.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:12.461" endtime="20200402 10:12:12.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:12.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:12.649" endtime="20200402 10:12:12.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:12.651" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUxUdmJaR0hEc2JBemNaZVZKTVAvc3h2TWoyYW9nVDlFTE1UdjR0OEg1a1htZGpEZWRaOWJzYWJOd29MNE43c09aUm5obTlTWVl5K09IeTdhaDhpTmc9IiwibmJmIjoxNTg1ODAyNTMwLCJleHAiOjE1ODU4MDI1OTAsImlhdCI6MTU4NTgwMjUzMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I_nlRamBetIhLPQDzKq7vFtgmW4V_vTgkwgfRwxzV64</msg>
<status status="PASS" starttime="20200402 10:12:12.650" endtime="20200402 10:12:12.651"></status>
</kw>
<msg timestamp="20200402 10:12:12.651" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUxUdmJaR0hEc2JBemNaZVZKTVAvc3h2TWoyYW9nVDl...</msg>
<status status="PASS" starttime="20200402 10:12:12.458" endtime="20200402 10:12:12.651"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:12.653" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:12.652" endtime="20200402 10:12:12.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:12.654" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:12.653" endtime="20200402 10:12:12.654"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:12.654" endtime="20200402 10:12:12.654"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:12.655" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:12.654" endtime="20200402 10:12:12.655"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:12.655" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:13.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:12.655" endtime="20200402 10:12:13.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:13.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:13.135" endtime="20200402 10:12:13.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:13.136" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHdPU3FtYmNyTlNZNEdpVmlUNWUrbitlOEkwejNMNHg5bVVZZVQ4L0Rmc1VvUmF1ckxKTjREbWVENUM3TjBoUnZDN0hibG5hbE9oWVBVK2JWbUEwTjg9IiwibmJmIjoxNTg1ODAyNTMxLCJleHAiOjE1ODU4MDI1OTEsImlhdCI6MTU4NTgwMjUzMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jdG49jVrXSUbBLvemzoEmKJWbjZ7Cb_gjGTRKYUPhtQ</msg>
<status status="PASS" starttime="20200402 10:12:13.135" endtime="20200402 10:12:13.136"></status>
</kw>
<msg timestamp="20200402 10:12:13.136" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHdPU3FtYmNyTlNZNEdpVmlUNWUrbitlOEkwejNMNHg...</msg>
<status status="PASS" starttime="20200402 10:12:12.652" endtime="20200402 10:12:13.136"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:13.137" level="INFO">${Id} = 98759840464752</msg>
<status status="PASS" starttime="20200402 10:12:13.137" endtime="20200402 10:12:13.137"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:13.137" level="INFO">${IdNumber} = 98759840464752</msg>
<status status="PASS" starttime="20200402 10:12:13.137" endtime="20200402 10:12:13.138"></status>
</kw>
<msg timestamp="20200402 10:12:13.138" level="INFO">${idNum} = 98759840464752</msg>
<status status="PASS" starttime="20200402 10:12:13.136" endtime="20200402 10:12:13.138"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:12:13.139" level="INFO">${mobile} = 6890242722</msg>
<status status="PASS" starttime="20200402 10:12:13.138" endtime="20200402 10:12:13.139"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:12:13.139" level="INFO">${mobileNo} = 6890242722</msg>
<status status="PASS" starttime="20200402 10:12:13.139" endtime="20200402 10:12:13.139"></status>
</kw>
<msg timestamp="20200402 10:12:13.140" level="INFO">${MobNo} = 6890242722</msg>
<status status="PASS" starttime="20200402 10:12:13.138" endtime="20200402 10:12:13.140"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:12:13.141" level="INFO">${Emailnum} = 06817</msg>
<status status="PASS" starttime="20200402 10:12:13.141" endtime="20200402 10:12:13.141"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:12:13.141" level="INFO">${enum} = 06817</msg>
<status status="PASS" starttime="20200402 10:12:13.141" endtime="20200402 10:12:13.141"></status>
</kw>
<msg timestamp="20200402 10:12:13.142" level="INFO">${num} = 06817</msg>
<status status="PASS" starttime="20200402 10:12:13.140" endtime="20200402 10:12:13.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:12:13.142" level="INFO">${emailid} = pavan06817@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:13.142" endtime="20200402 10:12:13.142"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:12:13.143" level="INFO">${email} = pavan06817@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:13.142" endtime="20200402 10:12:13.143"></status>
</kw>
<msg timestamp="20200402 10:12:13.143" level="INFO">${emailid} = pavan06817@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:13.140" endtime="20200402 10:12:13.143"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:13.145" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:13.145" endtime="20200402 10:12:13.146"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:13.146" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:12:13.146" endtime="20200402 10:12:13.146"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:13.147" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:13.146" endtime="20200402 10:12:13.147"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:12:13.148" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:13.147" endtime="20200402 10:12:13.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:12:13.150" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:13.148" endtime="20200402 10:12:13.150"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:13.152" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '98759840464752', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6890242722', 'email': 'pavan06817@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:12:13.150" endtime="20200402 10:12:13.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:13.153" endtime="20200402 10:12:13.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:13.154" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHdPU3FtYmNyTlNZNEdpVmlUNWUrbitlOEkw...</msg>
<status status="PASS" starttime="20200402 10:12:13.154" endtime="20200402 10:12:13.154"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:13.155" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:13.154" endtime="20200402 10:12:13.155"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:13.156" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHdPU3FtYmNyTlNZNEdpVmlUNWUrbitlOEkwejNMNHg5bVVZZVQ4L0Rmc1VvUmF1ckxKTjREbWVENUM3TjBoUnZDN0hibG5hbE9oWVBVK2JWbUEwTjg9IiwibmJmIjoxNTg1ODAyNTMxLCJleHAiOjE1ODU4MDI1OTEsImlhdCI6MTU4NTgwMjUzMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jdG49jVrXSUbBLvemzoEmKJWbjZ7Cb_gjGTRKYUPhtQ'} 
data={"escrowCompanyId": "001", "idNumber": "98759840464752", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6890242722", "email": "pavan06817@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:12:13.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:13.155" endtime="20200402 10:12:13.420"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:13.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:13.420" endtime="20200402 10:12:13.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:13.421" endtime="20200402 10:12:13.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:13.421" endtime="20200402 10:12:13.422"></status>
</kw>
<msg timestamp="20200402 10:12:13.422" level="INFO">${sellerid} = b1e9f05a-b0bf-4cbe-a811-fc87334bb758</msg>
<status status="PASS" starttime="20200402 10:12:13.143" endtime="20200402 10:12:13.422"></status>
</kw>
<msg timestamp="20200402 10:12:13.422" level="INFO">${SellerId} = ['b1e9f05a-b0bf-4cbe-a811-fc87334bb758', '98759840464752']</msg>
<status status="PASS" starttime="20200402 10:12:12.652" endtime="20200402 10:12:13.422"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}2c2p</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:13.424" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:13.424" endtime="20200402 10:12:13.424"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:13.425" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': ['b1e9f05a-b0bf-4cbe-a811-fc87334bb758', '98759840464752']}</msg>
<status status="PASS" starttime="20200402 10:12:13.424" endtime="20200402 10:12:13.425"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:13.425" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUxUdmJaR0hEc2JBemNaZVZKTVAvc3h2TWoy...</msg>
<status status="PASS" starttime="20200402 10:12:13.425" endtime="20200402 10:12:13.425"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:13.426" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:13.426" endtime="20200402 10:12:13.426"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:13.427" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUxUdmJaR0hEc2JBemNaZVZKTVAvc3h2TWoyYW9nVDlFTE1UdjR0OEg1a1htZGpEZWRaOWJzYWJOd29MNE43c09aUm5obTlTWVl5K09IeTdhaDhpTmc9IiwibmJmIjoxNTg1ODAyNTMwLCJleHAiOjE1ODU4MDI1OTAsImlhdCI6MTU4NTgwMjUzMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I_nlRamBetIhLPQDzKq7vFtgmW4V_vTgkwgfRwxzV642c2p'} 
data={"escrowCompanyId": "001", "sellerID": ["b1e9f05a-b0bf-4cbe-a811-fc87334bb758", "98759840464752"]} 
json=None</msg>
<msg timestamp="20200402 10:12:13.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:13.426" endtime="20200402 10:12:13.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:13.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:13.957" endtime="20200402 10:12:13.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:13.958" endtime="20200402 10:12:13.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:13.959" endtime="20200402 10:12:13.960"></status>
</kw>
<status status="PASS" starttime="20200402 10:12:13.423" endtime="20200402 10:12:13.960"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:12:10.455" endtime="20200402 10:12:13.960" critical="yes"></status>
</test>
<test id="s1-t18" name="TC_03 GetSellerDetails with Expired JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:12:15.965" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:12:13.963" endtime="20200402 10:12:15.965"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:15.966" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:15.966" endtime="20200402 10:12:15.967"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:15.967" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:15.967" endtime="20200402 10:12:15.967"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:15.967" endtime="20200402 10:12:15.968"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:15.968" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:15.968" endtime="20200402 10:12:15.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:15.969" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:16.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:15.968" endtime="20200402 10:12:16.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:16.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:16.453" endtime="20200402 10:12:16.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.454" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXlVeTRrWEt3eVhoM09HdEI3eGd3OWQ0WVVManZ0cUQ0eGljMDhmSW5WMTJyVEtlb3ZTNTJnNVRWRjJjM1BqYlJwSjVjK0t0MEYzL3JhaG1GRU1VTGM9IiwibmJmIjoxNTg1ODAyNTM0LCJleHAiOjE1ODU4MDI1OTQsImlhdCI6MTU4NTgwMjUzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gLl48lPrn4D7lY5eA0f-8XNwTpuTRchb4XzIHrLCTfc</msg>
<status status="PASS" starttime="20200402 10:12:16.454" endtime="20200402 10:12:16.454"></status>
</kw>
<msg timestamp="20200402 10:12:16.455" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXlVeTRrWEt3eVhoM09HdEI3eGd3OWQ0WVVManZ0cUQ...</msg>
<status status="PASS" starttime="20200402 10:12:15.966" endtime="20200402 10:12:16.455"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${IdNumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.456" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:16.456" endtime="20200402 10:12:16.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:16.457" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:12:16.457" endtime="20200402 10:12:16.457"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:16.457" endtime="20200402 10:12:16.457"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:12:16.458" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:12:16.458" endtime="20200402 10:12:16.458"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:16.459" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:12:16.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:16.458" endtime="20200402 10:12:16.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:16.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:16.964" endtime="20200402 10:12:16.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.965" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0U4OWk1SGZSUjd1eThHUHJxRi9KQ2lFNjkyMERlU2dEUFduQlBWS3B5UUIzRmU1YWZvYlBoL3ZjUEpmYjl3WUo0Ris2akx5NFZIRnMvemlqUnN1Tkk9IiwibmJmIjoxNTg1ODAyNTM0LCJleHAiOjE1ODU4MDI1OTQsImlhdCI6MTU4NTgwMjUzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.CMGTWgWyW9WQwMQKpRgVow6V7DchsGIJVGutygMHAI0</msg>
<status status="PASS" starttime="20200402 10:12:16.965" endtime="20200402 10:12:16.965"></status>
</kw>
<msg timestamp="20200402 10:12:16.965" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0U4OWk1SGZSUjd1eThHUHJxRi9KQ2lFNjkyMERlU2d...</msg>
<status status="PASS" starttime="20200402 10:12:16.455" endtime="20200402 10:12:16.966"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:12:16.966" level="INFO">${Id} = 97665216529701</msg>
<status status="PASS" starttime="20200402 10:12:16.966" endtime="20200402 10:12:16.966"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.967" level="INFO">${IdNumber} = 97665216529701</msg>
<status status="PASS" starttime="20200402 10:12:16.967" endtime="20200402 10:12:16.967"></status>
</kw>
<msg timestamp="20200402 10:12:16.967" level="INFO">${idNum} = 97665216529701</msg>
<status status="PASS" starttime="20200402 10:12:16.966" endtime="20200402 10:12:16.967"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:12:16.968" level="INFO">${mobile} = 4394044562</msg>
<status status="PASS" starttime="20200402 10:12:16.968" endtime="20200402 10:12:16.968"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.968" level="INFO">${mobileNo} = 4394044562</msg>
<status status="PASS" starttime="20200402 10:12:16.968" endtime="20200402 10:12:16.969"></status>
</kw>
<msg timestamp="20200402 10:12:16.969" level="INFO">${MobNo} = 4394044562</msg>
<status status="PASS" starttime="20200402 10:12:16.967" endtime="20200402 10:12:16.969"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:12:16.970" level="INFO">${Emailnum} = 88340</msg>
<status status="PASS" starttime="20200402 10:12:16.970" endtime="20200402 10:12:16.970"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.971" level="INFO">${enum} = 88340</msg>
<status status="PASS" starttime="20200402 10:12:16.970" endtime="20200402 10:12:16.971"></status>
</kw>
<msg timestamp="20200402 10:12:16.971" level="INFO">${num} = 88340</msg>
<status status="PASS" starttime="20200402 10:12:16.969" endtime="20200402 10:12:16.971"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:12:16.971" level="INFO">${emailid} = pavan88340@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:16.971" endtime="20200402 10:12:16.971"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:12:16.972" level="INFO">${email} = pavan88340@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:16.971" endtime="20200402 10:12:16.972"></status>
</kw>
<msg timestamp="20200402 10:12:16.972" level="INFO">${emailid} = pavan88340@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:12:16.969" endtime="20200402 10:12:16.972"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:12:16.975" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:12:16.974" endtime="20200402 10:12:16.975"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:12:16.975" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:12:16.975" endtime="20200402 10:12:16.975"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:12:16.976" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:12:16.976" endtime="20200402 10:12:16.976"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:12:16.977" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:16.976" endtime="20200402 10:12:16.977"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:12:16.979" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:12:16.978" endtime="20200402 10:12:16.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:12:16.981" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '97665216529701', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4394044562', 'email': 'pavan88340@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:12:16.979" endtime="20200402 10:12:16.981"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:16.981" endtime="20200402 10:12:16.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:12:16.983" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0U4OWk1SGZSUjd1eThHUHJxRi9KQ2lFNjky...</msg>
<status status="PASS" starttime="20200402 10:12:16.982" endtime="20200402 10:12:16.983"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:12:16.983" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:12:16.983" endtime="20200402 10:12:16.983"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:12:16.984" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0U4OWk1SGZSUjd1eThHUHJxRi9KQ2lFNjkyMERlU2dEUFduQlBWS3B5UUIzRmU1YWZvYlBoL3ZjUEpmYjl3WUo0Ris2akx5NFZIRnMvemlqUnN1Tkk9IiwibmJmIjoxNTg1ODAyNTM0LCJleHAiOjE1ODU4MDI1OTQsImlhdCI6MTU4NTgwMjUzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.CMGTWgWyW9WQwMQKpRgVow6V7DchsGIJVGutygMHAI0'} 
data={"escrowCompanyId": "001", "idNumber": "97665216529701", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4394044562", "email": "pavan88340@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:12:17.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:12:16.984" endtime="20200402 10:12:17.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:12:17.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:12:17.230" endtime="20200402 10:12:17.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:17.231" endtime="20200402 10:12:17.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:12:17.231" endtime="20200402 10:12:17.232"></status>
</kw>
<msg timestamp="20200402 10:12:17.232" level="INFO">${sellerid} = 6318b50b-0997-4f44-b835-16a51612bae9</msg>
<status status="PASS" starttime="20200402 10:12:16.972" endtime="20200402 10:12:17.232"></status>
</kw>
<msg timestamp="20200402 10:12:17.232" level="INFO">${SellerId} = 6318b50b-0997-4f44-b835-16a51612bae9</msg>
<msg timestamp="20200402 10:12:17.232" level="INFO">${IdNumber} = 97665216529701</msg>
<status status="PASS" starttime="20200402 10:12:16.455" endtime="20200402 10:12:17.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200402 10:19:17.234" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200402 10:12:17.233" endtime="20200402 10:19:17.234"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:19:17.236" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:17.235" endtime="20200402 10:19:17.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:19:17.237" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6318b50b-0997-4f44-b835-16a51612bae9'}</msg>
<status status="PASS" starttime="20200402 10:19:17.236" endtime="20200402 10:19:17.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:19:17.237" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXlVeTRrWEt3eVhoM09HdEI3eGd3OWQ0WVVM...</msg>
<status status="PASS" starttime="20200402 10:19:17.237" endtime="20200402 10:19:17.237"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:17.238" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:19:17.238" endtime="20200402 10:19:17.238"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:17.239" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXlVeTRrWEt3eVhoM09HdEI3eGd3OWQ0WVVManZ0cUQ0eGljMDhmSW5WMTJyVEtlb3ZTNTJnNVRWRjJjM1BqYlJwSjVjK0t0MEYzL3JhaG1GRU1VTGM9IiwibmJmIjoxNTg1ODAyNTM0LCJleHAiOjE1ODU4MDI1OTQsImlhdCI6MTU4NTgwMjUzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gLl48lPrn4D7lY5eA0f-8XNwTpuTRchb4XzIHrLCTfc'} 
data={"escrowCompanyId": "001", "sellerID": "6318b50b-0997-4f44-b835-16a51612bae9"} 
json=None</msg>
<msg timestamp="20200402 10:19:17.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:17.238" endtime="20200402 10:19:17.736"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:17.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:17.736" endtime="20200402 10:19:17.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:17.737" endtime="20200402 10:19:17.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:17.738" endtime="20200402 10:19:17.738"></status>
</kw>
<status status="PASS" starttime="20200402 10:19:17.235" endtime="20200402 10:19:17.739"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200402 10:12:13.962" endtime="20200402 10:19:17.739" critical="yes"></status>
</test>
<test id="s1-t19" name="TC_04 GetSellerDetails with Other Company JWT TOken">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:19:19.742" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:19:17.742" endtime="20200402 10:19:19.742"></status>
</kw>
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:19:19.744" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200402 10:19:19.743" endtime="20200402 10:19:19.744"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200402 10:19:19.746" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:19:19.744" endtime="20200402 10:19:19.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200402 10:19:19.746" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200402 10:19:19.746" endtime="20200402 10:19:19.747"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:19:19.747" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:19.747" endtime="20200402 10:19:19.747"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:19.748" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200402 10:19:19.748" endtime="20200402 10:19:19.748"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:19.748" endtime="20200402 10:19:19.748"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:19:19.749" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:19:19.749" endtime="20200402 10:19:19.749"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:19.749" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200402 10:19:21.755" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200402 10:19:21.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:19.749" endtime="20200402 10:19:21.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 10:19:21.756" level="INFO">{"access_token":"o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxLqLxJIxS-RE83d3KdvcPxcdac16WEJGOnlC6moX20aoHhhKp_VLy_jewMtHHBTv5o5pvKPksQ4KIc7ujQtzTnV9kR74","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200402 10:19:21.756" endtime="20200402 10:19:21.756"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:21.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:21.757" endtime="20200402 10:19:21.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:19:21.758" level="INFO">o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxLqLxJIxS-RE83d3KdvcPxcdac16WEJGOnlC6moX20aoHhhKp_VLy_jewMtHHBTv5o5pvKPksQ4KIc7ujQtzTnV9kR74</msg>
<status status="PASS" starttime="20200402 10:19:21.758" endtime="20200402 10:19:21.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200402 10:19:21.759" level="INFO">bearer</msg>
<status status="PASS" starttime="20200402 10:19:21.758" endtime="20200402 10:19:21.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200402 10:19:21.759" level="INFO">o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxLqLxJIxS-RE83d3KdvcPxcdac16WEJGOnlC6moX20aoHhhKp_VLy_jewMtHHBTv5o5pvKPksQ4KIc7ujQtzTnV9kR74</msg>
<status status="PASS" starttime="20200402 10:19:21.759" endtime="20200402 10:19:21.759"></status>
</kw>
<msg timestamp="20200402 10:19:21.760" level="INFO">${TokenEscrow} = o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxLqLxJIxS...</msg>
<status status="PASS" starttime="20200402 10:19:19.743" endtime="20200402 10:19:21.760"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${IdNumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:19:21.761" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:21.760" endtime="20200402 10:19:21.761"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:21.762" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:19:21.761" endtime="20200402 10:19:21.762"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:21.762" endtime="20200402 10:19:21.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:19:21.763" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:19:21.763" endtime="20200402 10:19:21.763"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:21.764" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:19:22.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:21.763" endtime="20200402 10:19:22.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:22.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:22.295" endtime="20200402 10:19:22.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:19:22.296" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOE9lc3VZeWllL2pHL3FGZUdCSWlKUWJodjZ4N0ZPcGQ5eFkwN2M0NktoczV5dlNBcDlnZFF3Z2hESHkyenhTcHIyQjVRa20xUXJvL2xPZUlhR3ZHZ009IiwibmJmIjoxNTg1ODAyOTYwLCJleHAiOjE1ODU4MDMwMjAsImlhdCI6MTU4NTgwMjk2MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.w65r31yI7GVGjqkwPX5avpgziBIVn9FNeA54SrOMUZw</msg>
<status status="PASS" starttime="20200402 10:19:22.295" endtime="20200402 10:19:22.296"></status>
</kw>
<msg timestamp="20200402 10:19:22.296" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOE9lc3VZeWllL2pHL3FGZUdCSWlKUWJodjZ4N0ZPcGQ...</msg>
<status status="PASS" starttime="20200402 10:19:21.760" endtime="20200402 10:19:22.296"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:19:22.297" level="INFO">${Id} = 92033799782718</msg>
<status status="PASS" starttime="20200402 10:19:22.297" endtime="20200402 10:19:22.297"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:19:22.298" level="INFO">${IdNumber} = 92033799782718</msg>
<status status="PASS" starttime="20200402 10:19:22.297" endtime="20200402 10:19:22.298"></status>
</kw>
<msg timestamp="20200402 10:19:22.298" level="INFO">${idNum} = 92033799782718</msg>
<status status="PASS" starttime="20200402 10:19:22.296" endtime="20200402 10:19:22.298"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:19:22.299" level="INFO">${mobile} = 7169803701</msg>
<status status="PASS" starttime="20200402 10:19:22.298" endtime="20200402 10:19:22.299"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:19:22.299" level="INFO">${mobileNo} = 7169803701</msg>
<status status="PASS" starttime="20200402 10:19:22.299" endtime="20200402 10:19:22.299"></status>
</kw>
<msg timestamp="20200402 10:19:22.299" level="INFO">${MobNo} = 7169803701</msg>
<status status="PASS" starttime="20200402 10:19:22.298" endtime="20200402 10:19:22.299"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:19:22.301" level="INFO">${Emailnum} = 59965</msg>
<status status="PASS" starttime="20200402 10:19:22.300" endtime="20200402 10:19:22.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:19:22.302" level="INFO">${enum} = 59965</msg>
<status status="PASS" starttime="20200402 10:19:22.301" endtime="20200402 10:19:22.302"></status>
</kw>
<msg timestamp="20200402 10:19:22.302" level="INFO">${num} = 59965</msg>
<status status="PASS" starttime="20200402 10:19:22.300" endtime="20200402 10:19:22.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:19:22.302" level="INFO">${emailid} = pavan59965@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:22.302" endtime="20200402 10:19:22.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:19:22.303" level="INFO">${email} = pavan59965@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:22.303" endtime="20200402 10:19:22.303"></status>
</kw>
<msg timestamp="20200402 10:19:22.303" level="INFO">${emailid} = pavan59965@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:22.300" endtime="20200402 10:19:22.303"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:19:22.306" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:22.306" endtime="20200402 10:19:22.307"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:19:22.307" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:19:22.307" endtime="20200402 10:19:22.307"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:19:22.308" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:19:22.308" endtime="20200402 10:19:22.308"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:19:22.310" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:19:22.308" endtime="20200402 10:19:22.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:19:22.311" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:19:22.310" endtime="20200402 10:19:22.312"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:19:22.314" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '92033799782718', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7169803701', 'email': 'pavan59965@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:19:22.312" endtime="20200402 10:19:22.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:22.314" endtime="20200402 10:19:22.315"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:19:22.316" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOE9lc3VZeWllL2pHL3FGZUdCSWlKUWJodjZ4...</msg>
<status status="PASS" starttime="20200402 10:19:22.315" endtime="20200402 10:19:22.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:22.316" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:19:22.316" endtime="20200402 10:19:22.317"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:22.317" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOE9lc3VZeWllL2pHL3FGZUdCSWlKUWJodjZ4N0ZPcGQ5eFkwN2M0NktoczV5dlNBcDlnZFF3Z2hESHkyenhTcHIyQjVRa20xUXJvL2xPZUlhR3ZHZ009IiwibmJmIjoxNTg1ODAyOTYwLCJleHAiOjE1ODU4MDMwMjAsImlhdCI6MTU4NTgwMjk2MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.w65r31yI7GVGjqkwPX5avpgziBIVn9FNeA54SrOMUZw'} 
data={"escrowCompanyId": "001", "idNumber": "92033799782718", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7169803701", "email": "pavan59965@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:19:22.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:22.317" endtime="20200402 10:19:22.665"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:22.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:22.665" endtime="20200402 10:19:22.665"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:22.666" endtime="20200402 10:19:22.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:22.666" endtime="20200402 10:19:22.667"></status>
</kw>
<msg timestamp="20200402 10:19:22.668" level="INFO">${sellerid} = c1e01225-8a51-4bd8-b8bc-65ab783583eb</msg>
<status status="PASS" starttime="20200402 10:19:22.303" endtime="20200402 10:19:22.668"></status>
</kw>
<msg timestamp="20200402 10:19:22.668" level="INFO">${SellerId} = c1e01225-8a51-4bd8-b8bc-65ab783583eb</msg>
<msg timestamp="20200402 10:19:22.668" level="INFO">${IdNumber} = 92033799782718</msg>
<status status="PASS" starttime="20200402 10:19:21.760" endtime="20200402 10:19:22.668"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:19:22.670" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:22.669" endtime="20200402 10:19:22.670"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:19:22.671" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c1e01225-8a51-4bd8-b8bc-65ab783583eb'}</msg>
<status status="PASS" starttime="20200402 10:19:22.670" endtime="20200402 10:19:22.671"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:19:22.671" level="INFO">${AuthToken} = bearer o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxL...</msg>
<status status="PASS" starttime="20200402 10:19:22.671" endtime="20200402 10:19:22.671"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:22.672" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50Y...</msg>
<status status="PASS" starttime="20200402 10:19:22.671" endtime="20200402 10:19:22.672"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:22.672" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer o2Vqpz4zskmrVtrHwPKtVozQrg4DZaJRWOZXPwAAvv20PMZNVccAkc0USYBtfyFqKyJDDSDhAigzV7zz_9ww7hCawSxf11C3dqYpN961e3h1PnJ4FapVCpjfZBuuR4n1Y5KL4Xg50YHprZGuN8PCL1UuFZrJE0x3EyOjpLT42INjxjOc5uMZRbO65bV17zHxLqLxJIxS-RE83d3KdvcPxcdac16WEJGOnlC6moX20aoHhhKp_VLy_jewMtHHBTv5o5pvKPksQ4KIc7ujQtzTnV9kR74'} 
data={"escrowCompanyId": "001", "sellerID": "c1e01225-8a51-4bd8-b8bc-65ab783583eb"} 
json=None</msg>
<msg timestamp="20200402 10:19:22.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:22.672" endtime="20200402 10:19:22.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:22.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:22.896" endtime="20200402 10:19:22.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:22.896" endtime="20200402 10:19:22.897"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:22.897" endtime="20200402 10:19:22.897"></status>
</kw>
<status status="PASS" starttime="20200402 10:19:22.669" endtime="20200402 10:19:22.897"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200402 10:19:17.741" endtime="20200402 10:19:22.898" critical="yes"></status>
</test>
<test id="s1-t20" name="TC_05 GetSellerDetails with Valid JWT Token">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200402 10:19:24.902" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200402 10:19:22.901" endtime="20200402 10:19:24.902"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:19:24.903" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:24.903" endtime="20200402 10:19:24.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:24.905" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:19:24.905" endtime="20200402 10:19:24.905"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:24.905" endtime="20200402 10:19:24.906"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:19:24.906" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:19:24.906" endtime="20200402 10:19:24.906"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:24.907" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:19:25.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:24.907" endtime="20200402 10:19:25.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:25.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:25.399" endtime="20200402 10:19:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.401" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0s2SVFCWTJ5WGhmeWRhWFp0bGFJMUc4dE9FUjJ5c0dCL3FRQmRZOFJmaXhPdFhVUXNub1lsdFprZE9kYmliYkViTzNQRXZPTGwvQVdTQjhycEJCOFE9IiwibmJmIjoxNTg1ODAyOTYzLCJleHAiOjE1ODU4MDMwMjMsImlhdCI6MTU4NTgwMjk2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6ejb0dQydV6mHjSGeZ_wldZnbxrjc5EYbT0UzD9Wbc4</msg>
<status status="PASS" starttime="20200402 10:19:25.400" endtime="20200402 10:19:25.401"></status>
</kw>
<msg timestamp="20200402 10:19:25.401" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0s2SVFCWTJ5WGhmeWRhWFp0bGFJMUc4dE9FUjJ5c0d...</msg>
<status status="PASS" starttime="20200402 10:19:24.903" endtime="20200402 10:19:25.401"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${IdNumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.403" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:25.402" endtime="20200402 10:19:25.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:25.404" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 10:19:25.403" endtime="20200402 10:19:25.404"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:25.404" endtime="20200402 10:19:25.404"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 10:19:25.405" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 10:19:25.405" endtime="20200402 10:19:25.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:25.406" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 10:19:25.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:25.405" endtime="20200402 10:19:25.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:25.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:25.893" endtime="20200402 10:19:25.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.894" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzB0UVVDeWNRRlhqY2lHM0M2MkVDdi8zRTl4Z2hQa21WMDhqNWlqWGxSTkZmeC9kS2ZWcnFZbXhOcFdWZzVFSWNIaUF4UjAxMXZ1cExnSTJkWTFsWE09IiwibmJmIjoxNTg1ODAyOTYzLCJleHAiOjE1ODU4MDMwMjMsImlhdCI6MTU4NTgwMjk2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.O47JiERY0thJizw66KG36n-AMm57LAzjdAq915tGwEQ</msg>
<status status="PASS" starttime="20200402 10:19:25.893" endtime="20200402 10:19:25.894"></status>
</kw>
<msg timestamp="20200402 10:19:25.894" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzB0UVVDeWNRRlhqY2lHM0M2MkVDdi8zRTl4Z2hQa21...</msg>
<status status="PASS" starttime="20200402 10:19:25.402" endtime="20200402 10:19:25.894"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 10:19:25.895" level="INFO">${Id} = 21690349916214</msg>
<status status="PASS" starttime="20200402 10:19:25.895" endtime="20200402 10:19:25.895"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.896" level="INFO">${IdNumber} = 21690349916214</msg>
<status status="PASS" starttime="20200402 10:19:25.895" endtime="20200402 10:19:25.896"></status>
</kw>
<msg timestamp="20200402 10:19:25.896" level="INFO">${idNum} = 21690349916214</msg>
<status status="PASS" starttime="20200402 10:19:25.894" endtime="20200402 10:19:25.896"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 10:19:25.897" level="INFO">${mobile} = 1563138918</msg>
<status status="PASS" starttime="20200402 10:19:25.896" endtime="20200402 10:19:25.897"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.897" level="INFO">${mobileNo} = 1563138918</msg>
<status status="PASS" starttime="20200402 10:19:25.897" endtime="20200402 10:19:25.897"></status>
</kw>
<msg timestamp="20200402 10:19:25.898" level="INFO">${MobNo} = 1563138918</msg>
<status status="PASS" starttime="20200402 10:19:25.896" endtime="20200402 10:19:25.898"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 10:19:25.899" level="INFO">${Emailnum} = 02875</msg>
<status status="PASS" starttime="20200402 10:19:25.898" endtime="20200402 10:19:25.899"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.899" level="INFO">${enum} = 02875</msg>
<status status="PASS" starttime="20200402 10:19:25.899" endtime="20200402 10:19:25.899"></status>
</kw>
<msg timestamp="20200402 10:19:25.899" level="INFO">${num} = 02875</msg>
<status status="PASS" starttime="20200402 10:19:25.898" endtime="20200402 10:19:25.899"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 10:19:25.900" level="INFO">${emailid} = pavan02875@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:25.900" endtime="20200402 10:19:25.900"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 10:19:25.901" level="INFO">${email} = pavan02875@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:25.900" endtime="20200402 10:19:25.901"></status>
</kw>
<msg timestamp="20200402 10:19:25.901" level="INFO">${emailid} = pavan02875@2c2p.com</msg>
<status status="PASS" starttime="20200402 10:19:25.898" endtime="20200402 10:19:25.901"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:19:25.903" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:25.903" endtime="20200402 10:19:25.904"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 10:19:25.904" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 10:19:25.904" endtime="20200402 10:19:25.904"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 10:19:25.905" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 10:19:25.905" endtime="20200402 10:19:25.905"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 10:19:25.906" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:19:25.905" endtime="20200402 10:19:25.906"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 10:19:25.908" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 10:19:25.906" endtime="20200402 10:19:25.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:19:25.910" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '21690349916214', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1563138918', 'email': 'pavan02875@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 10:19:25.908" endtime="20200402 10:19:25.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:25.910" endtime="20200402 10:19:25.911"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:19:25.912" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzB0UVVDeWNRRlhqY2lHM0M2MkVDdi8zRTl4...</msg>
<status status="PASS" starttime="20200402 10:19:25.911" endtime="20200402 10:19:25.912"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:25.912" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:19:25.912" endtime="20200402 10:19:25.912"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:25.913" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzB0UVVDeWNRRlhqY2lHM0M2MkVDdi8zRTl4Z2hQa21WMDhqNWlqWGxSTkZmeC9kS2ZWcnFZbXhOcFdWZzVFSWNIaUF4UjAxMXZ1cExnSTJkWTFsWE09IiwibmJmIjoxNTg1ODAyOTYzLCJleHAiOjE1ODU4MDMwMjMsImlhdCI6MTU4NTgwMjk2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.O47JiERY0thJizw66KG36n-AMm57LAzjdAq915tGwEQ'} 
data={"escrowCompanyId": "001", "idNumber": "21690349916214", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1563138918", "email": "pavan02875@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 10:19:26.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:25.913" endtime="20200402 10:19:26.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:26.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:26.153" endtime="20200402 10:19:26.154"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:26.155" endtime="20200402 10:19:26.156"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:26.156" endtime="20200402 10:19:26.157"></status>
</kw>
<msg timestamp="20200402 10:19:26.157" level="INFO">${sellerid} = a4e138ec-d039-48c9-98e4-7546e2fbdc9e</msg>
<status status="PASS" starttime="20200402 10:19:25.901" endtime="20200402 10:19:26.157"></status>
</kw>
<msg timestamp="20200402 10:19:26.158" level="INFO">${SellerId} = a4e138ec-d039-48c9-98e4-7546e2fbdc9e</msg>
<msg timestamp="20200402 10:19:26.158" level="INFO">${IdNumber} = 21690349916214</msg>
<status status="PASS" starttime="20200402 10:19:25.402" endtime="20200402 10:19:26.158"></status>
</kw>
<kw name="GetSellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 10:19:26.160" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 10:19:26.159" endtime="20200402 10:19:26.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 10:19:26.161" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'a4e138ec-d039-48c9-98e4-7546e2fbdc9e'}</msg>
<status status="PASS" starttime="20200402 10:19:26.160" endtime="20200402 10:19:26.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 10:19:26.162" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0s2SVFCWTJ5WGhmeWRhWFp0bGFJMUc4dE9F...</msg>
<status status="PASS" starttime="20200402 10:19:26.161" endtime="20200402 10:19:26.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 10:19:26.162" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 10:19:26.162" endtime="20200402 10:19:26.162"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 10:19:26.163" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0s2SVFCWTJ5WGhmeWRhWFp0bGFJMUc4dE9FUjJ5c0dCL3FRQmRZOFJmaXhPdFhVUXNub1lsdFprZE9kYmliYkViTzNQRXZPTGwvQVdTQjhycEJCOFE9IiwibmJmIjoxNTg1ODAyOTYzLCJleHAiOjE1ODU4MDMwMjMsImlhdCI6MTU4NTgwMjk2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6ejb0dQydV6mHjSGeZ_wldZnbxrjc5EYbT0UzD9Wbc4'} 
data={"escrowCompanyId": "001", "sellerID": "a4e138ec-d039-48c9-98e4-7546e2fbdc9e"} 
json=None</msg>
<msg timestamp="20200402 10:19:26.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 10:19:26.163" endtime="20200402 10:19:26.356"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 10:19:26.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 10:19:26.357" endtime="20200402 10:19:26.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:26.358" endtime="20200402 10:19:26.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 10:19:26.360" endtime="20200402 10:19:26.361"></status>
</kw>
<status status="PASS" starttime="20200402 10:19:26.158" endtime="20200402 10:19:26.361"></status>
</kw>
<doc>Valid: To check API response with valid JWT token</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 10:19:22.899" endtime="20200402 10:19:26.362" critical="yes"></status>
</test>
<status status="FAIL" starttime="20200402 09:50:13.546" endtime="20200402 10:19:26.367"></status>
</suite>
<statistics>
<total>
<stat pass="19" fail="1">Critical Tests</stat>
<stat pass="19" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="1">000</stat>
<stat pass="12" fail="0">A01</stat>
<stat pass="4" fail="0">A02</stat>
</tag>
<suite>
<stat pass="19" fail="1" id="s1" name="Token TestCases">Token TestCases</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200402 09:50:14.059" level="ERROR">Error in file 'C:\Users\perennial\PycharmProjects\EscrowAPI\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Get Token.robot' does not exist.</msg>
<msg timestamp="20200402 09:50:14.060" level="ERROR">Error in file 'C:\Users\perennial\PycharmProjects\EscrowAPI\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Register_Global_Keywords.robot' does not exist.</msg>
</errors>
</robot>
