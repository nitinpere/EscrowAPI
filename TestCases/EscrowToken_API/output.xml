<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200331 19:25:27.751" rpa="false">
<suite id="s1" name="Token TestCases" source="C:\Users\perennial\PycharmProjects\EscrowAPI\TestCases\EscrowToken_API\Token_TestCases.robot">
<test id="s1-t1" name="TC_01 RegisterNewSeller with Empty JWT Token">
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:25:28.852" level="INFO">${Id} = 72866567188420</msg>
<status status="PASS" starttime="20200331 19:25:28.851" endtime="20200331 19:25:28.852"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:25:28.853" level="INFO">${IdNumber} = 72866567188420</msg>
<status status="PASS" starttime="20200331 19:25:28.852" endtime="20200331 19:25:28.853"></status>
</kw>
<msg timestamp="20200331 19:25:28.853" level="INFO">${IdNumber} = 72866567188420</msg>
<status status="PASS" starttime="20200331 19:25:28.850" endtime="20200331 19:25:28.853"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:25:28.855" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:25:28.855" endtime="20200331 19:25:28.856"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:25:28.857" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:25:28.856" endtime="20200331 19:25:28.857"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:25:28.858" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:25:28.857" endtime="20200331 19:25:28.858"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:25:28.859" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '72866567188420', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:25:28.858" endtime="20200331 19:25:28.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:25:28.860" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200331 19:25:28.860" endtime="20200331 19:25:28.860"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:25:28.861" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200331 19:25:28.860" endtime="20200331 19:25:28.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:25:28.862" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "idNumber": "72866567188420", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:25:29.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:25:28.861" endtime="20200331 19:25:29.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:25:29.004" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:25:29.003" endtime="20200331 19:25:29.004"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:25:29.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.005" endtime="20200331 19:25:29.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.006" endtime="20200331 19:25:29.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.007" endtime="20200331 19:25:29.008"></status>
</kw>
<status status="PASS" starttime="20200331 19:25:28.854" endtime="20200331 19:25:29.008"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:25:28.848" endtime="20200331 19:25:29.009" critical="yes"></status>
</test>
<test id="s1-t2" name="TC_02 RegisterNewSeller with Invalid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:25:29.011" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:25:29.011" endtime="20200331 19:25:29.012"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:25:29.013" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:25:29.012" endtime="20200331 19:25:29.013"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.013" endtime="20200331 19:25:29.014"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:25:29.015" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:25:29.014" endtime="20200331 19:25:29.015"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:25:29.016" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:25:29.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.015" endtime="20200331 19:25:29.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:25:29.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.242" endtime="20200331 19:25:29.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:25:29.245" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNU9mbG9RdU8vY3ZHUkNwOW9QSWlmSXZMWE94czZoNHFlbHVsZGxrSHN4Uyt0ZENSU1VHbW56Yk1PTFdCc1h6aXFPV3hKV3lUUHdmcFY2YkVHZi80cXc9IiwibmJmIjoxNTg1NjYyOTI4LCJleHAiOjE1ODU2NjI5ODgsImlhdCI6MTU4NTY2MjkyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bu0XXp5nSGo-2StSwO0IxvcTrcj6_f90mlIhFGSKsK4</msg>
<status status="PASS" starttime="20200331 19:25:29.244" endtime="20200331 19:25:29.245"></status>
</kw>
<msg timestamp="20200331 19:25:29.245" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNU9mbG9RdU8vY3ZHUkNwOW9QSWlmSXZMWE94czZoNHF...</msg>
<status status="PASS" starttime="20200331 19:25:29.011" endtime="20200331 19:25:29.246"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:25:29.248" level="INFO">${Id} = 83979203428555</msg>
<status status="PASS" starttime="20200331 19:25:29.247" endtime="20200331 19:25:29.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:25:29.249" level="INFO">${IdNumber} = 83979203428555</msg>
<status status="PASS" starttime="20200331 19:25:29.248" endtime="20200331 19:25:29.249"></status>
</kw>
<msg timestamp="20200331 19:25:29.249" level="INFO">${IdNumber} = 83979203428555</msg>
<status status="PASS" starttime="20200331 19:25:29.246" endtime="20200331 19:25:29.249"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}1a2b3</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:25:29.252" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:25:29.251" endtime="20200331 19:25:29.252"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:25:29.253" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:25:29.253" endtime="20200331 19:25:29.253"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:25:29.254" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:25:29.254" endtime="20200331 19:25:29.254"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:25:29.256" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '83979203428555', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:25:29.255" endtime="20200331 19:25:29.256"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:25:29.257" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNU9mbG9RdU8vY3ZHUkNwOW9QSWlmSXZMWE94...</msg>
<status status="PASS" starttime="20200331 19:25:29.256" endtime="20200331 19:25:29.257"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:25:29.258" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:25:29.257" endtime="20200331 19:25:29.258"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:25:29.260" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNU9mbG9RdU8vY3ZHUkNwOW9QSWlmSXZMWE94czZoNHFlbHVsZGxrSHN4Uyt0ZENSU1VHbW56Yk1PTFdCc1h6aXFPV3hKV3lUUHdmcFY2YkVHZi80cXc9IiwibmJmIjoxNTg1NjYyOTI4LCJleHAiOjE1ODU2NjI5ODgsImlhdCI6MTU4NTY2MjkyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bu0XXp5nSGo-2StSwO0IxvcTrcj6_f90mlIhFGSKsK41a2b3'} 
data={"escrowCompanyId": "001", "idNumber": "83979203428555", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:25:29.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.259" endtime="20200331 19:25:29.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:25:29.688" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:25:29.688" endtime="20200331 19:25:29.689"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:25:29.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.689" endtime="20200331 19:25:29.690"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.690" endtime="20200331 19:25:29.691"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.691" endtime="20200331 19:25:29.692"></status>
</kw>
<status status="PASS" starttime="20200331 19:25:29.250" endtime="20200331 19:25:29.693"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:25:29.010" endtime="20200331 19:25:29.693" critical="yes"></status>
</test>
<test id="s1-t3" name="TC_03 RegisterNewSeller with Expired JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:25:29.698" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:25:29.697" endtime="20200331 19:25:29.699"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:25:29.700" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:25:29.699" endtime="20200331 19:25:29.700"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:25:29.700" endtime="20200331 19:25:29.701"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:25:29.702" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:25:29.701" endtime="20200331 19:25:29.702"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:25:29.703" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:25:30.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:25:29.702" endtime="20200331 19:25:30.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:25:30.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:25:30.153" endtime="20200331 19:25:30.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:25:30.155" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHBXTTRaR0liWUtIbTh4OTlsYmpGYmtTRnoxdDYvbWxXQVVtL3VGOXBtcVd1bGdFR1NlZ3BIYnFmWFdkNzhqckpscXcxOXRSVWRPYjlLSDl0ZjkxZ2M9IiwibmJmIjoxNTg1NjYyOTI4LCJleHAiOjE1ODU2NjI5ODgsImlhdCI6MTU4NTY2MjkyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Szi07De3oQGbiRXIrV7BXo8JN96Ju4OD6MqcT0pfnzY</msg>
<status status="PASS" starttime="20200331 19:25:30.154" endtime="20200331 19:25:30.155"></status>
</kw>
<msg timestamp="20200331 19:25:30.156" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHBXTTRaR0liWUtIbTh4OTlsYmpGYmtTRnoxdDYvbWx...</msg>
<status status="PASS" starttime="20200331 19:25:29.696" endtime="20200331 19:25:30.156"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:25:30.177" level="INFO">${Id} = 80056752024588</msg>
<status status="PASS" starttime="20200331 19:25:30.177" endtime="20200331 19:25:30.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:25:30.179" level="INFO">${IdNumber} = 80056752024588</msg>
<status status="PASS" starttime="20200331 19:25:30.178" endtime="20200331 19:25:30.179"></status>
</kw>
<msg timestamp="20200331 19:25:30.179" level="INFO">${IdNumber} = 80056752024588</msg>
<status status="PASS" starttime="20200331 19:25:30.176" endtime="20200331 19:25:30.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200331 19:32:30.223" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200331 19:25:30.214" endtime="20200331 19:32:30.227"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:30.234" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:30.234" endtime="20200331 19:32:30.235"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:30.236" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:32:30.236" endtime="20200331 19:32:30.236"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:30.237" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:30.237" endtime="20200331 19:32:30.237"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:30.239" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '80056752024588', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:32:30.238" endtime="20200331 19:32:30.239"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:30.240" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHBXTTRaR0liWUtIbTh4OTlsYmpGYmtTRnox...</msg>
<status status="PASS" starttime="20200331 19:32:30.240" endtime="20200331 19:32:30.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:30.241" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:30.240" endtime="20200331 19:32:30.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:30.243" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHBXTTRaR0liWUtIbTh4OTlsYmpGYmtTRnoxdDYvbWxXQVVtL3VGOXBtcVd1bGdFR1NlZ3BIYnFmWFdkNzhqckpscXcxOXRSVWRPYjlLSDl0ZjkxZ2M9IiwibmJmIjoxNTg1NjYyOTI4LCJleHAiOjE1ODU2NjI5ODgsImlhdCI6MTU4NTY2MjkyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Szi07De3oQGbiRXIrV7BXo8JN96Ju4OD6MqcT0pfnzY'} 
data={"escrowCompanyId": "001", "idNumber": "80056752024588", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:32:31.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:30.241" endtime="20200331 19:32:31.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:31.035" level="INFO">{"responseCode":"A02","resDescription":"Access token expired"}</msg>
<status status="PASS" starttime="20200331 19:32:31.034" endtime="20200331 19:32:31.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:31.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:31.046" endtime="20200331 19:32:31.048"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:31.049" endtime="20200331 19:32:31.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:31.050" endtime="20200331 19:32:31.052"></status>
</kw>
<status status="PASS" starttime="20200331 19:32:30.232" endtime="20200331 19:32:31.054"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token.</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200331 19:25:29.695" endtime="20200331 19:32:31.060" critical="yes"></status>
</test>
<test id="s1-t4" name="TC_04 RegisterNewSeller with Other Company JWT Token">
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200331 19:32:31.097" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200331 19:32:31.096" endtime="20200331 19:32:31.097"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200331 19:32:31.118" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200331 19:32:31.098" endtime="20200331 19:32:31.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200331 19:32:31.120" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200331 19:32:31.119" endtime="20200331 19:32:31.120"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:31.121" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:31.120" endtime="20200331 19:32:31.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:31.123" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200331 19:32:31.122" endtime="20200331 19:32:31.123"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:31.124" endtime="20200331 19:32:31.125"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:31.126" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:31.125" endtime="20200331 19:32:31.126"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:31.127" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200331 19:32:32.254" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200331 19:32:32.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:31.126" endtime="20200331 19:32:32.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:32.271" level="INFO">{"access_token":"SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp8_4uMJ5Au-kilEGN2I5FyBD3S7kXFHROeT_rTauE8E0-kSSWeFIdzaLsArgXI-FsQIoRgjKaQn3-Flux1xTe9BJu8c","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200331 19:32:32.270" endtime="20200331 19:32:32.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:32.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:32.296" endtime="20200331 19:32:32.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200331 19:32:32.300" level="INFO">SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp8_4uMJ5Au-kilEGN2I5FyBD3S7kXFHROeT_rTauE8E0-kSSWeFIdzaLsArgXI-FsQIoRgjKaQn3-Flux1xTe9BJu8c</msg>
<status status="PASS" starttime="20200331 19:32:32.299" endtime="20200331 19:32:32.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200331 19:32:32.303" level="INFO">bearer</msg>
<status status="PASS" starttime="20200331 19:32:32.301" endtime="20200331 19:32:32.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200331 19:32:32.307" level="INFO">SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp8_4uMJ5Au-kilEGN2I5FyBD3S7kXFHROeT_rTauE8E0-kSSWeFIdzaLsArgXI-FsQIoRgjKaQn3-Flux1xTe9BJu8c</msg>
<status status="PASS" starttime="20200331 19:32:32.304" endtime="20200331 19:32:32.307"></status>
</kw>
<msg timestamp="20200331 19:32:32.308" level="INFO">${TokenEscrow} = SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp8_4uMJ5...</msg>
<status status="PASS" starttime="20200331 19:32:31.095" endtime="20200331 19:32:32.308"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:32:32.381" level="INFO">${Id} = 21626072532338</msg>
<status status="PASS" starttime="20200331 19:32:32.379" endtime="20200331 19:32:32.381"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:32:32.383" level="INFO">${IdNumber} = 21626072532338</msg>
<status status="PASS" starttime="20200331 19:32:32.381" endtime="20200331 19:32:32.383"></status>
</kw>
<msg timestamp="20200331 19:32:32.383" level="INFO">${IdNumber} = 21626072532338</msg>
<status status="PASS" starttime="20200331 19:32:32.378" endtime="20200331 19:32:32.384"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:32.450" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:32.450" endtime="20200331 19:32:32.451"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:32.452" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:32:32.451" endtime="20200331 19:32:32.452"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:32.453" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:32.452" endtime="20200331 19:32:32.453"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:32.454" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '21626072532338', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:32:32.453" endtime="20200331 19:32:32.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:32.457" level="INFO">${AuthToken} = bearer SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp...</msg>
<status status="PASS" starttime="20200331 19:32:32.455" endtime="20200331 19:32:32.457"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:32.458" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL...</msg>
<status status="PASS" starttime="20200331 19:32:32.457" endtime="20200331 19:32:32.459"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:32.460" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer SEvSs6ylcqvgKdvJCF_KHuh8cs1dXZO77eO3Elxp0lDIe5oMiZ4T6llCkoTJ_HP0F5S8pMIwrR2x_U75GOJ1lvEanU80IKrujhnnCIQOXoREwbSfDoj1zi3c9Yvuiy-nTYYNoKc3tL7oD8qByt61xgSKsrgzMZJpb5boIK5yjF_e9D6V4_QlpVfqptNcqz6xp8_4uMJ5Au-kilEGN2I5FyBD3S7kXFHROeT_rTauE8E0-kSSWeFIdzaLsArgXI-FsQIoRgjKaQn3-Flux1xTe9BJu8c'} 
data={"escrowCompanyId": "001", "idNumber": "21626072532338", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:32:33.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:32.459" endtime="20200331 19:32:33.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:33.225" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:32:33.223" endtime="20200331 19:32:33.261"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:33.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:33.262" endtime="20200331 19:32:33.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:33.265" endtime="20200331 19:32:33.268"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:33.269" endtime="20200331 19:32:33.271"></status>
</kw>
<status status="PASS" starttime="20200331 19:32:32.448" endtime="20200331 19:32:33.271"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:32:31.085" endtime="20200331 19:32:33.449" critical="yes"></status>
</test>
<test id="s1-t5" name="TC_05 RegisterNewSeller with Valid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:33.610" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:33.610" endtime="20200331 19:32:33.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:33.614" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:33.613" endtime="20200331 19:32:33.614"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:33.615" endtime="20200331 19:32:33.616"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:33.617" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:33.616" endtime="20200331 19:32:33.618"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:33.619" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:34.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:33.618" endtime="20200331 19:32:34.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:34.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:34.206" endtime="20200331 19:32:34.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:34.208" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzRmL0hIZGJ3V29pdStUUGNIMXNBK0tIc0VVcGhYdHhxOTVROW9LaFloYnMwQlM1TWJxVTlNWDY4V2lQZ29adjJ5bi9heVo5VmhRVXNNMVowaVd3cGM9IiwibmJmIjoxNTg1NjYzMzUyLCJleHAiOjE1ODU2NjM0MTIsImlhdCI6MTU4NTY2MzM1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.h_DmKoVaTVv1WNW3A1G8NHHykw-E-m9dkq52cJ-lD_A</msg>
<status status="PASS" starttime="20200331 19:32:34.207" endtime="20200331 19:32:34.208"></status>
</kw>
<msg timestamp="20200331 19:32:34.209" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzRmL0hIZGJ3V29pdStUUGNIMXNBK0tIc0VVcGhYdHh...</msg>
<status status="PASS" starttime="20200331 19:32:33.609" endtime="20200331 19:32:34.209"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${IdNumber}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:32:34.239" level="INFO">${Id} = 95731944313190</msg>
<status status="PASS" starttime="20200331 19:32:34.239" endtime="20200331 19:32:34.239"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:32:34.241" level="INFO">${IdNumber} = 95731944313190</msg>
<status status="PASS" starttime="20200331 19:32:34.240" endtime="20200331 19:32:34.241"></status>
</kw>
<msg timestamp="20200331 19:32:34.241" level="INFO">${IdNumber} = 95731944313190</msg>
<status status="PASS" starttime="20200331 19:32:34.238" endtime="20200331 19:32:34.242"></status>
</kw>
<kw name="RegisterSeller" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${IdNumber}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:34.275" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:34.275" endtime="20200331 19:32:34.276"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:34.278" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:32:34.277" endtime="20200331 19:32:34.278"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:34.280" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:34.278" endtime="20200331 19:32:34.280"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:34.283" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '95731944313190', 'typeOfId': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:32:34.281" endtime="20200331 19:32:34.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:34.284" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzRmL0hIZGJ3V29pdStUUGNIMXNBK0tIc0VV...</msg>
<status status="PASS" starttime="20200331 19:32:34.284" endtime="20200331 19:32:34.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:34.286" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:34.285" endtime="20200331 19:32:34.286"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:34.288" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzRmL0hIZGJ3V29pdStUUGNIMXNBK0tIc0VVcGhYdHhxOTVROW9LaFloYnMwQlM1TWJxVTlNWDY4V2lQZ29adjJ5bi9heVo5VmhRVXNNMVowaVd3cGM9IiwibmJmIjoxNTg1NjYzMzUyLCJleHAiOjE1ODU2NjM0MTIsImlhdCI6MTU4NTY2MzM1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.h_DmKoVaTVv1WNW3A1G8NHHykw-E-m9dkq52cJ-lD_A'} 
data={"escrowCompanyId": "001", "idNumber": "95731944313190", "typeOfId": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:32:34.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:34.286" endtime="20200331 19:32:34.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:34.809" level="INFO">{"sellerId":"7dbdee1a-6b61-4f4b-83f4-dd138a4cbf4f","responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200331 19:32:34.808" endtime="20200331 19:32:34.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:34.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:34.844" endtime="20200331 19:32:34.845"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:34.846" endtime="20200331 19:32:34.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:34.847" endtime="20200331 19:32:34.848"></status>
</kw>
<status status="PASS" starttime="20200331 19:32:34.272" endtime="20200331 19:32:34.849"></status>
</kw>
<doc>Valid: To check API response with valid JWT token.</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200331 19:32:33.563" endtime="20200331 19:32:34.849" critical="yes"></status>
</test>
<test id="s1-t6" name="TC_01 UpdateSellerStatus with Empty JWT Token">
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:34.856" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:34.856" endtime="20200331 19:32:34.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:34.858" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:34.858" endtime="20200331 19:32:34.859"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:34.859" endtime="20200331 19:32:34.860"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:34.861" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:34.860" endtime="20200331 19:32:34.861"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:34.862" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:35.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:34.861" endtime="20200331 19:32:35.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:35.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:35.387" endtime="20200331 19:32:35.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:35.389" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVdmMmNiRTFTc1BUeU8vMHQxTk5XaXNmUFRvOWhnQjBHUHZ6WVpVUW5vOElOa29lN3JaKzR6b3pPQmRqbG5RMnVaYXZrM1pDMVBPTFZzZVd2SDhaZlE9IiwibmJmIjoxNTg1NjYzMzU0LCJleHAiOjE1ODU2NjM0MTQsImlhdCI6MTU4NTY2MzM1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TOG9X-KdyQb3ysSdCl067P0KtZ_hD1SCErWVlUQe-D8</msg>
<status status="PASS" starttime="20200331 19:32:35.389" endtime="20200331 19:32:35.389"></status>
</kw>
<msg timestamp="20200331 19:32:35.390" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVdmMmNiRTFTc1BUeU8vMHQxTk5XaXNmUFRvOWhnQjB...</msg>
<status status="PASS" starttime="20200331 19:32:34.855" endtime="20200331 19:32:35.390"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:32:35.392" level="INFO">${Id} = 55781642540423</msg>
<status status="PASS" starttime="20200331 19:32:35.391" endtime="20200331 19:32:35.392"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:32:35.393" level="INFO">${IdNumber} = 55781642540423</msg>
<status status="PASS" starttime="20200331 19:32:35.392" endtime="20200331 19:32:35.393"></status>
</kw>
<msg timestamp="20200331 19:32:35.394" level="INFO">${idNum} = 55781642540423</msg>
<status status="PASS" starttime="20200331 19:32:35.390" endtime="20200331 19:32:35.394"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:32:35.396" level="INFO">${mobile} = 0771871496</msg>
<status status="PASS" starttime="20200331 19:32:35.395" endtime="20200331 19:32:35.396"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:32:35.397" level="INFO">${mobileNo} = 0771871496</msg>
<status status="PASS" starttime="20200331 19:32:35.396" endtime="20200331 19:32:35.397"></status>
</kw>
<msg timestamp="20200331 19:32:35.398" level="INFO">${MobNo} = 0771871496</msg>
<status status="PASS" starttime="20200331 19:32:35.394" endtime="20200331 19:32:35.398"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:32:35.400" level="INFO">${Emailnum} = 50289</msg>
<status status="PASS" starttime="20200331 19:32:35.400" endtime="20200331 19:32:35.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:32:35.402" level="INFO">${enum} = 50289</msg>
<status status="PASS" starttime="20200331 19:32:35.401" endtime="20200331 19:32:35.402"></status>
</kw>
<msg timestamp="20200331 19:32:35.402" level="INFO">${num} = 50289</msg>
<status status="PASS" starttime="20200331 19:32:35.399" endtime="20200331 19:32:35.402"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:32:35.403" level="INFO">${emailid} = pavan50289@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:35.403" endtime="20200331 19:32:35.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:32:35.405" level="INFO">${email} = pavan50289@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:35.404" endtime="20200331 19:32:35.405"></status>
</kw>
<msg timestamp="20200331 19:32:35.405" level="INFO">${emailid} = pavan50289@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:35.398" endtime="20200331 19:32:35.405"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:35.411" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:35.410" endtime="20200331 19:32:35.411"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:35.413" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:32:35.412" endtime="20200331 19:32:35.413"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:35.414" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:35.413" endtime="20200331 19:32:35.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:32:35.417" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:35.414" endtime="20200331 19:32:35.417"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:32:35.420" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:35.417" endtime="20200331 19:32:35.420"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:35.426" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '55781642540423', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0771871496', 'email': 'pavan50289@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:32:35.420" endtime="20200331 19:32:35.426"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:35.427" endtime="20200331 19:32:35.428"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:35.429" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVdmMmNiRTFTc1BUeU8vMHQxTk5XaXNmUFRv...</msg>
<status status="PASS" starttime="20200331 19:32:35.429" endtime="20200331 19:32:35.430"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:35.431" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:35.430" endtime="20200331 19:32:35.431"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:35.433" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVdmMmNiRTFTc1BUeU8vMHQxTk5XaXNmUFRvOWhnQjBHUHZ6WVpVUW5vOElOa29lN3JaKzR6b3pPQmRqbG5RMnVaYXZrM1pDMVBPTFZzZVd2SDhaZlE9IiwibmJmIjoxNTg1NjYzMzU0LCJleHAiOjE1ODU2NjM0MTQsImlhdCI6MTU4NTY2MzM1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TOG9X-KdyQb3ysSdCl067P0KtZ_hD1SCErWVlUQe-D8'} 
data={"escrowCompanyId": "001", "idNumber": "55781642540423", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0771871496", "email": "pavan50289@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:32:35.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:35.432" endtime="20200331 19:32:35.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:35.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:35.650" endtime="20200331 19:32:35.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:35.651" endtime="20200331 19:32:35.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:35.652" endtime="20200331 19:32:35.653"></status>
</kw>
<msg timestamp="20200331 19:32:35.654" level="INFO">${sellerid} = de8461bd-536c-4af2-ad62-2281a89bab6b</msg>
<status status="PASS" starttime="20200331 19:32:35.406" endtime="20200331 19:32:35.654"></status>
</kw>
<msg timestamp="20200331 19:32:35.654" level="INFO">${SellerId} = ['de8461bd-536c-4af2-ad62-2281a89bab6b', '55781642540423']</msg>
<status status="PASS" starttime="20200331 19:32:34.854" endtime="20200331 19:32:35.654"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:35.663" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:35.662" endtime="20200331 19:32:35.663"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200331 19:32:35.665" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200331 19:32:35.664" endtime="20200331 19:32:35.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:35.666" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['de8461bd-536c-4af2-ad62-2281a89bab6b', '55781642540423'], 'status': 4}</msg>
<status status="PASS" starttime="20200331 19:32:35.665" endtime="20200331 19:32:35.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:35.667" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200331 19:32:35.667" endtime="20200331 19:32:35.667"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:35.669" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200331 19:32:35.668" endtime="20200331 19:32:35.669"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:35.670" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "sellerId": ["de8461bd-536c-4af2-ad62-2281a89bab6b", "55781642540423"], "status": 4} 
json=None</msg>
<msg timestamp="20200331 19:32:36.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:35.669" endtime="20200331 19:32:36.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:36.303" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:32:36.302" endtime="20200331 19:32:36.316"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:36.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:36.317" endtime="20200331 19:32:36.318"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:36.318" endtime="20200331 19:32:36.319"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:36.320" endtime="20200331 19:32:36.321"></status>
</kw>
<status status="PASS" starttime="20200331 19:32:35.661" endtime="20200331 19:32:36.321"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:32:34.851" endtime="20200331 19:32:36.323" critical="yes"></status>
</test>
<test id="s1-t7" name="TC_02 UpdateSellerStatus with Invalid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:36.352" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:36.351" endtime="20200331 19:32:36.353"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:36.354" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:36.353" endtime="20200331 19:32:36.354"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:36.355" endtime="20200331 19:32:36.355"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:36.356" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:36.356" endtime="20200331 19:32:36.356"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:36.358" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:36.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:36.357" endtime="20200331 19:32:36.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:36.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:36.880" endtime="20200331 19:32:36.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:36.882" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3pQMFhNWjVsZmV0QWpHZGJVQ1dQOUsrVGFIQy91NTlnZjBSS3B2cmFsc0pvMFJ3REpUWmJ4SWpWS2FzOFZvQk83UVZZcEUwdVpNMW1ib21jM2N1aFk9IiwibmJmIjoxNTg1NjYzMzU1LCJleHAiOjE1ODU2NjM0MTUsImlhdCI6MTU4NTY2MzM1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9HkUIMxXo-skekQrjJ-85GUpdIyPsP8_wmy6wGfHuj8</msg>
<status status="PASS" starttime="20200331 19:32:36.881" endtime="20200331 19:32:36.882"></status>
</kw>
<msg timestamp="20200331 19:32:36.883" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3pQMFhNWjVsZmV0QWpHZGJVQ1dQOUsrVGFIQy91NTl...</msg>
<status status="PASS" starttime="20200331 19:32:36.351" endtime="20200331 19:32:36.883"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:36.887" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:36.886" endtime="20200331 19:32:36.887"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:36.888" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:36.888" endtime="20200331 19:32:36.889"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:36.889" endtime="20200331 19:32:36.890"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:36.891" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:36.890" endtime="20200331 19:32:36.891"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:36.892" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:41.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:36.891" endtime="20200331 19:32:41.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:41.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:41.165" endtime="20200331 19:32:41.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:41.167" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVRqMk5FemJ4UW5CUWpBRHNiMW5URUhQQ3hja09DWFNXRk5uY0laN2lnelRDdE5pclBuY3lEdTNDSmM3dEd2UGhIb1BXZ0wwTEhFRGl6eGZYNEEzVEU9IiwibmJmIjoxNTg1NjYzMzU5LCJleHAiOjE1ODU2NjM0MTksImlhdCI6MTU4NTY2MzM1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p2GDVXfEvo9WyA1thWLV8xi1twhohWWKElcfkLGtbA8</msg>
<status status="PASS" starttime="20200331 19:32:41.166" endtime="20200331 19:32:41.167"></status>
</kw>
<msg timestamp="20200331 19:32:41.168" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVRqMk5FemJ4UW5CUWpBRHNiMW5URUhQQ3hja09DWFN...</msg>
<status status="PASS" starttime="20200331 19:32:36.886" endtime="20200331 19:32:41.168"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:32:41.170" level="INFO">${Id} = 39459406704055</msg>
<status status="PASS" starttime="20200331 19:32:41.169" endtime="20200331 19:32:41.170"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:32:41.171" level="INFO">${IdNumber} = 39459406704055</msg>
<status status="PASS" starttime="20200331 19:32:41.170" endtime="20200331 19:32:41.171"></status>
</kw>
<msg timestamp="20200331 19:32:41.171" level="INFO">${idNum} = 39459406704055</msg>
<status status="PASS" starttime="20200331 19:32:41.168" endtime="20200331 19:32:41.171"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:32:41.173" level="INFO">${mobile} = 9226707954</msg>
<status status="PASS" starttime="20200331 19:32:41.172" endtime="20200331 19:32:41.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:32:41.174" level="INFO">${mobileNo} = 9226707954</msg>
<status status="PASS" starttime="20200331 19:32:41.173" endtime="20200331 19:32:41.174"></status>
</kw>
<msg timestamp="20200331 19:32:41.174" level="INFO">${MobNo} = 9226707954</msg>
<status status="PASS" starttime="20200331 19:32:41.172" endtime="20200331 19:32:41.174"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:32:41.177" level="INFO">${Emailnum} = 65401</msg>
<status status="PASS" starttime="20200331 19:32:41.176" endtime="20200331 19:32:41.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:32:41.178" level="INFO">${enum} = 65401</msg>
<status status="PASS" starttime="20200331 19:32:41.178" endtime="20200331 19:32:41.179"></status>
</kw>
<msg timestamp="20200331 19:32:41.179" level="INFO">${num} = 65401</msg>
<status status="PASS" starttime="20200331 19:32:41.175" endtime="20200331 19:32:41.179"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:32:41.180" level="INFO">${emailid} = pavan65401@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:41.179" endtime="20200331 19:32:41.180"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:32:41.181" level="INFO">${email} = pavan65401@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:41.181" endtime="20200331 19:32:41.182"></status>
</kw>
<msg timestamp="20200331 19:32:41.182" level="INFO">${emailid} = pavan65401@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:41.175" endtime="20200331 19:32:41.182"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:41.187" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:41.186" endtime="20200331 19:32:41.187"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:41.189" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:32:41.188" endtime="20200331 19:32:41.189"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:41.190" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:41.189" endtime="20200331 19:32:41.190"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:32:41.193" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:41.191" endtime="20200331 19:32:41.193"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:32:41.195" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:41.193" endtime="20200331 19:32:41.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:41.200" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '39459406704055', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9226707954', 'email': 'pavan65401@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:32:41.196" endtime="20200331 19:32:41.200"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:41.201" endtime="20200331 19:32:41.207"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:41.208" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVRqMk5FemJ4UW5CUWpBRHNiMW5URUhQQ3hj...</msg>
<status status="PASS" starttime="20200331 19:32:41.207" endtime="20200331 19:32:41.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:41.210" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:41.209" endtime="20200331 19:32:41.210"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:41.212" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVRqMk5FemJ4UW5CUWpBRHNiMW5URUhQQ3hja09DWFNXRk5uY0laN2lnelRDdE5pclBuY3lEdTNDSmM3dEd2UGhIb1BXZ0wwTEhFRGl6eGZYNEEzVEU9IiwibmJmIjoxNTg1NjYzMzU5LCJleHAiOjE1ODU2NjM0MTksImlhdCI6MTU4NTY2MzM1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p2GDVXfEvo9WyA1thWLV8xi1twhohWWKElcfkLGtbA8'} 
data={"escrowCompanyId": "001", "idNumber": "39459406704055", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9226707954", "email": "pavan65401@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:32:41.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:41.211" endtime="20200331 19:32:41.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:41.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:41.436" endtime="20200331 19:32:41.436"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:41.437" endtime="20200331 19:32:41.438"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:41.438" endtime="20200331 19:32:41.439"></status>
</kw>
<msg timestamp="20200331 19:32:41.440" level="INFO">${sellerid} = 77ad0a14-1994-4acc-84cb-bdea6ea8b0f7</msg>
<status status="PASS" starttime="20200331 19:32:41.182" endtime="20200331 19:32:41.440"></status>
</kw>
<msg timestamp="20200331 19:32:41.440" level="INFO">${SellerId} = ['77ad0a14-1994-4acc-84cb-bdea6ea8b0f7', '39459406704055']</msg>
<status status="PASS" starttime="20200331 19:32:36.885" endtime="20200331 19:32:41.440"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}2c2p</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:41.444" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:41.443" endtime="20200331 19:32:41.445"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200331 19:32:41.446" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200331 19:32:41.445" endtime="20200331 19:32:41.446"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:41.447" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['77ad0a14-1994-4acc-84cb-bdea6ea8b0f7', '39459406704055'], 'status': 4}</msg>
<status status="PASS" starttime="20200331 19:32:41.446" endtime="20200331 19:32:41.447"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:41.448" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3pQMFhNWjVsZmV0QWpHZGJVQ1dQOUsrVGFI...</msg>
<status status="PASS" starttime="20200331 19:32:41.447" endtime="20200331 19:32:41.448"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:41.449" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:41.448" endtime="20200331 19:32:41.449"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:41.451" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3pQMFhNWjVsZmV0QWpHZGJVQ1dQOUsrVGFIQy91NTlnZjBSS3B2cmFsc0pvMFJ3REpUWmJ4SWpWS2FzOFZvQk83UVZZcEUwdVpNMW1ib21jM2N1aFk9IiwibmJmIjoxNTg1NjYzMzU1LCJleHAiOjE1ODU2NjM0MTUsImlhdCI6MTU4NTY2MzM1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9HkUIMxXo-skekQrjJ-85GUpdIyPsP8_wmy6wGfHuj82c2p'} 
data={"escrowCompanyId": "001", "sellerId": ["77ad0a14-1994-4acc-84cb-bdea6ea8b0f7", "39459406704055"], "status": 4} 
json=None</msg>
<msg timestamp="20200331 19:32:41.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:41.450" endtime="20200331 19:32:41.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:32:41.971" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:32:41.970" endtime="20200331 19:32:41.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:41.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:41.972" endtime="20200331 19:32:41.973"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:41.974" endtime="20200331 19:32:41.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:41.975" endtime="20200331 19:32:41.976"></status>
</kw>
<status status="PASS" starttime="20200331 19:32:41.442" endtime="20200331 19:32:41.976"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:32:36.349" endtime="20200331 19:32:41.990" critical="yes"></status>
</test>
<test id="s1-t8" name="TC_03 UpdateSellerStatus with Expired JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:42.017" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:42.016" endtime="20200331 19:32:42.018"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:42.020" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:42.018" endtime="20200331 19:32:42.020"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:42.021" endtime="20200331 19:32:42.021"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:42.023" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:42.022" endtime="20200331 19:32:42.023"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:42.024" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:42.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:42.024" endtime="20200331 19:32:42.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:42.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:42.977" endtime="20200331 19:32:42.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:42.979" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzJObG1Gc1l1YUYwOWpncEsrbXFKUEtOVlUrQTdoUzlBYThGRFlsYjRUenRZYndjbWQrQmNxTVdLem5HNDJCSERiTHlhN0lGVVdZOVBIQTY3RW5LbVk9IiwibmJmIjoxNTg1NjYzMzYxLCJleHAiOjE1ODU2NjM0MjEsImlhdCI6MTU4NTY2MzM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ej8ey7c4Dc4kC7ze9WRVsdU__YXfjr5Qy9zv-B2blfs</msg>
<status status="PASS" starttime="20200331 19:32:42.978" endtime="20200331 19:32:42.979"></status>
</kw>
<msg timestamp="20200331 19:32:42.980" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzJObG1Gc1l1YUYwOWpncEsrbXFKUEtOVlUrQTdoUzl...</msg>
<status status="PASS" starttime="20200331 19:32:42.015" endtime="20200331 19:32:42.980"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.006" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:43.005" endtime="20200331 19:32:43.007"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:43.008" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:32:43.007" endtime="20200331 19:32:43.008"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:43.008" endtime="20200331 19:32:43.009"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:32:43.011" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:32:43.010" endtime="20200331 19:32:43.011"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:43.013" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:32:43.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:43.012" endtime="20200331 19:32:43.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:43.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:43.800" endtime="20200331 19:32:43.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.802" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0x4QjZKYmVaZ0oxd3oya3laS3lDU0krZk5YVjlaazYxZGJHbjBxcjAraDBPd2U0MzU2REJUb2Ixdis4MTA4UXJjUTBialVyMEdYZ1lHSVVaNzFiN3M9IiwibmJmIjoxNTg1NjYzMzYyLCJleHAiOjE1ODU2NjM0MjIsImlhdCI6MTU4NTY2MzM2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.uLCAZHExHngwhak3dlB-qJLUxgxhO_LFuyJs9WyiCLA</msg>
<status status="PASS" starttime="20200331 19:32:43.802" endtime="20200331 19:32:43.802"></status>
</kw>
<msg timestamp="20200331 19:32:43.803" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0x4QjZKYmVaZ0oxd3oya3laS3lDU0krZk5YVjlaazY...</msg>
<status status="PASS" starttime="20200331 19:32:43.004" endtime="20200331 19:32:43.803"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:32:43.806" level="INFO">${Id} = 66959603051953</msg>
<status status="PASS" starttime="20200331 19:32:43.805" endtime="20200331 19:32:43.806"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.807" level="INFO">${IdNumber} = 66959603051953</msg>
<status status="PASS" starttime="20200331 19:32:43.806" endtime="20200331 19:32:43.807"></status>
</kw>
<msg timestamp="20200331 19:32:43.808" level="INFO">${idNum} = 66959603051953</msg>
<status status="PASS" starttime="20200331 19:32:43.804" endtime="20200331 19:32:43.808"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:32:43.809" level="INFO">${mobile} = 9208700523</msg>
<status status="PASS" starttime="20200331 19:32:43.809" endtime="20200331 19:32:43.809"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.810" level="INFO">${mobileNo} = 9208700523</msg>
<status status="PASS" starttime="20200331 19:32:43.810" endtime="20200331 19:32:43.811"></status>
</kw>
<msg timestamp="20200331 19:32:43.811" level="INFO">${MobNo} = 9208700523</msg>
<status status="PASS" starttime="20200331 19:32:43.808" endtime="20200331 19:32:43.811"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:32:43.813" level="INFO">${Emailnum} = 38574</msg>
<status status="PASS" starttime="20200331 19:32:43.813" endtime="20200331 19:32:43.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.815" level="INFO">${enum} = 38574</msg>
<status status="PASS" starttime="20200331 19:32:43.814" endtime="20200331 19:32:43.815"></status>
</kw>
<msg timestamp="20200331 19:32:43.815" level="INFO">${num} = 38574</msg>
<status status="PASS" starttime="20200331 19:32:43.812" endtime="20200331 19:32:43.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:32:43.816" level="INFO">${emailid} = pavan38574@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:43.816" endtime="20200331 19:32:43.816"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:32:43.818" level="INFO">${email} = pavan38574@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:43.817" endtime="20200331 19:32:43.818"></status>
</kw>
<msg timestamp="20200331 19:32:43.819" level="INFO">${emailid} = pavan38574@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:32:43.811" endtime="20200331 19:32:43.819"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:32:43.823" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:32:43.823" endtime="20200331 19:32:43.824"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:32:43.825" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:32:43.825" endtime="20200331 19:32:43.825"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:32:43.826" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:32:43.826" endtime="20200331 19:32:43.826"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:32:43.829" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:43.827" endtime="20200331 19:32:43.829"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:32:43.833" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:32:43.830" endtime="20200331 19:32:43.833"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:32:43.837" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '66959603051953', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9208700523', 'email': 'pavan38574@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:32:43.833" endtime="20200331 19:32:43.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:43.838" endtime="20200331 19:32:43.840"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:32:43.841" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0x4QjZKYmVaZ0oxd3oya3laS3lDU0krZk5Y...</msg>
<status status="PASS" starttime="20200331 19:32:43.841" endtime="20200331 19:32:43.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:32:43.843" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:32:43.842" endtime="20200331 19:32:43.843"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:32:43.845" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0x4QjZKYmVaZ0oxd3oya3laS3lDU0krZk5YVjlaazYxZGJHbjBxcjAraDBPd2U0MzU2REJUb2Ixdis4MTA4UXJjUTBialVyMEdYZ1lHSVVaNzFiN3M9IiwibmJmIjoxNTg1NjYzMzYyLCJleHAiOjE1ODU2NjM0MjIsImlhdCI6MTU4NTY2MzM2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.uLCAZHExHngwhak3dlB-qJLUxgxhO_LFuyJs9WyiCLA'} 
data={"escrowCompanyId": "001", "idNumber": "66959603051953", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9208700523", "email": "pavan38574@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:32:44.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:32:43.843" endtime="20200331 19:32:44.048"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:32:44.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:32:44.049" endtime="20200331 19:32:44.049"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:44.050" endtime="20200331 19:32:44.051"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:32:44.051" endtime="20200331 19:32:44.052"></status>
</kw>
<msg timestamp="20200331 19:32:44.053" level="INFO">${sellerid} = 1eea1711-c352-46e0-b305-50479fd6e500</msg>
<status status="PASS" starttime="20200331 19:32:43.819" endtime="20200331 19:32:44.053"></status>
</kw>
<msg timestamp="20200331 19:32:44.053" level="INFO">${SellerId} = ['1eea1711-c352-46e0-b305-50479fd6e500', '66959603051953']</msg>
<status status="PASS" starttime="20200331 19:32:43.003" endtime="20200331 19:32:44.053"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7 minutes</arg>
</arguments>
<msg timestamp="20200331 19:39:44.085" level="INFO">Slept 7 minutes</msg>
<status status="PASS" starttime="20200331 19:32:44.058" endtime="20200331 19:39:44.086"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${1}</arg>
<arg>A02</arg>
<arg>Access token expired</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:44.301" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:44.301" endtime="20200331 19:39:44.302"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200331 19:39:44.304" level="INFO">${STATUS1} = 1</msg>
<status status="PASS" starttime="20200331 19:39:44.303" endtime="20200331 19:39:44.304"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:44.305" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['1eea1711-c352-46e0-b305-50479fd6e500', '66959603051953'], 'status': 1}</msg>
<status status="PASS" starttime="20200331 19:39:44.304" endtime="20200331 19:39:44.307"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:44.309" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzJObG1Gc1l1YUYwOWpncEsrbXFKUEtOVlUr...</msg>
<status status="PASS" starttime="20200331 19:39:44.308" endtime="20200331 19:39:44.309"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:44.310" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:44.309" endtime="20200331 19:39:44.310"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:44.312" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QLzJObG1Gc1l1YUYwOWpncEsrbXFKUEtOVlUrQTdoUzlBYThGRFlsYjRUenRZYndjbWQrQmNxTVdLem5HNDJCSERiTHlhN0lGVVdZOVBIQTY3RW5LbVk9IiwibmJmIjoxNTg1NjYzMzYxLCJleHAiOjE1ODU2NjM0MjEsImlhdCI6MTU4NTY2MzM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ej8ey7c4Dc4kC7ze9WRVsdU__YXfjr5Qy9zv-B2blfs'} 
data={"escrowCompanyId": "001", "sellerId": ["1eea1711-c352-46e0-b305-50479fd6e500", "66959603051953"], "status": 1} 
json=None</msg>
<msg timestamp="20200331 19:39:44.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:44.311" endtime="20200331 19:39:44.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:44.800" level="INFO">{"responseCode":"A02","resDescription":"Access token expired"}</msg>
<status status="PASS" starttime="20200331 19:39:44.799" endtime="20200331 19:39:44.815"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:44.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:44.816" endtime="20200331 19:39:44.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:44.817" endtime="20200331 19:39:44.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:44.818" endtime="20200331 19:39:44.820"></status>
</kw>
<status status="PASS" starttime="20200331 19:39:44.299" endtime="20200331 19:39:44.820"></status>
</kw>
<doc>Invalid : To verify response for Expired JWT token</doc>
<tags>
<tag>A02</tag>
</tags>
<status status="PASS" starttime="20200331 19:32:42.014" endtime="20200331 19:39:44.854" critical="yes"></status>
</test>
<test id="s1-t9" name="TC_04 UpdateSellerStatus with Other Company JWT Token">
<kw name="GetToken BIGC" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Convert To Bytes" library="BuiltIn">
<doc>Converts the given ``input`` to bytes according to the ``input_type``.</doc>
<arguments>
<arg>${client_idBIGC}:${client_secretBIGC}</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200331 19:39:44.860" level="INFO">${userpass} = GIPBIGC:FpNR5nVAw0xLFAKfBbqZJB</msg>
<status status="PASS" starttime="20200331 19:39:44.859" endtime="20200331 19:39:44.860"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64encode($userpass)</arg>
<arg>base64</arg>
</arguments>
<assign>
<var>${userpass}</var>
</assign>
<msg timestamp="20200331 19:39:44.864" level="INFO">${userpass} = R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200331 19:39:44.860" endtime="20200331 19:39:44.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${userpass}</arg>
</arguments>
<msg timestamp="20200331 19:39:44.866" level="INFO">R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC</msg>
<status status="PASS" starttime="20200331 19:39:44.865" endtime="20200331 19:39:44.866"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLOAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:44.866" level="INFO">Creating Session using : alias=Session, url=https://uat-oauth.2c2p.com/oauth, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:44.866" endtime="20200331 19:39:44.867"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=text/plain</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:44.868" level="INFO">${header} = {'Content-Type': 'text/plain'}</msg>
<status status="PASS" starttime="20200331 19:39:44.867" endtime="20200331 19:39:44.868"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${userpass}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:44.868" endtime="20200331 19:39:44.869"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:44.870" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:44.869" endtime="20200331 19:39:44.870"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:44.871" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'text/plain', 'Authorization': 'Basic R0lQQklHQzpGcE5SNW5WQXcweExGQUtmQmJxWkpC'} 
data=&lt;text/plain&gt; 
json=None</msg>
<msg timestamp="20200331 19:39:45.551" level="INFO">c:\python\lib\site-packages\urllib3\connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'uat-oauth.2c2p.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200331 19:39:45.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:44.870" endtime="20200331 19:39:45.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:45.553" level="INFO">{"access_token":"2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpIE_Rjx_i1u9kax16zpaH0Aa9nKxEhpB3laJVIBdxFGyF3F26vKX0UGYPXQt4ie1EoPA5OvS3f7QZyNpf_kp5LeWg2oQ","token_type":"bearer","expires_in":1799}</msg>
<status status="PASS" starttime="20200331 19:39:45.552" endtime="20200331 19:39:45.554"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:45.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:45.554" endtime="20200331 19:39:45.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200331 19:39:45.556" level="INFO">2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpIE_Rjx_i1u9kax16zpaH0Aa9nKxEhpB3laJVIBdxFGyF3F26vKX0UGYPXQt4ie1EoPA5OvS3f7QZyNpf_kp5LeWg2oQ</msg>
<status status="PASS" starttime="20200331 19:39:45.555" endtime="20200331 19:39:45.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['token_type']}</arg>
</arguments>
<msg timestamp="20200331 19:39:45.557" level="INFO">bearer</msg>
<status status="PASS" starttime="20200331 19:39:45.557" endtime="20200331 19:39:45.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['access_token']}</arg>
</arguments>
<msg timestamp="20200331 19:39:45.559" level="INFO">2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpIE_Rjx_i1u9kax16zpaH0Aa9nKxEhpB3laJVIBdxFGyF3F26vKX0UGYPXQt4ie1EoPA5OvS3f7QZyNpf_kp5LeWg2oQ</msg>
<status status="PASS" starttime="20200331 19:39:45.558" endtime="20200331 19:39:45.560"></status>
</kw>
<msg timestamp="20200331 19:39:45.561" level="INFO">${TokenEscrow} = 2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpIE_Rjx_i...</msg>
<status status="PASS" starttime="20200331 19:39:44.858" endtime="20200331 19:39:45.561"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:45.564" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:45.563" endtime="20200331 19:39:45.564"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:45.566" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:45.565" endtime="20200331 19:39:45.566"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:45.566" endtime="20200331 19:39:45.567"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:45.568" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:45.567" endtime="20200331 19:39:45.568"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:45.569" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:46.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:45.568" endtime="20200331 19:39:46.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:46.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:46.783" endtime="20200331 19:39:46.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:46.785" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1VZR1BGOVlFZ2hBZkJQUDFtZjJMUCtITDNlN0Fwb2lobWRBNUxUQjJyWDYyQVFkWkJPT1BTU2NpenFXZitpYzRkWC9lcDJVcE9QME15aGdkNzlCblk9IiwibmJmIjoxNTg1NjYzNzg1LCJleHAiOjE1ODU2NjM4NDUsImlhdCI6MTU4NTY2Mzc4NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xKTo00knrYEsUqRUlz-CVPjVmQ59NZEjvC0LNM38GMI</msg>
<status status="PASS" starttime="20200331 19:39:46.784" endtime="20200331 19:39:46.785"></status>
</kw>
<msg timestamp="20200331 19:39:46.786" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1VZR1BGOVlFZ2hBZkJQUDFtZjJMUCtITDNlN0Fwb2l...</msg>
<status status="PASS" starttime="20200331 19:39:45.562" endtime="20200331 19:39:46.786"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:46.787" level="INFO">${Id} = 40727665528722</msg>
<status status="PASS" starttime="20200331 19:39:46.787" endtime="20200331 19:39:46.787"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:46.789" level="INFO">${IdNumber} = 40727665528722</msg>
<status status="PASS" starttime="20200331 19:39:46.788" endtime="20200331 19:39:46.789"></status>
</kw>
<msg timestamp="20200331 19:39:46.789" level="INFO">${idNum} = 40727665528722</msg>
<status status="PASS" starttime="20200331 19:39:46.786" endtime="20200331 19:39:46.789"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:39:46.793" level="INFO">${mobile} = 9878044168</msg>
<status status="PASS" starttime="20200331 19:39:46.792" endtime="20200331 19:39:46.793"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:39:46.795" level="INFO">${mobileNo} = 9878044168</msg>
<status status="PASS" starttime="20200331 19:39:46.794" endtime="20200331 19:39:46.795"></status>
</kw>
<msg timestamp="20200331 19:39:46.795" level="INFO">${MobNo} = 9878044168</msg>
<status status="PASS" starttime="20200331 19:39:46.790" endtime="20200331 19:39:46.796"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:39:46.798" level="INFO">${Emailnum} = 21350</msg>
<status status="PASS" starttime="20200331 19:39:46.798" endtime="20200331 19:39:46.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:39:46.800" level="INFO">${enum} = 21350</msg>
<status status="PASS" starttime="20200331 19:39:46.799" endtime="20200331 19:39:46.800"></status>
</kw>
<msg timestamp="20200331 19:39:46.801" level="INFO">${num} = 21350</msg>
<status status="PASS" starttime="20200331 19:39:46.797" endtime="20200331 19:39:46.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:39:46.802" level="INFO">${emailid} = pavan21350@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:46.801" endtime="20200331 19:39:46.802"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:39:46.803" level="INFO">${email} = pavan21350@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:46.803" endtime="20200331 19:39:46.803"></status>
</kw>
<msg timestamp="20200331 19:39:46.803" level="INFO">${emailid} = pavan21350@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:46.796" endtime="20200331 19:39:46.803"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:46.806" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:46.806" endtime="20200331 19:39:46.807"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:46.808" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:39:46.807" endtime="20200331 19:39:46.808"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:46.809" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:46.808" endtime="20200331 19:39:46.809"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:39:46.812" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:46.809" endtime="20200331 19:39:46.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:39:46.814" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:46.812" endtime="20200331 19:39:46.814"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:46.819" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '40727665528722', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9878044168', 'email': 'pavan21350@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:39:46.815" endtime="20200331 19:39:46.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:46.820" endtime="20200331 19:39:46.829"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:46.830" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1VZR1BGOVlFZ2hBZkJQUDFtZjJMUCtITDNl...</msg>
<status status="PASS" starttime="20200331 19:39:46.829" endtime="20200331 19:39:46.830"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:46.831" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:46.830" endtime="20200331 19:39:46.831"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:46.834" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1VZR1BGOVlFZ2hBZkJQUDFtZjJMUCtITDNlN0Fwb2lobWRBNUxUQjJyWDYyQVFkWkJPT1BTU2NpenFXZitpYzRkWC9lcDJVcE9QME15aGdkNzlCblk9IiwibmJmIjoxNTg1NjYzNzg1LCJleHAiOjE1ODU2NjM4NDUsImlhdCI6MTU4NTY2Mzc4NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xKTo00knrYEsUqRUlz-CVPjVmQ59NZEjvC0LNM38GMI'} 
data={"escrowCompanyId": "001", "idNumber": "40727665528722", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9878044168", "email": "pavan21350@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:39:47.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:46.832" endtime="20200331 19:39:47.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:47.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:47.083" endtime="20200331 19:39:47.084"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:47.084" endtime="20200331 19:39:47.085"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:47.086" endtime="20200331 19:39:47.087"></status>
</kw>
<msg timestamp="20200331 19:39:47.088" level="INFO">${sellerid} = ec16220b-f5e5-4bc4-829b-80752917becb</msg>
<status status="PASS" starttime="20200331 19:39:46.804" endtime="20200331 19:39:47.088"></status>
</kw>
<msg timestamp="20200331 19:39:47.088" level="INFO">${SellerId} = ['ec16220b-f5e5-4bc4-829b-80752917becb', '40727665528722']</msg>
<status status="PASS" starttime="20200331 19:39:45.562" endtime="20200331 19:39:47.088"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:47.090" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:47.090" endtime="20200331 19:39:47.091"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200331 19:39:47.091" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200331 19:39:47.091" endtime="20200331 19:39:47.091"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:47.092" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['ec16220b-f5e5-4bc4-829b-80752917becb', '40727665528722'], 'status': 4}</msg>
<status status="PASS" starttime="20200331 19:39:47.091" endtime="20200331 19:39:47.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:47.093" level="INFO">${AuthToken} = bearer 2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpI...</msg>
<status status="PASS" starttime="20200331 19:39:47.092" endtime="20200331 19:39:47.093"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:47.094" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer 2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm4...</msg>
<status status="PASS" starttime="20200331 19:39:47.093" endtime="20200331 19:39:47.094"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:47.095" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer 2L1A6niSEOHvCz-ihSBXbvgElksYnRa7TWuKAwGz6VTb44RgLl50OFUOy956HgbfyQ5XdoJhjhLI9pPEJQGY_C0Qt9A6yPl4477MAlwa0j-mZt9WY75TnXl8emOOtcY5Uz8FpK6Xm47ZTx9RGbO-dl2AbsAUD13RuxNHnaOvweP2o6Qb5TpulbZFSb0hYnEpIE_Rjx_i1u9kax16zpaH0Aa9nKxEhpB3laJVIBdxFGyF3F26vKX0UGYPXQt4ie1EoPA5OvS3f7QZyNpf_kp5LeWg2oQ'} 
data={"escrowCompanyId": "001", "sellerId": ["ec16220b-f5e5-4bc4-829b-80752917becb", "40727665528722"], "status": 4} 
json=None</msg>
<msg timestamp="20200331 19:39:47.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:47.094" endtime="20200331 19:39:47.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:47.619" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:39:47.618" endtime="20200331 19:39:47.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:47.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:47.622" endtime="20200331 19:39:47.623"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:47.623" endtime="20200331 19:39:47.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:47.624" endtime="20200331 19:39:47.625"></status>
</kw>
<status status="PASS" starttime="20200331 19:39:47.089" endtime="20200331 19:39:47.626"></status>
</kw>
<doc>Invalid: To check API response with other company JWT token.</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:39:44.856" endtime="20200331 19:39:47.628" critical="yes"></status>
</test>
<test id="s1-t10" name="TC_05 UpdateSellerStatus with Valid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:47.632" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:47.632" endtime="20200331 19:39:47.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:47.634" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:47.634" endtime="20200331 19:39:47.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:47.635" endtime="20200331 19:39:47.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:47.636" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:47.635" endtime="20200331 19:39:47.636"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:47.637" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:48.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:47.636" endtime="20200331 19:39:48.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:48.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.110" endtime="20200331 19:39:48.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.111" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUVqYThtencyOFlRd090a3F1aTJSUC9ScFFXSEE5VG05RWlPclFXMks3TkRlcFk5bDlOaXhkUHBWNVJ5WlVCZUNwbTNPSHdyUmFEZUxKM0pUTndTcGM9IiwibmJmIjoxNTg1NjYzNzg2LCJleHAiOjE1ODU2NjM4NDYsImlhdCI6MTU4NTY2Mzc4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TOVQJYFJSIeFD_sja0UnXgjT9pCCQqXRH2dHni4xR10</msg>
<status status="PASS" starttime="20200331 19:39:48.111" endtime="20200331 19:39:48.111"></status>
</kw>
<msg timestamp="20200331 19:39:48.112" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUVqYThtencyOFlRd090a3F1aTJSUC9ScFFXSEE5VG0...</msg>
<status status="PASS" starttime="20200331 19:39:47.631" endtime="20200331 19:39:48.112"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.113" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:48.113" endtime="20200331 19:39:48.114"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:48.114" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:48.114" endtime="20200331 19:39:48.114"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:48.114" endtime="20200331 19:39:48.115"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:48.115" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:48.115" endtime="20200331 19:39:48.115"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:48.116" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:48.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.115" endtime="20200331 19:39:48.563"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:48.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.564" endtime="20200331 19:39:48.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.566" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDV3RWtFM0p2SjF1L0JWZnhocElhU0x1SEIvM3JmNEJ3L0NPaExLRVpwZWNrMmtoSFhUcUprK1NheUZuVHN0WHVLRlhaN1hMWnZtVU4vYTFPczZJNjQ9IiwibmJmIjoxNTg1NjYzNzg3LCJleHAiOjE1ODU2NjM4NDcsImlhdCI6MTU4NTY2Mzc4NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._7av0zF5Gx_KJD4-SKbld3xf3I71zyipAvvNJCjnsrI</msg>
<status status="PASS" starttime="20200331 19:39:48.565" endtime="20200331 19:39:48.566"></status>
</kw>
<msg timestamp="20200331 19:39:48.566" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDV3RWtFM0p2SjF1L0JWZnhocElhU0x1SEIvM3JmNEJ...</msg>
<status status="PASS" starttime="20200331 19:39:48.113" endtime="20200331 19:39:48.567"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:48.568" level="INFO">${Id} = 74309367548647</msg>
<status status="PASS" starttime="20200331 19:39:48.568" endtime="20200331 19:39:48.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.569" level="INFO">${IdNumber} = 74309367548647</msg>
<status status="PASS" starttime="20200331 19:39:48.569" endtime="20200331 19:39:48.570"></status>
</kw>
<msg timestamp="20200331 19:39:48.570" level="INFO">${idNum} = 74309367548647</msg>
<status status="PASS" starttime="20200331 19:39:48.567" endtime="20200331 19:39:48.570"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:39:48.572" level="INFO">${mobile} = 2915656891</msg>
<status status="PASS" starttime="20200331 19:39:48.571" endtime="20200331 19:39:48.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.573" level="INFO">${mobileNo} = 2915656891</msg>
<status status="PASS" starttime="20200331 19:39:48.573" endtime="20200331 19:39:48.574"></status>
</kw>
<msg timestamp="20200331 19:39:48.574" level="INFO">${MobNo} = 2915656891</msg>
<status status="PASS" starttime="20200331 19:39:48.570" endtime="20200331 19:39:48.574"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:39:48.577" level="INFO">${Emailnum} = 08841</msg>
<status status="PASS" starttime="20200331 19:39:48.576" endtime="20200331 19:39:48.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.578" level="INFO">${enum} = 08841</msg>
<status status="PASS" starttime="20200331 19:39:48.577" endtime="20200331 19:39:48.578"></status>
</kw>
<msg timestamp="20200331 19:39:48.579" level="INFO">${num} = 08841</msg>
<status status="PASS" starttime="20200331 19:39:48.575" endtime="20200331 19:39:48.579"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:39:48.580" level="INFO">${emailid} = pavan08841@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:48.579" endtime="20200331 19:39:48.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:39:48.581" level="INFO">${email} = pavan08841@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:48.580" endtime="20200331 19:39:48.581"></status>
</kw>
<msg timestamp="20200331 19:39:48.582" level="INFO">${emailid} = pavan08841@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:48.575" endtime="20200331 19:39:48.582"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:48.587" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:48.586" endtime="20200331 19:39:48.588"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:48.589" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:39:48.588" endtime="20200331 19:39:48.589"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:48.590" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:48.589" endtime="20200331 19:39:48.590"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:39:48.593" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:48.591" endtime="20200331 19:39:48.593"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:39:48.596" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:48.593" endtime="20200331 19:39:48.596"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:48.601" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '74309367548647', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2915656891', 'email': 'pavan08841@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:39:48.596" endtime="20200331 19:39:48.601"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:48.601" endtime="20200331 19:39:48.622"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:48.624" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDV3RWtFM0p2SjF1L0JWZnhocElhU0x1SEIv...</msg>
<status status="PASS" starttime="20200331 19:39:48.623" endtime="20200331 19:39:48.624"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:48.626" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:48.625" endtime="20200331 19:39:48.626"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:48.628" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDV3RWtFM0p2SjF1L0JWZnhocElhU0x1SEIvM3JmNEJ3L0NPaExLRVpwZWNrMmtoSFhUcUprK1NheUZuVHN0WHVLRlhaN1hMWnZtVU4vYTFPczZJNjQ9IiwibmJmIjoxNTg1NjYzNzg3LCJleHAiOjE1ODU2NjM4NDcsImlhdCI6MTU4NTY2Mzc4NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._7av0zF5Gx_KJD4-SKbld3xf3I71zyipAvvNJCjnsrI'} 
data={"escrowCompanyId": "001", "idNumber": "74309367548647", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2915656891", "email": "pavan08841@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:39:48.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.626" endtime="20200331 19:39:48.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:48.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.842" endtime="20200331 19:39:48.843"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:48.843" endtime="20200331 19:39:48.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:48.844" endtime="20200331 19:39:48.845"></status>
</kw>
<msg timestamp="20200331 19:39:48.846" level="INFO">${sellerid} = 38d03ba6-e171-4f20-a1e7-55ec70ebd7ce</msg>
<status status="PASS" starttime="20200331 19:39:48.582" endtime="20200331 19:39:48.846"></status>
</kw>
<msg timestamp="20200331 19:39:48.846" level="INFO">${SellerId} = ['38d03ba6-e171-4f20-a1e7-55ec70ebd7ce', '74309367548647']</msg>
<status status="PASS" starttime="20200331 19:39:48.112" endtime="20200331 19:39:48.847"></status>
</kw>
<kw name="UpdateSeller" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${1}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:48.852" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:48.852" endtime="20200331 19:39:48.853"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200331 19:39:48.854" level="INFO">${STATUS1} = 1</msg>
<status status="PASS" starttime="20200331 19:39:48.853" endtime="20200331 19:39:48.854"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerId=${SELLERId}</arg>
<arg>status=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:48.856" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerId': ['38d03ba6-e171-4f20-a1e7-55ec70ebd7ce', '74309367548647'], 'status': 1}</msg>
<status status="PASS" starttime="20200331 19:39:48.855" endtime="20200331 19:39:48.856"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:48.857" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUVqYThtencyOFlRd090a3F1aTJSUC9ScFFX...</msg>
<status status="PASS" starttime="20200331 19:39:48.856" endtime="20200331 19:39:48.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:48.859" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:48.857" endtime="20200331 19:39:48.859"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:48.861" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUVqYThtencyOFlRd090a3F1aTJSUC9ScFFXSEE5VG05RWlPclFXMks3TkRlcFk5bDlOaXhkUHBWNVJ5WlVCZUNwbTNPSHdyUmFEZUxKM0pUTndTcGM9IiwibmJmIjoxNTg1NjYzNzg2LCJleHAiOjE1ODU2NjM4NDYsImlhdCI6MTU4NTY2Mzc4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TOVQJYFJSIeFD_sja0UnXgjT9pCCQqXRH2dHni4xR10'} 
data={"escrowCompanyId": "001", "sellerId": ["38d03ba6-e171-4f20-a1e7-55ec70ebd7ce", "74309367548647"], "status": 1} 
json=None</msg>
<msg timestamp="20200331 19:39:49.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:48.860" endtime="20200331 19:39:49.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:49.322" level="INFO">{"responseCode":"E06","resDescription":"System error"}</msg>
<status status="PASS" starttime="20200331 19:39:49.321" endtime="20200331 19:39:49.322"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:49.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:49.323" endtime="20200331 19:39:49.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.329" level="FAIL">E06 != 000</msg>
<status status="FAIL" starttime="20200331 19:39:49.324" endtime="20200331 19:39:49.329"></status>
</kw>
<status status="FAIL" starttime="20200331 19:39:48.850" endtime="20200331 19:39:49.331"></status>
</kw>
<doc>Valid: To check API response with valid JWT token.</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200331 19:39:47.629" endtime="20200331 19:39:49.332" critical="yes">E06 != 000</status>
</test>
<test id="s1-t11" name="TC_01 UpdateSellerDetails with Empty JWT Token">
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:49.340" level="INFO">${Id} = 28252204708717</msg>
<status status="PASS" starttime="20200331 19:39:49.339" endtime="20200331 19:39:49.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.341" level="INFO">${IdNumber} = 28252204708717</msg>
<status status="PASS" starttime="20200331 19:39:49.340" endtime="20200331 19:39:49.342"></status>
</kw>
<msg timestamp="20200331 19:39:49.342" level="INFO">${idNum} = 28252204708717</msg>
<status status="PASS" starttime="20200331 19:39:49.338" endtime="20200331 19:39:49.342"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.345" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:49.345" endtime="20200331 19:39:49.346"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:49.347" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:49.346" endtime="20200331 19:39:49.347"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:49.348" endtime="20200331 19:39:49.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:49.350" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:49.349" endtime="20200331 19:39:49.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:49.351" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:49.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:49.350" endtime="20200331 19:39:49.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:49.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:49.819" endtime="20200331 19:39:49.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.821" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUtHS0RNK2hYWEEvWVZkRWl3SmlyYnVVM0V6ZHgrek51dHgvd25hNGpJZ2I1c09nOEJkakJuQ2ZXTW9MN0RLMm94NzFRK3dlWEpGeklpQitlZy9uQWs9IiwibmJmIjoxNTg1NjYzNzg4LCJleHAiOjE1ODU2NjM4NDgsImlhdCI6MTU4NTY2Mzc4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.L9LMnwVZE6o-xIFYVe3rmdpJxHuW1SCaw53NrrfH0KE</msg>
<status status="PASS" starttime="20200331 19:39:49.820" endtime="20200331 19:39:49.821"></status>
</kw>
<msg timestamp="20200331 19:39:49.822" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUtHS0RNK2hYWEEvWVZkRWl3SmlyYnVVM0V6ZHgrek5...</msg>
<status status="PASS" starttime="20200331 19:39:49.344" endtime="20200331 19:39:49.822"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:49.823" level="INFO">${Id} = 40040931155670</msg>
<status status="PASS" starttime="20200331 19:39:49.823" endtime="20200331 19:39:49.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.824" level="INFO">${IdNumber} = 40040931155670</msg>
<status status="PASS" starttime="20200331 19:39:49.824" endtime="20200331 19:39:49.824"></status>
</kw>
<msg timestamp="20200331 19:39:49.824" level="INFO">${idNum} = 40040931155670</msg>
<status status="PASS" starttime="20200331 19:39:49.822" endtime="20200331 19:39:49.825"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:39:49.826" level="INFO">${mobile} = 5564394807</msg>
<status status="PASS" starttime="20200331 19:39:49.825" endtime="20200331 19:39:49.826"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.827" level="INFO">${mobileNo} = 5564394807</msg>
<status status="PASS" starttime="20200331 19:39:49.826" endtime="20200331 19:39:49.827"></status>
</kw>
<msg timestamp="20200331 19:39:49.827" level="INFO">${MobNo} = 5564394807</msg>
<status status="PASS" starttime="20200331 19:39:49.825" endtime="20200331 19:39:49.827"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:39:49.829" level="INFO">${Emailnum} = 70280</msg>
<status status="PASS" starttime="20200331 19:39:49.829" endtime="20200331 19:39:49.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.830" level="INFO">${enum} = 70280</msg>
<status status="PASS" starttime="20200331 19:39:49.830" endtime="20200331 19:39:49.830"></status>
</kw>
<msg timestamp="20200331 19:39:49.831" level="INFO">${num} = 70280</msg>
<status status="PASS" starttime="20200331 19:39:49.828" endtime="20200331 19:39:49.831"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:39:49.832" level="INFO">${emailid} = pavan70280@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:49.831" endtime="20200331 19:39:49.832"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:39:49.833" level="INFO">${email} = pavan70280@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:49.832" endtime="20200331 19:39:49.833"></status>
</kw>
<msg timestamp="20200331 19:39:49.833" level="INFO">${emailid} = pavan70280@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:49.828" endtime="20200331 19:39:49.833"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:49.837" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:49.836" endtime="20200331 19:39:49.837"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:49.838" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:39:49.837" endtime="20200331 19:39:49.838"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:49.838" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:49.838" endtime="20200331 19:39:49.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:39:49.841" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:49.839" endtime="20200331 19:39:49.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:39:49.844" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:49.842" endtime="20200331 19:39:49.844"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:49.849" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '40040931155670', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5564394807', 'email': 'pavan70280@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:39:49.845" endtime="20200331 19:39:49.849"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:49.850" endtime="20200331 19:39:49.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:49.854" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUtHS0RNK2hYWEEvWVZkRWl3SmlyYnVVM0V6...</msg>
<status status="PASS" starttime="20200331 19:39:49.854" endtime="20200331 19:39:49.854"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:49.856" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:49.855" endtime="20200331 19:39:49.856"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:49.857" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUtHS0RNK2hYWEEvWVZkRWl3SmlyYnVVM0V6ZHgrek51dHgvd25hNGpJZ2I1c09nOEJkakJuQ2ZXTW9MN0RLMm94NzFRK3dlWEpGeklpQitlZy9uQWs9IiwibmJmIjoxNTg1NjYzNzg4LCJleHAiOjE1ODU2NjM4NDgsImlhdCI6MTU4NTY2Mzc4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.L9LMnwVZE6o-xIFYVe3rmdpJxHuW1SCaw53NrrfH0KE'} 
data={"escrowCompanyId": "001", "idNumber": "40040931155670", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5564394807", "email": "pavan70280@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:39:51.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:49.856" endtime="20200331 19:39:51.157"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:51.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:51.158" endtime="20200331 19:39:51.159"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:51.159" endtime="20200331 19:39:51.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:51.161" endtime="20200331 19:39:51.162"></status>
</kw>
<msg timestamp="20200331 19:39:51.163" level="INFO">${sellerid} = fbcf6e37-655f-4158-aa23-b905c41316fc</msg>
<status status="PASS" starttime="20200331 19:39:49.834" endtime="20200331 19:39:51.163"></status>
</kw>
<msg timestamp="20200331 19:39:51.163" level="INFO">${SellerId} = ['fbcf6e37-655f-4158-aa23-b905c41316fc', '40040931155670']</msg>
<status status="PASS" starttime="20200331 19:39:49.343" endtime="20200331 19:39:51.163"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${EMPTY}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:51.167" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:51.166" endtime="20200331 19:39:51.167"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:51.169" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:39:51.168" endtime="20200331 19:39:51.169"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:51.170" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:51.169" endtime="20200331 19:39:51.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:51.172" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['fbcf6e37-655f-4158-aa23-b905c41316fc', '40040931155670'], 'idNumber': '28252204708717', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:39:51.170" endtime="20200331 19:39:51.172"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:51.173" level="INFO">${AuthToken} = bearer </msg>
<status status="PASS" starttime="20200331 19:39:51.172" endtime="20200331 19:39:51.173"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:51.174" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer '}</msg>
<status status="PASS" starttime="20200331 19:39:51.174" endtime="20200331 19:39:51.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:51.176" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer '} 
data={"escrowCompanyId": "001", "SELLERId": ["fbcf6e37-655f-4158-aa23-b905c41316fc", "40040931155670"], "idNumber": "28252204708717", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:39:51.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:51.175" endtime="20200331 19:39:51.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:51.657" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:39:51.656" endtime="20200331 19:39:51.657"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:51.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:51.658" endtime="20200331 19:39:51.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:51.659" endtime="20200331 19:39:51.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:51.661" endtime="20200331 19:39:51.662"></status>
</kw>
<status status="PASS" starttime="20200331 19:39:51.164" endtime="20200331 19:39:51.662"></status>
</kw>
<doc>Empty : To verify response for Empty JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:39:49.336" endtime="20200331 19:39:51.663" critical="yes"></status>
</test>
<test id="s1-t12" name="TC_02 UpdateSellerDetails with Invalid JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:51.668" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:51.667" endtime="20200331 19:39:51.668"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:51.669" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:51.669" endtime="20200331 19:39:51.670"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:51.670" endtime="20200331 19:39:51.670"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:51.671" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:51.671" endtime="20200331 19:39:51.671"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:51.672" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:52.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:51.672" endtime="20200331 19:39:52.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:52.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.161" endtime="20200331 19:39:52.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.163" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTFEN2JhTG5yZ2ZRNE1DdVhBdDgxb1JRb0szdTNhck9PTmdyci9XbHJRUGtCNmJxeEYwRHdzUGY4cDVjU1Fua1lXQytUUU12RUdVb1BtTi9TclRYN2s9IiwibmJmIjoxNTg1NjYzNzkwLCJleHAiOjE1ODU2NjM4NTAsImlhdCI6MTU4NTY2Mzc5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._9v4VyIUuXAObrzeDMVXEpNu0EOaO_rFTRAY5dQsdMs</msg>
<status status="PASS" starttime="20200331 19:39:52.162" endtime="20200331 19:39:52.163"></status>
</kw>
<msg timestamp="20200331 19:39:52.164" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTFEN2JhTG5yZ2ZRNE1DdVhBdDgxb1JRb0szdTNhck9...</msg>
<status status="PASS" starttime="20200331 19:39:51.666" endtime="20200331 19:39:52.164"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:52.166" level="INFO">${Id} = 36683559016752</msg>
<status status="PASS" starttime="20200331 19:39:52.166" endtime="20200331 19:39:52.167"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.168" level="INFO">${IdNumber} = 36683559016752</msg>
<status status="PASS" starttime="20200331 19:39:52.167" endtime="20200331 19:39:52.168"></status>
</kw>
<msg timestamp="20200331 19:39:52.168" level="INFO">${idNum} = 36683559016752</msg>
<status status="PASS" starttime="20200331 19:39:52.165" endtime="20200331 19:39:52.168"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.170" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:52.170" endtime="20200331 19:39:52.171"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:52.172" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:52.171" endtime="20200331 19:39:52.172"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:52.172" endtime="20200331 19:39:52.173"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:52.174" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:52.173" endtime="20200331 19:39:52.174"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:52.175" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:52.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.174" endtime="20200331 19:39:52.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:52.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.638" endtime="20200331 19:39:52.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.640" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnJpa3YxOU80T2lJeHlkeEJFbzEyaVRXTnV0bWNsVXpUZHo5c3hwYzlWUWJmUU5XVk90ckpJZmRpYWFmSTF2cWYxeHhQZHQ0dUp3Y0VnazNMK3pidWc9IiwibmJmIjoxNTg1NjYzNzkxLCJleHAiOjE1ODU2NjM4NTEsImlhdCI6MTU4NTY2Mzc5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qeof4GBZDVvP7rKAoOQkKls2dwcuxJCBbwCZ9zo4W-0</msg>
<status status="PASS" starttime="20200331 19:39:52.639" endtime="20200331 19:39:52.640"></status>
</kw>
<msg timestamp="20200331 19:39:52.641" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnJpa3YxOU80T2lJeHlkeEJFbzEyaVRXTnV0bWNsVXp...</msg>
<status status="PASS" starttime="20200331 19:39:52.169" endtime="20200331 19:39:52.641"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:52.643" level="INFO">${Id} = 03021104994621</msg>
<status status="PASS" starttime="20200331 19:39:52.642" endtime="20200331 19:39:52.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.644" level="INFO">${IdNumber} = 03021104994621</msg>
<status status="PASS" starttime="20200331 19:39:52.643" endtime="20200331 19:39:52.644"></status>
</kw>
<msg timestamp="20200331 19:39:52.644" level="INFO">${idNum} = 03021104994621</msg>
<status status="PASS" starttime="20200331 19:39:52.641" endtime="20200331 19:39:52.645"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:39:52.646" level="INFO">${mobile} = 8634411608</msg>
<status status="PASS" starttime="20200331 19:39:52.646" endtime="20200331 19:39:52.646"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.647" level="INFO">${mobileNo} = 8634411608</msg>
<status status="PASS" starttime="20200331 19:39:52.647" endtime="20200331 19:39:52.647"></status>
</kw>
<msg timestamp="20200331 19:39:52.648" level="INFO">${MobNo} = 8634411608</msg>
<status status="PASS" starttime="20200331 19:39:52.645" endtime="20200331 19:39:52.648"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:39:52.650" level="INFO">${Emailnum} = 58036</msg>
<status status="PASS" starttime="20200331 19:39:52.649" endtime="20200331 19:39:52.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.651" level="INFO">${enum} = 58036</msg>
<status status="PASS" starttime="20200331 19:39:52.651" endtime="20200331 19:39:52.651"></status>
</kw>
<msg timestamp="20200331 19:39:52.652" level="INFO">${num} = 58036</msg>
<status status="PASS" starttime="20200331 19:39:52.649" endtime="20200331 19:39:52.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:39:52.653" level="INFO">${emailid} = pavan58036@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:52.652" endtime="20200331 19:39:52.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:39:52.654" level="INFO">${email} = pavan58036@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:52.653" endtime="20200331 19:39:52.654"></status>
</kw>
<msg timestamp="20200331 19:39:52.655" level="INFO">${emailid} = pavan58036@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:52.648" endtime="20200331 19:39:52.655"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:52.660" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:52.659" endtime="20200331 19:39:52.660"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:52.661" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:39:52.661" endtime="20200331 19:39:52.661"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:52.662" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:52.662" endtime="20200331 19:39:52.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:39:52.664" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:52.663" endtime="20200331 19:39:52.664"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:39:52.666" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:52.664" endtime="20200331 19:39:52.666"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:52.670" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '03021104994621', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8634411608', 'email': 'pavan58036@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200331 19:39:52.666" endtime="20200331 19:39:52.671"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:52.671" endtime="20200331 19:39:52.674"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:52.676" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnJpa3YxOU80T2lJeHlkeEJFbzEyaVRXTnV0...</msg>
<status status="PASS" starttime="20200331 19:39:52.675" endtime="20200331 19:39:52.676"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:52.678" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:52.676" endtime="20200331 19:39:52.678"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:52.679" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnJpa3YxOU80T2lJeHlkeEJFbzEyaVRXTnV0bWNsVXpUZHo5c3hwYzlWUWJmUU5XVk90ckpJZmRpYWFmSTF2cWYxeHhQZHQ0dUp3Y0VnazNMK3pidWc9IiwibmJmIjoxNTg1NjYzNzkxLCJleHAiOjE1ODU2NjM4NTEsImlhdCI6MTU4NTY2Mzc5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qeof4GBZDVvP7rKAoOQkKls2dwcuxJCBbwCZ9zo4W-0'} 
data={"escrowCompanyId": "001", "idNumber": "03021104994621", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8634411608", "email": "pavan58036@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200331 19:39:52.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.678" endtime="20200331 19:39:52.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:52.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.906" endtime="20200331 19:39:52.907"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:52.907" endtime="20200331 19:39:52.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:52.908" endtime="20200331 19:39:52.909"></status>
</kw>
<msg timestamp="20200331 19:39:52.910" level="INFO">${sellerid} = 2f0e52d3-1f8e-45f2-aff4-178df3fd0d1d</msg>
<status status="PASS" starttime="20200331 19:39:52.655" endtime="20200331 19:39:52.910"></status>
</kw>
<msg timestamp="20200331 19:39:52.910" level="INFO">${SellerId} = ['2f0e52d3-1f8e-45f2-aff4-178df3fd0d1d', '03021104994621']</msg>
<status status="PASS" starttime="20200331 19:39:52.169" endtime="20200331 19:39:52.910"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}2c2p</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>A01</arg>
<arg>Invalid access token</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:52.912" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:52.912" endtime="20200331 19:39:52.913"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:52.913" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200331 19:39:52.913" endtime="20200331 19:39:52.913"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:52.914" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:52.914" endtime="20200331 19:39:52.914"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200331 19:39:52.916" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': ['2f0e52d3-1f8e-45f2-aff4-178df3fd0d1d', '03021104994621'], 'idNumber': '36683559016752', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200331 19:39:52.914" endtime="20200331 19:39:52.916"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200331 19:39:52.917" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTFEN2JhTG5yZ2ZRNE1DdVhBdDgxb1JRb0sz...</msg>
<status status="PASS" starttime="20200331 19:39:52.916" endtime="20200331 19:39:52.917"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:52.918" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200331 19:39:52.917" endtime="20200331 19:39:52.918"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:52.919" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTFEN2JhTG5yZ2ZRNE1DdVhBdDgxb1JRb0szdTNhck9PTmdyci9XbHJRUGtCNmJxeEYwRHdzUGY4cDVjU1Fua1lXQytUUU12RUdVb1BtTi9TclRYN2s9IiwibmJmIjoxNTg1NjYzNzkwLCJleHAiOjE1ODU2NjM4NTAsImlhdCI6MTU4NTY2Mzc5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._9v4VyIUuXAObrzeDMVXEpNu0EOaO_rFTRAY5dQsdMs2c2p'} 
data={"escrowCompanyId": "001", "SELLERId": ["2f0e52d3-1f8e-45f2-aff4-178df3fd0d1d", "03021104994621"], "idNumber": "36683559016752", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200331 19:39:53.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:52.918" endtime="20200331 19:39:53.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200331 19:39:53.380" level="INFO">{"responseCode":"A01","resDescription":"Invalid access token"}</msg>
<status status="PASS" starttime="20200331 19:39:53.379" endtime="20200331 19:39:53.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:53.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:53.381" endtime="20200331 19:39:53.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:53.382" endtime="20200331 19:39:53.383"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:53.384" endtime="20200331 19:39:53.385"></status>
</kw>
<status status="PASS" starttime="20200331 19:39:52.911" endtime="20200331 19:39:53.385"></status>
</kw>
<doc>Invalid : To verify response for Invalid JWT token</doc>
<tags>
<tag>A01</tag>
</tags>
<status status="PASS" starttime="20200331 19:39:51.665" endtime="20200331 19:39:53.387" critical="yes"></status>
</test>
<test id="s1-t13" name="TC_03 UpdateSellerDetails with Expired JWT Token">
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:53.391" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:53.391" endtime="20200331 19:39:53.392"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:53.393" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:53.392" endtime="20200331 19:39:53.393"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:53.393" endtime="20200331 19:39:53.394"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:53.394" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:53.394" endtime="20200331 19:39:53.395"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:53.396" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:53.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:53.395" endtime="20200331 19:39:53.860"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:53.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:53.860" endtime="20200331 19:39:53.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:53.861" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlhFTmhMdWF2VEdrREVaQUxTVzRVRmdrTTA4aHpTK2lsdWZmSUtwdk4ya3BuNEh3MncxdGlwOUMxb0dieXNHZUtVNG9IdkVIa3l4VHU1Wm5zek9MKzA9IiwibmJmIjoxNTg1NjYzNzkyLCJleHAiOjE1ODU2NjM4NTIsImlhdCI6MTU4NTY2Mzc5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.FNn1Ls0-sBMzGSjXDSCb7tAU-9URpJcNnSHC0vjYr58</msg>
<status status="PASS" starttime="20200331 19:39:53.861" endtime="20200331 19:39:53.861"></status>
</kw>
<msg timestamp="20200331 19:39:53.862" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMlhFTmhMdWF2VEdrREVaQUxTVzRVRmdrTTA4aHpTK2l...</msg>
<status status="PASS" starttime="20200331 19:39:53.390" endtime="20200331 19:39:53.862"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:53.864" level="INFO">${Id} = 80039207365410</msg>
<status status="PASS" starttime="20200331 19:39:53.863" endtime="20200331 19:39:53.864"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:53.866" level="INFO">${IdNumber} = 80039207365410</msg>
<status status="PASS" starttime="20200331 19:39:53.865" endtime="20200331 19:39:53.866"></status>
</kw>
<msg timestamp="20200331 19:39:53.867" level="INFO">${idNum} = 80039207365410</msg>
<status status="PASS" starttime="20200331 19:39:53.862" endtime="20200331 19:39:53.867"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200331 19:39:53.869" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:53.869" endtime="20200331 19:39:53.870"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200331 19:39:53.871" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200331 19:39:53.870" endtime="20200331 19:39:53.871"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200331 19:39:53.871" endtime="20200331 19:39:53.871"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200331 19:39:53.872" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200331 19:39:53.872" endtime="20200331 19:39:53.873"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200331 19:39:53.874" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200331 19:39:54.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200331 19:39:53.873" endtime="20200331 19:39:54.333"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200331 19:39:54.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200331 19:39:54.333" endtime="20200331 19:39:54.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200331 19:39:54.335" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWdQdE4rTHZVUzlwNFE4YW96ZVdjT0lGNDBkU1dOZ0RsOTI0d1BOQWdtWUVzZ05JY0FQYjVuSVBQTDZtaGovY0pSR29ucVNjZGlCT1ZBT0t2ZWczREU9IiwibmJmIjoxNTg1NjYzNzkzLCJleHAiOjE1ODU2NjM4NTMsImlhdCI6MTU4NTY2Mzc5MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rRwJVCGFKCRd_OGR6rBBaNAYjLDuptG8X9fDC7J_fiI</msg>
<status status="PASS" starttime="20200331 19:39:54.334" endtime="20200331 19:39:54.335"></status>
</kw>
<msg timestamp="20200331 19:39:54.335" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWdQdE4rTHZVUzlwNFE4YW96ZVdjT0lGNDBkU1dOZ0R...</msg>
<status status="PASS" starttime="20200331 19:39:53.868" endtime="20200331 19:39:54.335"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200331 19:39:54.336" level="INFO">${Id} = 88623831954253</msg>
<status status="PASS" starttime="20200331 19:39:54.336" endtime="20200331 19:39:54.336"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200331 19:39:54.337" level="INFO">${IdNumber} = 88623831954253</msg>
<status status="PASS" starttime="20200331 19:39:54.337" endtime="20200331 19:39:54.337"></status>
</kw>
<msg timestamp="20200331 19:39:54.337" level="INFO">${idNum} = 88623831954253</msg>
<status status="PASS" starttime="20200331 19:39:54.336" endtime="20200331 19:39:54.337"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200331 19:39:54.339" level="INFO">${mobile} = 4095944589</msg>
<status status="PASS" starttime="20200331 19:39:54.338" endtime="20200331 19:39:54.339"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200331 19:39:54.340" level="INFO">${mobileNo} = 4095944589</msg>
<status status="PASS" starttime="20200331 19:39:54.339" endtime="20200331 19:39:54.340"></status>
</kw>
<msg timestamp="20200331 19:39:54.340" level="INFO">${MobNo} = 4095944589</msg>
<status status="PASS" starttime="20200331 19:39:54.338" endtime="20200331 19:39:54.341"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200331 19:39:54.343" level="INFO">${Emailnum} = 65525</msg>
<status status="PASS" starttime="20200331 19:39:54.342" endtime="20200331 19:39:54.343"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200331 19:39:54.344" level="INFO">${enum} = 65525</msg>
<status status="PASS" starttime="20200331 19:39:54.343" endtime="20200331 19:39:54.344"></status>
</kw>
<msg timestamp="20200331 19:39:54.344" level="INFO">${num} = 65525</msg>
<status status="PASS" starttime="20200331 19:39:54.341" endtime="20200331 19:39:54.344"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200331 19:39:54.345" level="INFO">${emailid} = pavan65525@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:54.344" endtime="20200331 19:39:54.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200331 19:39:54.346" level="INFO">${email} = pavan65525@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:54.345" endtime="20200331 19:39:54.347"></status>
</kw>
<msg timestamp="20200331 19:39:54.347" level="INFO">${emailid} = pavan65525@2c2p.com</msg>
<status status="PASS" starttime="20200331 19:39:54.341" endtime="20200331 19:39:54.347"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200331 19:39:54.350" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200331 19:39:54.350" endtime="20200331 19:39:54.351"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200331 19:39:54.351" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200331 19:39:54.351" endtime="20200331 19:39:54.352"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200331 19:39:54.352" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200331 19:39:54.352" endtime="20200331 19:39:54.352"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200331 19:39:54.354" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:54.353" endtime="20200331 19:39:54.354"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200331 19:39:54.357" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200331 19:39:54.355" endtime="20200331 19:39:54.357"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.