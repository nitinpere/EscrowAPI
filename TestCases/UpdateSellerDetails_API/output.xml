<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200402 16:38:23.088" rpa="false">
<suite id="s1" name="UpdateSellerDetails Testcases" source="C:\development\EscrowAPIProj\TestCases\UpdateSellerDetails_API\UpdateSellerDetails_Testcases.robot">
<test id="s1-t1" name="TC_44 Selle_Details_API Duplicate mobile no Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 16:38:26.520" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 16:38:23.519" endtime="20200402 16:38:26.520"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 16:38:26.523" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:26.523" endtime="20200402 16:38:26.525"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:26.526" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 16:38:26.525" endtime="20200402 16:38:26.526"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:26.527" endtime="20200402 16:38:26.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 16:38:26.531" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 16:38:26.529" endtime="20200402 16:38:26.531"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:26.533" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 16:38:27.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:26.532" endtime="20200402 16:38:27.004"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:27.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.004" endtime="20200402 16:38:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.020" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUtNU1NhcU1aYm41SjExT0hZaDN3cjB6SEFJTkxCV05odDg3TnN0Njc2Tll4K3RJNHByQjAvVDg9IiwibmJmIjoxNTg1ODI1NzA2LCJleHAiOjE1ODU4MjU3NjYsImlhdCI6MTU4NTgyNTcwNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yykNmqIwbmA1ZX6z1BOmWsilr3MgcXLq6vAgS5M1uGw</msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.020"></status>
</kw>
<msg timestamp="20200402 16:38:27.020" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUt...</msg>
<status status="PASS" starttime="20200402 16:38:26.522" endtime="20200402 16:38:27.020"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Idnum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.020" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:27.020" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.020"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 16:38:27.036" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.036"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:27.036" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 16:38:27.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.036" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:27.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.437" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0FCWXA2enBOallscHQ5b2hGdWxTTDgrQUtqMVgrMEhZOHRtWXVwMEhwbEcrOWo0KzdyUXlEZkE4WU5ESXFMOHJsdEhuUllDb3BPc1IrS0hCRFBzZHM9IiwibmJmIjoxNTg1ODI1NzA3LCJleHAiOjE1ODU4MjU3NjcsImlhdCI6MTU4NTgyNTcwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jO0VYzMRHzEW5Mbnndnrxw3NprHgwMlPUQrL-v3HPgg</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<msg timestamp="20200402 16:38:27.437" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0FCWXA2enBOallscHQ5b2hGdWxTTDgrQUtqMVgrMEh...</msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 16:38:27.437" level="INFO">${Id} = 20376351080142</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.437" level="INFO">${IdNumber} = 20376351080142</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<msg timestamp="20200402 16:38:27.437" level="INFO">${idNum} = 20376351080142</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 16:38:27.437" level="INFO">${mobile} = 7030151218</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.437"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.452" level="INFO">${mobileNo} = 7030151218</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.452"></status>
</kw>
<msg timestamp="20200402 16:38:27.452" level="INFO">${MobNo} = 7030151218</msg>
<status status="PASS" starttime="20200402 16:38:27.437" endtime="20200402 16:38:27.452"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 16:38:27.452" level="INFO">${Emailnum} = 40301</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.452" level="INFO">${enum} = 40301</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<msg timestamp="20200402 16:38:27.452" level="INFO">${num} = 40301</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 16:38:27.452" level="INFO">${emailid} = pavan40301@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.452" level="INFO">${email} = pavan40301@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<msg timestamp="20200402 16:38:27.452" level="INFO">${emailid} = pavan40301@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.452"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:27.468" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:27.468" endtime="20200402 16:38:27.468"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 16:38:27.475" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 16:38:27.475" endtime="20200402 16:38:27.475"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 16:38:27.475" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 16:38:27.475" endtime="20200402 16:38:27.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 16:38:27.475" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 16:38:27.475" endtime="20200402 16:38:27.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 16:38:27.475" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 16:38:27.475" endtime="20200402 16:38:27.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:27.490" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '20376351080142', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7030151218', 'email': 'pavan40301@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 16:38:27.475" endtime="20200402 16:38:27.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:27.490" endtime="20200402 16:38:27.490"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:27.490" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0FCWXA2enBOallscHQ5b2hGdWxTTDgrQUtq...</msg>
<status status="PASS" starttime="20200402 16:38:27.490" endtime="20200402 16:38:27.490"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:27.490" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:27.490" endtime="20200402 16:38:27.490"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:27.490" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0FCWXA2enBOallscHQ5b2hGdWxTTDgrQUtqMVgrMEhZOHRtWXVwMEhwbEcrOWo0KzdyUXlEZkE4WU5ESXFMOHJsdEhuUllDb3BPc1IrS0hCRFBzZHM9IiwibmJmIjoxNTg1ODI1NzA3LCJleHAiOjE1ODU4MjU3NjcsImlhdCI6MTU4NTgyNTcwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jO0VYzMRHzEW5Mbnndnrxw3NprHgwMlPUQrL-v3HPgg'} 
data={"escrowCompanyId": "001", "idNumber": "20376351080142", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7030151218", "email": "pavan40301@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 16:38:27.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.490" endtime="20200402 16:38:27.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:27.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:27.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:27.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:27.938"></status>
</kw>
<msg timestamp="20200402 16:38:27.938" level="INFO">${sellerid} = e1144fb2-3064-4d4e-b18f-bd0a1387d38e</msg>
<status status="PASS" starttime="20200402 16:38:27.452" endtime="20200402 16:38:27.938"></status>
</kw>
<msg timestamp="20200402 16:38:27.938" level="INFO">${SellerId} = e1144fb2-3064-4d4e-b18f-bd0a1387d38e</msg>
<msg timestamp="20200402 16:38:27.938" level="INFO">${Idnum} = 20376351080142</msg>
<status status="PASS" starttime="20200402 16:38:27.020" endtime="20200402 16:38:27.938"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerIdno1}</var>
<var>${Idnum`}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 16:38:27.938" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:27.938"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:27.954" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 16:38:27.954" endtime="20200402 16:38:27.954"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:27.954" endtime="20200402 16:38:27.954"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 16:38:27.954" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 16:38:27.954" endtime="20200402 16:38:27.954"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:27.954" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 16:38:28.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:27.954" endtime="20200402 16:38:28.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:28.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:28.347" endtime="20200402 16:38:28.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 16:38:28.350" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHg4UUwrTlB3bWVLTEZHaVROMjBRNG9takhqUG1iN2tZeG9US2hxQmFCVEs2VFgrUEdRN2M0eHFncnE2eWl4VmZLbFJoYWhWN1VVWFg4R2xLbDN6ZEE9IiwibmJmIjoxNTg1ODI1NzA4LCJleHAiOjE1ODU4MjU3NjgsImlhdCI6MTU4NTgyNTcwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P_bs2giOLdCU0Msb4izWlWs3S007oFQ5ZMjw4D77raI</msg>
<status status="PASS" starttime="20200402 16:38:28.349" endtime="20200402 16:38:28.351"></status>
</kw>
<msg timestamp="20200402 16:38:28.352" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHg4UUwrTlB3bWVLTEZHaVROMjBRNG9takhqUG1iN2t...</msg>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:28.352"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 16:38:28.355" level="INFO">${Id} = 11779838289935</msg>
<status status="PASS" starttime="20200402 16:38:28.354" endtime="20200402 16:38:28.355"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 16:38:28.357" level="INFO">${IdNumber} = 11779838289935</msg>
<status status="PASS" starttime="20200402 16:38:28.355" endtime="20200402 16:38:28.357"></status>
</kw>
<msg timestamp="20200402 16:38:28.358" level="INFO">${idNum} = 11779838289935</msg>
<status status="PASS" starttime="20200402 16:38:28.352" endtime="20200402 16:38:28.358"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 16:38:28.360" level="INFO">${mobile} = 2977656146</msg>
<status status="PASS" starttime="20200402 16:38:28.360" endtime="20200402 16:38:28.361"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 16:38:28.364" level="INFO">${mobileNo} = 2977656146</msg>
<status status="PASS" starttime="20200402 16:38:28.362" endtime="20200402 16:38:28.364"></status>
</kw>
<msg timestamp="20200402 16:38:28.365" level="INFO">${MobNo} = 2977656146</msg>
<status status="PASS" starttime="20200402 16:38:28.358" endtime="20200402 16:38:28.365"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 16:38:28.367" level="INFO">${Emailnum} = 56102</msg>
<status status="PASS" starttime="20200402 16:38:28.366" endtime="20200402 16:38:28.367"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 16:38:28.368" level="INFO">${enum} = 56102</msg>
<status status="PASS" starttime="20200402 16:38:28.367" endtime="20200402 16:38:28.368"></status>
</kw>
<msg timestamp="20200402 16:38:28.368" level="INFO">${num} = 56102</msg>
<status status="PASS" starttime="20200402 16:38:28.366" endtime="20200402 16:38:28.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 16:38:28.369" level="INFO">${emailid} = pavan56102@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:28.369" endtime="20200402 16:38:28.369"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 16:38:28.370" level="INFO">${email} = pavan56102@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:28.369" endtime="20200402 16:38:28.370"></status>
</kw>
<msg timestamp="20200402 16:38:28.370" level="INFO">${emailid} = pavan56102@2c2p.com</msg>
<status status="PASS" starttime="20200402 16:38:28.365" endtime="20200402 16:38:28.370"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:28.375" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:28.375" endtime="20200402 16:38:28.376"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 16:38:28.377" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 16:38:28.376" endtime="20200402 16:38:28.377"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 16:38:28.377" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 16:38:28.377" endtime="20200402 16:38:28.377"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 16:38:28.380" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 16:38:28.378" endtime="20200402 16:38:28.380"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 16:38:28.382" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 16:38:28.380" endtime="20200402 16:38:28.382"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:28.385" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '11779838289935', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2977656146', 'email': 'pavan56102@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 16:38:28.382" endtime="20200402 16:38:28.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:28.385" endtime="20200402 16:38:28.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:28.388" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHg4UUwrTlB3bWVLTEZHaVROMjBRNG9takhq...</msg>
<status status="PASS" starttime="20200402 16:38:28.387" endtime="20200402 16:38:28.388"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:28.389" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:28.388" endtime="20200402 16:38:28.389"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:28.390" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOHg4UUwrTlB3bWVLTEZHaVROMjBRNG9takhqUG1iN2tZeG9US2hxQmFCVEs2VFgrUEdRN2M0eHFncnE2eWl4VmZLbFJoYWhWN1VVWFg4R2xLbDN6ZEE9IiwibmJmIjoxNTg1ODI1NzA4LCJleHAiOjE1ODU4MjU3NjgsImlhdCI6MTU4NTgyNTcwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P_bs2giOLdCU0Msb4izWlWs3S007oFQ5ZMjw4D77raI'} 
data={"escrowCompanyId": "001", "idNumber": "11779838289935", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2977656146", "email": "pavan56102@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 16:38:28.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:28.389" endtime="20200402 16:38:28.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:28.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:28.831" endtime="20200402 16:38:28.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:28.832" endtime="20200402 16:38:28.834"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:28.834" endtime="20200402 16:38:28.836"></status>
</kw>
<msg timestamp="20200402 16:38:28.838" level="INFO">${sellerid} = 576603cc-bf38-4f68-92ab-1db282b1465d</msg>
<status status="PASS" starttime="20200402 16:38:28.371" endtime="20200402 16:38:28.838"></status>
</kw>
<msg timestamp="20200402 16:38:28.838" level="INFO">${SellerIdno1} = 576603cc-bf38-4f68-92ab-1db282b1465d</msg>
<msg timestamp="20200402 16:38:28.839" level="INFO">${Idnum`} = 11779838289935</msg>
<status status="PASS" starttime="20200402 16:38:27.938" endtime="20200402 16:38:28.839"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerIdno1}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:28.842" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:28.842" endtime="20200402 16:38:28.843"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 16:38:28.845" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 16:38:28.844" endtime="20200402 16:38:28.845"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:28.848" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '576603cc-bf38-4f68-92ab-1db282b1465d', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 16:38:28.846" endtime="20200402 16:38:28.848"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:28.849" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhY...</msg>
<status status="PASS" starttime="20200402 16:38:28.848" endtime="20200402 16:38:28.849"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:28.851" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:28.850" endtime="20200402 16:38:28.851"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:28.853" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUtNU1NhcU1aYm41SjExT0hZaDN3cjB6SEFJTkxCV05odDg3TnN0Njc2Tll4K3RJNHByQjAvVDg9IiwibmJmIjoxNTg1ODI1NzA2LCJleHAiOjE1ODU4MjU3NjYsImlhdCI6MTU4NTgyNTcwNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yykNmqIwbmA1ZX6z1BOmWsilr3MgcXLq6vAgS5M1uGw'} 
data={"escrowCompanyId": "001", "SELLERId": "576603cc-bf38-4f68-92ab-1db282b1465d", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 16:38:29.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:28.852" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:29.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:29.762"></status>
</kw>
<status status="PASS" starttime="20200402 16:38:28.840" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerIdno1}</arg>
<arg>mobileNo</arg>
</arguments>
<assign>
<var>${MobNo1}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:29.762" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:29.762" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '576603cc-bf38-4f68-92ab-1db282b1465d'}</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:29.762" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhY...</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:29.762" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:29.762"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:29.762" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUtNU1NhcU1aYm41SjExT0hZaDN3cjB6SEFJTkxCV05odDg3TnN0Njc2Tll4K3RJNHByQjAvVDg9IiwibmJmIjoxNTg1ODI1NzA2LCJleHAiOjE1ODU4MjU3NjYsImlhdCI6MTU4NTgyNTcwNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yykNmqIwbmA1ZX6z1BOmWsilr3MgcXLq6vAgS5M1uGw'} 
data={"escrowCompanyId": "001", "sellerID": "576603cc-bf38-4f68-92ab-1db282b1465d"} 
json=None</msg>
<msg timestamp="20200402 16:38:30.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:30.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:30.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:30.147" endtime="20200402 16:38:30.163"></status>
</kw>
<msg timestamp="20200402 16:38:30.163" level="INFO">${MobNo1} = 2977656146</msg>
<status status="PASS" starttime="20200402 16:38:29.762" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo1}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:30.163" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 16:38:30.163" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:30.163" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '2977656146', 'SELLERId': 'e1144fb2-3064-4d4e-b18f-bd0a1387d38e', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:30.163" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhY...</msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:30.163" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.163"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:30.163" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUtNU1NhcU1aYm41SjExT0hZaDN3cjB6SEFJTkxCV05odDg3TnN0Njc2Tll4K3RJNHByQjAvVDg9IiwibmJmIjoxNTg1ODI1NzA2LCJleHAiOjE1ODU4MjU3NjYsImlhdCI6MTU4NTgyNTcwNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yykNmqIwbmA1ZX6z1BOmWsilr3MgcXLq6vAgS5M1uGw'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "2977656146", "SELLERId": "e1144fb2-3064-4d4e-b18f-bd0a1387d38e", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 16:38:30.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 16:38:30.588" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 16:38:30.586" endtime="20200402 16:38:30.588"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:30.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:30.589" endtime="20200402 16:38:30.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:30.590" endtime="20200402 16:38:30.592"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 16:38:30.592" endtime="20200402 16:38:30.593"></status>
</kw>
<status status="PASS" starttime="20200402 16:38:30.163" endtime="20200402 16:38:30.594"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 16:38:30.598" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 16:38:30.597" endtime="20200402 16:38:30.598"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 16:38:30.600" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'e1144fb2-3064-4d4e-b18f-bd0a1387d38e'}</msg>
<status status="PASS" starttime="20200402 16:38:30.599" endtime="20200402 16:38:30.600"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 16:38:30.602" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhY...</msg>
<status status="PASS" starttime="20200402 16:38:30.601" endtime="20200402 16:38:30.602"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 16:38:30.603" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 16:38:30.602" endtime="20200402 16:38:30.603"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 16:38:30.605" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qdzg0K2lTbkpQZm9GUEp2WXFUZW9GMks2RVhYSVZlQUtNU1NhcU1aYm41SjExT0hZaDN3cjB6SEFJTkxCV05odDg3TnN0Njc2Tll4K3RJNHByQjAvVDg9IiwibmJmIjoxNTg1ODI1NzA2LCJleHAiOjE1ODU4MjU3NjYsImlhdCI6MTU4NTgyNTcwNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yykNmqIwbmA1ZX6z1BOmWsilr3MgcXLq6vAgS5M1uGw'} 
data={"escrowCompanyId": "001", "sellerID": "e1144fb2-3064-4d4e-b18f-bd0a1387d38e"} 
json=None</msg>
<msg timestamp="20200402 16:38:30.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 16:38:30.604" endtime="20200402 16:38:30.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 16:38:30.997" level="INFO">{"escrowCompanyId":"001","sellerId":"e1144fb2-3064-4d4e-b18f-bd0a1387d38e","idNumber":"20376351080142","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2977656146","email":"pavan40301@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 06:08:27","updateDate":"02/04/2020 06:08:30","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 16:38:30.996" endtime="20200402 16:38:30.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 16:38:31.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 16:38:30.999" endtime="20200402 16:38:31.000"></status>
</kw>
<status status="PASS" starttime="20200402 16:38:30.595" endtime="20200402 16:38:31.001"></status>
</kw>
<doc>Duplicate : To check Mobile number is entered duplicate (duplicate mobile number should belong to Seller status = terminated ) and request is send with all mandatory fields</doc>
<tags>
<tag>0000</tag>
</tags>
<status status="PASS" starttime="20200402 16:38:23.518" endtime="20200402 16:38:31.002" critical="yes"></status>
</test>
<status status="PASS" starttime="20200402 16:38:23.090" endtime="20200402 16:38:31.007"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">0000</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="UpdateSellerDetails Testcases">UpdateSellerDetails Testcases</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200402 16:38:23.477" level="ERROR">Error in file 'C:\development\EscrowAPIProj\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Get Token.robot' does not exist.</msg>
<msg timestamp="20200402 16:38:23.478" level="ERROR">Error in file 'C:\development\EscrowAPIProj\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Register_Global_Keywords.robot' does not exist.</msg>
</errors>
</robot>
