<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200402 12:45:01.508" rpa="false">
<suite id="s1" name="UpdateSellerDetails Testcases" source="C:\Users\perennial\PycharmProjects\EscrowAPI\TestCases\UpdateSellerDetails_API\UpdateSellerDetails_Testcases.robot">
<test id="s1-t1" name="TC_06 UpdateSellerDetails request parameter of Update">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:05.150" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:02.149" endtime="20200402 12:45:05.150"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:05.152" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:05.152" endtime="20200402 12:45:05.153"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:05.155" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:05.154" endtime="20200402 12:45:05.155"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:05.155" endtime="20200402 12:45:05.156"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:05.158" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:05.157" endtime="20200402 12:45:05.158"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:05.159" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:11.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:05.158" endtime="20200402 12:45:11.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:11.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:11.400" endtime="20200402 12:45:11.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.401" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3lZZlRkV1hCWUdHQkJ2aE8wajRFUEFJUHh0TFdLZWxwMUZwM3pwMHFFZlMwTU83bHo5WkVxZzZYQ1FQU0RzaE1BQit6MHVTMzZkZUdldlR5TlNFSm89IiwibmJmIjoxNTg1ODExNzA4LCJleHAiOjE1ODU4MTE3NjgsImlhdCI6MTU4NTgxMTcwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TdRGGz-mIzYk_E2LoySHW8we0TY2nSfIfqgVpjG438c</msg>
<status status="PASS" starttime="20200402 12:45:11.400" endtime="20200402 12:45:11.402"></status>
</kw>
<msg timestamp="20200402 12:45:11.402" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3lZZlRkV1hCWUdHQkJ2aE8wajRFUEFJUHh0TFdLZWx...</msg>
<status status="PASS" starttime="20200402 12:45:05.151" endtime="20200402 12:45:11.402"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:11.404" level="INFO">${Id} = 16366653826600</msg>
<status status="PASS" starttime="20200402 12:45:11.403" endtime="20200402 12:45:11.404"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.404" level="INFO">${IdNumber} = 16366653826600</msg>
<status status="PASS" starttime="20200402 12:45:11.404" endtime="20200402 12:45:11.404"></status>
</kw>
<msg timestamp="20200402 12:45:11.404" level="INFO">${idNum} = 16366653826600</msg>
<status status="PASS" starttime="20200402 12:45:11.403" endtime="20200402 12:45:11.405"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:11.406" level="INFO">${mobile} = 4510682929</msg>
<status status="PASS" starttime="20200402 12:45:11.406" endtime="20200402 12:45:11.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.407" level="INFO">${mobileNo} = 4510682929</msg>
<status status="PASS" starttime="20200402 12:45:11.407" endtime="20200402 12:45:11.407"></status>
</kw>
<msg timestamp="20200402 12:45:11.408" level="INFO">${MobNo} = 4510682929</msg>
<status status="PASS" starttime="20200402 12:45:11.405" endtime="20200402 12:45:11.408"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:11.409" level="INFO">${Emailnum} = 18270</msg>
<status status="PASS" starttime="20200402 12:45:11.409" endtime="20200402 12:45:11.410"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.410" level="INFO">${enum} = 18270</msg>
<status status="PASS" starttime="20200402 12:45:11.410" endtime="20200402 12:45:11.410"></status>
</kw>
<msg timestamp="20200402 12:45:11.411" level="INFO">${num} = 18270</msg>
<status status="PASS" starttime="20200402 12:45:11.409" endtime="20200402 12:45:11.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:11.411" level="INFO">${emailid} = pavan18270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:11.411" endtime="20200402 12:45:11.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.412" level="INFO">${email} = pavan18270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:11.412" endtime="20200402 12:45:11.412"></status>
</kw>
<msg timestamp="20200402 12:45:11.412" level="INFO">${emailid} = pavan18270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:11.408" endtime="20200402 12:45:11.412"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:11.414" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:11.413" endtime="20200402 12:45:11.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:11.415" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:11.414" endtime="20200402 12:45:11.415"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:11.415" endtime="20200402 12:45:11.415"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:11.416" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:11.415" endtime="20200402 12:45:11.416"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:11.416" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:12.208" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:11.416" endtime="20200402 12:45:12.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:12.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:12.209" endtime="20200402 12:45:12.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:12.211" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTdYOUFoOWFvbzZCaWVCclVRSnVQMFlFa2ZTOEU0M0VEbFpHSVUwOXNpdWcybEFCZnF2UUdMek52NC9JWW9GUXc3blFsRG81WWloZWVkbGNBdjh5UUk9IiwibmJmIjoxNTg1ODExNzA5LCJleHAiOjE1ODU4MTE3NjksImlhdCI6MTU4NTgxMTcwOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I5q-4Uh_dWk8CEetuzzb7DrUJmk92Wuc71ncOyHdoj4</msg>
<status status="PASS" starttime="20200402 12:45:12.210" endtime="20200402 12:45:12.211"></status>
</kw>
<msg timestamp="20200402 12:45:12.211" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTdYOUFoOWFvbzZCaWVCclVRSnVQMFlFa2ZTOEU0M0V...</msg>
<status status="PASS" starttime="20200402 12:45:11.413" endtime="20200402 12:45:12.212"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:12.213" level="INFO">${Id} = 00969825373322</msg>
<status status="PASS" starttime="20200402 12:45:12.213" endtime="20200402 12:45:12.213"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:12.214" level="INFO">${IdNumber} = 00969825373322</msg>
<status status="PASS" starttime="20200402 12:45:12.214" endtime="20200402 12:45:12.214"></status>
</kw>
<msg timestamp="20200402 12:45:12.215" level="INFO">${idNum} = 00969825373322</msg>
<status status="PASS" starttime="20200402 12:45:12.212" endtime="20200402 12:45:12.215"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:12.216" level="INFO">${mobile} = 1884211701</msg>
<status status="PASS" starttime="20200402 12:45:12.216" endtime="20200402 12:45:12.216"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:12.217" level="INFO">${mobileNo} = 1884211701</msg>
<status status="PASS" starttime="20200402 12:45:12.217" endtime="20200402 12:45:12.218"></status>
</kw>
<msg timestamp="20200402 12:45:12.218" level="INFO">${MobNo} = 1884211701</msg>
<status status="PASS" starttime="20200402 12:45:12.215" endtime="20200402 12:45:12.218"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:12.220" level="INFO">${Emailnum} = 48037</msg>
<status status="PASS" starttime="20200402 12:45:12.220" endtime="20200402 12:45:12.220"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:12.221" level="INFO">${enum} = 48037</msg>
<status status="PASS" starttime="20200402 12:45:12.220" endtime="20200402 12:45:12.221"></status>
</kw>
<msg timestamp="20200402 12:45:12.221" level="INFO">${num} = 48037</msg>
<status status="PASS" starttime="20200402 12:45:12.219" endtime="20200402 12:45:12.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:12.222" level="INFO">${emailid} = pavan48037@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:12.222" endtime="20200402 12:45:12.222"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:12.223" level="INFO">${email} = pavan48037@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:12.223" endtime="20200402 12:45:12.223"></status>
</kw>
<msg timestamp="20200402 12:45:12.224" level="INFO">${emailid} = pavan48037@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:12.219" endtime="20200402 12:45:12.224"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:12.228" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:12.227" endtime="20200402 12:45:12.228"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:12.229" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:12.228" endtime="20200402 12:45:12.229"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:12.230" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:12.229" endtime="20200402 12:45:12.230"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:12.234" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:12.230" endtime="20200402 12:45:12.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:12.236" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:12.234" endtime="20200402 12:45:12.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:12.241" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '00969825373322', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1884211701', 'email': 'pavan48037@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:12.237" endtime="20200402 12:45:12.242"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:12.242" endtime="20200402 12:45:12.257"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:12.258" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTdYOUFoOWFvbzZCaWVCclVRSnVQMFlFa2ZT...</msg>
<status status="PASS" starttime="20200402 12:45:12.257" endtime="20200402 12:45:12.258"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:12.259" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:12.258" endtime="20200402 12:45:12.259"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:12.260" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTdYOUFoOWFvbzZCaWVCclVRSnVQMFlFa2ZTOEU0M0VEbFpHSVUwOXNpdWcybEFCZnF2UUdMek52NC9JWW9GUXc3blFsRG81WWloZWVkbGNBdjh5UUk9IiwibmJmIjoxNTg1ODExNzA5LCJleHAiOjE1ODU4MTE3NjksImlhdCI6MTU4NTgxMTcwOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I5q-4Uh_dWk8CEetuzzb7DrUJmk92Wuc71ncOyHdoj4'} 
data={"escrowCompanyId": "001", "idNumber": "00969825373322", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1884211701", "email": "pavan48037@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:12.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:12.259" endtime="20200402 12:45:12.510"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:12.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:12.511" endtime="20200402 12:45:12.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:12.512" endtime="20200402 12:45:12.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:12.513" endtime="20200402 12:45:12.514"></status>
</kw>
<msg timestamp="20200402 12:45:12.515" level="INFO">${sellerid} = 83ea6cc8-3ba4-402a-b5c4-5d59b48dbd48</msg>
<status status="PASS" starttime="20200402 12:45:12.224" endtime="20200402 12:45:12.515"></status>
</kw>
<msg timestamp="20200402 12:45:12.515" level="INFO">${SellerId} = 83ea6cc8-3ba4-402a-b5c4-5d59b48dbd48</msg>
<msg timestamp="20200402 12:45:12.515" level="INFO">${idnumber} = 00969825373322</msg>
<status status="PASS" starttime="20200402 12:45:11.413" endtime="20200402 12:45:12.516"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:12.519" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:12.519" endtime="20200402 12:45:12.520"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:12.521" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:12.520" endtime="20200402 12:45:12.521"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:12.522" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:12.521" endtime="20200402 12:45:12.522"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:12.524" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:12.522" endtime="20200402 12:45:12.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:12.526" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:12.524" endtime="20200402 12:45:12.526"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:12.529" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '83ea6cc8-3ba4-402a-b5c4-5d59b48dbd48', 'idNumber': '16366653826600', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4510682929', 'email': 'pavan18270@2c...</msg>
<status status="PASS" starttime="20200402 12:45:12.526" endtime="20200402 12:45:12.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:12.530" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3lZZlRkV1hCWUdHQkJ2aE8wajRFUEFJUHh0...</msg>
<status status="PASS" starttime="20200402 12:45:12.529" endtime="20200402 12:45:12.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:12.530" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:12.530" endtime="20200402 12:45:12.530"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:12.531" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3lZZlRkV1hCWUdHQkJ2aE8wajRFUEFJUHh0TFdLZWxwMUZwM3pwMHFFZlMwTU83bHo5WkVxZzZYQ1FQU0RzaE1BQit6MHVTMzZkZUdldlR5TlNFSm89IiwibmJmIjoxNTg1ODExNzA4LCJleHAiOjE1ODU4MTE3NjgsImlhdCI6MTU4NTgxMTcwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TdRGGz-mIzYk_E2LoySHW8we0TY2nSfIfqgVpjG438c'} 
data={"escrowCompanyId": "001", "SELLERId": "83ea6cc8-3ba4-402a-b5c4-5d59b48dbd48", "idNumber": "16366653826600", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4510682929", "email": "pavan18270@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:12.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:12.531" endtime="20200402 12:45:12.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:12.813" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:12.812" endtime="20200402 12:45:12.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:12.813" endtime="20200402 12:45:12.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:12.815" endtime="20200402 12:45:12.816"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:12.516" endtime="20200402 12:45:12.816"></status>
</kw>
<doc>Valid: To Verify request parameters of Register Seller API</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:02.147" endtime="20200402 12:45:12.817" critical="yes"></status>
</test>
<test id="s1-t2" name="TC_07 Request Update Seller Details API">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:15.820" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:12.820" endtime="20200402 12:45:15.820"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:15.822" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:15.821" endtime="20200402 12:45:15.822"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:15.823" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:15.822" endtime="20200402 12:45:15.823"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:15.824" endtime="20200402 12:45:15.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:15.825" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:15.825" endtime="20200402 12:45:15.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:15.827" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:16.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:15.826" endtime="20200402 12:45:16.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:16.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:16.069" endtime="20200402 12:45:16.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.071" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFcwaG0rTzg4ZUhsVldnUktJbEVqT0sxcXpKcDRHR0ZacEtUSVVtcEdjNFM5ZU1vQm5XT2h2RHNsNzJMT0V6T3prRVBvRU91VDM2Q2FhWFd6Um13MWc9IiwibmJmIjoxNTg1ODExNzEzLCJleHAiOjE1ODU4MTE3NzMsImlhdCI6MTU4NTgxMTcxMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.nZP1nGsS2PQGzs28pySnRIMHtafcZg0Zx-ut9JGpdY0</msg>
<status status="PASS" starttime="20200402 12:45:16.070" endtime="20200402 12:45:16.071"></status>
</kw>
<msg timestamp="20200402 12:45:16.072" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFcwaG0rTzg4ZUhsVldnUktJbEVqT0sxcXpKcDRHR0Z...</msg>
<status status="PASS" starttime="20200402 12:45:15.821" endtime="20200402 12:45:16.072"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.073" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:16.073" endtime="20200402 12:45:16.074"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:16.074" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:16.074" endtime="20200402 12:45:16.074"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:16.075" endtime="20200402 12:45:16.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:16.076" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:16.075" endtime="20200402 12:45:16.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:16.076" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:16.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:16.076" endtime="20200402 12:45:16.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:16.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:16.580" endtime="20200402 12:45:16.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.582" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTh6M2F6QmlyU1JTNjdqMmRLRmNWUlBqS0l4QWNYRnBvY3k1MGdpVE5YbTZpeGtXb3hLNnhsbkVCcklZdk9MM3JRMk53eXNsaXZzRlhQQ2JDSTFPNHc9IiwibmJmIjoxNTg1ODExNzE0LCJleHAiOjE1ODU4MTE3NzQsImlhdCI6MTU4NTgxMTcxNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8dP2fgamQ2jb7e4aV_e1aLjUZjLiMYKYhsQlp7H0lkY</msg>
<status status="PASS" starttime="20200402 12:45:16.581" endtime="20200402 12:45:16.582"></status>
</kw>
<msg timestamp="20200402 12:45:16.582" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTh6M2F6QmlyU1JTNjdqMmRLRmNWUlBqS0l4QWNYRnB...</msg>
<status status="PASS" starttime="20200402 12:45:16.073" endtime="20200402 12:45:16.582"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:16.583" level="INFO">${Id} = 08590652969603</msg>
<status status="PASS" starttime="20200402 12:45:16.583" endtime="20200402 12:45:16.583"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.584" level="INFO">${IdNumber} = 08590652969603</msg>
<status status="PASS" starttime="20200402 12:45:16.584" endtime="20200402 12:45:16.584"></status>
</kw>
<msg timestamp="20200402 12:45:16.584" level="INFO">${idNum} = 08590652969603</msg>
<status status="PASS" starttime="20200402 12:45:16.583" endtime="20200402 12:45:16.584"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:16.585" level="INFO">${mobile} = 0928517857</msg>
<status status="PASS" starttime="20200402 12:45:16.585" endtime="20200402 12:45:16.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.586" level="INFO">${mobileNo} = 0928517857</msg>
<status status="PASS" starttime="20200402 12:45:16.586" endtime="20200402 12:45:16.586"></status>
</kw>
<msg timestamp="20200402 12:45:16.587" level="INFO">${MobNo} = 0928517857</msg>
<status status="PASS" starttime="20200402 12:45:16.585" endtime="20200402 12:45:16.587"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:16.589" level="INFO">${Emailnum} = 39547</msg>
<status status="PASS" starttime="20200402 12:45:16.588" endtime="20200402 12:45:16.589"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.590" level="INFO">${enum} = 39547</msg>
<status status="PASS" starttime="20200402 12:45:16.589" endtime="20200402 12:45:16.590"></status>
</kw>
<msg timestamp="20200402 12:45:16.590" level="INFO">${num} = 39547</msg>
<status status="PASS" starttime="20200402 12:45:16.588" endtime="20200402 12:45:16.590"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:16.591" level="INFO">${emailid} = pavan39547@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:16.591" endtime="20200402 12:45:16.591"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.592" level="INFO">${email} = pavan39547@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:16.591" endtime="20200402 12:45:16.592"></status>
</kw>
<msg timestamp="20200402 12:45:16.592" level="INFO">${emailid} = pavan39547@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:16.587" endtime="20200402 12:45:16.592"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:16.596" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:16.596" endtime="20200402 12:45:16.596"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:16.597" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:16.597" endtime="20200402 12:45:16.597"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:16.598" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:16.597" endtime="20200402 12:45:16.598"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:16.600" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:16.598" endtime="20200402 12:45:16.600"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:16.602" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:16.600" endtime="20200402 12:45:16.603"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:16.606" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '08590652969603', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0928517857', 'email': 'pavan39547@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:16.603" endtime="20200402 12:45:16.606"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:16.606" endtime="20200402 12:45:16.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:16.609" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTh6M2F6QmlyU1JTNjdqMmRLRmNWUlBqS0l4...</msg>
<status status="PASS" starttime="20200402 12:45:16.608" endtime="20200402 12:45:16.609"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:16.610" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:16.609" endtime="20200402 12:45:16.610"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:16.610" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTh6M2F6QmlyU1JTNjdqMmRLRmNWUlBqS0l4QWNYRnBvY3k1MGdpVE5YbTZpeGtXb3hLNnhsbkVCcklZdk9MM3JRMk53eXNsaXZzRlhQQ2JDSTFPNHc9IiwibmJmIjoxNTg1ODExNzE0LCJleHAiOjE1ODU4MTE3NzQsImlhdCI6MTU4NTgxMTcxNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8dP2fgamQ2jb7e4aV_e1aLjUZjLiMYKYhsQlp7H0lkY'} 
data={"escrowCompanyId": "001", "idNumber": "08590652969603", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0928517857", "email": "pavan39547@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:16.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:16.610" endtime="20200402 12:45:16.839"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:16.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:16.840" endtime="20200402 12:45:16.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 12:45:16.842" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 12:45:16.841" endtime="20200402 12:45:16.842"></status>
</kw>
<status status="FAIL" starttime="20200402 12:45:16.593" endtime="20200402 12:45:16.843"></status>
</kw>
<status status="FAIL" starttime="20200402 12:45:16.072" endtime="20200402 12:45:16.843"></status>
</kw>
<doc>Valid: To Verify response parameter of Update Seller Detail API</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 12:45:12.818" endtime="20200402 12:45:16.844" critical="yes">R03 != 000</status>
</test>
<test id="s1-t3" name="TC_08 Empty body">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:19.849" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:16.848" endtime="20200402 12:45:19.849"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:19.851" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:19.850" endtime="20200402 12:45:19.851"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:19.851" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:19.851" endtime="20200402 12:45:19.852"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:19.852" endtime="20200402 12:45:19.852"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:19.853" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:19.852" endtime="20200402 12:45:19.853"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:19.853" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:20.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:19.853" endtime="20200402 12:45:20.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:20.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.346" endtime="20200402 12:45:20.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.352" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGtIZkdCOWIxNWRET0FQSDV2NjR3ZzRPNk5wNWRhWWFaQjI2dHVML1VLOVhUa09Nek03NXBROHM4TEh6QThJZzRnZlB2czc4YitvaDhtYzdJdEhFUHc9IiwibmJmIjoxNTg1ODExNzE3LCJleHAiOjE1ODU4MTE3NzcsImlhdCI6MTU4NTgxMTcxNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.MJXwhCD0kFLfh2OOmivHEcQ_kc4DlMRN_DwAHFNNYng</msg>
<status status="PASS" starttime="20200402 12:45:20.351" endtime="20200402 12:45:20.352"></status>
</kw>
<msg timestamp="20200402 12:45:20.353" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGtIZkdCOWIxNWRET0FQSDV2NjR3ZzRPNk5wNWRhWWF...</msg>
<status status="PASS" starttime="20200402 12:45:19.850" endtime="20200402 12:45:20.353"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.355" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:20.355" endtime="20200402 12:45:20.355"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:20.356" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:20.356" endtime="20200402 12:45:20.356"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:20.356" endtime="20200402 12:45:20.357"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:20.357" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:20.357" endtime="20200402 12:45:20.357"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:20.358" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:20.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.358" endtime="20200402 12:45:20.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:20.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.541" endtime="20200402 12:45:20.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.542" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODdaYmJ6Vzc0cThXWm5EMTZCQkI5SGM3aU5EWERBc1g3eFl5THlTVnRFY1hJOGNwNG1WNU9PRU1xY2lFUVE4RloxSFU3SXhtTXBRNGJ1UGpOM3lxa3c9IiwibmJmIjoxNTg1ODExNzE4LCJleHAiOjE1ODU4MTE3NzgsImlhdCI6MTU4NTgxMTcxOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4e-6LVcOyyfLX2Ga9M01zknl50ZBO47__FNRLq_zAW4</msg>
<status status="PASS" starttime="20200402 12:45:20.541" endtime="20200402 12:45:20.542"></status>
</kw>
<msg timestamp="20200402 12:45:20.542" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODdaYmJ6Vzc0cThXWm5EMTZCQkI5SGM3aU5EWERBc1g...</msg>
<status status="PASS" starttime="20200402 12:45:20.354" endtime="20200402 12:45:20.542"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:20.543" level="INFO">${Id} = 07740901660760</msg>
<status status="PASS" starttime="20200402 12:45:20.543" endtime="20200402 12:45:20.543"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.544" level="INFO">${IdNumber} = 07740901660760</msg>
<status status="PASS" starttime="20200402 12:45:20.543" endtime="20200402 12:45:20.544"></status>
</kw>
<msg timestamp="20200402 12:45:20.544" level="INFO">${idNum} = 07740901660760</msg>
<status status="PASS" starttime="20200402 12:45:20.542" endtime="20200402 12:45:20.544"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:20.545" level="INFO">${mobile} = 2752570196</msg>
<status status="PASS" starttime="20200402 12:45:20.544" endtime="20200402 12:45:20.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.545" level="INFO">${mobileNo} = 2752570196</msg>
<status status="PASS" starttime="20200402 12:45:20.545" endtime="20200402 12:45:20.545"></status>
</kw>
<msg timestamp="20200402 12:45:20.546" level="INFO">${MobNo} = 2752570196</msg>
<status status="PASS" starttime="20200402 12:45:20.544" endtime="20200402 12:45:20.546"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:20.547" level="INFO">${Emailnum} = 81566</msg>
<status status="PASS" starttime="20200402 12:45:20.546" endtime="20200402 12:45:20.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.547" level="INFO">${enum} = 81566</msg>
<status status="PASS" starttime="20200402 12:45:20.547" endtime="20200402 12:45:20.548"></status>
</kw>
<msg timestamp="20200402 12:45:20.548" level="INFO">${num} = 81566</msg>
<status status="PASS" starttime="20200402 12:45:20.546" endtime="20200402 12:45:20.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:20.548" level="INFO">${emailid} = pavan81566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:20.548" endtime="20200402 12:45:20.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:20.549" level="INFO">${email} = pavan81566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:20.549" endtime="20200402 12:45:20.549"></status>
</kw>
<msg timestamp="20200402 12:45:20.549" level="INFO">${emailid} = pavan81566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:20.546" endtime="20200402 12:45:20.549"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:20.552" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:20.551" endtime="20200402 12:45:20.552"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:20.553" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:20.552" endtime="20200402 12:45:20.553"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:20.553" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:20.553" endtime="20200402 12:45:20.553"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:20.554" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:20.553" endtime="20200402 12:45:20.554"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:20.556" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:20.555" endtime="20200402 12:45:20.556"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:20.558" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '07740901660760', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2752570196', 'email': 'pavan81566@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:20.556" endtime="20200402 12:45:20.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:20.558" endtime="20200402 12:45:20.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:20.560" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODdaYmJ6Vzc0cThXWm5EMTZCQkI5SGM3aU5E...</msg>
<status status="PASS" starttime="20200402 12:45:20.560" endtime="20200402 12:45:20.560"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:20.561" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:20.560" endtime="20200402 12:45:20.561"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:20.562" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODdaYmJ6Vzc0cThXWm5EMTZCQkI5SGM3aU5EWERBc1g3eFl5THlTVnRFY1hJOGNwNG1WNU9PRU1xY2lFUVE4RloxSFU3SXhtTXBRNGJ1UGpOM3lxa3c9IiwibmJmIjoxNTg1ODExNzE4LCJleHAiOjE1ODU4MTE3NzgsImlhdCI6MTU4NTgxMTcxOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4e-6LVcOyyfLX2Ga9M01zknl50ZBO47__FNRLq_zAW4'} 
data={"escrowCompanyId": "001", "idNumber": "07740901660760", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2752570196", "email": "pavan81566@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:20.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.561" endtime="20200402 12:45:20.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:20.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.831" endtime="20200402 12:45:20.831"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:20.831" endtime="20200402 12:45:20.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:20.832" endtime="20200402 12:45:20.832"></status>
</kw>
<msg timestamp="20200402 12:45:20.833" level="INFO">${sellerid} = b7f906ef-fb43-4fe3-bd9d-f70591c0526d</msg>
<status status="PASS" starttime="20200402 12:45:20.549" endtime="20200402 12:45:20.833"></status>
</kw>
<msg timestamp="20200402 12:45:20.833" level="INFO">${SellerId} = b7f906ef-fb43-4fe3-bd9d-f70591c0526d</msg>
<msg timestamp="20200402 12:45:20.833" level="INFO">${idnumber} = 07740901660760</msg>
<status status="PASS" starttime="20200402 12:45:20.354" endtime="20200402 12:45:20.833"></status>
</kw>
<kw name="UpdateSellerDetails_Empty_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:20.835" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:20.835" endtime="20200402 12:45:20.835"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${kycRequest}"=="${EMPTY}"</arg>
<arg>${null}</arg>
</arguments>
<assign>
<var>${kycRequest}</var>
</assign>
<msg timestamp="20200402 12:45:20.836" level="INFO">${kycRequest} = None</msg>
<status status="PASS" starttime="20200402 12:45:20.835" endtime="20200402 12:45:20.836"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${kycRequest}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:20.836" level="INFO">${body} = {'escrowCompanyId': '', 'SELLERId': '', 'kycRequest': None}</msg>
<status status="PASS" starttime="20200402 12:45:20.836" endtime="20200402 12:45:20.836"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:20.837" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGtIZkdCOWIxNWRET0FQSDV2NjR3ZzRPNk5w...</msg>
<status status="PASS" starttime="20200402 12:45:20.837" endtime="20200402 12:45:20.837"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:20.838" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:20.837" endtime="20200402 12:45:20.838"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:20.838" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGtIZkdCOWIxNWRET0FQSDV2NjR3ZzRPNk5wNWRhWWFaQjI2dHVML1VLOVhUa09Nek03NXBROHM4TEh6QThJZzRnZlB2czc4YitvaDhtYzdJdEhFUHc9IiwibmJmIjoxNTg1ODExNzE3LCJleHAiOjE1ODU4MTE3NzcsImlhdCI6MTU4NTgxMTcxNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.MJXwhCD0kFLfh2OOmivHEcQ_kc4DlMRN_DwAHFNNYng'} 
data={"escrowCompanyId": "", "SELLERId": "", "kycRequest": null} 
json=None</msg>
<msg timestamp="20200402 12:45:21.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:20.838" endtime="20200402 12:45:21.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:21.334" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:45:21.333" endtime="20200402 12:45:21.334"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:21.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:21.335" endtime="20200402 12:45:21.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:21.336" endtime="20200402 12:45:21.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:21.336" endtime="20200402 12:45:21.337"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:20.834" endtime="20200402 12:45:21.337"></status>
</kw>
<doc>Empty : To verify Response when all request fields are entered empty without body</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:16.847" endtime="20200402 12:45:21.338" critical="yes"></status>
</test>
<test id="s1-t4" name="TC_09 Empty body Update Seller Details API">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:24.343" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:21.341" endtime="20200402 12:45:24.343"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:24.346" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:24.345" endtime="20200402 12:45:24.346"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:24.347" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:24.347" endtime="20200402 12:45:24.347"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:24.347" endtime="20200402 12:45:24.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:24.349" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:24.348" endtime="20200402 12:45:24.349"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:24.350" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:25.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:24.349" endtime="20200402 12:45:25.454"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:25.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:25.454" endtime="20200402 12:45:25.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:25.456" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9rV1ZXaFpjWjA3MC9qTHNNbmd0ZFhJU3A3ZklqUzYyeEtDWkZGcW1EUEhRZWptS2pJakQ2MTdaTmJKL3c9IiwibmJmIjoxNTg1ODExNzIyLCJleHAiOjE1ODU4MTE3ODIsImlhdCI6MTU4NTgxMTcyMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LpiB-X681Viu0wK7a3IfpofNGkd_146vb-H8wIhkhvY</msg>
<status status="PASS" starttime="20200402 12:45:25.455" endtime="20200402 12:45:25.456"></status>
</kw>
<msg timestamp="20200402 12:45:25.456" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9rV1ZXaFp...</msg>
<status status="PASS" starttime="20200402 12:45:24.345" endtime="20200402 12:45:25.456"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:25.458" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:25.458" endtime="20200402 12:45:25.458"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:25.459" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:25.458" endtime="20200402 12:45:25.459"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:25.459" endtime="20200402 12:45:25.459"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:25.460" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:25.460" endtime="20200402 12:45:25.460"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:25.461" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:26.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:25.460" endtime="20200402 12:45:26.028"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:26.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:26.029" endtime="20200402 12:45:26.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:26.030" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURobU16SG9LSlc4bUREdVdTbUV6SlVEQnpaYU1ndVBuQmlGS0F2b1F5dTk0WUYyaXJ0aS8vQ2FSMU5jU3FYREJLd2Q5eTZxeTA3NVJOanh2UUxsTmM9IiwibmJmIjoxNTg1ODExNzIzLCJleHAiOjE1ODU4MTE3ODMsImlhdCI6MTU4NTgxMTcyMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.h1zyOhgikFhS-niRDlBrYCvrfnLC54VkY0aJUCHDlz8</msg>
<status status="PASS" starttime="20200402 12:45:26.030" endtime="20200402 12:45:26.030"></status>
</kw>
<msg timestamp="20200402 12:45:26.031" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURobU16SG9LSlc4bUREdVdTbUV6SlVEQnpaYU1ndVB...</msg>
<status status="PASS" starttime="20200402 12:45:25.457" endtime="20200402 12:45:26.031"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:26.032" level="INFO">${Id} = 66401083097140</msg>
<status status="PASS" starttime="20200402 12:45:26.031" endtime="20200402 12:45:26.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:26.032" level="INFO">${IdNumber} = 66401083097140</msg>
<status status="PASS" starttime="20200402 12:45:26.032" endtime="20200402 12:45:26.032"></status>
</kw>
<msg timestamp="20200402 12:45:26.032" level="INFO">${idNum} = 66401083097140</msg>
<status status="PASS" starttime="20200402 12:45:26.031" endtime="20200402 12:45:26.033"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:26.034" level="INFO">${mobile} = 1796295104</msg>
<status status="PASS" starttime="20200402 12:45:26.033" endtime="20200402 12:45:26.034"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:26.034" level="INFO">${mobileNo} = 1796295104</msg>
<status status="PASS" starttime="20200402 12:45:26.034" endtime="20200402 12:45:26.034"></status>
</kw>
<msg timestamp="20200402 12:45:26.035" level="INFO">${MobNo} = 1796295104</msg>
<status status="PASS" starttime="20200402 12:45:26.033" endtime="20200402 12:45:26.035"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:26.036" level="INFO">${Emailnum} = 62381</msg>
<status status="PASS" starttime="20200402 12:45:26.035" endtime="20200402 12:45:26.036"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:26.036" level="INFO">${enum} = 62381</msg>
<status status="PASS" starttime="20200402 12:45:26.036" endtime="20200402 12:45:26.036"></status>
</kw>
<msg timestamp="20200402 12:45:26.037" level="INFO">${num} = 62381</msg>
<status status="PASS" starttime="20200402 12:45:26.035" endtime="20200402 12:45:26.037"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:26.037" level="INFO">${emailid} = pavan62381@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:26.037" endtime="20200402 12:45:26.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:26.038" level="INFO">${email} = pavan62381@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:26.037" endtime="20200402 12:45:26.038"></status>
</kw>
<msg timestamp="20200402 12:45:26.038" level="INFO">${emailid} = pavan62381@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:26.035" endtime="20200402 12:45:26.038"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:26.040" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:26.040" endtime="20200402 12:45:26.041"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:26.041" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:26.041" endtime="20200402 12:45:26.041"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:26.042" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:26.042" endtime="20200402 12:45:26.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:26.043" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:26.042" endtime="20200402 12:45:26.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:26.045" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:26.044" endtime="20200402 12:45:26.045"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:26.048" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '66401083097140', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1796295104', 'email': 'pavan62381@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:26.045" endtime="20200402 12:45:26.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:26.048" endtime="20200402 12:45:26.049"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:26.049" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURobU16SG9LSlc4bUREdVdTbUV6SlVEQnpa...</msg>
<status status="PASS" starttime="20200402 12:45:26.049" endtime="20200402 12:45:26.050"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:26.050" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:26.050" endtime="20200402 12:45:26.050"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:26.051" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURobU16SG9LSlc4bUREdVdTbUV6SlVEQnpaYU1ndVBuQmlGS0F2b1F5dTk0WUYyaXJ0aS8vQ2FSMU5jU3FYREJLd2Q5eTZxeTA3NVJOanh2UUxsTmM9IiwibmJmIjoxNTg1ODExNzIzLCJleHAiOjE1ODU4MTE3ODMsImlhdCI6MTU4NTgxMTcyMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.h1zyOhgikFhS-niRDlBrYCvrfnLC54VkY0aJUCHDlz8'} 
data={"escrowCompanyId": "001", "idNumber": "66401083097140", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1796295104", "email": "pavan62381@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:27.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:26.050" endtime="20200402 12:45:27.410"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:27.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:27.411" endtime="20200402 12:45:27.411"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:27.411" endtime="20200402 12:45:27.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:27.412" endtime="20200402 12:45:27.413"></status>
</kw>
<msg timestamp="20200402 12:45:27.413" level="INFO">${sellerid} = e5de3fee-3f09-4ed7-bcb7-a6930389fe39</msg>
<status status="PASS" starttime="20200402 12:45:26.038" endtime="20200402 12:45:27.413"></status>
</kw>
<msg timestamp="20200402 12:45:27.413" level="INFO">${SellerId} = e5de3fee-3f09-4ed7-bcb7-a6930389fe39</msg>
<msg timestamp="20200402 12:45:27.413" level="INFO">${idnumber} = 66401083097140</msg>
<status status="PASS" starttime="20200402 12:45:25.457" endtime="20200402 12:45:27.413"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:27.417" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:27.417" endtime="20200402 12:45:27.418"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:27.418" level="INFO">${typeID} = 0</msg>
<status status="PASS" starttime="20200402 12:45:27.418" endtime="20200402 12:45:27.418"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:27.419" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:27.418" endtime="20200402 12:45:27.419"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:27.420" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:27.419" endtime="20200402 12:45:27.420"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:27.422" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:27.420" endtime="20200402 12:45:27.422"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:27.424" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'e5de3fee-3f09-4ed7-bcb7-a6930389fe39', 'idNumber': '', 'typeOfId': 0, 'mobileCountryCode': '', 'mobileNo': '', 'email': '', 'gender': '', 'titleEn': '', 'firstN...</msg>
<status status="PASS" starttime="20200402 12:45:27.422" endtime="20200402 12:45:27.424"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:27.425" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9r...</msg>
<status status="PASS" starttime="20200402 12:45:27.424" endtime="20200402 12:45:27.425"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:27.425" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:27.425" endtime="20200402 12:45:27.425"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:27.426" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9rV1ZXaFpjWjA3MC9qTHNNbmd0ZFhJU3A3ZklqUzYyeEtDWkZGcW1EUEhRZWptS2pJakQ2MTdaTmJKL3c9IiwibmJmIjoxNTg1ODExNzIyLCJleHAiOjE1ODU4MTE3ODIsImlhdCI6MTU4NTgxMTcyMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LpiB-X681Viu0wK7a3IfpofNGkd_146vb-H8wIhkhvY'} 
data={"escrowCompanyId": "001", "SELLERId": "e5de3fee-3f09-4ed7-bcb7-a6930389fe39", "idNumber": "", "typeOfId": 0, "mobileCountryCode": "", "mobileNo": "", "email": "", "gender": "", "titleEn": "", "firstNameEn": "", "lastNameEn": "", "titleLocal": "", "firstNameLocal": "", "lastNameLocal": "", "dateOfBirth": "", "nationalityId": "", "otherVerification": "", "workPlace": "", "userDefine1": "", "userDefine2": "", "userDefine3": "", "userDefine4": "", "userDefine5": "", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:28.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:27.426" endtime="20200402 12:45:28.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:28.023" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:28.022" endtime="20200402 12:45:28.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:28.023" endtime="20200402 12:45:28.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:28.024" endtime="20200402 12:45:28.025"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:27.415" endtime="20200402 12:45:28.025"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:28.026" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:28.026" endtime="20200402 12:45:28.027"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:28.028" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'e5de3fee-3f09-4ed7-bcb7-a6930389fe39'}</msg>
<status status="PASS" starttime="20200402 12:45:28.027" endtime="20200402 12:45:28.028"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:28.029" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9r...</msg>
<status status="PASS" starttime="20200402 12:45:28.028" endtime="20200402 12:45:28.029"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:28.030" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:28.029" endtime="20200402 12:45:28.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:28.031" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMllHZXhaN2Fjc0dTNUVSK29UcjlaY1kyUU9rV1ZXaFpjWjA3MC9qTHNNbmd0ZFhJU3A3ZklqUzYyeEtDWkZGcW1EUEhRZWptS2pJakQ2MTdaTmJKL3c9IiwibmJmIjoxNTg1ODExNzIyLCJleHAiOjE1ODU4MTE3ODIsImlhdCI6MTU4NTgxMTcyMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LpiB-X681Viu0wK7a3IfpofNGkd_146vb-H8wIhkhvY'} 
data={"escrowCompanyId": "001", "sellerID": "e5de3fee-3f09-4ed7-bcb7-a6930389fe39"} 
json=None</msg>
<msg timestamp="20200402 12:45:28.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:28.030" endtime="20200402 12:45:28.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:28.970" level="INFO">{"escrowCompanyId":"001","sellerId":"e5de3fee-3f09-4ed7-bcb7-a6930389fe39","idNumber":"","typeOfId":0,"mobileCountryCode":"","mobileNo":"","email":"","gender":"","titleEn":"","firstNameEn":"","lastNameEn":"","titleLocal":"","firstNameLocal":"","lastNameLocal":"","dateOfBirth":null,"nationalityId":"","otherVerification":"","status":1,"statusText":"Active","workPlace":"","userDefine1":"","userDefine2":"","userDefine3":"","userDefine4":"","userDefine5":"","kycFlag":0,"createDate":"02/04/2020 02:15:24","updateDate":"02/04/2020 02:15:25","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:28.970" endtime="20200402 12:45:28.971"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:28.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:28.971" endtime="20200402 12:45:28.972"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:28.025" endtime="20200402 12:45:28.972"></status>
</kw>
<doc>Empty : To verify Response when request is send with mandatory fields and other fields are send as "".</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:21.339" endtime="20200402 12:45:28.972" critical="yes"></status>
</test>
<test id="s1-t5" name="TC_10 Seller_Details_API Empty EscrowCompId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:31.978" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:28.975" endtime="20200402 12:45:31.978"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:31.979" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:31.979" endtime="20200402 12:45:31.980"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:31.980" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:31.980" endtime="20200402 12:45:31.980"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:31.980" endtime="20200402 12:45:31.981"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:31.981" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:31.981" endtime="20200402 12:45:31.981"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:31.982" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:32.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:31.981" endtime="20200402 12:45:32.459"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:32.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:32.459" endtime="20200402 12:45:32.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:32.460" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZXckFZZGwxTWNuZjFuRkFLTXZvMVg5V2ZQUjlrS1VqaWJTTGNnaDJrc3RaVG0rWi9GbDZDLzhJeWxpenc9IiwibmJmIjoxNTg1ODExNzI5LCJleHAiOjE1ODU4MTE3ODksImlhdCI6MTU4NTgxMTcyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.CIh9G37j5nXARIFKvdTfuuBjAVA7H5mqmjQf7i2gPCA</msg>
<status status="PASS" starttime="20200402 12:45:32.460" endtime="20200402 12:45:32.460"></status>
</kw>
<msg timestamp="20200402 12:45:32.461" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZXckFZZGw...</msg>
<status status="PASS" starttime="20200402 12:45:31.979" endtime="20200402 12:45:32.461"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:32.463" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:32.463" endtime="20200402 12:45:32.463"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:32.464" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:32.463" endtime="20200402 12:45:32.464"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:32.464" endtime="20200402 12:45:32.464"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:32.465" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:32.464" endtime="20200402 12:45:32.465"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:32.465" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:35.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:32.465" endtime="20200402 12:45:35.694"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:35.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:35.694" endtime="20200402 12:45:35.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:35.696" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0g4aUQ4aXV1NTd0MjJvMGloVGxxQ01kdTlxb1FYMDBjWThqaGNoNzlQcjc1V0grOWpvYTBnUmtsTm1xTG5SbGZ6aDBrd001dE1uc3VBbThBQ0pGbzQ9IiwibmJmIjoxNTg1ODExNzMzLCJleHAiOjE1ODU4MTE3OTMsImlhdCI6MTU4NTgxMTczMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eHjZzK4U_oiBVoSC_aqZ-RrCG_cEdaarrBxUB3Ep2_M</msg>
<status status="PASS" starttime="20200402 12:45:35.695" endtime="20200402 12:45:35.696"></status>
</kw>
<msg timestamp="20200402 12:45:35.697" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0g4aUQ4aXV1NTd0MjJvMGloVGxxQ01kdTlxb1FYMDB...</msg>
<status status="PASS" starttime="20200402 12:45:32.462" endtime="20200402 12:45:35.697"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:35.698" level="INFO">${Id} = 69462752406488</msg>
<status status="PASS" starttime="20200402 12:45:35.698" endtime="20200402 12:45:35.698"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:35.699" level="INFO">${IdNumber} = 69462752406488</msg>
<status status="PASS" starttime="20200402 12:45:35.698" endtime="20200402 12:45:35.699"></status>
</kw>
<msg timestamp="20200402 12:45:35.700" level="INFO">${idNum} = 69462752406488</msg>
<status status="PASS" starttime="20200402 12:45:35.697" endtime="20200402 12:45:35.700"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:35.701" level="INFO">${mobile} = 6288791688</msg>
<status status="PASS" starttime="20200402 12:45:35.701" endtime="20200402 12:45:35.701"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:35.702" level="INFO">${mobileNo} = 6288791688</msg>
<status status="PASS" starttime="20200402 12:45:35.702" endtime="20200402 12:45:35.702"></status>
</kw>
<msg timestamp="20200402 12:45:35.703" level="INFO">${MobNo} = 6288791688</msg>
<status status="PASS" starttime="20200402 12:45:35.700" endtime="20200402 12:45:35.703"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:35.705" level="INFO">${Emailnum} = 03581</msg>
<status status="PASS" starttime="20200402 12:45:35.704" endtime="20200402 12:45:35.705"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:35.706" level="INFO">${enum} = 03581</msg>
<status status="PASS" starttime="20200402 12:45:35.705" endtime="20200402 12:45:35.706"></status>
</kw>
<msg timestamp="20200402 12:45:35.706" level="INFO">${num} = 03581</msg>
<status status="PASS" starttime="20200402 12:45:35.704" endtime="20200402 12:45:35.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:35.707" level="INFO">${emailid} = pavan03581@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:35.707" endtime="20200402 12:45:35.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:35.708" level="INFO">${email} = pavan03581@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:35.708" endtime="20200402 12:45:35.708"></status>
</kw>
<msg timestamp="20200402 12:45:35.709" level="INFO">${emailid} = pavan03581@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:35.703" endtime="20200402 12:45:35.709"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:35.713" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:35.713" endtime="20200402 12:45:35.714"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:35.715" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:35.714" endtime="20200402 12:45:35.715"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:35.716" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:35.715" endtime="20200402 12:45:35.716"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:35.719" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:35.717" endtime="20200402 12:45:35.719"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:35.721" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:35.719" endtime="20200402 12:45:35.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:35.725" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '69462752406488', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6288791688', 'email': 'pavan03581@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:35.722" endtime="20200402 12:45:35.725"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:35.726" endtime="20200402 12:45:35.727"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:35.727" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0g4aUQ4aXV1NTd0MjJvMGloVGxxQ01kdTlx...</msg>
<status status="PASS" starttime="20200402 12:45:35.727" endtime="20200402 12:45:35.728"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:35.728" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:35.728" endtime="20200402 12:45:35.729"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:35.730" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0g4aUQ4aXV1NTd0MjJvMGloVGxxQ01kdTlxb1FYMDBjWThqaGNoNzlQcjc1V0grOWpvYTBnUmtsTm1xTG5SbGZ6aDBrd001dE1uc3VBbThBQ0pGbzQ9IiwibmJmIjoxNTg1ODExNzMzLCJleHAiOjE1ODU4MTE3OTMsImlhdCI6MTU4NTgxMTczMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eHjZzK4U_oiBVoSC_aqZ-RrCG_cEdaarrBxUB3Ep2_M'} 
data={"escrowCompanyId": "001", "idNumber": "69462752406488", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6288791688", "email": "pavan03581@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:36.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:35.729" endtime="20200402 12:45:36.051"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:36.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:36.052" endtime="20200402 12:45:36.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:36.053" endtime="20200402 12:45:36.054"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:36.054" endtime="20200402 12:45:36.055"></status>
</kw>
<msg timestamp="20200402 12:45:36.056" level="INFO">${sellerid} = 2605706e-729c-4f13-914a-2a512cc3eb2b</msg>
<status status="PASS" starttime="20200402 12:45:35.709" endtime="20200402 12:45:36.056"></status>
</kw>
<msg timestamp="20200402 12:45:36.056" level="INFO">${SellerId} = 2605706e-729c-4f13-914a-2a512cc3eb2b</msg>
<msg timestamp="20200402 12:45:36.056" level="INFO">${idnumber} = 69462752406488</msg>
<status status="PASS" starttime="20200402 12:45:32.462" endtime="20200402 12:45:36.056"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>${EMPTY}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:36.058" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:36.058" endtime="20200402 12:45:36.059"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:36.060" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:36.059" endtime="20200402 12:45:36.060"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:36.061" level="INFO">${body} = {'escrowCompanyId': '', 'SELLERId': '2605706e-729c-4f13-914a-2a512cc3eb2b', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:45:36.061" endtime="20200402 12:45:36.062"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:36.063" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZX...</msg>
<status status="PASS" starttime="20200402 12:45:36.062" endtime="20200402 12:45:36.063"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:36.064" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:36.063" endtime="20200402 12:45:36.064"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:36.065" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZXckFZZGwxTWNuZjFuRkFLTXZvMVg5V2ZQUjlrS1VqaWJTTGNnaDJrc3RaVG0rWi9GbDZDLzhJeWxpenc9IiwibmJmIjoxNTg1ODExNzI5LCJleHAiOjE1ODU4MTE3ODksImlhdCI6MTU4NTgxMTcyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.CIh9G37j5nXARIFKvdTfuuBjAVA7H5mqmjQf7i2gPCA'} 
data={"escrowCompanyId": "", "SELLERId": "2605706e-729c-4f13-914a-2a512cc3eb2b", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:45:36.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:36.064" endtime="20200402 12:45:36.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:36.966" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:45:36.966" endtime="20200402 12:45:36.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:36.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:36.967" endtime="20200402 12:45:36.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:36.968" endtime="20200402 12:45:36.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:36.968" endtime="20200402 12:45:36.969"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:36.057" endtime="20200402 12:45:36.969"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:36.971" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:36.971" endtime="20200402 12:45:36.971"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:36.972" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '2605706e-729c-4f13-914a-2a512cc3eb2b'}</msg>
<status status="PASS" starttime="20200402 12:45:36.972" endtime="20200402 12:45:36.972"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:36.973" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZX...</msg>
<status status="PASS" starttime="20200402 12:45:36.973" endtime="20200402 12:45:36.973"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:36.974" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:36.973" endtime="20200402 12:45:36.974"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:36.974" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem9PbGQ2VHRFdGVqZHoyV2doTGczYlFCKzZXckFZZGwxTWNuZjFuRkFLTXZvMVg5V2ZQUjlrS1VqaWJTTGNnaDJrc3RaVG0rWi9GbDZDLzhJeWxpenc9IiwibmJmIjoxNTg1ODExNzI5LCJleHAiOjE1ODU4MTE3ODksImlhdCI6MTU4NTgxMTcyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.CIh9G37j5nXARIFKvdTfuuBjAVA7H5mqmjQf7i2gPCA'} 
data={"escrowCompanyId": "001", "sellerID": "2605706e-729c-4f13-914a-2a512cc3eb2b"} 
json=None</msg>
<msg timestamp="20200402 12:45:37.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:36.974" endtime="20200402 12:45:37.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:37.572" level="INFO">{"escrowCompanyId":"001","sellerId":"2605706e-729c-4f13-914a-2a512cc3eb2b","idNumber":"69462752406488","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6288791688","email":"pavan03581@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:15:33","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:37.572" endtime="20200402 12:45:37.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:37.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:37.573" endtime="20200402 12:45:37.574"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:36.970" endtime="20200402 12:45:37.574"></status>
</kw>
<doc>Empty : To check API response when escrowCompanyId parameter is entered empty and request is sent with mandatory fields</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:28.974" endtime="20200402 12:45:37.574" critical="yes"></status>
</test>
<test id="s1-t6" name="TC_11 Seller_Details_API Valid EscrowCompId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:40.578" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:37.577" endtime="20200402 12:45:40.578"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:40.579" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:40.579" endtime="20200402 12:45:40.580"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:40.580" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:40.580" endtime="20200402 12:45:40.580"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:40.581" endtime="20200402 12:45:40.581"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:40.581" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:40.581" endtime="20200402 12:45:40.581"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:40.582" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:41.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:40.582" endtime="20200402 12:45:41.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:41.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:41.226" endtime="20200402 12:45:41.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.228" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJlUDIrYjg3cWkvZ28wallOL2J1LzN3UmNpdWd6RXd4YlU0bjZCMThYallGYXIwSnRaTU1iYU9yTjYyY009IiwibmJmIjoxNTg1ODExNzM4LCJleHAiOjE1ODU4MTE3OTgsImlhdCI6MTU4NTgxMTczOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4wfolOY4-BuvRekBPvnijCGOZBBvSRAZ7oO-N4oBPkI</msg>
<status status="PASS" starttime="20200402 12:45:41.227" endtime="20200402 12:45:41.228"></status>
</kw>
<msg timestamp="20200402 12:45:41.229" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJlUDIrYjg...</msg>
<status status="PASS" starttime="20200402 12:45:40.579" endtime="20200402 12:45:41.229"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.231" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:41.230" endtime="20200402 12:45:41.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:41.232" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:41.231" endtime="20200402 12:45:41.232"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:41.232" endtime="20200402 12:45:41.232"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:41.233" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:41.232" endtime="20200402 12:45:41.233"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:41.233" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:41.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:41.233" endtime="20200402 12:45:41.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:41.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:41.507" endtime="20200402 12:45:41.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.508" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeS9vVDhWcVVmUmxQUE5EclpycGJWRGlSdkhQYmtMWjkzRlZCZHhORjUzWTdoSzhDcmN5WjB1SzJxUE52SjRiajk3SzZMSVpWWDhlejJxL1JvMnowMnM9IiwibmJmIjoxNTg1ODExNzM5LCJleHAiOjE1ODU4MTE3OTksImlhdCI6MTU4NTgxMTczOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.92_xFapcsqgwtnNh-pj0nhmT7O1YZTbpJtm_k6ut3Nc</msg>
<status status="PASS" starttime="20200402 12:45:41.508" endtime="20200402 12:45:41.509"></status>
</kw>
<msg timestamp="20200402 12:45:41.509" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeS9vVDhWcVVmUmxQUE5EclpycGJWRGlSdkhQYmtMWjk...</msg>
<status status="PASS" starttime="20200402 12:45:41.230" endtime="20200402 12:45:41.509"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:41.510" level="INFO">${Id} = 20953748793107</msg>
<status status="PASS" starttime="20200402 12:45:41.509" endtime="20200402 12:45:41.510"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.510" level="INFO">${IdNumber} = 20953748793107</msg>
<status status="PASS" starttime="20200402 12:45:41.510" endtime="20200402 12:45:41.510"></status>
</kw>
<msg timestamp="20200402 12:45:41.511" level="INFO">${idNum} = 20953748793107</msg>
<status status="PASS" starttime="20200402 12:45:41.509" endtime="20200402 12:45:41.511"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:41.512" level="INFO">${mobile} = 1261059100</msg>
<status status="PASS" starttime="20200402 12:45:41.511" endtime="20200402 12:45:41.512"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.512" level="INFO">${mobileNo} = 1261059100</msg>
<status status="PASS" starttime="20200402 12:45:41.512" endtime="20200402 12:45:41.512"></status>
</kw>
<msg timestamp="20200402 12:45:41.512" level="INFO">${MobNo} = 1261059100</msg>
<status status="PASS" starttime="20200402 12:45:41.511" endtime="20200402 12:45:41.512"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:41.514" level="INFO">${Emailnum} = 78411</msg>
<status status="PASS" starttime="20200402 12:45:41.513" endtime="20200402 12:45:41.514"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.514" level="INFO">${enum} = 78411</msg>
<status status="PASS" starttime="20200402 12:45:41.514" endtime="20200402 12:45:41.514"></status>
</kw>
<msg timestamp="20200402 12:45:41.514" level="INFO">${num} = 78411</msg>
<status status="PASS" starttime="20200402 12:45:41.513" endtime="20200402 12:45:41.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:41.515" level="INFO">${emailid} = pavan78411@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:41.515" endtime="20200402 12:45:41.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:41.515" level="INFO">${email} = pavan78411@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:41.515" endtime="20200402 12:45:41.515"></status>
</kw>
<msg timestamp="20200402 12:45:41.516" level="INFO">${emailid} = pavan78411@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:41.513" endtime="20200402 12:45:41.516"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:41.518" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:41.518" endtime="20200402 12:45:41.518"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:41.519" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:41.519" endtime="20200402 12:45:41.519"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:41.519" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:41.519" endtime="20200402 12:45:41.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:41.521" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:41.520" endtime="20200402 12:45:41.521"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:41.523" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:41.521" endtime="20200402 12:45:41.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:41.525" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '20953748793107', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1261059100', 'email': 'pavan78411@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:41.523" endtime="20200402 12:45:41.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:41.526" endtime="20200402 12:45:41.526"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:41.528" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeS9vVDhWcVVmUmxQUE5EclpycGJWRGlSdkhQ...</msg>
<status status="PASS" starttime="20200402 12:45:41.527" endtime="20200402 12:45:41.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:41.529" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:41.528" endtime="20200402 12:45:41.529"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:41.529" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeS9vVDhWcVVmUmxQUE5EclpycGJWRGlSdkhQYmtMWjkzRlZCZHhORjUzWTdoSzhDcmN5WjB1SzJxUE52SjRiajk3SzZMSVpWWDhlejJxL1JvMnowMnM9IiwibmJmIjoxNTg1ODExNzM5LCJleHAiOjE1ODU4MTE3OTksImlhdCI6MTU4NTgxMTczOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.92_xFapcsqgwtnNh-pj0nhmT7O1YZTbpJtm_k6ut3Nc'} 
data={"escrowCompanyId": "001", "idNumber": "20953748793107", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1261059100", "email": "pavan78411@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:44.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:41.529" endtime="20200402 12:45:44.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:44.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:44.938" endtime="20200402 12:45:44.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:44.938" endtime="20200402 12:45:44.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:44.939" endtime="20200402 12:45:44.939"></status>
</kw>
<msg timestamp="20200402 12:45:44.940" level="INFO">${sellerid} = 0ccea924-33cc-4e0c-a8ed-b417f1914211</msg>
<status status="PASS" starttime="20200402 12:45:41.516" endtime="20200402 12:45:44.940"></status>
</kw>
<msg timestamp="20200402 12:45:44.940" level="INFO">${SellerId} = 0ccea924-33cc-4e0c-a8ed-b417f1914211</msg>
<msg timestamp="20200402 12:45:44.940" level="INFO">${idnumber} = 20953748793107</msg>
<status status="PASS" starttime="20200402 12:45:41.230" endtime="20200402 12:45:44.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Idno_dup}</arg>
<arg>${idnumber}</arg>
</arguments>
<msg timestamp="20200402 12:45:44.943" level="INFO">${Idno_dup} = 20953748793107</msg>
<status status="PASS" starttime="20200402 12:45:44.941" endtime="20200402 12:45:44.943"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SellerId000}</arg>
<arg>${SellerId}</arg>
</arguments>
<msg timestamp="20200402 12:45:44.946" level="INFO">${SellerId000} = 0ccea924-33cc-4e0c-a8ed-b417f1914211</msg>
<status status="PASS" starttime="20200402 12:45:44.944" endtime="20200402 12:45:44.946"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:44.948" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:44.947" endtime="20200402 12:45:44.948"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:44.948" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:44.948" endtime="20200402 12:45:44.948"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:44.949" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '0ccea924-33cc-4e0c-a8ed-b417f1914211', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:45:44.949" endtime="20200402 12:45:44.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:44.950" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJl...</msg>
<status status="PASS" starttime="20200402 12:45:44.949" endtime="20200402 12:45:44.950"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:44.950" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:44.950" endtime="20200402 12:45:44.950"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:44.951" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJlUDIrYjg3cWkvZ28wallOL2J1LzN3UmNpdWd6RXd4YlU0bjZCMThYallGYXIwSnRaTU1iYU9yTjYyY009IiwibmJmIjoxNTg1ODExNzM4LCJleHAiOjE1ODU4MTE3OTgsImlhdCI6MTU4NTgxMTczOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4wfolOY4-BuvRekBPvnijCGOZBBvSRAZ7oO-N4oBPkI'} 
data={"escrowCompanyId": "001", "SELLERId": "0ccea924-33cc-4e0c-a8ed-b417f1914211", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:45:45.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:44.951" endtime="20200402 12:45:45.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:45.642" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:45.642" endtime="20200402 12:45:45.643"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:45.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:45.643" endtime="20200402 12:45:45.644"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:45.644" endtime="20200402 12:45:45.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:45.645" endtime="20200402 12:45:45.646"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:44.947" endtime="20200402 12:45:45.646"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:45.648" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:45.648" endtime="20200402 12:45:45.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:45.650" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '0ccea924-33cc-4e0c-a8ed-b417f1914211'}</msg>
<status status="PASS" starttime="20200402 12:45:45.649" endtime="20200402 12:45:45.650"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:45.650" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJl...</msg>
<status status="PASS" starttime="20200402 12:45:45.650" endtime="20200402 12:45:45.650"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:45.651" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:45.651" endtime="20200402 12:45:45.651"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:45.653" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVNBWXZsaWYrVFJNMXZYMDNjampPcnpSTzJlUDIrYjg3cWkvZ28wallOL2J1LzN3UmNpdWd6RXd4YlU0bjZCMThYallGYXIwSnRaTU1iYU9yTjYyY009IiwibmJmIjoxNTg1ODExNzM4LCJleHAiOjE1ODU4MTE3OTgsImlhdCI6MTU4NTgxMTczOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4wfolOY4-BuvRekBPvnijCGOZBBvSRAZ7oO-N4oBPkI'} 
data={"escrowCompanyId": "001", "sellerID": "0ccea924-33cc-4e0c-a8ed-b417f1914211"} 
json=None</msg>
<msg timestamp="20200402 12:45:46.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:45.652" endtime="20200402 12:45:46.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:46.152" level="INFO">{"escrowCompanyId":"001","sellerId":"0ccea924-33cc-4e0c-a8ed-b417f1914211","idNumber":"20953748793107","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1261059100","email":"pavan78411@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:15:42","updateDate":"02/04/2020 02:15:43","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:45:46.152" endtime="20200402 12:45:46.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:46.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:46.154" endtime="20200402 12:45:46.155"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:45.647" endtime="20200402 12:45:46.155"></status>
</kw>
<doc>Valid: To check API response when escrowCompanyId parameter is entered Valid and request is sent with mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:37.575" endtime="20200402 12:45:46.155" critical="yes"></status>
</test>
<test id="s1-t7" name="TC_12 Seller_Details_API Invalid EscrowCompId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:45:49.159" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:45:46.159" endtime="20200402 12:45:49.159"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:49.160" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:49.160" endtime="20200402 12:45:49.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:49.161" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:49.161" endtime="20200402 12:45:49.161"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:49.161" endtime="20200402 12:45:49.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:49.162" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:49.162" endtime="20200402 12:45:49.162"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:49.163" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:49.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:49.162" endtime="20200402 12:45:49.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:49.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:49.686" endtime="20200402 12:45:49.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:49.687" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZqNWRRQnhwOXU4VkRtcnBFdk03TTFLYWt5bDF4ZUlwSXBnZ250VkhkUWNQK2J2YTFTMFRta3o2NUczWWc9IiwibmJmIjoxNTg1ODExNzQ3LCJleHAiOjE1ODU4MTE4MDcsImlhdCI6MTU4NTgxMTc0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DFBe9PX-Lto6gYHzdyQXfUbGuGw1Rjkx-oFRD8OFciU</msg>
<status status="PASS" starttime="20200402 12:45:49.686" endtime="20200402 12:45:49.687"></status>
</kw>
<msg timestamp="20200402 12:45:49.687" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZqNWRRQnh...</msg>
<status status="PASS" starttime="20200402 12:45:49.159" endtime="20200402 12:45:49.687"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:45:49.689" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:49.689" endtime="20200402 12:45:49.689"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:49.690" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:45:49.690" endtime="20200402 12:45:49.690"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:49.690" endtime="20200402 12:45:49.691"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:45:49.691" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:45:49.691" endtime="20200402 12:45:49.691"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:49.692" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:45:50.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:49.691" endtime="20200402 12:45:50.201"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:50.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:50.201" endtime="20200402 12:45:50.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:45:50.203" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTBSQjViK1hqdWZTY0VZUGtmU2F1QXNmbVlVbXVkSWprZUhRTENXT1Z2UTg0bHM5SUkrTG9KR1dMY0k0M3ROWTFtZ3lCOUhYU3cyRHM5cXcvVGJKTEU9IiwibmJmIjoxNTg1ODExNzQ3LCJleHAiOjE1ODU4MTE4MDcsImlhdCI6MTU4NTgxMTc0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JcDfRLO9bN2SWquO9UzLiwvtBUfRz7W0tuqBcKcTIkg</msg>
<status status="PASS" starttime="20200402 12:45:50.202" endtime="20200402 12:45:50.203"></status>
</kw>
<msg timestamp="20200402 12:45:50.203" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTBSQjViK1hqdWZTY0VZUGtmU2F1QXNmbVlVbXVkSWp...</msg>
<status status="PASS" starttime="20200402 12:45:49.688" endtime="20200402 12:45:50.203"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:45:50.204" level="INFO">${Id} = 74877743879050</msg>
<status status="PASS" starttime="20200402 12:45:50.204" endtime="20200402 12:45:50.204"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:45:50.205" level="INFO">${IdNumber} = 74877743879050</msg>
<status status="PASS" starttime="20200402 12:45:50.205" endtime="20200402 12:45:50.205"></status>
</kw>
<msg timestamp="20200402 12:45:50.205" level="INFO">${idNum} = 74877743879050</msg>
<status status="PASS" starttime="20200402 12:45:50.203" endtime="20200402 12:45:50.205"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:45:50.207" level="INFO">${mobile} = 1573872153</msg>
<status status="PASS" starttime="20200402 12:45:50.206" endtime="20200402 12:45:50.207"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:45:50.208" level="INFO">${mobileNo} = 1573872153</msg>
<status status="PASS" starttime="20200402 12:45:50.207" endtime="20200402 12:45:50.208"></status>
</kw>
<msg timestamp="20200402 12:45:50.208" level="INFO">${MobNo} = 1573872153</msg>
<status status="PASS" starttime="20200402 12:45:50.206" endtime="20200402 12:45:50.208"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:45:50.210" level="INFO">${Emailnum} = 25627</msg>
<status status="PASS" starttime="20200402 12:45:50.209" endtime="20200402 12:45:50.210"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:45:50.210" level="INFO">${enum} = 25627</msg>
<status status="PASS" starttime="20200402 12:45:50.210" endtime="20200402 12:45:50.210"></status>
</kw>
<msg timestamp="20200402 12:45:50.211" level="INFO">${num} = 25627</msg>
<status status="PASS" starttime="20200402 12:45:50.209" endtime="20200402 12:45:50.211"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:45:50.212" level="INFO">${emailid} = pavan25627@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:50.211" endtime="20200402 12:45:50.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:45:50.212" level="INFO">${email} = pavan25627@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:50.212" endtime="20200402 12:45:50.213"></status>
</kw>
<msg timestamp="20200402 12:45:50.213" level="INFO">${emailid} = pavan25627@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:45:50.208" endtime="20200402 12:45:50.213"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:50.216" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:50.216" endtime="20200402 12:45:50.217"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:45:50.217" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:45:50.217" endtime="20200402 12:45:50.217"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:50.218" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:50.218" endtime="20200402 12:45:50.218"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:45:50.221" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:50.219" endtime="20200402 12:45:50.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:45:50.223" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:45:50.221" endtime="20200402 12:45:50.223"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:50.226" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '74877743879050', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1573872153', 'email': 'pavan25627@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:45:50.223" endtime="20200402 12:45:50.226"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:50.226" endtime="20200402 12:45:50.227"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:50.228" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTBSQjViK1hqdWZTY0VZUGtmU2F1QXNmbVlV...</msg>
<status status="PASS" starttime="20200402 12:45:50.227" endtime="20200402 12:45:50.228"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:50.228" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:50.228" endtime="20200402 12:45:50.228"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:50.229" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTBSQjViK1hqdWZTY0VZUGtmU2F1QXNmbVlVbXVkSWprZUhRTENXT1Z2UTg0bHM5SUkrTG9KR1dMY0k0M3ROWTFtZ3lCOUhYU3cyRHM5cXcvVGJKTEU9IiwibmJmIjoxNTg1ODExNzQ3LCJleHAiOjE1ODU4MTE4MDcsImlhdCI6MTU4NTgxMTc0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JcDfRLO9bN2SWquO9UzLiwvtBUfRz7W0tuqBcKcTIkg'} 
data={"escrowCompanyId": "001", "idNumber": "74877743879050", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1573872153", "email": "pavan25627@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:45:50.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:50.229" endtime="20200402 12:45:50.479"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:50.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:50.479" endtime="20200402 12:45:50.480"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:50.480" endtime="20200402 12:45:50.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:50.481" endtime="20200402 12:45:50.482"></status>
</kw>
<msg timestamp="20200402 12:45:50.482" level="INFO">${sellerid} = 6fba04b6-1b6f-4f7d-b784-a95cc5730914</msg>
<status status="PASS" starttime="20200402 12:45:50.213" endtime="20200402 12:45:50.482"></status>
</kw>
<msg timestamp="20200402 12:45:50.482" level="INFO">${SellerId} = 6fba04b6-1b6f-4f7d-b784-a95cc5730914</msg>
<msg timestamp="20200402 12:45:50.482" level="INFO">${idnumber} = 74877743879050</msg>
<status status="PASS" starttime="20200402 12:45:49.688" endtime="20200402 12:45:50.482"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId_Invalid}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:50.484" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:50.484" endtime="20200402 12:45:50.484"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:45:50.485" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:45:50.485" endtime="20200402 12:45:50.485"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:50.486" level="INFO">${body} = {'escrowCompanyId': 'YUT', 'SELLERId': '6fba04b6-1b6f-4f7d-b784-a95cc5730914', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:45:50.485" endtime="20200402 12:45:50.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:50.486" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZq...</msg>
<status status="PASS" starttime="20200402 12:45:50.486" endtime="20200402 12:45:50.486"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:50.487" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:50.487" endtime="20200402 12:45:50.487"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:50.488" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZqNWRRQnhwOXU4VkRtcnBFdk03TTFLYWt5bDF4ZUlwSXBnZ250VkhkUWNQK2J2YTFTMFRta3o2NUczWWc9IiwibmJmIjoxNTg1ODExNzQ3LCJleHAiOjE1ODU4MTE4MDcsImlhdCI6MTU4NTgxMTc0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DFBe9PX-Lto6gYHzdyQXfUbGuGw1Rjkx-oFRD8OFciU'} 
data={"escrowCompanyId": "YUT", "SELLERId": "6fba04b6-1b6f-4f7d-b784-a95cc5730914", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:45:55.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:50.487" endtime="20200402 12:45:55.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:45:55.536" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:45:55.535" endtime="20200402 12:45:55.536"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:45:55.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:45:55.536" endtime="20200402 12:45:55.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:55.537" endtime="20200402 12:45:55.538"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:45:55.538" endtime="20200402 12:45:55.538"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:50.483" endtime="20200402 12:45:55.538"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:45:55.540" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:45:55.539" endtime="20200402 12:45:55.540"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:45:55.541" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6fba04b6-1b6f-4f7d-b784-a95cc5730914'}</msg>
<status status="PASS" starttime="20200402 12:45:55.540" endtime="20200402 12:45:55.541"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:45:55.541" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZq...</msg>
<status status="PASS" starttime="20200402 12:45:55.541" endtime="20200402 12:45:55.541"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:45:55.542" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:45:55.541" endtime="20200402 12:45:55.542"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:45:55.542" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMXAyTStnZmgvMDh1VXV4V1VPUytDcG5McDZqNWRRQnhwOXU4VkRtcnBFdk03TTFLYWt5bDF4ZUlwSXBnZ250VkhkUWNQK2J2YTFTMFRta3o2NUczWWc9IiwibmJmIjoxNTg1ODExNzQ3LCJleHAiOjE1ODU4MTE4MDcsImlhdCI6MTU4NTgxMTc0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DFBe9PX-Lto6gYHzdyQXfUbGuGw1Rjkx-oFRD8OFciU'} 
data={"escrowCompanyId": "001", "sellerID": "6fba04b6-1b6f-4f7d-b784-a95cc5730914"} 
json=None</msg>
<msg timestamp="20200402 12:46:02.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:45:55.542" endtime="20200402 12:46:02.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:02.789" level="INFO">{"escrowCompanyId":"001","sellerId":"6fba04b6-1b6f-4f7d-b784-a95cc5730914","idNumber":"74877743879050","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1573872153","email":"pavan25627@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:15:47","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:02.789" endtime="20200402 12:46:02.790"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:02.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:02.790" endtime="20200402 12:46:02.791"></status>
</kw>
<status status="PASS" starttime="20200402 12:45:55.539" endtime="20200402 12:46:02.791"></status>
</kw>
<doc>Invalid: To check API response when escrowCompanyId parameter is entered Invalid and request is sent with mandatory fields</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:45:46.158" endtime="20200402 12:46:02.791" critical="yes"></status>
</test>
<test id="s1-t8" name="TC_13 Seller_Details_API Length more 3 EscrowCompId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:05.796" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:02.794" endtime="20200402 12:46:05.796"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:05.797" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:05.797" endtime="20200402 12:46:05.798"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:05.799" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:05.798" endtime="20200402 12:46:05.799"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:05.799" endtime="20200402 12:46:05.800"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:05.800" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:05.800" endtime="20200402 12:46:05.800"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:05.801" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:06.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:05.801" endtime="20200402 12:46:06.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:06.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.033" endtime="20200402 12:46:06.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.035" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRNR3JPYWdOOTRPMEl5cjNyMmV3T05adjNBUjJ6WVYzWDlDQ1dFM1IzZzJ1QzFiQXAwUWFmaWVYbmFobDg9IiwibmJmIjoxNTg1ODExNzYzLCJleHAiOjE1ODU4MTE4MjMsImlhdCI6MTU4NTgxMTc2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vzFUbVsxm1EqqcSo8eGxrXE2ZSt_X372-f7HAKhAthQ</msg>
<status status="PASS" starttime="20200402 12:46:06.034" endtime="20200402 12:46:06.035"></status>
</kw>
<msg timestamp="20200402 12:46:06.036" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRNR3JPYWd...</msg>
<status status="PASS" starttime="20200402 12:46:05.797" endtime="20200402 12:46:06.036"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.038" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:06.038" endtime="20200402 12:46:06.039"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:06.040" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:06.039" endtime="20200402 12:46:06.040"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:06.040" endtime="20200402 12:46:06.041"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:06.042" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:06.041" endtime="20200402 12:46:06.042"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:06.043" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:06.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.042" endtime="20200402 12:46:06.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:06.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.534" endtime="20200402 12:46:06.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.535" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTcrbEh2bk93L3VzeW9rVlBUdVdjdWt4OEtyUmlhQ3d6MkZkKzhNQWV4NTl6OHUvTGswUEp1dXJ1V2NTM0tjQklGdU43bXNlSVR2K1dERHo4S1VWVms9IiwibmJmIjoxNTg1ODExNzY0LCJleHAiOjE1ODU4MTE4MjQsImlhdCI6MTU4NTgxMTc2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vY2YFF-LKc-QGNYX_5flCRY5ex6X0vjJTRT4GEI1wAg</msg>
<status status="PASS" starttime="20200402 12:46:06.535" endtime="20200402 12:46:06.535"></status>
</kw>
<msg timestamp="20200402 12:46:06.536" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTcrbEh2bk93L3VzeW9rVlBUdVdjdWt4OEtyUmlhQ3d...</msg>
<status status="PASS" starttime="20200402 12:46:06.037" endtime="20200402 12:46:06.536"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:06.538" level="INFO">${Id} = 77933087098956</msg>
<status status="PASS" starttime="20200402 12:46:06.537" endtime="20200402 12:46:06.538"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.539" level="INFO">${IdNumber} = 77933087098956</msg>
<status status="PASS" starttime="20200402 12:46:06.538" endtime="20200402 12:46:06.539"></status>
</kw>
<msg timestamp="20200402 12:46:06.540" level="INFO">${idNum} = 77933087098956</msg>
<status status="PASS" starttime="20200402 12:46:06.536" endtime="20200402 12:46:06.540"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:06.541" level="INFO">${mobile} = 4049438294</msg>
<status status="PASS" starttime="20200402 12:46:06.541" endtime="20200402 12:46:06.541"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.542" level="INFO">${mobileNo} = 4049438294</msg>
<status status="PASS" starttime="20200402 12:46:06.542" endtime="20200402 12:46:06.542"></status>
</kw>
<msg timestamp="20200402 12:46:06.543" level="INFO">${MobNo} = 4049438294</msg>
<status status="PASS" starttime="20200402 12:46:06.540" endtime="20200402 12:46:06.543"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:06.545" level="INFO">${Emailnum} = 11091</msg>
<status status="PASS" starttime="20200402 12:46:06.544" endtime="20200402 12:46:06.545"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.546" level="INFO">${enum} = 11091</msg>
<status status="PASS" starttime="20200402 12:46:06.545" endtime="20200402 12:46:06.546"></status>
</kw>
<msg timestamp="20200402 12:46:06.546" level="INFO">${num} = 11091</msg>
<status status="PASS" starttime="20200402 12:46:06.544" endtime="20200402 12:46:06.546"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:06.547" level="INFO">${emailid} = pavan11091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:06.547" endtime="20200402 12:46:06.547"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:06.548" level="INFO">${email} = pavan11091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:06.548" endtime="20200402 12:46:06.549"></status>
</kw>
<msg timestamp="20200402 12:46:06.549" level="INFO">${emailid} = pavan11091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:06.543" endtime="20200402 12:46:06.549"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:06.554" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:06.554" endtime="20200402 12:46:06.555"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:06.555" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:06.555" endtime="20200402 12:46:06.555"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:06.556" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:06.556" endtime="20200402 12:46:06.556"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:06.559" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:06.557" endtime="20200402 12:46:06.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:06.561" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:06.559" endtime="20200402 12:46:06.561"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:06.565" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '77933087098956', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4049438294', 'email': 'pavan11091@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:06.561" endtime="20200402 12:46:06.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:06.566" endtime="20200402 12:46:06.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:06.568" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTcrbEh2bk93L3VzeW9rVlBUdVdjdWt4OEty...</msg>
<status status="PASS" starttime="20200402 12:46:06.567" endtime="20200402 12:46:06.568"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:06.569" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:06.568" endtime="20200402 12:46:06.569"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:06.570" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTcrbEh2bk93L3VzeW9rVlBUdVdjdWt4OEtyUmlhQ3d6MkZkKzhNQWV4NTl6OHUvTGswUEp1dXJ1V2NTM0tjQklGdU43bXNlSVR2K1dERHo4S1VWVms9IiwibmJmIjoxNTg1ODExNzY0LCJleHAiOjE1ODU4MTE4MjQsImlhdCI6MTU4NTgxMTc2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vY2YFF-LKc-QGNYX_5flCRY5ex6X0vjJTRT4GEI1wAg'} 
data={"escrowCompanyId": "001", "idNumber": "77933087098956", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4049438294", "email": "pavan11091@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:06.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.569" endtime="20200402 12:46:06.836"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:06.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.837" endtime="20200402 12:46:06.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:06.838" endtime="20200402 12:46:06.839"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:06.839" endtime="20200402 12:46:06.840"></status>
</kw>
<msg timestamp="20200402 12:46:06.841" level="INFO">${sellerid} = 7d8f26d4-deb7-44d7-9208-647e762b1f63</msg>
<status status="PASS" starttime="20200402 12:46:06.549" endtime="20200402 12:46:06.841"></status>
</kw>
<msg timestamp="20200402 12:46:06.841" level="INFO">${SellerId} = 7d8f26d4-deb7-44d7-9208-647e762b1f63</msg>
<msg timestamp="20200402 12:46:06.841" level="INFO">${idnumber} = 77933087098956</msg>
<status status="PASS" starttime="20200402 12:46:06.037" endtime="20200402 12:46:06.841"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompanyID_exeed_length}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:06.843" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:06.843" endtime="20200402 12:46:06.844"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:06.845" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:06.844" endtime="20200402 12:46:06.845"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:06.846" level="INFO">${body} = {'escrowCompanyId': 'YUP0111', 'SELLERId': '7d8f26d4-deb7-44d7-9208-647e762b1f63', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:06.845" endtime="20200402 12:46:06.846"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:06.847" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRN...</msg>
<status status="PASS" starttime="20200402 12:46:06.847" endtime="20200402 12:46:06.847"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:06.848" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:06.848" endtime="20200402 12:46:06.849"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:06.850" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRNR3JPYWdOOTRPMEl5cjNyMmV3T05adjNBUjJ6WVYzWDlDQ1dFM1IzZzJ1QzFiQXAwUWFmaWVYbmFobDg9IiwibmJmIjoxNTg1ODExNzYzLCJleHAiOjE1ODU4MTE4MjMsImlhdCI6MTU4NTgxMTc2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vzFUbVsxm1EqqcSo8eGxrXE2ZSt_X372-f7HAKhAthQ'} 
data={"escrowCompanyId": "YUP0111", "SELLERId": "7d8f26d4-deb7-44d7-9208-647e762b1f63", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:07.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:06.849" endtime="20200402 12:46:07.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:07.416" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:46:07.415" endtime="20200402 12:46:07.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:07.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:07.417" endtime="20200402 12:46:07.417"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:07.418" endtime="20200402 12:46:07.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:07.419" endtime="20200402 12:46:07.420"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:06.842" endtime="20200402 12:46:07.420"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:07.422" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:07.421" endtime="20200402 12:46:07.422"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:07.423" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '7d8f26d4-deb7-44d7-9208-647e762b1f63'}</msg>
<status status="PASS" starttime="20200402 12:46:07.423" endtime="20200402 12:46:07.424"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:07.424" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRN...</msg>
<status status="PASS" starttime="20200402 12:46:07.424" endtime="20200402 12:46:07.424"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:07.425" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:07.425" endtime="20200402 12:46:07.425"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:07.426" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOVh0SGQxdWhPbm9tcjJYR1pOVTg2TWNWZHRNR3JPYWdOOTRPMEl5cjNyMmV3T05adjNBUjJ6WVYzWDlDQ1dFM1IzZzJ1QzFiQXAwUWFmaWVYbmFobDg9IiwibmJmIjoxNTg1ODExNzYzLCJleHAiOjE1ODU4MTE4MjMsImlhdCI6MTU4NTgxMTc2MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vzFUbVsxm1EqqcSo8eGxrXE2ZSt_X372-f7HAKhAthQ'} 
data={"escrowCompanyId": "001", "sellerID": "7d8f26d4-deb7-44d7-9208-647e762b1f63"} 
json=None</msg>
<msg timestamp="20200402 12:46:08.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:07.426" endtime="20200402 12:46:08.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:08.259" level="INFO">{"escrowCompanyId":"001","sellerId":"7d8f26d4-deb7-44d7-9208-647e762b1f63","idNumber":"77933087098956","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4049438294","email":"pavan11091@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:04","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:08.259" endtime="20200402 12:46:08.260"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:08.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:08.260" endtime="20200402 12:46:08.261"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:07.420" endtime="20200402 12:46:08.261"></status>
</kw>
<doc>Invalid : To verify response when escrowCompanyId parameter is entered more than size 3</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:02.793" endtime="20200402 12:46:08.262" critical="yes"></status>
</test>
<test id="s1-t9" name="TC_14 Seller_Details_API Length less 3 EscrowCompId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:11.268" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:08.265" endtime="20200402 12:46:11.268"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:11.270" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:11.269" endtime="20200402 12:46:11.270"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:11.271" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:11.271" endtime="20200402 12:46:11.272"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:11.272" endtime="20200402 12:46:11.272"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:11.273" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:11.273" endtime="20200402 12:46:11.273"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:11.275" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:11.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:11.274" endtime="20200402 12:46:11.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:11.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:11.967" endtime="20200402 12:46:11.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:11.969" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9ORXprbiszcUpyZFdsQWw0KzhMbk82R0F1NTlNQUVhL1ZsVnJ5VkNVbjJxTzd2R0JidTNiTXBQaHdacVU9IiwibmJmIjoxNTg1ODExNzY5LCJleHAiOjE1ODU4MTE4MjksImlhdCI6MTU4NTgxMTc2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.XPQNFstRdqOFp8a_8UW_4YScqhuBri6Lahqgo1WUEN4</msg>
<status status="PASS" starttime="20200402 12:46:11.969" endtime="20200402 12:46:11.969"></status>
</kw>
<msg timestamp="20200402 12:46:11.970" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9ORXprbis...</msg>
<status status="PASS" starttime="20200402 12:46:11.269" endtime="20200402 12:46:11.970"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:11.972" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:11.972" endtime="20200402 12:46:11.973"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:11.974" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:11.973" endtime="20200402 12:46:11.974"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:11.974" endtime="20200402 12:46:11.975"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:11.975" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:11.975" endtime="20200402 12:46:11.975"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:11.977" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:12.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:11.976" endtime="20200402 12:46:12.166"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:12.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:12.167" endtime="20200402 12:46:12.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:12.168" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNE9telpFMi93bnZ0NGQ1Q2IzdXdNUnk0U3pMVmQ4Qnh5aWI1RUZHNWJMbDNkdENpbDg2SEc4UVIvMkNGYkZUZ2ZLT3ViWExIOVVWRnJLREk3dU5Gdjg9IiwibmJmIjoxNTg1ODExNzY5LCJleHAiOjE1ODU4MTE4MjksImlhdCI6MTU4NTgxMTc2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EsxA7NKEGR6wcMhw_z8cammkes_kwgD-XUGvcUdrBXw</msg>
<status status="PASS" starttime="20200402 12:46:12.168" endtime="20200402 12:46:12.168"></status>
</kw>
<msg timestamp="20200402 12:46:12.168" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNE9telpFMi93bnZ0NGQ1Q2IzdXdNUnk0U3pMVmQ4Qnh...</msg>
<status status="PASS" starttime="20200402 12:46:11.971" endtime="20200402 12:46:12.168"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:12.169" level="INFO">${Id} = 11693449534845</msg>
<status status="PASS" starttime="20200402 12:46:12.169" endtime="20200402 12:46:12.169"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:12.170" level="INFO">${IdNumber} = 11693449534845</msg>
<status status="PASS" starttime="20200402 12:46:12.170" endtime="20200402 12:46:12.170"></status>
</kw>
<msg timestamp="20200402 12:46:12.171" level="INFO">${idNum} = 11693449534845</msg>
<status status="PASS" starttime="20200402 12:46:12.168" endtime="20200402 12:46:12.171"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:12.172" level="INFO">${mobile} = 3371469833</msg>
<status status="PASS" starttime="20200402 12:46:12.171" endtime="20200402 12:46:12.172"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:12.172" level="INFO">${mobileNo} = 3371469833</msg>
<status status="PASS" starttime="20200402 12:46:12.172" endtime="20200402 12:46:12.172"></status>
</kw>
<msg timestamp="20200402 12:46:12.172" level="INFO">${MobNo} = 3371469833</msg>
<status status="PASS" starttime="20200402 12:46:12.171" endtime="20200402 12:46:12.172"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:12.174" level="INFO">${Emailnum} = 69716</msg>
<status status="PASS" starttime="20200402 12:46:12.173" endtime="20200402 12:46:12.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:12.174" level="INFO">${enum} = 69716</msg>
<status status="PASS" starttime="20200402 12:46:12.174" endtime="20200402 12:46:12.174"></status>
</kw>
<msg timestamp="20200402 12:46:12.174" level="INFO">${num} = 69716</msg>
<status status="PASS" starttime="20200402 12:46:12.173" endtime="20200402 12:46:12.174"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:12.175" level="INFO">${emailid} = pavan69716@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:12.175" endtime="20200402 12:46:12.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:12.175" level="INFO">${email} = pavan69716@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:12.175" endtime="20200402 12:46:12.176"></status>
</kw>
<msg timestamp="20200402 12:46:12.176" level="INFO">${emailid} = pavan69716@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:12.173" endtime="20200402 12:46:12.176"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:12.178" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:12.178" endtime="20200402 12:46:12.179"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:12.179" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:12.179" endtime="20200402 12:46:12.179"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:12.180" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:12.179" endtime="20200402 12:46:12.180"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:12.181" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:12.180" endtime="20200402 12:46:12.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:12.182" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:12.181" endtime="20200402 12:46:12.182"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:12.185" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '11693449534845', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3371469833', 'email': 'pavan69716@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:12.183" endtime="20200402 12:46:12.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:12.185" endtime="20200402 12:46:12.186"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:12.186" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNE9telpFMi93bnZ0NGQ1Q2IzdXdNUnk0U3pM...</msg>
<status status="PASS" starttime="20200402 12:46:12.186" endtime="20200402 12:46:12.186"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:12.187" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:12.187" endtime="20200402 12:46:12.187"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:12.188" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNE9telpFMi93bnZ0NGQ1Q2IzdXdNUnk0U3pMVmQ4Qnh5aWI1RUZHNWJMbDNkdENpbDg2SEc4UVIvMkNGYkZUZ2ZLT3ViWExIOVVWRnJLREk3dU5Gdjg9IiwibmJmIjoxNTg1ODExNzY5LCJleHAiOjE1ODU4MTE4MjksImlhdCI6MTU4NTgxMTc2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EsxA7NKEGR6wcMhw_z8cammkes_kwgD-XUGvcUdrBXw'} 
data={"escrowCompanyId": "001", "idNumber": "11693449534845", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3371469833", "email": "pavan69716@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:12.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:12.187" endtime="20200402 12:46:12.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:12.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:12.440" endtime="20200402 12:46:12.440"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:12.440" endtime="20200402 12:46:12.441"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:12.441" endtime="20200402 12:46:12.441"></status>
</kw>
<msg timestamp="20200402 12:46:12.442" level="INFO">${sellerid} = f89bec0b-28eb-4956-a0d9-fd9ba4f462f9</msg>
<status status="PASS" starttime="20200402 12:46:12.176" endtime="20200402 12:46:12.442"></status>
</kw>
<msg timestamp="20200402 12:46:12.442" level="INFO">${SellerId} = f89bec0b-28eb-4956-a0d9-fd9ba4f462f9</msg>
<msg timestamp="20200402 12:46:12.442" level="INFO">${idnumber} = 11693449534845</msg>
<status status="PASS" starttime="20200402 12:46:11.971" endtime="20200402 12:46:12.442"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{EScrow_id_less_th3}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:12.444" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:12.443" endtime="20200402 12:46:12.444"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:12.444" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:12.444" endtime="20200402 12:46:12.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:12.445" level="INFO">${body} = {'escrowCompanyId': '12', 'SELLERId': 'f89bec0b-28eb-4956-a0d9-fd9ba4f462f9', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:12.445" endtime="20200402 12:46:12.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:12.446" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9O...</msg>
<status status="PASS" starttime="20200402 12:46:12.445" endtime="20200402 12:46:12.446"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:12.446" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:12.446" endtime="20200402 12:46:12.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:12.447" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9ORXprbiszcUpyZFdsQWw0KzhMbk82R0F1NTlNQUVhL1ZsVnJ5VkNVbjJxTzd2R0JidTNiTXBQaHdacVU9IiwibmJmIjoxNTg1ODExNzY5LCJleHAiOjE1ODU4MTE4MjksImlhdCI6MTU4NTgxMTc2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.XPQNFstRdqOFp8a_8UW_4YScqhuBri6Lahqgo1WUEN4'} 
data={"escrowCompanyId": "12", "SELLERId": "f89bec0b-28eb-4956-a0d9-fd9ba4f462f9", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:13.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:12.446" endtime="20200402 12:46:13.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:13.291" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:46:13.291" endtime="20200402 12:46:13.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:13.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:13.292" endtime="20200402 12:46:13.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:13.293" endtime="20200402 12:46:13.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:13.293" endtime="20200402 12:46:13.294"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:12.443" endtime="20200402 12:46:13.294"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:13.295" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:13.295" endtime="20200402 12:46:13.296"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:13.296" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'f89bec0b-28eb-4956-a0d9-fd9ba4f462f9'}</msg>
<status status="PASS" starttime="20200402 12:46:13.296" endtime="20200402 12:46:13.297"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:13.297" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9O...</msg>
<status status="PASS" starttime="20200402 12:46:13.297" endtime="20200402 12:46:13.297"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:13.298" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:13.297" endtime="20200402 12:46:13.298"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:13.299" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmsvSVhQNUJ3ZUZacDNUcmNTOWVaMEcweS9ORXprbiszcUpyZFdsQWw0KzhMbk82R0F1NTlNQUVhL1ZsVnJ5VkNVbjJxTzd2R0JidTNiTXBQaHdacVU9IiwibmJmIjoxNTg1ODExNzY5LCJleHAiOjE1ODU4MTE4MjksImlhdCI6MTU4NTgxMTc2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.XPQNFstRdqOFp8a_8UW_4YScqhuBri6Lahqgo1WUEN4'} 
data={"escrowCompanyId": "001", "sellerID": "f89bec0b-28eb-4956-a0d9-fd9ba4f462f9"} 
json=None</msg>
<msg timestamp="20200402 12:46:13.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:13.298" endtime="20200402 12:46:13.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:13.819" level="INFO">{"escrowCompanyId":"001","sellerId":"f89bec0b-28eb-4956-a0d9-fd9ba4f462f9","idNumber":"11693449534845","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3371469833","email":"pavan69716@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:09","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:13.818" endtime="20200402 12:46:13.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:13.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:13.820" endtime="20200402 12:46:13.820"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:13.295" endtime="20200402 12:46:13.820"></status>
</kw>
<doc>Invalid : To verify response when escrowCompanyId parameter is entered less than size 3</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:08.263" endtime="20200402 12:46:13.821" critical="yes"></status>
</test>
<test id="s1-t10" name="TC_15 Selle_Details_API Empty SellerId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:16.826" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:13.824" endtime="20200402 12:46:16.826"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:16.827" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:16.827" endtime="20200402 12:46:16.828"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:16.829" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:16.828" endtime="20200402 12:46:16.829"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:16.829" endtime="20200402 12:46:16.829"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:16.830" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:16.829" endtime="20200402 12:46:16.830"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:16.830" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:21.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:16.830" endtime="20200402 12:46:21.020"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:21.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:21.020" endtime="20200402 12:46:21.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.021" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlHQUNFTDlvemErYTJBSWo4UENBWXNRTTg4NzFZZGdEWDRnZWk5bEhHQ2JTREZoOHZuRUhHS21TWUlTYjg9IiwibmJmIjoxNTg1ODExNzc4LCJleHAiOjE1ODU4MTE4MzgsImlhdCI6MTU4NTgxMTc3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b-zcyYOkMCu20NJ-wWPSC-t2JfipwgTeApEYPEKnxvA</msg>
<status status="PASS" starttime="20200402 12:46:21.021" endtime="20200402 12:46:21.022"></status>
</kw>
<msg timestamp="20200402 12:46:21.022" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlHQUNFTDl...</msg>
<status status="PASS" starttime="20200402 12:46:16.827" endtime="20200402 12:46:21.022"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.024" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:21.023" endtime="20200402 12:46:21.024"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:21.025" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:21.024" endtime="20200402 12:46:21.025"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:21.025" endtime="20200402 12:46:21.025"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:21.026" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:21.025" endtime="20200402 12:46:21.026"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:21.026" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:21.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:21.026" endtime="20200402 12:46:21.514"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:21.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:21.514" endtime="20200402 12:46:21.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.515" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdzSTgyNGRQVjRiZFZ0aDY5a0JRNnpnUUFWVGthTkJhNFZsYnE4QXVDWno1VlZTRkNKUnVuL2drdHFmdGdjbU5aYmtyWERaZWQ3ckpKRUUwc1JxMGs9IiwibmJmIjoxNTg1ODExNzc5LCJleHAiOjE1ODU4MTE4MzksImlhdCI6MTU4NTgxMTc3OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JElFZNil4MrKJsW8c1Llt0rny671OfOM3jSOHBQyAkM</msg>
<status status="PASS" starttime="20200402 12:46:21.515" endtime="20200402 12:46:21.516"></status>
</kw>
<msg timestamp="20200402 12:46:21.516" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdzSTgyNGRQVjRiZFZ0aDY5a0JRNnpnUUFWVGthTkJ...</msg>
<status status="PASS" starttime="20200402 12:46:21.023" endtime="20200402 12:46:21.516"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:21.517" level="INFO">${Id} = 48322773955445</msg>
<status status="PASS" starttime="20200402 12:46:21.517" endtime="20200402 12:46:21.517"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.518" level="INFO">${IdNumber} = 48322773955445</msg>
<status status="PASS" starttime="20200402 12:46:21.517" endtime="20200402 12:46:21.518"></status>
</kw>
<msg timestamp="20200402 12:46:21.518" level="INFO">${idNum} = 48322773955445</msg>
<status status="PASS" starttime="20200402 12:46:21.516" endtime="20200402 12:46:21.518"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:21.519" level="INFO">${mobile} = 9352392519</msg>
<status status="PASS" starttime="20200402 12:46:21.519" endtime="20200402 12:46:21.519"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.519" level="INFO">${mobileNo} = 9352392519</msg>
<status status="PASS" starttime="20200402 12:46:21.519" endtime="20200402 12:46:21.520"></status>
</kw>
<msg timestamp="20200402 12:46:21.520" level="INFO">${MobNo} = 9352392519</msg>
<status status="PASS" starttime="20200402 12:46:21.518" endtime="20200402 12:46:21.520"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:21.521" level="INFO">${Emailnum} = 79917</msg>
<status status="PASS" starttime="20200402 12:46:21.521" endtime="20200402 12:46:21.521"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.522" level="INFO">${enum} = 79917</msg>
<status status="PASS" starttime="20200402 12:46:21.521" endtime="20200402 12:46:21.522"></status>
</kw>
<msg timestamp="20200402 12:46:21.522" level="INFO">${num} = 79917</msg>
<status status="PASS" starttime="20200402 12:46:21.520" endtime="20200402 12:46:21.522"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:21.523" level="INFO">${emailid} = pavan79917@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:21.522" endtime="20200402 12:46:21.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:21.523" level="INFO">${email} = pavan79917@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:21.523" endtime="20200402 12:46:21.523"></status>
</kw>
<msg timestamp="20200402 12:46:21.523" level="INFO">${emailid} = pavan79917@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:21.520" endtime="20200402 12:46:21.523"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:21.526" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:21.526" endtime="20200402 12:46:21.527"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:21.527" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:21.527" endtime="20200402 12:46:21.527"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:21.528" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:21.528" endtime="20200402 12:46:21.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:21.530" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:21.528" endtime="20200402 12:46:21.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:21.532" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:21.530" endtime="20200402 12:46:21.532"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:21.534" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '48322773955445', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9352392519', 'email': 'pavan79917@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:21.532" endtime="20200402 12:46:21.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:21.535" endtime="20200402 12:46:21.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:21.536" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdzSTgyNGRQVjRiZFZ0aDY5a0JRNnpnUUFW...</msg>
<status status="PASS" starttime="20200402 12:46:21.536" endtime="20200402 12:46:21.536"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:21.538" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:21.537" endtime="20200402 12:46:21.538"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:21.539" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdzSTgyNGRQVjRiZFZ0aDY5a0JRNnpnUUFWVGthTkJhNFZsYnE4QXVDWno1VlZTRkNKUnVuL2drdHFmdGdjbU5aYmtyWERaZWQ3ckpKRUUwc1JxMGs9IiwibmJmIjoxNTg1ODExNzc5LCJleHAiOjE1ODU4MTE4MzksImlhdCI6MTU4NTgxMTc3OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JElFZNil4MrKJsW8c1Llt0rny671OfOM3jSOHBQyAkM'} 
data={"escrowCompanyId": "001", "idNumber": "48322773955445", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9352392519", "email": "pavan79917@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:22.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:21.538" endtime="20200402 12:46:22.466"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:22.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:22.466" endtime="20200402 12:46:22.467"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:22.468" endtime="20200402 12:46:22.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:22.469" endtime="20200402 12:46:22.469"></status>
</kw>
<msg timestamp="20200402 12:46:22.470" level="INFO">${sellerid} = 176cce43-3e09-470f-86be-ec2b189e1e6d</msg>
<status status="PASS" starttime="20200402 12:46:21.524" endtime="20200402 12:46:22.470"></status>
</kw>
<msg timestamp="20200402 12:46:22.470" level="INFO">${SellerId} = 176cce43-3e09-470f-86be-ec2b189e1e6d</msg>
<msg timestamp="20200402 12:46:22.470" level="INFO">${idnumber} = 48322773955445</msg>
<status status="PASS" starttime="20200402 12:46:21.023" endtime="20200402 12:46:22.470"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:22.472" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:22.472" endtime="20200402 12:46:22.472"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:22.473" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:22.472" endtime="20200402 12:46:22.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:22.474" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:22.473" endtime="20200402 12:46:22.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:22.475" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlH...</msg>
<status status="PASS" starttime="20200402 12:46:22.475" endtime="20200402 12:46:22.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:22.476" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:22.476" endtime="20200402 12:46:22.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:22.477" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlHQUNFTDlvemErYTJBSWo4UENBWXNRTTg4NzFZZGdEWDRnZWk5bEhHQ2JTREZoOHZuRUhHS21TWUlTYjg9IiwibmJmIjoxNTg1ODExNzc4LCJleHAiOjE1ODU4MTE4MzgsImlhdCI6MTU4NTgxMTc3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b-zcyYOkMCu20NJ-wWPSC-t2JfipwgTeApEYPEKnxvA'} 
data={"escrowCompanyId": "001", "SELLERId": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:26.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:22.476" endtime="20200402 12:46:26.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:26.673" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:46:26.673" endtime="20200402 12:46:26.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:26.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:26.673" endtime="20200402 12:46:26.674"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:26.674" endtime="20200402 12:46:26.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:26.675" endtime="20200402 12:46:26.675"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:22.471" endtime="20200402 12:46:26.676"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:26.676" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:26.676" endtime="20200402 12:46:26.677"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:26.677" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '176cce43-3e09-470f-86be-ec2b189e1e6d'}</msg>
<status status="PASS" starttime="20200402 12:46:26.677" endtime="20200402 12:46:26.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:26.678" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlH...</msg>
<status status="PASS" starttime="20200402 12:46:26.678" endtime="20200402 12:46:26.678"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:26.678" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:26.678" endtime="20200402 12:46:26.679"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:26.679" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FNWFUweGU0U1J0emk0TzhnS2RvSm10VmlHQUNFTDlvemErYTJBSWo4UENBWXNRTTg4NzFZZGdEWDRnZWk5bEhHQ2JTREZoOHZuRUhHS21TWUlTYjg9IiwibmJmIjoxNTg1ODExNzc4LCJleHAiOjE1ODU4MTE4MzgsImlhdCI6MTU4NTgxMTc3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b-zcyYOkMCu20NJ-wWPSC-t2JfipwgTeApEYPEKnxvA'} 
data={"escrowCompanyId": "001", "sellerID": "176cce43-3e09-470f-86be-ec2b189e1e6d"} 
json=None</msg>
<msg timestamp="20200402 12:46:27.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:26.679" endtime="20200402 12:46:27.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:27.725" level="INFO">{"escrowCompanyId":"001","sellerId":"176cce43-3e09-470f-86be-ec2b189e1e6d","idNumber":"48322773955445","typeOfId":3,"mobileCountryCode":"67","mobileNo":"9352392519","email":"pavan79917@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:19","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:27.724" endtime="20200402 12:46:27.725"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:27.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:27.725" endtime="20200402 12:46:27.726"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:26.676" endtime="20200402 12:46:27.726"></status>
</kw>
<doc>Empty : To check API response when sellerId parameter is entered empty and request is sent with mandatory fields</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:13.822" endtime="20200402 12:46:27.727" critical="yes"></status>
</test>
<test id="s1-t11" name="TC_16 Selle_Details_API Invalid SellerId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:30.732" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:27.730" endtime="20200402 12:46:30.732"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:30.734" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:30.733" endtime="20200402 12:46:30.734"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:30.735" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:30.735" endtime="20200402 12:46:30.735"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:30.736" endtime="20200402 12:46:30.736"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:30.737" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:30.737" endtime="20200402 12:46:30.737"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:30.738" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:31.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:30.738" endtime="20200402 12:46:31.377"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:31.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.377" endtime="20200402 12:46:31.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.379" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFOWXZRMzUveGJUUTBEWC9jbDdjdUdWQnhGM3YzNjI1cHpRLzJtYTdqaTV3dzIyQmY1U2dVKzZyV1RkKzg9IiwibmJmIjoxNTg1ODExNzg4LCJleHAiOjE1ODU4MTE4NDgsImlhdCI6MTU4NTgxMTc4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.w6yoXagOXBEhSs_lEYSVOHUhGxdEUcTAeJU0h2CQUUo</msg>
<status status="PASS" starttime="20200402 12:46:31.378" endtime="20200402 12:46:31.379"></status>
</kw>
<msg timestamp="20200402 12:46:31.380" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFOWXZRMzU...</msg>
<status status="PASS" starttime="20200402 12:46:30.733" endtime="20200402 12:46:31.380"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.383" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:31.382" endtime="20200402 12:46:31.383"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:31.384" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:31.384" endtime="20200402 12:46:31.384"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:31.385" endtime="20200402 12:46:31.385"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:31.387" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:31.386" endtime="20200402 12:46:31.387"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:31.389" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:31.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.387" endtime="20200402 12:46:31.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:31.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.631" endtime="20200402 12:46:31.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.633" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2xYb081a3VKajM0ejBiWEwyRG11UFdZTUp6bndFSmhGWVk3WHBDSW1wcXBLNDMzYmRrWXo1TTZKbnJUV24zM1ZkY1RHYWVhbnJZOWk4VzRzWXQydU09IiwibmJmIjoxNTg1ODExNzg5LCJleHAiOjE1ODU4MTE4NDksImlhdCI6MTU4NTgxMTc4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sO9LwpMfHW-BRUFXbLEzgpZDorqH6aoVV31humbuw-Q</msg>
<status status="PASS" starttime="20200402 12:46:31.632" endtime="20200402 12:46:31.633"></status>
</kw>
<msg timestamp="20200402 12:46:31.634" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2xYb081a3VKajM0ejBiWEwyRG11UFdZTUp6bndFSmh...</msg>
<status status="PASS" starttime="20200402 12:46:31.381" endtime="20200402 12:46:31.634"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:31.636" level="INFO">${Id} = 94845499940729</msg>
<status status="PASS" starttime="20200402 12:46:31.635" endtime="20200402 12:46:31.636"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.637" level="INFO">${IdNumber} = 94845499940729</msg>
<status status="PASS" starttime="20200402 12:46:31.637" endtime="20200402 12:46:31.638"></status>
</kw>
<msg timestamp="20200402 12:46:31.638" level="INFO">${idNum} = 94845499940729</msg>
<status status="PASS" starttime="20200402 12:46:31.634" endtime="20200402 12:46:31.638"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:31.640" level="INFO">${mobile} = 1540718056</msg>
<status status="PASS" starttime="20200402 12:46:31.639" endtime="20200402 12:46:31.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.640" level="INFO">${mobileNo} = 1540718056</msg>
<status status="PASS" starttime="20200402 12:46:31.640" endtime="20200402 12:46:31.641"></status>
</kw>
<msg timestamp="20200402 12:46:31.641" level="INFO">${MobNo} = 1540718056</msg>
<status status="PASS" starttime="20200402 12:46:31.638" endtime="20200402 12:46:31.641"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:31.643" level="INFO">${Emailnum} = 11340</msg>
<status status="PASS" starttime="20200402 12:46:31.643" endtime="20200402 12:46:31.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.645" level="INFO">${enum} = 11340</msg>
<status status="PASS" starttime="20200402 12:46:31.644" endtime="20200402 12:46:31.645"></status>
</kw>
<msg timestamp="20200402 12:46:31.645" level="INFO">${num} = 11340</msg>
<status status="PASS" starttime="20200402 12:46:31.642" endtime="20200402 12:46:31.645"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:31.647" level="INFO">${emailid} = pavan11340@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:31.646" endtime="20200402 12:46:31.647"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:31.648" level="INFO">${email} = pavan11340@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:31.647" endtime="20200402 12:46:31.648"></status>
</kw>
<msg timestamp="20200402 12:46:31.648" level="INFO">${emailid} = pavan11340@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:31.641" endtime="20200402 12:46:31.649"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:31.653" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:31.653" endtime="20200402 12:46:31.654"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:31.655" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:31.655" endtime="20200402 12:46:31.655"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:31.656" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:31.656" endtime="20200402 12:46:31.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:31.659" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:31.657" endtime="20200402 12:46:31.659"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:31.662" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:31.660" endtime="20200402 12:46:31.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:31.667" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '94845499940729', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1540718056', 'email': 'pavan11340@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:31.663" endtime="20200402 12:46:31.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:31.668" endtime="20200402 12:46:31.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:31.670" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2xYb081a3VKajM0ejBiWEwyRG11UFdZTUp6...</msg>
<status status="PASS" starttime="20200402 12:46:31.670" endtime="20200402 12:46:31.670"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:31.672" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:31.671" endtime="20200402 12:46:31.672"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:31.674" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2xYb081a3VKajM0ejBiWEwyRG11UFdZTUp6bndFSmhGWVk3WHBDSW1wcXBLNDMzYmRrWXo1TTZKbnJUV24zM1ZkY1RHYWVhbnJZOWk4VzRzWXQydU09IiwibmJmIjoxNTg1ODExNzg5LCJleHAiOjE1ODU4MTE4NDksImlhdCI6MTU4NTgxMTc4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sO9LwpMfHW-BRUFXbLEzgpZDorqH6aoVV31humbuw-Q'} 
data={"escrowCompanyId": "001", "idNumber": "94845499940729", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1540718056", "email": "pavan11340@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:31.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.672" endtime="20200402 12:46:31.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:31.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.909" endtime="20200402 12:46:31.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:31.911" endtime="20200402 12:46:31.912"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:31.912" endtime="20200402 12:46:31.913"></status>
</kw>
<msg timestamp="20200402 12:46:31.914" level="INFO">${sellerid} = c7bd4080-783a-4523-8a2e-fcab1f890040</msg>
<status status="PASS" starttime="20200402 12:46:31.649" endtime="20200402 12:46:31.914"></status>
</kw>
<msg timestamp="20200402 12:46:31.914" level="INFO">${SellerId} = c7bd4080-783a-4523-8a2e-fcab1f890040</msg>
<msg timestamp="20200402 12:46:31.914" level="INFO">${idnumber} = 94845499940729</msg>
<status status="PASS" starttime="20200402 12:46:31.381" endtime="20200402 12:46:31.914"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{Invalid_SellerID}[0]</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:31.919" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:31.918" endtime="20200402 12:46:31.919"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:31.920" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:31.920" endtime="20200402 12:46:31.921"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:31.922" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'aaaaaaaaaaaaaa', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:31.921" endtime="20200402 12:46:31.922"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:31.923" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFO...</msg>
<status status="PASS" starttime="20200402 12:46:31.923" endtime="20200402 12:46:31.923"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:31.925" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:31.924" endtime="20200402 12:46:31.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:31.926" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFOWXZRMzUveGJUUTBEWC9jbDdjdUdWQnhGM3YzNjI1cHpRLzJtYTdqaTV3dzIyQmY1U2dVKzZyV1RkKzg9IiwibmJmIjoxNTg1ODExNzg4LCJleHAiOjE1ODU4MTE4NDgsImlhdCI6MTU4NTgxMTc4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.w6yoXagOXBEhSs_lEYSVOHUhGxdEUcTAeJU0h2CQUUo'} 
data={"escrowCompanyId": "001", "SELLERId": "aaaaaaaaaaaaaa", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:32.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:31.925" endtime="20200402 12:46:32.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:32.472" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:46:32.472" endtime="20200402 12:46:32.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:32.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:32.493" endtime="20200402 12:46:32.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:32.496" endtime="20200402 12:46:32.497"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:32.497" endtime="20200402 12:46:32.498"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:31.916" endtime="20200402 12:46:32.499"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:32.507" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:32.507" endtime="20200402 12:46:32.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:32.509" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c7bd4080-783a-4523-8a2e-fcab1f890040'}</msg>
<status status="PASS" starttime="20200402 12:46:32.508" endtime="20200402 12:46:32.509"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:32.510" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFO...</msg>
<status status="PASS" starttime="20200402 12:46:32.510" endtime="20200402 12:46:32.510"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:32.512" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:32.511" endtime="20200402 12:46:32.512"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:32.513" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNldtV0owQ2oyVEgxZ1NhOFJ3bmFrekFoZjFOWXZRMzUveGJUUTBEWC9jbDdjdUdWQnhGM3YzNjI1cHpRLzJtYTdqaTV3dzIyQmY1U2dVKzZyV1RkKzg9IiwibmJmIjoxNTg1ODExNzg4LCJleHAiOjE1ODU4MTE4NDgsImlhdCI6MTU4NTgxMTc4OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.w6yoXagOXBEhSs_lEYSVOHUhGxdEUcTAeJU0h2CQUUo'} 
data={"escrowCompanyId": "001", "sellerID": "c7bd4080-783a-4523-8a2e-fcab1f890040"} 
json=None</msg>
<msg timestamp="20200402 12:46:33.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:32.512" endtime="20200402 12:46:33.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:33.309" level="INFO">{"escrowCompanyId":"001","sellerId":"c7bd4080-783a-4523-8a2e-fcab1f890040","idNumber":"94845499940729","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1540718056","email":"pavan11340@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:29","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:33.309" endtime="20200402 12:46:33.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:33.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:33.311" endtime="20200402 12:46:33.312"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:32.505" endtime="20200402 12:46:33.312"></status>
</kw>
<doc>Invalid: To check API response when sellerId parameter is entered Invalid and request is sent with mandatory fields (seller Id not existing in company)</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:27.728" endtime="20200402 12:46:33.313" critical="yes"></status>
</test>
<test id="s1-t12" name="TC_17 Selle_Details_API SellerId More than 36">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:36.318" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:33.316" endtime="20200402 12:46:36.318"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:36.320" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:36.320" endtime="20200402 12:46:36.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:36.322" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:36.321" endtime="20200402 12:46:36.322"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:36.322" endtime="20200402 12:46:36.323"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:36.324" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:36.323" endtime="20200402 12:46:36.324"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:36.325" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:37.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:36.324" endtime="20200402 12:46:37.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:37.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:37.388" endtime="20200402 12:46:37.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:37.389" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0JpVzRKUDZScW5EajYrV29vR1J5RUtjN29iTHZkQ1dadFhkdWlWZnlRL3ZFQjM2T2JuM1hjWnZWTEg5VVk9IiwibmJmIjoxNTg1ODExNzk0LCJleHAiOjE1ODU4MTE4NTQsImlhdCI6MTU4NTgxMTc5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.GQeI17x6yIwD62c7U5zKhrBWP7QvOwlkZTB0N-_YW0k</msg>
<status status="PASS" starttime="20200402 12:46:37.389" endtime="20200402 12:46:37.389"></status>
</kw>
<msg timestamp="20200402 12:46:37.390" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0JpVzRKUDZ...</msg>
<status status="PASS" starttime="20200402 12:46:36.319" endtime="20200402 12:46:37.390"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:37.393" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:37.393" endtime="20200402 12:46:37.394"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:37.394" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:37.394" endtime="20200402 12:46:37.395"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:37.395" endtime="20200402 12:46:37.396"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:37.396" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:37.396" endtime="20200402 12:46:37.397"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:37.398" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:38.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:37.397" endtime="20200402 12:46:38.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:38.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:38.786" endtime="20200402 12:46:38.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:38.788" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTZuR0s4UkpPTmJndEthREtoZGlZczlMQ2s0NTNPN0pkRjhlWnZUYjBRamlPR2pIbnV1bHl2cVM0eXE2cm1oeVR1dk0xSTlFR2ZDbTlJSWdmNy9iUVk9IiwibmJmIjoxNTg1ODExNzk2LCJleHAiOjE1ODU4MTE4NTYsImlhdCI6MTU4NTgxMTc5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.l1yO1WA2ah9ScnS84pEiSPiFBa40yTnBku_X8GVhcqo</msg>
<status status="PASS" starttime="20200402 12:46:38.787" endtime="20200402 12:46:38.788"></status>
</kw>
<msg timestamp="20200402 12:46:38.789" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTZuR0s4UkpPTmJndEthREtoZGlZczlMQ2s0NTNPN0p...</msg>
<status status="PASS" starttime="20200402 12:46:37.392" endtime="20200402 12:46:38.789"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:38.790" level="INFO">${Id} = 24353589321700</msg>
<status status="PASS" starttime="20200402 12:46:38.790" endtime="20200402 12:46:38.790"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:38.792" level="INFO">${IdNumber} = 24353589321700</msg>
<status status="PASS" starttime="20200402 12:46:38.791" endtime="20200402 12:46:38.792"></status>
</kw>
<msg timestamp="20200402 12:46:38.792" level="INFO">${idNum} = 24353589321700</msg>
<status status="PASS" starttime="20200402 12:46:38.789" endtime="20200402 12:46:38.792"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:38.794" level="INFO">${mobile} = 3280650870</msg>
<status status="PASS" starttime="20200402 12:46:38.793" endtime="20200402 12:46:38.794"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:38.795" level="INFO">${mobileNo} = 3280650870</msg>
<status status="PASS" starttime="20200402 12:46:38.794" endtime="20200402 12:46:38.795"></status>
</kw>
<msg timestamp="20200402 12:46:38.795" level="INFO">${MobNo} = 3280650870</msg>
<status status="PASS" starttime="20200402 12:46:38.792" endtime="20200402 12:46:38.795"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:38.797" level="INFO">${Emailnum} = 98377</msg>
<status status="PASS" starttime="20200402 12:46:38.797" endtime="20200402 12:46:38.797"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:38.798" level="INFO">${enum} = 98377</msg>
<status status="PASS" starttime="20200402 12:46:38.798" endtime="20200402 12:46:38.798"></status>
</kw>
<msg timestamp="20200402 12:46:38.799" level="INFO">${num} = 98377</msg>
<status status="PASS" starttime="20200402 12:46:38.796" endtime="20200402 12:46:38.799"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:38.800" level="INFO">${emailid} = pavan98377@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:38.799" endtime="20200402 12:46:38.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:38.800" level="INFO">${email} = pavan98377@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:38.800" endtime="20200402 12:46:38.801"></status>
</kw>
<msg timestamp="20200402 12:46:38.801" level="INFO">${emailid} = pavan98377@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:38.795" endtime="20200402 12:46:38.801"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:38.805" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:38.805" endtime="20200402 12:46:38.806"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:38.806" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:38.806" endtime="20200402 12:46:38.807"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:38.807" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:38.807" endtime="20200402 12:46:38.807"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:38.810" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:38.808" endtime="20200402 12:46:38.810"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:38.812" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:38.810" endtime="20200402 12:46:38.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:38.816" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '24353589321700', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3280650870', 'email': 'pavan98377@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:38.812" endtime="20200402 12:46:38.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:38.816" endtime="20200402 12:46:38.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:38.818" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTZuR0s4UkpPTmJndEthREtoZGlZczlMQ2s0...</msg>
<status status="PASS" starttime="20200402 12:46:38.818" endtime="20200402 12:46:38.818"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:38.819" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:38.819" endtime="20200402 12:46:38.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:38.821" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTZuR0s4UkpPTmJndEthREtoZGlZczlMQ2s0NTNPN0pkRjhlWnZUYjBRamlPR2pIbnV1bHl2cVM0eXE2cm1oeVR1dk0xSTlFR2ZDbTlJSWdmNy9iUVk9IiwibmJmIjoxNTg1ODExNzk2LCJleHAiOjE1ODU4MTE4NTYsImlhdCI6MTU4NTgxMTc5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.l1yO1WA2ah9ScnS84pEiSPiFBa40yTnBku_X8GVhcqo'} 
data={"escrowCompanyId": "001", "idNumber": "24353589321700", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3280650870", "email": "pavan98377@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:39.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:38.820" endtime="20200402 12:46:39.064"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:39.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:39.064" endtime="20200402 12:46:39.065"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:39.065" endtime="20200402 12:46:39.065"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:39.066" endtime="20200402 12:46:39.066"></status>
</kw>
<msg timestamp="20200402 12:46:39.067" level="INFO">${sellerid} = 3008b303-3905-42f7-9ebc-cf6a482f508e</msg>
<status status="PASS" starttime="20200402 12:46:38.801" endtime="20200402 12:46:39.067"></status>
</kw>
<msg timestamp="20200402 12:46:39.067" level="INFO">${SellerId} = 3008b303-3905-42f7-9ebc-cf6a482f508e</msg>
<msg timestamp="20200402 12:46:39.067" level="INFO">${idnumber} = 24353589321700</msg>
<status status="PASS" starttime="20200402 12:46:37.391" endtime="20200402 12:46:39.067"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}1234</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:39.069" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:39.068" endtime="20200402 12:46:39.069"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:39.070" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:39.069" endtime="20200402 12:46:39.070"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:39.071" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '3008b303-3905-42f7-9ebc-cf6a482f508e1234', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:39.070" endtime="20200402 12:46:39.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:39.071" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0Jp...</msg>
<status status="PASS" starttime="20200402 12:46:39.071" endtime="20200402 12:46:39.071"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:39.072" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:39.072" endtime="20200402 12:46:39.072"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:39.073" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0JpVzRKUDZScW5EajYrV29vR1J5RUtjN29iTHZkQ1dadFhkdWlWZnlRL3ZFQjM2T2JuM1hjWnZWTEg5VVk9IiwibmJmIjoxNTg1ODExNzk0LCJleHAiOjE1ODU4MTE4NTQsImlhdCI6MTU4NTgxMTc5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.GQeI17x6yIwD62c7U5zKhrBWP7QvOwlkZTB0N-_YW0k'} 
data={"escrowCompanyId": "001", "SELLERId": "3008b303-3905-42f7-9ebc-cf6a482f508e1234", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:43.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:39.072" endtime="20200402 12:46:43.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:43.305" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:46:43.305" endtime="20200402 12:46:43.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:43.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:43.306" endtime="20200402 12:46:43.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:43.307" endtime="20200402 12:46:43.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:43.308" endtime="20200402 12:46:43.308"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:39.068" endtime="20200402 12:46:43.308"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:43.310" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:43.310" endtime="20200402 12:46:43.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:43.311" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '3008b303-3905-42f7-9ebc-cf6a482f508e'}</msg>
<status status="PASS" starttime="20200402 12:46:43.310" endtime="20200402 12:46:43.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:43.311" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0Jp...</msg>
<status status="PASS" starttime="20200402 12:46:43.311" endtime="20200402 12:46:43.311"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:43.312" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:43.312" endtime="20200402 12:46:43.312"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:43.313" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmI4VHF2cE50aldxcVc0VEFBWVMwUlBTZ0JpVzRKUDZScW5EajYrV29vR1J5RUtjN29iTHZkQ1dadFhkdWlWZnlRL3ZFQjM2T2JuM1hjWnZWTEg5VVk9IiwibmJmIjoxNTg1ODExNzk0LCJleHAiOjE1ODU4MTE4NTQsImlhdCI6MTU4NTgxMTc5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.GQeI17x6yIwD62c7U5zKhrBWP7QvOwlkZTB0N-_YW0k'} 
data={"escrowCompanyId": "001", "sellerID": "3008b303-3905-42f7-9ebc-cf6a482f508e"} 
json=None</msg>
<msg timestamp="20200402 12:46:44.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:43.312" endtime="20200402 12:46:44.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:44.191" level="INFO">{"escrowCompanyId":"001","sellerId":"3008b303-3905-42f7-9ebc-cf6a482f508e","idNumber":"24353589321700","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3280650870","email":"pavan98377@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:36","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:44.190" endtime="20200402 12:46:44.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:44.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:44.192" endtime="20200402 12:46:44.193"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:43.309" endtime="20200402 12:46:44.193"></status>
</kw>
<doc>Invalid : To verify response when sellerId parameter is entered more than size 36</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:33.314" endtime="20200402 12:46:44.194" critical="yes"></status>
</test>
<test id="s1-t13" name="TC_18 Selle_Details_API Duplicate Idno">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:47.200" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:44.198" endtime="20200402 12:46:47.200"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:47.202" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:47.201" endtime="20200402 12:46:47.202"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:47.203" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:47.202" endtime="20200402 12:46:47.203"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:47.203" endtime="20200402 12:46:47.204"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:47.204" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:47.204" endtime="20200402 12:46:47.204"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:47.206" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:47.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:47.205" endtime="20200402 12:46:47.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:47.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:47.972" endtime="20200402 12:46:47.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:47.973" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIvK1pETlQyM2lmYVZoWFdhbEJZcG5rT0hhcUFTUVBGdzBjZHhKTnBlUjN6VWVwU3pkSEdSWUFKZFN5VzQ9IiwibmJmIjoxNTg1ODExODA1LCJleHAiOjE1ODU4MTE4NjUsImlhdCI6MTU4NTgxMTgwNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4ztRCKkqj1bO01iydUgIvyryhKZxGkPOagiAgv_kXZM</msg>
<status status="PASS" starttime="20200402 12:46:47.973" endtime="20200402 12:46:47.973"></status>
</kw>
<msg timestamp="20200402 12:46:47.974" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIvK1pETlQ...</msg>
<status status="PASS" starttime="20200402 12:46:47.201" endtime="20200402 12:46:47.974"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>35</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:47.975" level="INFO">${Id} = 05912977652323969229236360254081111</msg>
<status status="PASS" starttime="20200402 12:46:47.975" endtime="20200402 12:46:47.975"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:47.977" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:47.977" endtime="20200402 12:46:47.978"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:47.978" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:47.978" endtime="20200402 12:46:47.978"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:47.979" endtime="20200402 12:46:47.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:47.980" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:47.980" endtime="20200402 12:46:47.980"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:47.981" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:48.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:47.980" endtime="20200402 12:46:48.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:48.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:48.471" endtime="20200402 12:46:48.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:48.473" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVZ2Z2lEVHhXY1pSdHpyb3pwLzZ3VW15Z09adHh2dDd6QU4zejFKY0MvQkZBVzNoemxIY3JzWTJOeGFBUUxKelJVemlXa0k2ZjJpalUwMmFqVDZBZDA9IiwibmJmIjoxNTg1ODExODA1LCJleHAiOjE1ODU4MTE4NjUsImlhdCI6MTU4NTgxMTgwNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xIsauRmn31aSrsRsDPa3b-Hu9l7aSRVHwg3_am7klDM</msg>
<status status="PASS" starttime="20200402 12:46:48.472" endtime="20200402 12:46:48.473"></status>
</kw>
<msg timestamp="20200402 12:46:48.473" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVZ2Z2lEVHhXY1pSdHpyb3pwLzZ3VW15Z09adHh2dDd...</msg>
<status status="PASS" starttime="20200402 12:46:47.976" endtime="20200402 12:46:48.473"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:48.474" level="INFO">${Id} = 43986787562693</msg>
<status status="PASS" starttime="20200402 12:46:48.474" endtime="20200402 12:46:48.474"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:48.475" level="INFO">${IdNumber} = 43986787562693</msg>
<status status="PASS" starttime="20200402 12:46:48.474" endtime="20200402 12:46:48.475"></status>
</kw>
<msg timestamp="20200402 12:46:48.475" level="INFO">${idNum} = 43986787562693</msg>
<status status="PASS" starttime="20200402 12:46:48.473" endtime="20200402 12:46:48.475"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:48.476" level="INFO">${mobile} = 7262136463</msg>
<status status="PASS" starttime="20200402 12:46:48.476" endtime="20200402 12:46:48.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:48.477" level="INFO">${mobileNo} = 7262136463</msg>
<status status="PASS" starttime="20200402 12:46:48.476" endtime="20200402 12:46:48.477"></status>
</kw>
<msg timestamp="20200402 12:46:48.477" level="INFO">${MobNo} = 7262136463</msg>
<status status="PASS" starttime="20200402 12:46:48.475" endtime="20200402 12:46:48.477"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:48.479" level="INFO">${Emailnum} = 04115</msg>
<status status="PASS" starttime="20200402 12:46:48.478" endtime="20200402 12:46:48.479"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:48.479" level="INFO">${enum} = 04115</msg>
<status status="PASS" starttime="20200402 12:46:48.479" endtime="20200402 12:46:48.479"></status>
</kw>
<msg timestamp="20200402 12:46:48.480" level="INFO">${num} = 04115</msg>
<status status="PASS" starttime="20200402 12:46:48.478" endtime="20200402 12:46:48.480"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:48.480" level="INFO">${emailid} = pavan04115@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:48.480" endtime="20200402 12:46:48.480"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:48.481" level="INFO">${email} = pavan04115@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:48.481" endtime="20200402 12:46:48.481"></status>
</kw>
<msg timestamp="20200402 12:46:48.481" level="INFO">${emailid} = pavan04115@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:48.477" endtime="20200402 12:46:48.481"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:48.485" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:48.484" endtime="20200402 12:46:48.485"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:48.486" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:48.485" endtime="20200402 12:46:48.486"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:48.486" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:48.486" endtime="20200402 12:46:48.486"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:48.487" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:48.486" endtime="20200402 12:46:48.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:48.489" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:48.488" endtime="20200402 12:46:48.489"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:48.491" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '43986787562693', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7262136463', 'email': 'pavan04115@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:48.489" endtime="20200402 12:46:48.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:48.492" endtime="20200402 12:46:48.493"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:48.494" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVZ2Z2lEVHhXY1pSdHpyb3pwLzZ3VW15Z09a...</msg>
<status status="PASS" starttime="20200402 12:46:48.493" endtime="20200402 12:46:48.494"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:48.495" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:48.495" endtime="20200402 12:46:48.495"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:48.497" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeVZ2Z2lEVHhXY1pSdHpyb3pwLzZ3VW15Z09adHh2dDd6QU4zejFKY0MvQkZBVzNoemxIY3JzWTJOeGFBUUxKelJVemlXa0k2ZjJpalUwMmFqVDZBZDA9IiwibmJmIjoxNTg1ODExODA1LCJleHAiOjE1ODU4MTE4NjUsImlhdCI6MTU4NTgxMTgwNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xIsauRmn31aSrsRsDPa3b-Hu9l7aSRVHwg3_am7klDM'} 
data={"escrowCompanyId": "001", "idNumber": "43986787562693", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7262136463", "email": "pavan04115@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:48.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:48.496" endtime="20200402 12:46:48.782"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:48.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:48.782" endtime="20200402 12:46:48.782"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:48.783" endtime="20200402 12:46:48.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:48.783" endtime="20200402 12:46:48.784"></status>
</kw>
<msg timestamp="20200402 12:46:48.784" level="INFO">${sellerid} = 04429c11-b5e4-4daa-b159-62237485800f</msg>
<status status="PASS" starttime="20200402 12:46:48.481" endtime="20200402 12:46:48.784"></status>
</kw>
<msg timestamp="20200402 12:46:48.784" level="INFO">${SellerId} = 04429c11-b5e4-4daa-b159-62237485800f</msg>
<msg timestamp="20200402 12:46:48.784" level="INFO">${idnumber} = 43986787562693</msg>
<status status="PASS" starttime="20200402 12:46:47.976" endtime="20200402 12:46:48.785"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${Id}</arg>
<arg>${3}</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:48.786" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:48.786" endtime="20200402 12:46:48.787"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:48.787" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:48.787" endtime="20200402 12:46:48.787"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:48.788" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:48.787" endtime="20200402 12:46:48.788"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:48.789" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '04429c11-b5e4-4daa-b159-62237485800f', 'idNumber': '05912977652323969229236360254081111', 'typeOfID': 3, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:46:48.788" endtime="20200402 12:46:48.789"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:48.789" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIv...</msg>
<status status="PASS" starttime="20200402 12:46:48.789" endtime="20200402 12:46:48.789"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:48.790" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:48.790" endtime="20200402 12:46:48.790"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:48.791" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIvK1pETlQyM2lmYVZoWFdhbEJZcG5rT0hhcUFTUVBGdzBjZHhKTnBlUjN6VWVwU3pkSEdSWUFKZFN5VzQ9IiwibmJmIjoxNTg1ODExODA1LCJleHAiOjE1ODU4MTE4NjUsImlhdCI6MTU4NTgxMTgwNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4ztRCKkqj1bO01iydUgIvyryhKZxGkPOagiAgv_kXZM'} 
data={"escrowCompanyId": "001", "SELLERId": "04429c11-b5e4-4daa-b159-62237485800f", "idNumber": "05912977652323969229236360254081111", "typeOfID": 3, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:46:49.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:48.790" endtime="20200402 12:46:49.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:49.293" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:46:49.292" endtime="20200402 12:46:49.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:49.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:49.293" endtime="20200402 12:46:49.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:49.294" endtime="20200402 12:46:49.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:49.295" endtime="20200402 12:46:49.296"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:48.785" endtime="20200402 12:46:49.296"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:49.297" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:49.297" endtime="20200402 12:46:49.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:49.299" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '04429c11-b5e4-4daa-b159-62237485800f'}</msg>
<status status="PASS" starttime="20200402 12:46:49.298" endtime="20200402 12:46:49.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:49.300" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIv...</msg>
<status status="PASS" starttime="20200402 12:46:49.300" endtime="20200402 12:46:49.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:49.301" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:49.300" endtime="20200402 12:46:49.301"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:49.302" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXJsQ1FQQWdacVkvUDNkcXlmcll2WDAvOXIvK1pETlQyM2lmYVZoWFdhbEJZcG5rT0hhcUFTUVBGdzBjZHhKTnBlUjN6VWVwU3pkSEdSWUFKZFN5VzQ9IiwibmJmIjoxNTg1ODExODA1LCJleHAiOjE1ODU4MTE4NjUsImlhdCI6MTU4NTgxMTgwNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4ztRCKkqj1bO01iydUgIvyryhKZxGkPOagiAgv_kXZM'} 
data={"escrowCompanyId": "001", "sellerID": "04429c11-b5e4-4daa-b159-62237485800f"} 
json=None</msg>
<msg timestamp="20200402 12:46:49.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:49.301" endtime="20200402 12:46:49.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:46:49.809" level="INFO">{"escrowCompanyId":"001","sellerId":"04429c11-b5e4-4daa-b159-62237485800f","idNumber":"43986787562693","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7262136463","email":"pavan04115@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:46","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:46:49.809" endtime="20200402 12:46:49.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:49.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:49.811" endtime="20200402 12:46:49.812"></status>
</kw>
<status status="PASS" starttime="20200402 12:46:49.296" endtime="20200402 12:46:49.812"></status>
</kw>
<doc>Invalid: To Verify response if idNumber parameter is entered more than size 30 and request is sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:44.196" endtime="20200402 12:46:49.812" critical="yes"></status>
</test>
<test id="s1-t14" name="TC_19 Selle_Details_API Duplicate Idno TypeId 3">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:46:52.818" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:46:49.816" endtime="20200402 12:46:52.818"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:52.819" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:52.819" endtime="20200402 12:46:52.820"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:52.820" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:52.820" endtime="20200402 12:46:52.820"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:52.821" endtime="20200402 12:46:52.821"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:52.821" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:52.821" endtime="20200402 12:46:52.821"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:52.822" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:57.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:52.822" endtime="20200402 12:46:57.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:57.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:57.076" endtime="20200402 12:46:57.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:57.078" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hqN0pSa0ZqZEs2QSt0aXdmZXMvWGlVRGFhMzNFbGxmMkNHRGwxNmc0RkhsamVwa015T0Vkb1l4NVFCY0k9IiwibmJmIjoxNTg1ODExODE0LCJleHAiOjE1ODU4MTE4NzQsImlhdCI6MTU4NTgxMTgxNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0mioDBuCYf_0EmYc1smd8BLJB3Gtb8e9Rog5d_qomS4</msg>
<status status="PASS" starttime="20200402 12:46:57.077" endtime="20200402 12:46:57.078"></status>
</kw>
<msg timestamp="20200402 12:46:57.078" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hqN0pSa0Z...</msg>
<status status="PASS" starttime="20200402 12:46:52.819" endtime="20200402 12:46:57.078"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Id23}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:57.080" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:57.080" endtime="20200402 12:46:57.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:57.081" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:57.080" endtime="20200402 12:46:57.081"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:57.081" endtime="20200402 12:46:57.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:57.082" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:57.081" endtime="20200402 12:46:57.082"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:57.082" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:46:58.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:57.082" endtime="20200402 12:46:58.261"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:58.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:58.261" endtime="20200402 12:46:58.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.263" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0ZjdkNZeHYzN01ObE1VWDBYdHB1NVM4NFp3NDNJSG5JN1RsNlhHZ2poQUJiT1hpajdPT1BpT0NEbGRmYXhMcDBuRmFQeEx3MDcvOXNuOTRJVWpSejQ9IiwibmJmIjoxNTg1ODExODE1LCJleHAiOjE1ODU4MTE4NzUsImlhdCI6MTU4NTgxMTgxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.owinsdXmJLJUkIDjmrg5LQBch8fZm2D6jngZm7WR50E</msg>
<status status="PASS" starttime="20200402 12:46:58.262" endtime="20200402 12:46:58.263"></status>
</kw>
<msg timestamp="20200402 12:46:58.263" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0ZjdkNZeHYzN01ObE1VWDBYdHB1NVM4NFp3NDNJSG5...</msg>
<status status="PASS" starttime="20200402 12:46:57.079" endtime="20200402 12:46:58.263"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:46:58.265" level="INFO">${Id} = 03175591908744</msg>
<status status="PASS" starttime="20200402 12:46:58.264" endtime="20200402 12:46:58.265"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.266" level="INFO">${IdNumber} = 03175591908744</msg>
<status status="PASS" starttime="20200402 12:46:58.265" endtime="20200402 12:46:58.266"></status>
</kw>
<msg timestamp="20200402 12:46:58.266" level="INFO">${idNum} = 03175591908744</msg>
<status status="PASS" starttime="20200402 12:46:58.263" endtime="20200402 12:46:58.266"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:46:58.267" level="INFO">${mobile} = 2429463000</msg>
<status status="PASS" starttime="20200402 12:46:58.267" endtime="20200402 12:46:58.267"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.268" level="INFO">${mobileNo} = 2429463000</msg>
<status status="PASS" starttime="20200402 12:46:58.268" endtime="20200402 12:46:58.268"></status>
</kw>
<msg timestamp="20200402 12:46:58.268" level="INFO">${MobNo} = 2429463000</msg>
<status status="PASS" starttime="20200402 12:46:58.266" endtime="20200402 12:46:58.268"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:46:58.269" level="INFO">${Emailnum} = 54634</msg>
<status status="PASS" starttime="20200402 12:46:58.269" endtime="20200402 12:46:58.269"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.270" level="INFO">${enum} = 54634</msg>
<status status="PASS" starttime="20200402 12:46:58.270" endtime="20200402 12:46:58.270"></status>
</kw>
<msg timestamp="20200402 12:46:58.270" level="INFO">${num} = 54634</msg>
<status status="PASS" starttime="20200402 12:46:58.269" endtime="20200402 12:46:58.270"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:46:58.271" level="INFO">${emailid} = pavan54634@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:58.271" endtime="20200402 12:46:58.271"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.271" level="INFO">${email} = pavan54634@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:58.271" endtime="20200402 12:46:58.271"></status>
</kw>
<msg timestamp="20200402 12:46:58.272" level="INFO">${emailid} = pavan54634@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:46:58.268" endtime="20200402 12:46:58.272"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:46:58.274" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:58.274" endtime="20200402 12:46:58.275"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:46:58.276" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:46:58.275" endtime="20200402 12:46:58.276"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:46:58.277" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:46:58.276" endtime="20200402 12:46:58.277"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:46:58.278" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:58.277" endtime="20200402 12:46:58.278"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:46:58.280" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:46:58.278" endtime="20200402 12:46:58.280"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:46:58.282" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '03175591908744', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2429463000', 'email': 'pavan54634@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:46:58.280" endtime="20200402 12:46:58.282"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:58.282" endtime="20200402 12:46:58.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:46:58.284" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0ZjdkNZeHYzN01ObE1VWDBYdHB1NVM4NFp3...</msg>
<status status="PASS" starttime="20200402 12:46:58.284" endtime="20200402 12:46:58.284"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:58.285" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:46:58.284" endtime="20200402 12:46:58.285"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:58.286" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0ZjdkNZeHYzN01ObE1VWDBYdHB1NVM4NFp3NDNJSG5JN1RsNlhHZ2poQUJiT1hpajdPT1BpT0NEbGRmYXhMcDBuRmFQeEx3MDcvOXNuOTRJVWpSejQ9IiwibmJmIjoxNTg1ODExODE1LCJleHAiOjE1ODU4MTE4NzUsImlhdCI6MTU4NTgxMTgxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.owinsdXmJLJUkIDjmrg5LQBch8fZm2D6jngZm7WR50E'} 
data={"escrowCompanyId": "001", "idNumber": "03175591908744", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2429463000", "email": "pavan54634@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:46:58.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:58.285" endtime="20200402 12:46:58.530"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:46:58.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:46:58.531" endtime="20200402 12:46:58.531"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:58.531" endtime="20200402 12:46:58.532"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:58.532" endtime="20200402 12:46:58.533"></status>
</kw>
<msg timestamp="20200402 12:46:58.533" level="INFO">${sellerid} = 541fcd0d-1e0a-4afa-baac-bbea92c34da9</msg>
<status status="PASS" starttime="20200402 12:46:58.272" endtime="20200402 12:46:58.533"></status>
</kw>
<msg timestamp="20200402 12:46:58.533" level="INFO">${SellerId} = 541fcd0d-1e0a-4afa-baac-bbea92c34da9</msg>
<msg timestamp="20200402 12:46:58.533" level="INFO">${Id23} = 03175591908744</msg>
<status status="PASS" starttime="20200402 12:46:57.079" endtime="20200402 12:46:58.533"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${SellerId1}</arg>
<arg>${SellerId}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.536" level="INFO">${SellerId1} = 541fcd0d-1e0a-4afa-baac-bbea92c34da9</msg>
<status status="PASS" starttime="20200402 12:46:58.534" endtime="20200402 12:46:58.536"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId23}</var>
<var>${IdNum23}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:46:58.538" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:46:58.537" endtime="20200402 12:46:58.538"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:46:58.538" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:46:58.538" endtime="20200402 12:46:58.539"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:46:58.539" endtime="20200402 12:46:58.539"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:46:58.539" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:46:58.539" endtime="20200402 12:46:58.540"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:46:58.541" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:02.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:46:58.540" endtime="20200402 12:47:02.770"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:02.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:02.770" endtime="20200402 12:47:02.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:02.771" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2QwZ2FrRDlmQXg1V0J6VVo4c2hjSXZHZlhWTHlPZ2J5eHhGTVp4SFRIaUJjREl4U3ZreVJyNWZidDB4ZDhWekhjcTdrY1UvelpXSjZvbTViYTZRa0E9IiwibmJmIjoxNTg1ODExODIwLCJleHAiOjE1ODU4MTE4ODAsImlhdCI6MTU4NTgxMTgyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.KB4yNy0eA3jf_byUjeHsiNpnk2hKl5ykU-BIgvFWy_k</msg>
<status status="PASS" starttime="20200402 12:47:02.771" endtime="20200402 12:47:02.771"></status>
</kw>
<msg timestamp="20200402 12:47:02.771" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2QwZ2FrRDlmQXg1V0J6VVo4c2hjSXZHZlhWTHlPZ2J...</msg>
<status status="PASS" starttime="20200402 12:46:58.537" endtime="20200402 12:47:02.772"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:02.772" level="INFO">${Id} = 40701216213313</msg>
<status status="PASS" starttime="20200402 12:47:02.772" endtime="20200402 12:47:02.772"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:02.773" level="INFO">${IdNumber} = 40701216213313</msg>
<status status="PASS" starttime="20200402 12:47:02.773" endtime="20200402 12:47:02.773"></status>
</kw>
<msg timestamp="20200402 12:47:02.773" level="INFO">${idNum} = 40701216213313</msg>
<status status="PASS" starttime="20200402 12:47:02.772" endtime="20200402 12:47:02.773"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:02.774" level="INFO">${mobile} = 3478530406</msg>
<status status="PASS" starttime="20200402 12:47:02.774" endtime="20200402 12:47:02.774"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:02.775" level="INFO">${mobileNo} = 3478530406</msg>
<status status="PASS" starttime="20200402 12:47:02.774" endtime="20200402 12:47:02.775"></status>
</kw>
<msg timestamp="20200402 12:47:02.775" level="INFO">${MobNo} = 3478530406</msg>
<status status="PASS" starttime="20200402 12:47:02.773" endtime="20200402 12:47:02.775"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:02.777" level="INFO">${Emailnum} = 62235</msg>
<status status="PASS" starttime="20200402 12:47:02.776" endtime="20200402 12:47:02.777"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:02.778" level="INFO">${enum} = 62235</msg>
<status status="PASS" starttime="20200402 12:47:02.777" endtime="20200402 12:47:02.778"></status>
</kw>
<msg timestamp="20200402 12:47:02.778" level="INFO">${num} = 62235</msg>
<status status="PASS" starttime="20200402 12:47:02.775" endtime="20200402 12:47:02.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:02.779" level="INFO">${emailid} = pavan62235@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:02.778" endtime="20200402 12:47:02.779"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:02.779" level="INFO">${email} = pavan62235@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:02.779" endtime="20200402 12:47:02.779"></status>
</kw>
<msg timestamp="20200402 12:47:02.779" level="INFO">${emailid} = pavan62235@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:02.775" endtime="20200402 12:47:02.780"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:02.782" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:02.782" endtime="20200402 12:47:02.783"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:02.783" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:02.783" endtime="20200402 12:47:02.783"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:02.784" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:02.783" endtime="20200402 12:47:02.784"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:02.785" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:02.784" endtime="20200402 12:47:02.785"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:02.786" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:02.785" endtime="20200402 12:47:02.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:02.789" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '40701216213313', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3478530406', 'email': 'pavan62235@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:02.787" endtime="20200402 12:47:02.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:02.789" endtime="20200402 12:47:02.790"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:02.790" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2QwZ2FrRDlmQXg1V0J6VVo4c2hjSXZHZlhW...</msg>
<status status="PASS" starttime="20200402 12:47:02.790" endtime="20200402 12:47:02.791"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:02.791" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:02.791" endtime="20200402 12:47:02.791"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:02.792" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2QwZ2FrRDlmQXg1V0J6VVo4c2hjSXZHZlhWTHlPZ2J5eHhGTVp4SFRIaUJjREl4U3ZreVJyNWZidDB4ZDhWekhjcTdrY1UvelpXSjZvbTViYTZRa0E9IiwibmJmIjoxNTg1ODExODIwLCJleHAiOjE1ODU4MTE4ODAsImlhdCI6MTU4NTgxMTgyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.KB4yNy0eA3jf_byUjeHsiNpnk2hKl5ykU-BIgvFWy_k'} 
data={"escrowCompanyId": "001", "idNumber": "40701216213313", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3478530406", "email": "pavan62235@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:03.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:02.792" endtime="20200402 12:47:03.054"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:03.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:03.054" endtime="20200402 12:47:03.055"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:03.055" endtime="20200402 12:47:03.055"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:03.056" endtime="20200402 12:47:03.056"></status>
</kw>
<msg timestamp="20200402 12:47:03.056" level="INFO">${sellerid} = f76b9a8c-c698-48e8-bffc-fa388d34411e</msg>
<status status="PASS" starttime="20200402 12:47:02.780" endtime="20200402 12:47:03.056"></status>
</kw>
<msg timestamp="20200402 12:47:03.057" level="INFO">${SellerId23} = f76b9a8c-c698-48e8-bffc-fa388d34411e</msg>
<msg timestamp="20200402 12:47:03.057" level="INFO">${IdNum23} = 40701216213313</msg>
<status status="PASS" starttime="20200402 12:46:58.537" endtime="20200402 12:47:03.057"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId23}</arg>
<arg>${Id23}</arg>
<arg>${3}</arg>
<arg>${0}</arg>
<arg>U01</arg>
<arg>Duplicate ID card, email or mobile no.</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:03.058" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:03.058" endtime="20200402 12:47:03.059"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:03.059" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:03.059" endtime="20200402 12:47:03.059"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:03.060" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:03.059" endtime="20200402 12:47:03.060"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:03.061" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'f76b9a8c-c698-48e8-bffc-fa388d34411e', 'idNumber': '03175591908744', 'typeOfID': 3, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:03.060" endtime="20200402 12:47:03.061"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:03.061" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hq...</msg>
<status status="PASS" starttime="20200402 12:47:03.061" endtime="20200402 12:47:03.061"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:03.062" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:03.061" endtime="20200402 12:47:03.062"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:03.062" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hqN0pSa0ZqZEs2QSt0aXdmZXMvWGlVRGFhMzNFbGxmMkNHRGwxNmc0RkhsamVwa015T0Vkb1l4NVFCY0k9IiwibmJmIjoxNTg1ODExODE0LCJleHAiOjE1ODU4MTE4NzQsImlhdCI6MTU4NTgxMTgxNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0mioDBuCYf_0EmYc1smd8BLJB3Gtb8e9Rog5d_qomS4'} 
data={"escrowCompanyId": "001", "SELLERId": "f76b9a8c-c698-48e8-bffc-fa388d34411e", "idNumber": "03175591908744", "typeOfID": 3, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:03.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:03.062" endtime="20200402 12:47:03.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:03.579" level="INFO">{"responseCode":"U01","resDescription":"Duplicate ID card, email or mobile no."}</msg>
<status status="PASS" starttime="20200402 12:47:03.579" endtime="20200402 12:47:03.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:03.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:03.580" endtime="20200402 12:47:03.581"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:03.581" endtime="20200402 12:47:03.582"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:03.582" endtime="20200402 12:47:03.583"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:03.057" endtime="20200402 12:47:03.583"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:03.585" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:03.585" endtime="20200402 12:47:03.586"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:03.586" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '541fcd0d-1e0a-4afa-baac-bbea92c34da9'}</msg>
<status status="PASS" starttime="20200402 12:47:03.586" endtime="20200402 12:47:03.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:03.587" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hq...</msg>
<status status="PASS" starttime="20200402 12:47:03.587" endtime="20200402 12:47:03.587"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:03.588" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:03.588" endtime="20200402 12:47:03.588"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:03.589" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNmpRaW1VQWlMYkloVVI3dmpQZjF2SG5vL1hqN0pSa0ZqZEs2QSt0aXdmZXMvWGlVRGFhMzNFbGxmMkNHRGwxNmc0RkhsamVwa015T0Vkb1l4NVFCY0k9IiwibmJmIjoxNTg1ODExODE0LCJleHAiOjE1ODU4MTE4NzQsImlhdCI6MTU4NTgxMTgxNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0mioDBuCYf_0EmYc1smd8BLJB3Gtb8e9Rog5d_qomS4'} 
data={"escrowCompanyId": "001", "sellerID": "541fcd0d-1e0a-4afa-baac-bbea92c34da9"} 
json=None</msg>
<msg timestamp="20200402 12:47:04.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:03.588" endtime="20200402 12:47:04.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:04.090" level="INFO">{"escrowCompanyId":"001","sellerId":"541fcd0d-1e0a-4afa-baac-bbea92c34da9","idNumber":"03175591908744","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2429463000","email":"pavan54634@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:16:56","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:04.089" endtime="20200402 12:47:04.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:04.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:04.091" endtime="20200402 12:47:04.092"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:03.584" endtime="20200402 12:47:04.092"></status>
</kw>
<doc>Duplicate: To check idNumber is entered duplicate (duplicate id number should belong to Seller status = Active) and request is send with all mandatory fields</doc>
<tags>
<tag>U01</tag>
</tags>
<status status="PASS" starttime="20200402 12:46:49.814" endtime="20200402 12:47:04.092" critical="yes"></status>
</test>
<test id="s1-t15" name="TC_20 Selle_Details_API Duplicate Idno TypeId 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:07.097" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:04.095" endtime="20200402 12:47:07.097"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:07.098" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:07.098" endtime="20200402 12:47:07.099"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:07.100" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:07.099" endtime="20200402 12:47:07.100"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:07.100" endtime="20200402 12:47:07.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:07.101" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:07.100" endtime="20200402 12:47:07.101"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:07.102" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:07.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:07.101" endtime="20200402 12:47:07.609"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:07.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:07.610" endtime="20200402 12:47:07.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:07.611" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdubUdFZ1ljcnlJeEdtb1VPOFJKZWNBUzAvMHVuZ0RhbzRuQW5reXlHeGZLczZVZ1F5dlpXZUp0bWhYbkE9IiwibmJmIjoxNTg1ODExODI1LCJleHAiOjE1ODU4MTE4ODUsImlhdCI6MTU4NTgxMTgyNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JHHEjxLoSYGiJvZHpvrYZP6vCkgA1LlxrzSBULBg5zE</msg>
<status status="PASS" starttime="20200402 12:47:07.611" endtime="20200402 12:47:07.611"></status>
</kw>
<msg timestamp="20200402 12:47:07.612" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdubUdFZ1l...</msg>
<status status="PASS" starttime="20200402 12:47:07.098" endtime="20200402 12:47:07.612"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Id23}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:07.613" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:07.612" endtime="20200402 12:47:07.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:07.614" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:07.613" endtime="20200402 12:47:07.614"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:07.614" endtime="20200402 12:47:07.614"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:07.615" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:07.614" endtime="20200402 12:47:07.615"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:07.615" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:08.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:07.615" endtime="20200402 12:47:08.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:08.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.146" endtime="20200402 12:47:08.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:08.147" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzF0ajgvcTNPWjl4MHYrdmFLN1ZuWllFTDZlVmNTZ25YZ2k0b3hvUHYzNHc4dXVxbC8yR01TeDAweEZTZXR3d1lzb1JSOStrQUx2U1FlSGszTTdoRGc9IiwibmJmIjoxNTg1ODExODI1LCJleHAiOjE1ODU4MTE4ODUsImlhdCI6MTU4NTgxMTgyNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.onVlQzls8apYShH_SJira473f_FBz76GuHI8JqIjP2o</msg>
<status status="PASS" starttime="20200402 12:47:08.147" endtime="20200402 12:47:08.147"></status>
</kw>
<msg timestamp="20200402 12:47:08.148" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzF0ajgvcTNPWjl4MHYrdmFLN1ZuWllFTDZlVmNTZ25...</msg>
<status status="PASS" starttime="20200402 12:47:07.612" endtime="20200402 12:47:08.148"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:08.148" level="INFO">${Id} = 27322924878274</msg>
<status status="PASS" starttime="20200402 12:47:08.148" endtime="20200402 12:47:08.149"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:08.149" level="INFO">${IdNumber} = 27322924878274</msg>
<status status="PASS" starttime="20200402 12:47:08.149" endtime="20200402 12:47:08.149"></status>
</kw>
<msg timestamp="20200402 12:47:08.149" level="INFO">${idNum} = 27322924878274</msg>
<status status="PASS" starttime="20200402 12:47:08.148" endtime="20200402 12:47:08.149"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:08.150" level="INFO">${mobile} = 0426644086</msg>
<status status="PASS" starttime="20200402 12:47:08.150" endtime="20200402 12:47:08.150"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:08.151" level="INFO">${mobileNo} = 0426644086</msg>
<status status="PASS" starttime="20200402 12:47:08.150" endtime="20200402 12:47:08.151"></status>
</kw>
<msg timestamp="20200402 12:47:08.151" level="INFO">${MobNo} = 0426644086</msg>
<status status="PASS" starttime="20200402 12:47:08.150" endtime="20200402 12:47:08.151"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:08.152" level="INFO">${Emailnum} = 99798</msg>
<status status="PASS" starttime="20200402 12:47:08.152" endtime="20200402 12:47:08.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:08.153" level="INFO">${enum} = 99798</msg>
<status status="PASS" starttime="20200402 12:47:08.152" endtime="20200402 12:47:08.153"></status>
</kw>
<msg timestamp="20200402 12:47:08.153" level="INFO">${num} = 99798</msg>
<status status="PASS" starttime="20200402 12:47:08.152" endtime="20200402 12:47:08.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:08.153" level="INFO">${emailid} = pavan99798@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:08.153" endtime="20200402 12:47:08.153"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:08.154" level="INFO">${email} = pavan99798@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:08.154" endtime="20200402 12:47:08.154"></status>
</kw>
<msg timestamp="20200402 12:47:08.154" level="INFO">${emailid} = pavan99798@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:08.151" endtime="20200402 12:47:08.154"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:08.157" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:08.156" endtime="20200402 12:47:08.157"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:08.158" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:08.157" endtime="20200402 12:47:08.158"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:08.159" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:08.158" endtime="20200402 12:47:08.159"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:08.160" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:08.159" endtime="20200402 12:47:08.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:08.162" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:08.160" endtime="20200402 12:47:08.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:08.164" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '27322924878274', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0426644086', 'email': 'pavan99798@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:08.162" endtime="20200402 12:47:08.164"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:08.164" endtime="20200402 12:47:08.165"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:08.166" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzF0ajgvcTNPWjl4MHYrdmFLN1ZuWllFTDZl...</msg>
<status status="PASS" starttime="20200402 12:47:08.165" endtime="20200402 12:47:08.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:08.167" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:08.166" endtime="20200402 12:47:08.167"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:08.168" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzF0ajgvcTNPWjl4MHYrdmFLN1ZuWllFTDZlVmNTZ25YZ2k0b3hvUHYzNHc4dXVxbC8yR01TeDAweEZTZXR3d1lzb1JSOStrQUx2U1FlSGszTTdoRGc9IiwibmJmIjoxNTg1ODExODI1LCJleHAiOjE1ODU4MTE4ODUsImlhdCI6MTU4NTgxMTgyNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.onVlQzls8apYShH_SJira473f_FBz76GuHI8JqIjP2o'} 
data={"escrowCompanyId": "001", "idNumber": "27322924878274", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0426644086", "email": "pavan99798@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:08.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.167" endtime="20200402 12:47:08.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:08.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.401" endtime="20200402 12:47:08.401"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:08.401" endtime="20200402 12:47:08.402"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:08.402" endtime="20200402 12:47:08.402"></status>
</kw>
<msg timestamp="20200402 12:47:08.403" level="INFO">${sellerid} = 59eff3cb-2824-4281-b08d-6d12933dc505</msg>
<status status="PASS" starttime="20200402 12:47:08.154" endtime="20200402 12:47:08.403"></status>
</kw>
<msg timestamp="20200402 12:47:08.403" level="INFO">${SellerId} = 59eff3cb-2824-4281-b08d-6d12933dc505</msg>
<msg timestamp="20200402 12:47:08.403" level="INFO">${Id23} = 27322924878274</msg>
<status status="PASS" starttime="20200402 12:47:07.612" endtime="20200402 12:47:08.403"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>${Id23}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:08.405" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:08.404" endtime="20200402 12:47:08.405"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:08.405" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:47:08.405" endtime="20200402 12:47:08.405"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:08.406" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:08.406" endtime="20200402 12:47:08.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:08.407" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '59eff3cb-2824-4281-b08d-6d12933dc505', 'idNumber': '27322924878274', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:08.406" endtime="20200402 12:47:08.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:08.407" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdu...</msg>
<status status="PASS" starttime="20200402 12:47:08.407" endtime="20200402 12:47:08.407"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:08.408" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:08.408" endtime="20200402 12:47:08.408"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:08.409" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdubUdFZ1ljcnlJeEdtb1VPOFJKZWNBUzAvMHVuZ0RhbzRuQW5reXlHeGZLczZVZ1F5dlpXZUp0bWhYbkE9IiwibmJmIjoxNTg1ODExODI1LCJleHAiOjE1ODU4MTE4ODUsImlhdCI6MTU4NTgxMTgyNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JHHEjxLoSYGiJvZHpvrYZP6vCkgA1LlxrzSBULBg5zE'} 
data={"escrowCompanyId": "001", "SELLERId": "59eff3cb-2824-4281-b08d-6d12933dc505", "idNumber": "27322924878274", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:08.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.408" endtime="20200402 12:47:08.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:08.630" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:08.630" endtime="20200402 12:47:08.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:08.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.631" endtime="20200402 12:47:08.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:08.632" endtime="20200402 12:47:08.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:08.633" endtime="20200402 12:47:08.633"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:08.404" endtime="20200402 12:47:08.633"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:08.635" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:08.635" endtime="20200402 12:47:08.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:08.636" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '59eff3cb-2824-4281-b08d-6d12933dc505'}</msg>
<status status="PASS" starttime="20200402 12:47:08.635" endtime="20200402 12:47:08.636"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:08.637" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdu...</msg>
<status status="PASS" starttime="20200402 12:47:08.636" endtime="20200402 12:47:08.637"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:08.638" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:08.637" endtime="20200402 12:47:08.638"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:08.638" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBZYUoyMURGZVZqSDJLSFN1RkpFVFJVOUdubUdFZ1ljcnlJeEdtb1VPOFJKZWNBUzAvMHVuZ0RhbzRuQW5reXlHeGZLczZVZ1F5dlpXZUp0bWhYbkE9IiwibmJmIjoxNTg1ODExODI1LCJleHAiOjE1ODU4MTE4ODUsImlhdCI6MTU4NTgxMTgyNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JHHEjxLoSYGiJvZHpvrYZP6vCkgA1LlxrzSBULBg5zE'} 
data={"escrowCompanyId": "001", "sellerID": "59eff3cb-2824-4281-b08d-6d12933dc505"} 
json=None</msg>
<msg timestamp="20200402 12:47:09.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:08.638" endtime="20200402 12:47:09.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:09.160" level="INFO">{"escrowCompanyId":"001","sellerId":"59eff3cb-2824-4281-b08d-6d12933dc505","idNumber":"27322924878274","typeOfId":1,"mobileCountryCode":"67","mobileNo":"0426644086","email":"pavan99798@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:05","updateDate":"02/04/2020 02:17:06","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:09.159" endtime="20200402 12:47:09.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:09.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:09.160" endtime="20200402 12:47:09.161"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:08.634" endtime="20200402 12:47:09.161"></status>
</kw>
<doc>Duplicate: To check idNumber is entered duplicate with own user (duplicate id number should belong to Seller status = Active) and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:04.093" endtime="20200402 12:47:09.162" critical="yes"></status>
</test>
<test id="s1-t16" name="TC_21 Selle_Details_API Duplicate Idno Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:12.166" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:09.165" endtime="20200402 12:47:12.166"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:12.167" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:12.167" endtime="20200402 12:47:12.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:12.168" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:12.168" endtime="20200402 12:47:12.169"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:12.169" endtime="20200402 12:47:12.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:12.170" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:12.169" endtime="20200402 12:47:12.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:12.170" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:12.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:12.170" endtime="20200402 12:47:12.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:12.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:12.388" endtime="20200402 12:47:12.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:12.389" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pqMGdCUndvZitJNHJSb2tYZVdJTDdRVVpObUFiS2phYkdaY2N3eUVqZ25lWmg5Uld1aW5DYkJmc29idFk9IiwibmJmIjoxNTg1ODExODI5LCJleHAiOjE1ODU4MTE4ODksImlhdCI6MTU4NTgxMTgyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHj1c15KXgrosauywOjdLmBCjTGrFxi5ectnwW2nsPY</msg>
<status status="PASS" starttime="20200402 12:47:12.389" endtime="20200402 12:47:12.389"></status>
</kw>
<msg timestamp="20200402 12:47:12.390" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pqMGdCUnd...</msg>
<status status="PASS" starttime="20200402 12:47:12.167" endtime="20200402 12:47:12.390"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Idnum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:12.392" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:12.391" endtime="20200402 12:47:12.392"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:12.393" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:12.392" endtime="20200402 12:47:12.393"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:12.393" endtime="20200402 12:47:12.393"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:12.394" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:12.393" endtime="20200402 12:47:12.394"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:12.394" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:16.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:12.394" endtime="20200402 12:47:16.602"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:16.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:16.602" endtime="20200402 12:47:16.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:16.603" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURFRStMUWw3b25xNGYxVGtkTSt1SGhjMWlFOGdxVm1QSVBERmdWQUhCWmtkMXlqOGtrN2I4RnJHQU80eTNwZUdaV3E3eGlEY0ttZUlKcklVOUtWQ1U9IiwibmJmIjoxNTg1ODExODM0LCJleHAiOjE1ODU4MTE4OTQsImlhdCI6MTU4NTgxMTgzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P12wv2PGD4xiC0kJgWxmGovZk_eN4F2MCoEpXhA1Wbs</msg>
<status status="PASS" starttime="20200402 12:47:16.603" endtime="20200402 12:47:16.603"></status>
</kw>
<msg timestamp="20200402 12:47:16.604" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURFRStMUWw3b25xNGYxVGtkTSt1SGhjMWlFOGdxVm1...</msg>
<status status="PASS" starttime="20200402 12:47:12.391" endtime="20200402 12:47:16.604"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:16.605" level="INFO">${Id} = 94938681044540</msg>
<status status="PASS" starttime="20200402 12:47:16.605" endtime="20200402 12:47:16.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:16.605" level="INFO">${IdNumber} = 94938681044540</msg>
<status status="PASS" starttime="20200402 12:47:16.605" endtime="20200402 12:47:16.606"></status>
</kw>
<msg timestamp="20200402 12:47:16.606" level="INFO">${idNum} = 94938681044540</msg>
<status status="PASS" starttime="20200402 12:47:16.604" endtime="20200402 12:47:16.606"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:16.607" level="INFO">${mobile} = 5950550630</msg>
<status status="PASS" starttime="20200402 12:47:16.606" endtime="20200402 12:47:16.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:16.608" level="INFO">${mobileNo} = 5950550630</msg>
<status status="PASS" starttime="20200402 12:47:16.607" endtime="20200402 12:47:16.608"></status>
</kw>
<msg timestamp="20200402 12:47:16.609" level="INFO">${MobNo} = 5950550630</msg>
<status status="PASS" starttime="20200402 12:47:16.606" endtime="20200402 12:47:16.609"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:16.611" level="INFO">${Emailnum} = 56282</msg>
<status status="PASS" starttime="20200402 12:47:16.611" endtime="20200402 12:47:16.612"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:16.613" level="INFO">${enum} = 56282</msg>
<status status="PASS" starttime="20200402 12:47:16.612" endtime="20200402 12:47:16.613"></status>
</kw>
<msg timestamp="20200402 12:47:16.613" level="INFO">${num} = 56282</msg>
<status status="PASS" starttime="20200402 12:47:16.610" endtime="20200402 12:47:16.613"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:16.613" level="INFO">${emailid} = pavan56282@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:16.613" endtime="20200402 12:47:16.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:16.614" level="INFO">${email} = pavan56282@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:16.614" endtime="20200402 12:47:16.614"></status>
</kw>
<msg timestamp="20200402 12:47:16.614" level="INFO">${emailid} = pavan56282@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:16.609" endtime="20200402 12:47:16.614"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:16.617" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:16.617" endtime="20200402 12:47:16.618"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:16.618" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:16.618" endtime="20200402 12:47:16.618"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:16.619" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:16.618" endtime="20200402 12:47:16.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:16.620" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:16.619" endtime="20200402 12:47:16.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:16.622" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:16.621" endtime="20200402 12:47:16.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:16.625" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '94938681044540', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5950550630', 'email': 'pavan56282@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:16.622" endtime="20200402 12:47:16.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:16.625" endtime="20200402 12:47:16.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:16.626" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURFRStMUWw3b25xNGYxVGtkTSt1SGhjMWlF...</msg>
<status status="PASS" starttime="20200402 12:47:16.626" endtime="20200402 12:47:16.626"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:16.627" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:16.627" endtime="20200402 12:47:16.627"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:16.628" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeURFRStMUWw3b25xNGYxVGtkTSt1SGhjMWlFOGdxVm1QSVBERmdWQUhCWmtkMXlqOGtrN2I4RnJHQU80eTNwZUdaV3E3eGlEY0ttZUlKcklVOUtWQ1U9IiwibmJmIjoxNTg1ODExODM0LCJleHAiOjE1ODU4MTE4OTQsImlhdCI6MTU4NTgxMTgzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P12wv2PGD4xiC0kJgWxmGovZk_eN4F2MCoEpXhA1Wbs'} 
data={"escrowCompanyId": "001", "idNumber": "94938681044540", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5950550630", "email": "pavan56282@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:17.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:16.627" endtime="20200402 12:47:17.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:17.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:17.433" endtime="20200402 12:47:17.434"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:17.434" endtime="20200402 12:47:17.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:17.435" endtime="20200402 12:47:17.436"></status>
</kw>
<msg timestamp="20200402 12:47:17.436" level="INFO">${sellerid} = b7aab208-5b06-4cca-bfff-fd63a0f19e6f</msg>
<status status="PASS" starttime="20200402 12:47:16.615" endtime="20200402 12:47:17.436"></status>
</kw>
<msg timestamp="20200402 12:47:17.436" level="INFO">${SellerId} = b7aab208-5b06-4cca-bfff-fd63a0f19e6f</msg>
<msg timestamp="20200402 12:47:17.436" level="INFO">${Idnum} = 94938681044540</msg>
<status status="PASS" starttime="20200402 12:47:12.390" endtime="20200402 12:47:17.436"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId1}</var>
<var>${Idnum1}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.438" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:17.437" endtime="20200402 12:47:17.438"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:17.439" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:17.438" endtime="20200402 12:47:17.439"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:17.439" endtime="20200402 12:47:17.439"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:17.440" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:17.439" endtime="20200402 12:47:17.440"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:17.440" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:17.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:17.440" endtime="20200402 12:47:17.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:17.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:17.966" endtime="20200402 12:47:17.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.967" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDF4aHUwMHZCcUZqNTlDWkVKUm1reDVhekxDejRNR1ZMdCs0amdQVW9VbGxOOVNITUoyYVloSWtTVVdaa1RHK1NkUnByd3lyeUhnMUc2WktWNkpSdk09IiwibmJmIjoxNTg1ODExODM1LCJleHAiOjE1ODU4MTE4OTUsImlhdCI6MTU4NTgxMTgzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IolyH3FaFj5vRH7e7bspR9FQ0clGUkAGLEX2Rheqi0I</msg>
<status status="PASS" starttime="20200402 12:47:17.967" endtime="20200402 12:47:17.967"></status>
</kw>
<msg timestamp="20200402 12:47:17.968" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDF4aHUwMHZCcUZqNTlDWkVKUm1reDVhekxDejRNR1Z...</msg>
<status status="PASS" starttime="20200402 12:47:17.437" endtime="20200402 12:47:17.968"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:17.969" level="INFO">${Id} = 15545895636206</msg>
<status status="PASS" starttime="20200402 12:47:17.968" endtime="20200402 12:47:17.969"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.969" level="INFO">${IdNumber} = 15545895636206</msg>
<status status="PASS" starttime="20200402 12:47:17.969" endtime="20200402 12:47:17.969"></status>
</kw>
<msg timestamp="20200402 12:47:17.970" level="INFO">${idNum} = 15545895636206</msg>
<status status="PASS" starttime="20200402 12:47:17.968" endtime="20200402 12:47:17.970"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:17.970" level="INFO">${mobile} = 0154492322</msg>
<status status="PASS" starttime="20200402 12:47:17.970" endtime="20200402 12:47:17.970"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.971" level="INFO">${mobileNo} = 0154492322</msg>
<status status="PASS" starttime="20200402 12:47:17.971" endtime="20200402 12:47:17.971"></status>
</kw>
<msg timestamp="20200402 12:47:17.971" level="INFO">${MobNo} = 0154492322</msg>
<status status="PASS" starttime="20200402 12:47:17.970" endtime="20200402 12:47:17.971"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:17.973" level="INFO">${Emailnum} = 73536</msg>
<status status="PASS" starttime="20200402 12:47:17.972" endtime="20200402 12:47:17.973"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.973" level="INFO">${enum} = 73536</msg>
<status status="PASS" starttime="20200402 12:47:17.973" endtime="20200402 12:47:17.973"></status>
</kw>
<msg timestamp="20200402 12:47:17.974" level="INFO">${num} = 73536</msg>
<status status="PASS" starttime="20200402 12:47:17.972" endtime="20200402 12:47:17.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:17.974" level="INFO">${emailid} = pavan73536@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:17.974" endtime="20200402 12:47:17.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:17.975" level="INFO">${email} = pavan73536@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:17.974" endtime="20200402 12:47:17.975"></status>
</kw>
<msg timestamp="20200402 12:47:17.975" level="INFO">${emailid} = pavan73536@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:17.971" endtime="20200402 12:47:17.975"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:17.977" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:17.977" endtime="20200402 12:47:17.978"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:17.978" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:17.978" endtime="20200402 12:47:17.978"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:17.979" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:17.978" endtime="20200402 12:47:17.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:17.980" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:17.979" endtime="20200402 12:47:17.980"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:17.982" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:17.980" endtime="20200402 12:47:17.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:17.985" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '15545895636206', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0154492322', 'email': 'pavan73536@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:17.982" endtime="20200402 12:47:17.985"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:17.985" endtime="20200402 12:47:17.986"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:17.986" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDF4aHUwMHZCcUZqNTlDWkVKUm1reDVhekxD...</msg>
<status status="PASS" starttime="20200402 12:47:17.986" endtime="20200402 12:47:17.986"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:17.987" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:17.986" endtime="20200402 12:47:17.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:17.988" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDF4aHUwMHZCcUZqNTlDWkVKUm1reDVhekxDejRNR1ZMdCs0amdQVW9VbGxOOVNITUoyYVloSWtTVVdaa1RHK1NkUnByd3lyeUhnMUc2WktWNkpSdk09IiwibmJmIjoxNTg1ODExODM1LCJleHAiOjE1ODU4MTE4OTUsImlhdCI6MTU4NTgxMTgzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IolyH3FaFj5vRH7e7bspR9FQ0clGUkAGLEX2Rheqi0I'} 
data={"escrowCompanyId": "001", "idNumber": "15545895636206", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0154492322", "email": "pavan73536@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:18.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:17.987" endtime="20200402 12:47:18.219"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:18.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:18.219" endtime="20200402 12:47:18.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:18.220" endtime="20200402 12:47:18.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:18.221" endtime="20200402 12:47:18.221"></status>
</kw>
<msg timestamp="20200402 12:47:18.221" level="INFO">${sellerid} = 76a877b4-a068-40bf-a101-fc1e38cc3652</msg>
<status status="PASS" starttime="20200402 12:47:17.975" endtime="20200402 12:47:18.221"></status>
</kw>
<msg timestamp="20200402 12:47:18.222" level="INFO">${SellerId1} = 76a877b4-a068-40bf-a101-fc1e38cc3652</msg>
<msg timestamp="20200402 12:47:18.222" level="INFO">${Idnum1} = 15545895636206</msg>
<status status="PASS" starttime="20200402 12:47:17.437" endtime="20200402 12:47:18.222"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:18.223" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:18.223" endtime="20200402 12:47:18.224"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:47:18.224" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:47:18.224" endtime="20200402 12:47:18.224"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:18.225" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'b7aab208-5b06-4cca-bfff-fd63a0f19e6f', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:47:18.224" endtime="20200402 12:47:18.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:18.225" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pq...</msg>
<status status="PASS" starttime="20200402 12:47:18.225" endtime="20200402 12:47:18.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:18.226" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:18.226" endtime="20200402 12:47:18.226"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:18.227" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pqMGdCUndvZitJNHJSb2tYZVdJTDdRVVpObUFiS2phYkdaY2N3eUVqZ25lWmg5Uld1aW5DYkJmc29idFk9IiwibmJmIjoxNTg1ODExODI5LCJleHAiOjE1ODU4MTE4ODksImlhdCI6MTU4NTgxMTgyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHj1c15KXgrosauywOjdLmBCjTGrFxi5ectnwW2nsPY'} 
data={"escrowCompanyId": "001", "SELLERId": "b7aab208-5b06-4cca-bfff-fd63a0f19e6f", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:47:18.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:18.226" endtime="20200402 12:47:18.742"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:18.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:18.743" endtime="20200402 12:47:18.743"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:18.223" endtime="20200402 12:47:18.743"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId1}</arg>
<arg>${Idnum}</arg>
<arg>${3}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:18.746" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:18.746" endtime="20200402 12:47:18.747"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:18.748" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:18.747" endtime="20200402 12:47:18.748"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:18.749" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:18.748" endtime="20200402 12:47:18.749"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:18.750" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '76a877b4-a068-40bf-a101-fc1e38cc3652', 'idNumber': '94938681044540', 'typeOfID': 3, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:18.749" endtime="20200402 12:47:18.750"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:18.750" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pq...</msg>
<status status="PASS" starttime="20200402 12:47:18.750" endtime="20200402 12:47:18.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:18.751" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:18.750" endtime="20200402 12:47:18.751"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:18.752" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pqMGdCUndvZitJNHJSb2tYZVdJTDdRVVpObUFiS2phYkdaY2N3eUVqZ25lWmg5Uld1aW5DYkJmc29idFk9IiwibmJmIjoxNTg1ODExODI5LCJleHAiOjE1ODU4MTE4ODksImlhdCI6MTU4NTgxMTgyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHj1c15KXgrosauywOjdLmBCjTGrFxi5ectnwW2nsPY'} 
data={"escrowCompanyId": "001", "SELLERId": "76a877b4-a068-40bf-a101-fc1e38cc3652", "idNumber": "94938681044540", "typeOfID": 3, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:19.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:18.751" endtime="20200402 12:47:19.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:19.273" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:19.272" endtime="20200402 12:47:19.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:19.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:19.274" endtime="20200402 12:47:19.275"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:19.275" endtime="20200402 12:47:19.276"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:19.277" endtime="20200402 12:47:19.277"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:18.744" endtime="20200402 12:47:19.277"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:19.279" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:19.278" endtime="20200402 12:47:19.279"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:19.280" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'b7aab208-5b06-4cca-bfff-fd63a0f19e6f'}</msg>
<status status="PASS" starttime="20200402 12:47:19.279" endtime="20200402 12:47:19.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:19.280" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pq...</msg>
<status status="PASS" starttime="20200402 12:47:19.280" endtime="20200402 12:47:19.280"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:19.281" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:19.280" endtime="20200402 12:47:19.281"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:19.282" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0pQR0FPZlZ0dVBzS2g2UVBrVU4vTVViT3pqMGdCUndvZitJNHJSb2tYZVdJTDdRVVpObUFiS2phYkdaY2N3eUVqZ25lWmg5Uld1aW5DYkJmc29idFk9IiwibmJmIjoxNTg1ODExODI5LCJleHAiOjE1ODU4MTE4ODksImlhdCI6MTU4NTgxMTgyOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fHj1c15KXgrosauywOjdLmBCjTGrFxi5ectnwW2nsPY'} 
data={"escrowCompanyId": "001", "sellerID": "b7aab208-5b06-4cca-bfff-fd63a0f19e6f"} 
json=None</msg>
<msg timestamp="20200402 12:47:19.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:19.281" endtime="20200402 12:47:19.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:19.814" level="INFO">{"escrowCompanyId":"001","sellerId":"b7aab208-5b06-4cca-bfff-fd63a0f19e6f","idNumber":"94938681044540","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5950550630","email":"pavan56282@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":4,"statusText":"Terminated","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:14","updateDate":"02/04/2020 02:17:16","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:19.814" endtime="20200402 12:47:19.815"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:19.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:19.815" endtime="20200402 12:47:19.816"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:19.278" endtime="20200402 12:47:19.816"></status>
</kw>
<doc>Duplicate: To check idNumber is entered duplicate (duplicate id number should belong to Seller status = terminated ) and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:09.163" endtime="20200402 12:47:19.816" critical="yes"></status>
</test>
<test id="s1-t17" name="TC_22 Selle_Details_API Valid Email">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:22.821" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:19.819" endtime="20200402 12:47:22.821"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:22.822" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:22.822" endtime="20200402 12:47:22.823"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:22.824" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:22.823" endtime="20200402 12:47:22.824"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:22.824" endtime="20200402 12:47:22.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:22.825" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:22.824" endtime="20200402 12:47:22.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:22.825" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:23.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:22.825" endtime="20200402 12:47:23.010"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:23.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:23.010" endtime="20200402 12:47:23.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.012" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkdsdnlGWlpUek43T3V0UTJ0RkhuOUhHTnpZb21DUjlwcFlVVzN3N1YyaTNVTzBZRkFGR0cwS1E5VkpweDQ9IiwibmJmIjoxNTg1ODExODQwLCJleHAiOjE1ODU4MTE5MDAsImlhdCI6MTU4NTgxMTg0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dPHAnEkJPQPIKY2QLyCOCRVwWCZcXKQhX2m44CxkrHM</msg>
<status status="PASS" starttime="20200402 12:47:23.011" endtime="20200402 12:47:23.012"></status>
</kw>
<msg timestamp="20200402 12:47:23.013" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkdsdnlGWlp...</msg>
<status status="PASS" starttime="20200402 12:47:22.822" endtime="20200402 12:47:23.013"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.015" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:23.015" endtime="20200402 12:47:23.016"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:23.016" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:23.016" endtime="20200402 12:47:23.017"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:23.017" endtime="20200402 12:47:23.017"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:23.018" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:23.017" endtime="20200402 12:47:23.018"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:23.018" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:23.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:23.018" endtime="20200402 12:47:23.781"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:23.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:23.781" endtime="20200402 12:47:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.782" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXRKVk9UY3o0ak1DczM0TUJOOUJuMjNibkVzVTFESko3OVAyelRUNnNLUXRyYjArUGlMaTcrbFN4VmpIMDB3V1d4WjJzajRjazB4S1ZrTWcvUHR4c1E9IiwibmJmIjoxNTg1ODExODQxLCJleHAiOjE1ODU4MTE5MDEsImlhdCI6MTU4NTgxMTg0MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8pjbzuI6yBUblF9m068kFEjbc1_38IGTMIhslOyvhTA</msg>
<status status="PASS" starttime="20200402 12:47:23.782" endtime="20200402 12:47:23.782"></status>
</kw>
<msg timestamp="20200402 12:47:23.782" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXRKVk9UY3o0ak1DczM0TUJOOUJuMjNibkVzVTFESko...</msg>
<status status="PASS" starttime="20200402 12:47:23.015" endtime="20200402 12:47:23.782"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:23.783" level="INFO">${Id} = 22350824935324</msg>
<status status="PASS" starttime="20200402 12:47:23.783" endtime="20200402 12:47:23.783"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.784" level="INFO">${IdNumber} = 22350824935324</msg>
<status status="PASS" starttime="20200402 12:47:23.783" endtime="20200402 12:47:23.784"></status>
</kw>
<msg timestamp="20200402 12:47:23.784" level="INFO">${idNum} = 22350824935324</msg>
<status status="PASS" starttime="20200402 12:47:23.783" endtime="20200402 12:47:23.784"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:23.785" level="INFO">${mobile} = 5565449711</msg>
<status status="PASS" starttime="20200402 12:47:23.785" endtime="20200402 12:47:23.785"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.785" level="INFO">${mobileNo} = 5565449711</msg>
<status status="PASS" starttime="20200402 12:47:23.785" endtime="20200402 12:47:23.785"></status>
</kw>
<msg timestamp="20200402 12:47:23.786" level="INFO">${MobNo} = 5565449711</msg>
<status status="PASS" starttime="20200402 12:47:23.784" endtime="20200402 12:47:23.786"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:23.787" level="INFO">${Emailnum} = 86551</msg>
<status status="PASS" starttime="20200402 12:47:23.786" endtime="20200402 12:47:23.787"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.787" level="INFO">${enum} = 86551</msg>
<status status="PASS" starttime="20200402 12:47:23.787" endtime="20200402 12:47:23.787"></status>
</kw>
<msg timestamp="20200402 12:47:23.788" level="INFO">${num} = 86551</msg>
<status status="PASS" starttime="20200402 12:47:23.786" endtime="20200402 12:47:23.788"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:23.788" level="INFO">${emailid} = pavan86551@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:23.788" endtime="20200402 12:47:23.788"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:23.789" level="INFO">${email} = pavan86551@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:23.788" endtime="20200402 12:47:23.789"></status>
</kw>
<msg timestamp="20200402 12:47:23.789" level="INFO">${emailid} = pavan86551@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:23.786" endtime="20200402 12:47:23.789"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:23.793" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:23.793" endtime="20200402 12:47:23.793"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:23.794" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:23.794" endtime="20200402 12:47:23.794"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:23.794" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:23.794" endtime="20200402 12:47:23.794"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:23.796" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:23.795" endtime="20200402 12:47:23.796"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:23.797" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:23.796" endtime="20200402 12:47:23.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:23.800" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '22350824935324', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5565449711', 'email': 'pavan86551@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:23.797" endtime="20200402 12:47:23.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:23.800" endtime="20200402 12:47:23.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:23.801" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXRKVk9UY3o0ak1DczM0TUJOOUJuMjNibkVz...</msg>
<status status="PASS" starttime="20200402 12:47:23.801" endtime="20200402 12:47:23.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:23.802" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:23.802" endtime="20200402 12:47:23.802"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:23.803" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXRKVk9UY3o0ak1DczM0TUJOOUJuMjNibkVzVTFESko3OVAyelRUNnNLUXRyYjArUGlMaTcrbFN4VmpIMDB3V1d4WjJzajRjazB4S1ZrTWcvUHR4c1E9IiwibmJmIjoxNTg1ODExODQxLCJleHAiOjE1ODU4MTE5MDEsImlhdCI6MTU4NTgxMTg0MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8pjbzuI6yBUblF9m068kFEjbc1_38IGTMIhslOyvhTA'} 
data={"escrowCompanyId": "001", "idNumber": "22350824935324", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5565449711", "email": "pavan86551@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:24.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:23.802" endtime="20200402 12:47:24.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:24.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:24.103" endtime="20200402 12:47:24.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:24.104" endtime="20200402 12:47:24.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:24.105" endtime="20200402 12:47:24.105"></status>
</kw>
<msg timestamp="20200402 12:47:24.106" level="INFO">${sellerid} = 1b415597-c063-43cf-8e4c-a5521fa99119</msg>
<status status="PASS" starttime="20200402 12:47:23.789" endtime="20200402 12:47:24.106"></status>
</kw>
<msg timestamp="20200402 12:47:24.106" level="INFO">${SellerId} = 1b415597-c063-43cf-8e4c-a5521fa99119</msg>
<msg timestamp="20200402 12:47:24.106" level="INFO">${idnumber} = 22350824935324</msg>
<status status="PASS" starttime="20200402 12:47:23.014" endtime="20200402 12:47:24.106"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:24.108" level="INFO">${Emailnum} = 59875</msg>
<status status="PASS" starttime="20200402 12:47:24.108" endtime="20200402 12:47:24.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:24.109" level="INFO">${enum} = 59875</msg>
<status status="PASS" starttime="20200402 12:47:24.108" endtime="20200402 12:47:24.109"></status>
</kw>
<msg timestamp="20200402 12:47:24.109" level="INFO">${num} = 59875</msg>
<status status="PASS" starttime="20200402 12:47:24.107" endtime="20200402 12:47:24.109"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:24.109" level="INFO">${emailid} = pavan59875@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:24.109" endtime="20200402 12:47:24.109"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:24.110" level="INFO">${email} = pavan59875@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:24.109" endtime="20200402 12:47:24.110"></status>
</kw>
<msg timestamp="20200402 12:47:24.110" level="INFO">${emailid} = pavan59875@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:24.107" endtime="20200402 12:47:24.110"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:24.111" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:24.111" endtime="20200402 12:47:24.112"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:47:24.112" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:47:24.112" endtime="20200402 12:47:24.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:24.113" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '1b415597-c063-43cf-8e4c-a5521fa99119', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:47:24.113" endtime="20200402 12:47:24.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:24.114" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkds...</msg>
<status status="PASS" starttime="20200402 12:47:24.113" endtime="20200402 12:47:24.114"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:24.114" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:24.114" endtime="20200402 12:47:24.114"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:24.115" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkdsdnlGWlpUek43T3V0UTJ0RkhuOUhHTnpZb21DUjlwcFlVVzN3N1YyaTNVTzBZRkFGR0cwS1E5VkpweDQ9IiwibmJmIjoxNTg1ODExODQwLCJleHAiOjE1ODU4MTE5MDAsImlhdCI6MTU4NTgxMTg0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dPHAnEkJPQPIKY2QLyCOCRVwWCZcXKQhX2m44CxkrHM'} 
data={"escrowCompanyId": "001", "SELLERId": "1b415597-c063-43cf-8e4c-a5521fa99119", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:47:25.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:24.114" endtime="20200402 12:47:25.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:25.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:25.060" endtime="20200402 12:47:25.061"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:24.111" endtime="20200402 12:47:25.061"></status>
</kw>
<kw name="UpdateSellerDetails Email TypeId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${email}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:25.062" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:25.062" endtime="20200402 12:47:25.063"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:25.063" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:47:25.063" endtime="20200402 12:47:25.063"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:25.064" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:25.064" endtime="20200402 12:47:25.064"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>email=${email}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:25.065" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '1b415597-c063-43cf-8e4c-a5521fa99119', 'idNumber': '22350824935324', 'email': 'pavan59875@2c2p.com', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:25.064" endtime="20200402 12:47:25.065"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:25.065" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkds...</msg>
<status status="PASS" starttime="20200402 12:47:25.065" endtime="20200402 12:47:25.065"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:25.066" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:25.066" endtime="20200402 12:47:25.066"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:25.067" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkdsdnlGWlpUek43T3V0UTJ0RkhuOUhHTnpZb21DUjlwcFlVVzN3N1YyaTNVTzBZRkFGR0cwS1E5VkpweDQ9IiwibmJmIjoxNTg1ODExODQwLCJleHAiOjE1ODU4MTE5MDAsImlhdCI6MTU4NTgxMTg0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dPHAnEkJPQPIKY2QLyCOCRVwWCZcXKQhX2m44CxkrHM'} 
data={"escrowCompanyId": "001", "SELLERId": "1b415597-c063-43cf-8e4c-a5521fa99119", "idNumber": "22350824935324", "email": "pavan59875@2c2p.com", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:25.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:25.066" endtime="20200402 12:47:25.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:25.262" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:47:25.262" endtime="20200402 12:47:25.262"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:25.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:25.263" endtime="20200402 12:47:25.263"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:25.264" endtime="20200402 12:47:25.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:25.265" endtime="20200402 12:47:25.265"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:25.061" endtime="20200402 12:47:25.265"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:25.267" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:25.267" endtime="20200402 12:47:25.267"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:25.268" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '1b415597-c063-43cf-8e4c-a5521fa99119'}</msg>
<status status="PASS" starttime="20200402 12:47:25.267" endtime="20200402 12:47:25.268"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:25.268" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkds...</msg>
<status status="PASS" starttime="20200402 12:47:25.268" endtime="20200402 12:47:25.268"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:25.269" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:25.268" endtime="20200402 12:47:25.269"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:25.269" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMzBCRkcwZGV5THBLeEJ0QzVkL2pHaTBDdkdsdnlGWlpUek43T3V0UTJ0RkhuOUhHTnpZb21DUjlwcFlVVzN3N1YyaTNVTzBZRkFGR0cwS1E5VkpweDQ9IiwibmJmIjoxNTg1ODExODQwLCJleHAiOjE1ODU4MTE5MDAsImlhdCI6MTU4NTgxMTg0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.dPHAnEkJPQPIKY2QLyCOCRVwWCZcXKQhX2m44CxkrHM'} 
data={"escrowCompanyId": "001", "sellerID": "1b415597-c063-43cf-8e4c-a5521fa99119"} 
json=None</msg>
<msg timestamp="20200402 12:47:25.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:25.269" endtime="20200402 12:47:25.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:25.768" level="INFO">{"escrowCompanyId":"001","sellerId":"1b415597-c063-43cf-8e4c-a5521fa99119","idNumber":"22350824935324","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5565449711","email":"pavan86551@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":4,"statusText":"Terminated","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:21","updateDate":"02/04/2020 02:17:22","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:25.767" endtime="20200402 12:47:25.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:25.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:25.769" endtime="20200402 12:47:25.770"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:25.266" endtime="20200402 12:47:25.770"></status>
</kw>
<doc>Duplicate: To check idNumber is entered duplicate with own user (duplicate id number should belong to Seller status = terminated) and request is send with all mandatory fields</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:19.818" endtime="20200402 12:47:25.770" critical="yes"></status>
</test>
<test id="s1-t18" name="TC_23 Selle_Details_API Empty Idno">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:28.776" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:25.774" endtime="20200402 12:47:28.776"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:28.776" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:28.776" endtime="20200402 12:47:28.777"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:28.778" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:28.777" endtime="20200402 12:47:28.778"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:28.778" endtime="20200402 12:47:28.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:28.779" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:28.778" endtime="20200402 12:47:28.779"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:28.780" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:29.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:28.779" endtime="20200402 12:47:29.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:29.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:29.399" endtime="20200402 12:47:29.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:29.400" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQzdDJHSHpnemE3Wi9rZit2dktSY1F1Qlo3V3psamo4MXVXVndkcUp2dFVnOFE1QVF2WGladTEwKzlKUms9IiwibmJmIjoxNTg1ODExODQ2LCJleHAiOjE1ODU4MTE5MDYsImlhdCI6MTU4NTgxMTg0NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.L7a3K2KHiFThWcra_b_lJcWpO7yiUYUBYA15C8lofiQ</msg>
<status status="PASS" starttime="20200402 12:47:29.400" endtime="20200402 12:47:29.400"></status>
</kw>
<msg timestamp="20200402 12:47:29.401" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQzdDJHSHp...</msg>
<status status="PASS" starttime="20200402 12:47:28.776" endtime="20200402 12:47:29.401"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:29.402" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:29.401" endtime="20200402 12:47:29.402"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:29.402" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:29.402" endtime="20200402 12:47:29.402"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:29.403" endtime="20200402 12:47:29.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:29.403" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:29.403" endtime="20200402 12:47:29.403"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:29.404" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:30.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:29.404" endtime="20200402 12:47:30.108"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:30.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.108" endtime="20200402 12:47:30.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:30.110" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3VZR3Y3Q3owTXhxVnpHOHRKVXRRRk0yRlpsVE5MNG1RSFdtM2k5TWFlUWZmZzdYMG5LbVJLNFVRenRuUUVnNzduQjU5UHFubHNyWHVEQTQrb1VqdzA9IiwibmJmIjoxNTg1ODExODQ3LCJleHAiOjE1ODU4MTE5MDcsImlhdCI6MTU4NTgxMTg0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DfgieZi8JZQ7sJxfce31QdAt8nOc4-Dv7XnSuFeVnko</msg>
<status status="PASS" starttime="20200402 12:47:30.109" endtime="20200402 12:47:30.110"></status>
</kw>
<msg timestamp="20200402 12:47:30.110" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3VZR3Y3Q3owTXhxVnpHOHRKVXRRRk0yRlpsVE5MNG1...</msg>
<status status="PASS" starttime="20200402 12:47:29.401" endtime="20200402 12:47:30.110"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:30.111" level="INFO">${Id} = 04165012305761</msg>
<status status="PASS" starttime="20200402 12:47:30.111" endtime="20200402 12:47:30.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:30.112" level="INFO">${IdNumber} = 04165012305761</msg>
<status status="PASS" starttime="20200402 12:47:30.111" endtime="20200402 12:47:30.112"></status>
</kw>
<msg timestamp="20200402 12:47:30.112" level="INFO">${idNum} = 04165012305761</msg>
<status status="PASS" starttime="20200402 12:47:30.110" endtime="20200402 12:47:30.112"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:30.113" level="INFO">${mobile} = 6356180920</msg>
<status status="PASS" starttime="20200402 12:47:30.113" endtime="20200402 12:47:30.113"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:30.113" level="INFO">${mobileNo} = 6356180920</msg>
<status status="PASS" starttime="20200402 12:47:30.113" endtime="20200402 12:47:30.113"></status>
</kw>
<msg timestamp="20200402 12:47:30.113" level="INFO">${MobNo} = 6356180920</msg>
<status status="PASS" starttime="20200402 12:47:30.112" endtime="20200402 12:47:30.113"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:30.114" level="INFO">${Emailnum} = 12931</msg>
<status status="PASS" starttime="20200402 12:47:30.114" endtime="20200402 12:47:30.114"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:30.115" level="INFO">${enum} = 12931</msg>
<status status="PASS" starttime="20200402 12:47:30.114" endtime="20200402 12:47:30.115"></status>
</kw>
<msg timestamp="20200402 12:47:30.115" level="INFO">${num} = 12931</msg>
<status status="PASS" starttime="20200402 12:47:30.113" endtime="20200402 12:47:30.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:30.115" level="INFO">${emailid} = pavan12931@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:30.115" endtime="20200402 12:47:30.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:30.116" level="INFO">${email} = pavan12931@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:30.116" endtime="20200402 12:47:30.116"></status>
</kw>
<msg timestamp="20200402 12:47:30.116" level="INFO">${emailid} = pavan12931@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:30.113" endtime="20200402 12:47:30.116"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:30.119" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:30.118" endtime="20200402 12:47:30.119"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:30.119" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:30.119" endtime="20200402 12:47:30.120"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:30.120" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:30.120" endtime="20200402 12:47:30.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:30.121" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:30.120" endtime="20200402 12:47:30.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:30.123" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:30.122" endtime="20200402 12:47:30.123"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:30.125" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '04165012305761', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6356180920', 'email': 'pavan12931@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:30.123" endtime="20200402 12:47:30.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:30.125" endtime="20200402 12:47:30.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:30.127" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3VZR3Y3Q3owTXhxVnpHOHRKVXRRRk0yRlps...</msg>
<status status="PASS" starttime="20200402 12:47:30.126" endtime="20200402 12:47:30.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:30.128" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:30.127" endtime="20200402 12:47:30.128"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:30.128" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3VZR3Y3Q3owTXhxVnpHOHRKVXRRRk0yRlpsVE5MNG1RSFdtM2k5TWFlUWZmZzdYMG5LbVJLNFVRenRuUUVnNzduQjU5UHFubHNyWHVEQTQrb1VqdzA9IiwibmJmIjoxNTg1ODExODQ3LCJleHAiOjE1ODU4MTE5MDcsImlhdCI6MTU4NTgxMTg0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DfgieZi8JZQ7sJxfce31QdAt8nOc4-Dv7XnSuFeVnko'} 
data={"escrowCompanyId": "001", "idNumber": "04165012305761", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6356180920", "email": "pavan12931@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:30.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.128" endtime="20200402 12:47:30.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:30.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.365" endtime="20200402 12:47:30.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:30.366" endtime="20200402 12:47:30.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:30.366" endtime="20200402 12:47:30.367"></status>
</kw>
<msg timestamp="20200402 12:47:30.367" level="INFO">${sellerid} = bcb663d7-f6f2-471e-b48a-595d5cfa5029</msg>
<status status="PASS" starttime="20200402 12:47:30.116" endtime="20200402 12:47:30.367"></status>
</kw>
<msg timestamp="20200402 12:47:30.368" level="INFO">${SellerId} = bcb663d7-f6f2-471e-b48a-595d5cfa5029</msg>
<msg timestamp="20200402 12:47:30.368" level="INFO">${idnumber} = 04165012305761</msg>
<status status="PASS" starttime="20200402 12:47:29.401" endtime="20200402 12:47:30.368"></status>
</kw>
<kw name="UpdateSellerDetails IDNUMBER KYC 1" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${1}</arg>
<arg>${1}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:30.370" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:30.369" endtime="20200402 12:47:30.370"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:30.370" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:47:30.370" endtime="20200402 12:47:30.370"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:30.371" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:47:30.371" endtime="20200402 12:47:30.371"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:30.372" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'bcb663d7-f6f2-471e-b48a-595d5cfa5029', 'idNumber': '', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '08/03/1992', 'otherVerification'...</msg>
<status status="PASS" starttime="20200402 12:47:30.371" endtime="20200402 12:47:30.372"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:30.373" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQz...</msg>
<status status="PASS" starttime="20200402 12:47:30.372" endtime="20200402 12:47:30.373"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:30.373" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:30.373" endtime="20200402 12:47:30.373"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:30.374" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQzdDJHSHpnemE3Wi9rZit2dktSY1F1Qlo3V3psamo4MXVXVndkcUp2dFVnOFE1QVF2WGladTEwKzlKUms9IiwibmJmIjoxNTg1ODExODQ2LCJleHAiOjE1ODU4MTE5MDYsImlhdCI6MTU4NTgxMTg0NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.L7a3K2KHiFThWcra_b_lJcWpO7yiUYUBYA15C8lofiQ'} 
data={"escrowCompanyId": "001", "SELLERId": "bcb663d7-f6f2-471e-b48a-595d5cfa5029", "idNumber": "", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "08/03/1992", "otherVerification": "AB12311678919", "typeOfID": 1, "kycRequest": 1} 
json=None</msg>
<msg timestamp="20200402 12:47:30.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.374" endtime="20200402 12:47:30.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:30.540" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:47:30.539" endtime="20200402 12:47:30.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:30.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.540" endtime="20200402 12:47:30.541"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:30.541" endtime="20200402 12:47:30.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:30.542" endtime="20200402 12:47:30.543"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:30.368" endtime="20200402 12:47:30.543"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:30.545" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:30.545" endtime="20200402 12:47:30.546"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:30.547" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'bcb663d7-f6f2-471e-b48a-595d5cfa5029'}</msg>
<status status="PASS" starttime="20200402 12:47:30.546" endtime="20200402 12:47:30.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:30.548" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQz...</msg>
<status status="PASS" starttime="20200402 12:47:30.547" endtime="20200402 12:47:30.548"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:30.549" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:30.548" endtime="20200402 12:47:30.549"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:30.550" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenA5dzNrVyt2ZlE2MjBqVlZXUWhKT3g5SGQzdDJHSHpnemE3Wi9rZit2dktSY1F1Qlo3V3psamo4MXVXVndkcUp2dFVnOFE1QVF2WGladTEwKzlKUms9IiwibmJmIjoxNTg1ODExODQ2LCJleHAiOjE1ODU4MTE5MDYsImlhdCI6MTU4NTgxMTg0NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.L7a3K2KHiFThWcra_b_lJcWpO7yiUYUBYA15C8lofiQ'} 
data={"escrowCompanyId": "001", "sellerID": "bcb663d7-f6f2-471e-b48a-595d5cfa5029"} 
json=None</msg>
<msg timestamp="20200402 12:47:31.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:30.549" endtime="20200402 12:47:31.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:31.118" level="INFO">{"escrowCompanyId":"001","sellerId":"bcb663d7-f6f2-471e-b48a-595d5cfa5029","idNumber":"04165012305761","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6356180920","email":"pavan12931@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:27","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:31.118" endtime="20200402 12:47:31.119"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:31.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:31.119" endtime="20200402 12:47:31.120"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:30.544" endtime="20200402 12:47:31.120"></status>
</kw>
<doc>Empty: To Verify response if idNumber parameter is NOT entered and KYCRequest’ = 1 and request sent with all mandatory fields</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:25.772" endtime="20200402 12:47:31.120" critical="yes"></status>
</test>
<test id="s1-t19" name="TC_24 Selle_Details_API Empty Idno Kyc 0">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:34.124" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:31.123" endtime="20200402 12:47:34.124"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:34.125" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:34.125" endtime="20200402 12:47:34.126"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:34.126" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:34.126" endtime="20200402 12:47:34.126"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:34.127" endtime="20200402 12:47:34.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:34.127" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:34.127" endtime="20200402 12:47:34.127"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:34.128" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:34.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:34.128" endtime="20200402 12:47:34.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:34.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:34.344" endtime="20200402 12:47:34.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:34.345" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURpMkorOTRwOHdmYUdSM3MxV2ZvZkN0M0o2UzMwWWFhU3dNUm1WRzR3bklNaStTaXZ3d0JOa0hKTUlYQTQ9IiwibmJmIjoxNTg1ODExODUxLCJleHAiOjE1ODU4MTE5MTEsImlhdCI6MTU4NTgxMTg1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.AtRPvcjQa844Aug644Zt6ygheQvyRT7c6o6jY5fCwYs</msg>
<status status="PASS" starttime="20200402 12:47:34.345" endtime="20200402 12:47:34.346"></status>
</kw>
<msg timestamp="20200402 12:47:34.346" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURpMkorOTR...</msg>
<status status="PASS" starttime="20200402 12:47:34.125" endtime="20200402 12:47:34.346"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:34.349" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:34.348" endtime="20200402 12:47:34.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:34.350" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:34.350" endtime="20200402 12:47:34.350"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:34.351" endtime="20200402 12:47:34.351"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:34.352" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:34.351" endtime="20200402 12:47:34.352"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:34.353" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:41.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:34.352" endtime="20200402 12:47:41.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:41.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:41.648" endtime="20200402 12:47:41.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:41.649" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHNsbXhVOWhTL2xhS2syZDQ3RzZFZjZQd09sNUpwYm5MYUY4Y3QrZHVkY0ZTZFp4VDQrT3EvUTNlYjl4R21teUtrbVMrcWtjcTB0T0s0ZzliZ3EwMW89IiwibmJmIjoxNTg1ODExODU5LCJleHAiOjE1ODU4MTE5MTksImlhdCI6MTU4NTgxMTg1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.wNpcZ6p8ACMtB7Odl-6sGZVbsq1y2jIblgJC6P_wN3c</msg>
<status status="PASS" starttime="20200402 12:47:41.649" endtime="20200402 12:47:41.649"></status>
</kw>
<msg timestamp="20200402 12:47:41.650" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHNsbXhVOWhTL2xhS2syZDQ3RzZFZjZQd09sNUpwYm5...</msg>
<status status="PASS" starttime="20200402 12:47:34.347" endtime="20200402 12:47:41.650"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:41.651" level="INFO">${Id} = 51012080202946</msg>
<status status="PASS" starttime="20200402 12:47:41.651" endtime="20200402 12:47:41.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:41.653" level="INFO">${IdNumber} = 51012080202946</msg>
<status status="PASS" starttime="20200402 12:47:41.652" endtime="20200402 12:47:41.653"></status>
</kw>
<msg timestamp="20200402 12:47:41.654" level="INFO">${idNum} = 51012080202946</msg>
<status status="PASS" starttime="20200402 12:47:41.650" endtime="20200402 12:47:41.654"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:41.656" level="INFO">${mobile} = 2962060386</msg>
<status status="PASS" starttime="20200402 12:47:41.655" endtime="20200402 12:47:41.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:41.657" level="INFO">${mobileNo} = 2962060386</msg>
<status status="PASS" starttime="20200402 12:47:41.656" endtime="20200402 12:47:41.657"></status>
</kw>
<msg timestamp="20200402 12:47:41.657" level="INFO">${MobNo} = 2962060386</msg>
<status status="PASS" starttime="20200402 12:47:41.654" endtime="20200402 12:47:41.658"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:41.660" level="INFO">${Emailnum} = 29426</msg>
<status status="PASS" starttime="20200402 12:47:41.659" endtime="20200402 12:47:41.660"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:41.661" level="INFO">${enum} = 29426</msg>
<status status="PASS" starttime="20200402 12:47:41.661" endtime="20200402 12:47:41.662"></status>
</kw>
<msg timestamp="20200402 12:47:41.662" level="INFO">${num} = 29426</msg>
<status status="PASS" starttime="20200402 12:47:41.659" endtime="20200402 12:47:41.662"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:41.663" level="INFO">${emailid} = pavan29426@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:41.663" endtime="20200402 12:47:41.663"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:41.665" level="INFO">${email} = pavan29426@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:41.664" endtime="20200402 12:47:41.665"></status>
</kw>
<msg timestamp="20200402 12:47:41.665" level="INFO">${emailid} = pavan29426@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:41.658" endtime="20200402 12:47:41.665"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:41.672" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:41.672" endtime="20200402 12:47:41.673"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:41.674" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:41.673" endtime="20200402 12:47:41.674"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:41.676" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:41.675" endtime="20200402 12:47:41.676"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:41.680" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:41.677" endtime="20200402 12:47:41.680"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:41.684" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:41.681" endtime="20200402 12:47:41.684"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:41.689" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '51012080202946', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2962060386', 'email': 'pavan29426@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:41.685" endtime="20200402 12:47:41.689"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:41.690" endtime="20200402 12:47:41.692"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:41.693" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHNsbXhVOWhTL2xhS2syZDQ3RzZFZjZQd09s...</msg>
<status status="PASS" starttime="20200402 12:47:41.692" endtime="20200402 12:47:41.693"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:41.694" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:41.693" endtime="20200402 12:47:41.695"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:41.697" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHNsbXhVOWhTL2xhS2syZDQ3RzZFZjZQd09sNUpwYm5MYUY4Y3QrZHVkY0ZTZFp4VDQrT3EvUTNlYjl4R21teUtrbVMrcWtjcTB0T0s0ZzliZ3EwMW89IiwibmJmIjoxNTg1ODExODU5LCJleHAiOjE1ODU4MTE5MTksImlhdCI6MTU4NTgxMTg1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.wNpcZ6p8ACMtB7Odl-6sGZVbsq1y2jIblgJC6P_wN3c'} 
data={"escrowCompanyId": "001", "idNumber": "51012080202946", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2962060386", "email": "pavan29426@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:42.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:41.695" endtime="20200402 12:47:42.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:42.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:42.007" endtime="20200402 12:47:42.008"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:42.008" endtime="20200402 12:47:42.009"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:42.009" endtime="20200402 12:47:42.009"></status>
</kw>
<msg timestamp="20200402 12:47:42.009" level="INFO">${sellerid} = dbb95650-6112-4a0d-94df-2c8f2563aeed</msg>
<status status="PASS" starttime="20200402 12:47:41.666" endtime="20200402 12:47:42.010"></status>
</kw>
<msg timestamp="20200402 12:47:42.010" level="INFO">${SellerId} = dbb95650-6112-4a0d-94df-2c8f2563aeed</msg>
<msg timestamp="20200402 12:47:42.010" level="INFO">${idnumber} = 51012080202946</msg>
<status status="PASS" starttime="20200402 12:47:34.347" endtime="20200402 12:47:42.010"></status>
</kw>
<kw name="UpdateSellerDetails KYC 0" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:42.011" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:42.011" endtime="20200402 12:47:42.012"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:42.013" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:42.012" endtime="20200402 12:47:42.013"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:42.014" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'dbb95650-6112-4a0d-94df-2c8f2563aeed', 'idNumber': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:42.013" endtime="20200402 12:47:42.014"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:42.014" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURp...</msg>
<status status="PASS" starttime="20200402 12:47:42.014" endtime="20200402 12:47:42.014"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:42.015" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:42.014" endtime="20200402 12:47:42.015"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:42.015" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURpMkorOTRwOHdmYUdSM3MxV2ZvZkN0M0o2UzMwWWFhU3dNUm1WRzR3bklNaStTaXZ3d0JOa0hKTUlYQTQ9IiwibmJmIjoxNTg1ODExODUxLCJleHAiOjE1ODU4MTE5MTEsImlhdCI6MTU4NTgxMTg1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.AtRPvcjQa844Aug644Zt6ygheQvyRT7c6o6jY5fCwYs'} 
data={"escrowCompanyId": "001", "SELLERId": "dbb95650-6112-4a0d-94df-2c8f2563aeed", "idNumber": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:44.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:42.015" endtime="20200402 12:47:44.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:44.635" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:44.634" endtime="20200402 12:47:44.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:44.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:44.635" endtime="20200402 12:47:44.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:44.636" endtime="20200402 12:47:44.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:44.637" endtime="20200402 12:47:44.637"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:42.010" endtime="20200402 12:47:44.637"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:44.639" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:44.638" endtime="20200402 12:47:44.639"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:44.640" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'dbb95650-6112-4a0d-94df-2c8f2563aeed'}</msg>
<status status="PASS" starttime="20200402 12:47:44.639" endtime="20200402 12:47:44.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:44.640" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURp...</msg>
<status status="PASS" starttime="20200402 12:47:44.640" endtime="20200402 12:47:44.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:44.641" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:44.641" endtime="20200402 12:47:44.641"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:44.642" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qejc3UGI4eUU4QkpEeGN6RmpFNjV6VHNSZURpMkorOTRwOHdmYUdSM3MxV2ZvZkN0M0o2UzMwWWFhU3dNUm1WRzR3bklNaStTaXZ3d0JOa0hKTUlYQTQ9IiwibmJmIjoxNTg1ODExODUxLCJleHAiOjE1ODU4MTE5MTEsImlhdCI6MTU4NTgxMTg1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.AtRPvcjQa844Aug644Zt6ygheQvyRT7c6o6jY5fCwYs'} 
data={"escrowCompanyId": "001", "sellerID": "dbb95650-6112-4a0d-94df-2c8f2563aeed"} 
json=None</msg>
<msg timestamp="20200402 12:47:45.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:44.641" endtime="20200402 12:47:45.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:45.127" level="INFO">{"escrowCompanyId":"001","sellerId":"dbb95650-6112-4a0d-94df-2c8f2563aeed","idNumber":"","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2962060386","email":"pavan29426@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:39","updateDate":"02/04/2020 02:17:42","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:45.126" endtime="20200402 12:47:45.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:45.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:45.130" endtime="20200402 12:47:45.130"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:44.638" endtime="20200402 12:47:45.131"></status>
</kw>
<doc>Empty: To Verify response if idNumber parameter is NOT entered and KYCRequest’ = 0 and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:31.121" endtime="20200402 12:47:45.132" critical="yes"></status>
</test>
<test id="s1-t20" name="TC_25 Selle_Details_API Valid Idno">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:48.136" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:45.136" endtime="20200402 12:47:48.136"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:48.137" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:48.137" endtime="20200402 12:47:48.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:48.139" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:48.138" endtime="20200402 12:47:48.139"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:48.139" endtime="20200402 12:47:48.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:48.140" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:48.139" endtime="20200402 12:47:48.140"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:48.140" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:48.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:48.140" endtime="20200402 12:47:48.618"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:48.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:48.618" endtime="20200402 12:47:48.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:48.619" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6V1pkOHpHMERIU29pUUIvSDNqVFRsUUlQSzBtMlREczlMazNtVHhqc25vY1JVaDJVMC9WaFhsQ2I0RHc9IiwibmJmIjoxNTg1ODExODY2LCJleHAiOjE1ODU4MTE5MjYsImlhdCI6MTU4NTgxMTg2NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rLyBekGUwW3tb0qQ1pBbpKFUPmdz9dwa2a6iNQBTbak</msg>
<status status="PASS" starttime="20200402 12:47:48.619" endtime="20200402 12:47:48.619"></status>
</kw>
<msg timestamp="20200402 12:47:48.619" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6V1pkOHp...</msg>
<status status="PASS" starttime="20200402 12:47:48.137" endtime="20200402 12:47:48.619"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:48.621" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:48.621" endtime="20200402 12:47:48.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:48.622" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:48.622" endtime="20200402 12:47:48.622"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:48.622" endtime="20200402 12:47:48.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:48.623" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:48.623" endtime="20200402 12:47:48.623"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:48.624" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:49.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:48.623" endtime="20200402 12:47:49.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:49.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:49.128" endtime="20200402 12:47:49.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.129" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNxaUFuRUhOOU9FdXNRVFVEUzEzV3ZOcGFXWVZubTlzVGpqcElUVjVaVHZ1OVlOTSthZHI3eXBFcmN5MVFVK01DYjdNMm9NdUkxL0ttYzkrc2huNXc9IiwibmJmIjoxNTg1ODExODY2LCJleHAiOjE1ODU4MTE5MjYsImlhdCI6MTU4NTgxMTg2NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0sgawoyBJbZ_axOKXAJyg2zH2xKU7RjJb0TqDanKI9k</msg>
<status status="PASS" starttime="20200402 12:47:49.129" endtime="20200402 12:47:49.129"></status>
</kw>
<msg timestamp="20200402 12:47:49.130" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNxaUFuRUhOOU9FdXNRVFVEUzEzV3ZOcGFXWVZubTl...</msg>
<status status="PASS" starttime="20200402 12:47:48.621" endtime="20200402 12:47:49.130"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:49.130" level="INFO">${Id} = 07410237671800</msg>
<status status="PASS" starttime="20200402 12:47:49.130" endtime="20200402 12:47:49.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.131" level="INFO">${IdNumber} = 07410237671800</msg>
<status status="PASS" starttime="20200402 12:47:49.131" endtime="20200402 12:47:49.131"></status>
</kw>
<msg timestamp="20200402 12:47:49.131" level="INFO">${idNum} = 07410237671800</msg>
<status status="PASS" starttime="20200402 12:47:49.130" endtime="20200402 12:47:49.131"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:49.132" level="INFO">${mobile} = 9839383287</msg>
<status status="PASS" starttime="20200402 12:47:49.132" endtime="20200402 12:47:49.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.133" level="INFO">${mobileNo} = 9839383287</msg>
<status status="PASS" starttime="20200402 12:47:49.132" endtime="20200402 12:47:49.133"></status>
</kw>
<msg timestamp="20200402 12:47:49.133" level="INFO">${MobNo} = 9839383287</msg>
<status status="PASS" starttime="20200402 12:47:49.131" endtime="20200402 12:47:49.133"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:49.134" level="INFO">${Emailnum} = 13867</msg>
<status status="PASS" starttime="20200402 12:47:49.134" endtime="20200402 12:47:49.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.135" level="INFO">${enum} = 13867</msg>
<status status="PASS" starttime="20200402 12:47:49.134" endtime="20200402 12:47:49.135"></status>
</kw>
<msg timestamp="20200402 12:47:49.135" level="INFO">${num} = 13867</msg>
<status status="PASS" starttime="20200402 12:47:49.133" endtime="20200402 12:47:49.135"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:49.135" level="INFO">${emailid} = pavan13867@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:49.135" endtime="20200402 12:47:49.136"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.136" level="INFO">${email} = pavan13867@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:49.136" endtime="20200402 12:47:49.136"></status>
</kw>
<msg timestamp="20200402 12:47:49.136" level="INFO">${emailid} = pavan13867@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:49.133" endtime="20200402 12:47:49.136"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:49.139" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:49.139" endtime="20200402 12:47:49.139"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:49.140" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:49.139" endtime="20200402 12:47:49.140"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:49.140" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:49.140" endtime="20200402 12:47:49.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:49.142" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:49.140" endtime="20200402 12:47:49.142"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:49.143" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:49.142" endtime="20200402 12:47:49.143"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:49.146" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '07410237671800', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9839383287', 'email': 'pavan13867@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:49.143" endtime="20200402 12:47:49.146"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:49.146" endtime="20200402 12:47:49.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:49.148" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNxaUFuRUhOOU9FdXNRVFVEUzEzV3ZOcGFX...</msg>
<status status="PASS" starttime="20200402 12:47:49.147" endtime="20200402 12:47:49.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:49.149" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:49.148" endtime="20200402 12:47:49.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:49.150" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNxaUFuRUhOOU9FdXNRVFVEUzEzV3ZOcGFXWVZubTlzVGpqcElUVjVaVHZ1OVlOTSthZHI3eXBFcmN5MVFVK01DYjdNMm9NdUkxL0ttYzkrc2huNXc9IiwibmJmIjoxNTg1ODExODY2LCJleHAiOjE1ODU4MTE5MjYsImlhdCI6MTU4NTgxMTg2NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0sgawoyBJbZ_axOKXAJyg2zH2xKU7RjJb0TqDanKI9k'} 
data={"escrowCompanyId": "001", "idNumber": "07410237671800", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9839383287", "email": "pavan13867@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:49.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:49.149" endtime="20200402 12:47:49.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:49.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:49.370" endtime="20200402 12:47:49.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:49.371" endtime="20200402 12:47:49.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:49.371" endtime="20200402 12:47:49.372"></status>
</kw>
<msg timestamp="20200402 12:47:49.372" level="INFO">${sellerid} = bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d</msg>
<status status="PASS" starttime="20200402 12:47:49.137" endtime="20200402 12:47:49.372"></status>
</kw>
<msg timestamp="20200402 12:47:49.372" level="INFO">${SellerId} = bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d</msg>
<msg timestamp="20200402 12:47:49.373" level="INFO">${idnumber} = 07410237671800</msg>
<status status="PASS" starttime="20200402 12:47:48.620" endtime="20200402 12:47:49.373"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:49.374" level="INFO">${Id} = 35774190911559</msg>
<status status="PASS" starttime="20200402 12:47:49.373" endtime="20200402 12:47:49.374"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:49.374" level="INFO">${IdNumber} = 35774190911559</msg>
<status status="PASS" starttime="20200402 12:47:49.374" endtime="20200402 12:47:49.374"></status>
</kw>
<msg timestamp="20200402 12:47:49.375" level="INFO">${idNum} = 35774190911559</msg>
<status status="PASS" starttime="20200402 12:47:49.373" endtime="20200402 12:47:49.375"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${Idnum}</arg>
<arg>${3}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:49.377" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:49.376" endtime="20200402 12:47:49.377"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:49.377" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:49.377" endtime="20200402 12:47:49.377"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:49.378" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:49.378" endtime="20200402 12:47:49.378"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:49.379" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d', 'idNumber': '35774190911559', 'typeOfID': 3, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:49.378" endtime="20200402 12:47:49.379"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:49.379" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6...</msg>
<status status="PASS" starttime="20200402 12:47:49.379" endtime="20200402 12:47:49.380"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:49.380" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:49.380" endtime="20200402 12:47:49.380"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:49.381" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6V1pkOHpHMERIU29pUUIvSDNqVFRsUUlQSzBtMlREczlMazNtVHhqc25vY1JVaDJVMC9WaFhsQ2I0RHc9IiwibmJmIjoxNTg1ODExODY2LCJleHAiOjE1ODU4MTE5MjYsImlhdCI6MTU4NTgxMTg2NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rLyBekGUwW3tb0qQ1pBbpKFUPmdz9dwa2a6iNQBTbak'} 
data={"escrowCompanyId": "001", "SELLERId": "bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d", "idNumber": "35774190911559", "typeOfID": 3, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:50.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:49.380" endtime="20200402 12:47:50.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:50.253" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:50.252" endtime="20200402 12:47:50.253"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:50.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:50.254" endtime="20200402 12:47:50.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:50.255" endtime="20200402 12:47:50.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:50.256" endtime="20200402 12:47:50.256"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:49.375" endtime="20200402 12:47:50.256"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:50.258" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:50.258" endtime="20200402 12:47:50.258"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:50.259" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d'}</msg>
<status status="PASS" starttime="20200402 12:47:50.258" endtime="20200402 12:47:50.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:50.259" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6...</msg>
<status status="PASS" starttime="20200402 12:47:50.259" endtime="20200402 12:47:50.260"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:50.260" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:50.260" endtime="20200402 12:47:50.260"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:50.261" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1hPTVlpVUxSTXpTODFiOXRjM3pOUU5Mb1d6V1pkOHpHMERIU29pUUIvSDNqVFRsUUlQSzBtMlREczlMazNtVHhqc25vY1JVaDJVMC9WaFhsQ2I0RHc9IiwibmJmIjoxNTg1ODExODY2LCJleHAiOjE1ODU4MTE5MjYsImlhdCI6MTU4NTgxMTg2NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rLyBekGUwW3tb0qQ1pBbpKFUPmdz9dwa2a6iNQBTbak'} 
data={"escrowCompanyId": "001", "sellerID": "bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d"} 
json=None</msg>
<msg timestamp="20200402 12:47:51.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:50.260" endtime="20200402 12:47:51.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:51.951" level="INFO">{"escrowCompanyId":"001","sellerId":"bdc28834-20e4-49ec-9c5d-a6c04d4f4a9d","idNumber":"35774190911559","typeOfId":3,"mobileCountryCode":"67","mobileNo":"9839383287","email":"pavan13867@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:46","updateDate":"02/04/2020 02:17:47","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:51.950" endtime="20200402 12:47:51.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:51.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:51.952" endtime="20200402 12:47:51.952"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:50.257" endtime="20200402 12:47:51.952"></status>
</kw>
<doc>Valid: To Verify response if idNumber parameter is entered valid and KYCRequest’ = 0 and request sent with all mandatory fieldsndatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:45.133" endtime="20200402 12:47:51.953" critical="yes"></status>
</test>
<test id="s1-t21" name="TC_28 Selle_Details_API TypeOfId Equal Citizen">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:47:54.957" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:47:51.955" endtime="20200402 12:47:54.957"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:54.959" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:54.958" endtime="20200402 12:47:54.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:54.961" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:54.960" endtime="20200402 12:47:54.961"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:54.961" endtime="20200402 12:47:54.962"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:54.962" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:54.962" endtime="20200402 12:47:54.962"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:54.963" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:55.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:54.963" endtime="20200402 12:47:55.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:55.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:55.461" endtime="20200402 12:47:55.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:55.462" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRhK0pnU2VHWm11MXhBVmJ1aTNCdnpUNEhGMTZUVlk3bVpIRDlRWWh0bjFQZVREL2R2NHhqNlJmdEtJb0U9IiwibmJmIjoxNTg1ODExODcyLCJleHAiOjE1ODU4MTE5MzIsImlhdCI6MTU4NTgxMTg3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6AOzotBrl05rXO8gI-BmDBlZhgCL0wkdRctBDH6-ZRs</msg>
<status status="PASS" starttime="20200402 12:47:55.462" endtime="20200402 12:47:55.462"></status>
</kw>
<msg timestamp="20200402 12:47:55.463" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRhK0pnU2V...</msg>
<status status="PASS" starttime="20200402 12:47:54.958" endtime="20200402 12:47:55.463"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:47:55.464" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:55.464" endtime="20200402 12:47:55.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:55.465" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:47:55.465" endtime="20200402 12:47:55.465"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:55.466" endtime="20200402 12:47:55.466"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:47:55.466" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:47:55.466" endtime="20200402 12:47:55.466"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:55.467" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:47:56.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:55.467" endtime="20200402 12:47:56.075"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:56.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.076" endtime="20200402 12:47:56.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.078" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTR1L3RKR3BjcDhPQnJ4YXpySUpMOFlDM2N5MUhHcWNQQTZ4OUZNS25WQ3pVcXlIQzdrUzFybGZsclk4ZUZVL3FEdXlyZjRQYmxvcU9Bc3NuVEVNZ1E9IiwibmJmIjoxNTg1ODExODczLCJleHAiOjE1ODU4MTE5MzMsImlhdCI6MTU4NTgxMTg3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Rt9hoSm_EC2O-nfczGzwF2ck2Ww5MfyDZEm3EK7nmCE</msg>
<status status="PASS" starttime="20200402 12:47:56.077" endtime="20200402 12:47:56.078"></status>
</kw>
<msg timestamp="20200402 12:47:56.078" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTR1L3RKR3BjcDhPQnJ4YXpySUpMOFlDM2N5MUhHcWN...</msg>
<status status="PASS" starttime="20200402 12:47:55.463" endtime="20200402 12:47:56.078"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:56.080" level="INFO">${Id} = 36386693416347</msg>
<status status="PASS" starttime="20200402 12:47:56.079" endtime="20200402 12:47:56.080"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.081" level="INFO">${IdNumber} = 36386693416347</msg>
<status status="PASS" starttime="20200402 12:47:56.080" endtime="20200402 12:47:56.081"></status>
</kw>
<msg timestamp="20200402 12:47:56.081" level="INFO">${idNum} = 36386693416347</msg>
<status status="PASS" starttime="20200402 12:47:56.079" endtime="20200402 12:47:56.081"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:47:56.082" level="INFO">${mobile} = 3465685380</msg>
<status status="PASS" starttime="20200402 12:47:56.082" endtime="20200402 12:47:56.082"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.083" level="INFO">${mobileNo} = 3465685380</msg>
<status status="PASS" starttime="20200402 12:47:56.083" endtime="20200402 12:47:56.083"></status>
</kw>
<msg timestamp="20200402 12:47:56.083" level="INFO">${MobNo} = 3465685380</msg>
<status status="PASS" starttime="20200402 12:47:56.081" endtime="20200402 12:47:56.083"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:47:56.085" level="INFO">${Emailnum} = 12388</msg>
<status status="PASS" starttime="20200402 12:47:56.085" endtime="20200402 12:47:56.085"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.086" level="INFO">${enum} = 12388</msg>
<status status="PASS" starttime="20200402 12:47:56.085" endtime="20200402 12:47:56.086"></status>
</kw>
<msg timestamp="20200402 12:47:56.086" level="INFO">${num} = 12388</msg>
<status status="PASS" starttime="20200402 12:47:56.084" endtime="20200402 12:47:56.086"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:47:56.087" level="INFO">${emailid} = pavan12388@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:56.087" endtime="20200402 12:47:56.087"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.088" level="INFO">${email} = pavan12388@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:56.088" endtime="20200402 12:47:56.089"></status>
</kw>
<msg timestamp="20200402 12:47:56.089" level="INFO">${emailid} = pavan12388@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:47:56.084" endtime="20200402 12:47:56.089"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:56.093" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:56.092" endtime="20200402 12:47:56.094"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:56.094" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:47:56.094" endtime="20200402 12:47:56.094"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:56.095" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:56.095" endtime="20200402 12:47:56.095"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:47:56.098" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:56.095" endtime="20200402 12:47:56.098"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:47:56.101" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:47:56.098" endtime="20200402 12:47:56.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:56.105" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '36386693416347', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3465685380', 'email': 'pavan12388@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:47:56.101" endtime="20200402 12:47:56.105"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:56.106" endtime="20200402 12:47:56.107"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:56.108" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTR1L3RKR3BjcDhPQnJ4YXpySUpMOFlDM2N5...</msg>
<status status="PASS" starttime="20200402 12:47:56.107" endtime="20200402 12:47:56.108"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:56.109" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:56.108" endtime="20200402 12:47:56.109"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:56.110" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTR1L3RKR3BjcDhPQnJ4YXpySUpMOFlDM2N5MUhHcWNQQTZ4OUZNS25WQ3pVcXlIQzdrUzFybGZsclk4ZUZVL3FEdXlyZjRQYmxvcU9Bc3NuVEVNZ1E9IiwibmJmIjoxNTg1ODExODczLCJleHAiOjE1ODU4MTE5MzMsImlhdCI6MTU4NTgxMTg3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Rt9hoSm_EC2O-nfczGzwF2ck2Ww5MfyDZEm3EK7nmCE'} 
data={"escrowCompanyId": "001", "idNumber": "36386693416347", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3465685380", "email": "pavan12388@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:47:56.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.109" endtime="20200402 12:47:56.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:56.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.385" endtime="20200402 12:47:56.386"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:56.386" endtime="20200402 12:47:56.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:56.387" endtime="20200402 12:47:56.387"></status>
</kw>
<msg timestamp="20200402 12:47:56.388" level="INFO">${sellerid} = 466d8d53-cb34-405c-9ebf-aa1550cd77c0</msg>
<status status="PASS" starttime="20200402 12:47:56.089" endtime="20200402 12:47:56.388"></status>
</kw>
<msg timestamp="20200402 12:47:56.388" level="INFO">${SellerId} = 466d8d53-cb34-405c-9ebf-aa1550cd77c0</msg>
<msg timestamp="20200402 12:47:56.388" level="INFO">${idnumber} = 36386693416347</msg>
<status status="PASS" starttime="20200402 12:47:55.463" endtime="20200402 12:47:56.388"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:47:56.391" level="INFO">${Id} = 93815488392240</msg>
<status status="PASS" starttime="20200402 12:47:56.390" endtime="20200402 12:47:56.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:47:56.391" level="INFO">${IdNumber} = 93815488392240</msg>
<status status="PASS" starttime="20200402 12:47:56.391" endtime="20200402 12:47:56.391"></status>
</kw>
<msg timestamp="20200402 12:47:56.392" level="INFO">${idNum} = 93815488392240</msg>
<status status="PASS" starttime="20200402 12:47:56.390" endtime="20200402 12:47:56.392"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:56.393" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:56.393" endtime="20200402 12:47:56.393"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:47:56.394" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:47:56.394" endtime="20200402 12:47:56.394"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:47:56.394" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:47:56.394" endtime="20200402 12:47:56.394"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:56.395" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '466d8d53-cb34-405c-9ebf-aa1550cd77c0', 'idNumber': '93815488392240', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:47:56.395" endtime="20200402 12:47:56.395"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:56.396" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRh...</msg>
<status status="PASS" starttime="20200402 12:47:56.396" endtime="20200402 12:47:56.396"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:56.397" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:56.396" endtime="20200402 12:47:56.397"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:56.397" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRhK0pnU2VHWm11MXhBVmJ1aTNCdnpUNEhGMTZUVlk3bVpIRDlRWWh0bjFQZVREL2R2NHhqNlJmdEtJb0U9IiwibmJmIjoxNTg1ODExODcyLCJleHAiOjE1ODU4MTE5MzIsImlhdCI6MTU4NTgxMTg3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6AOzotBrl05rXO8gI-BmDBlZhgCL0wkdRctBDH6-ZRs'} 
data={"escrowCompanyId": "001", "SELLERId": "466d8d53-cb34-405c-9ebf-aa1550cd77c0", "idNumber": "93815488392240", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:47:56.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.397" endtime="20200402 12:47:56.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:47:56.985" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:47:56.984" endtime="20200402 12:47:56.985"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:47:56.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.985" endtime="20200402 12:47:56.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:56.986" endtime="20200402 12:47:56.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:47:56.987" endtime="20200402 12:47:56.987"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:56.392" endtime="20200402 12:47:56.987"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:47:56.988" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:47:56.988" endtime="20200402 12:47:56.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:47:56.989" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '466d8d53-cb34-405c-9ebf-aa1550cd77c0'}</msg>
<status status="PASS" starttime="20200402 12:47:56.989" endtime="20200402 12:47:56.989"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:47:56.990" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRh...</msg>
<status status="PASS" starttime="20200402 12:47:56.990" endtime="20200402 12:47:56.990"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:47:56.990" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:47:56.990" endtime="20200402 12:47:56.990"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:47:56.991" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0ljQ3RHQmEwQkw4NmQ2TDFYWmxpOXg5MVRhK0pnU2VHWm11MXhBVmJ1aTNCdnpUNEhGMTZUVlk3bVpIRDlRWWh0bjFQZVREL2R2NHhqNlJmdEtJb0U9IiwibmJmIjoxNTg1ODExODcyLCJleHAiOjE1ODU4MTE5MzIsImlhdCI6MTU4NTgxMTg3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6AOzotBrl05rXO8gI-BmDBlZhgCL0wkdRctBDH6-ZRs'} 
data={"escrowCompanyId": "001", "sellerID": "466d8d53-cb34-405c-9ebf-aa1550cd77c0"} 
json=None</msg>
<msg timestamp="20200402 12:48:02.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:47:56.991" endtime="20200402 12:48:02.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:02.334" level="INFO">{"escrowCompanyId":"001","sellerId":"466d8d53-cb34-405c-9ebf-aa1550cd77c0","idNumber":"93815488392240","typeOfId":1,"mobileCountryCode":"67","mobileNo":"3465685380","email":"pavan12388@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:17:53","updateDate":"02/04/2020 02:17:54","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:02.333" endtime="20200402 12:48:02.335"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:02.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:02.335" endtime="20200402 12:48:02.336"></status>
</kw>
<status status="PASS" starttime="20200402 12:47:56.988" endtime="20200402 12:48:02.336"></status>
</kw>
<doc>Valid: To Verify response when typeOfId = Citizen id and kycRequest = 0 request is sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:47:51.954" endtime="20200402 12:48:02.337" critical="yes"></status>
</test>
<test id="s1-t22" name="TC_29 Selle_Details_API TypeOfId equal passport">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:05.341" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:02.340" endtime="20200402 12:48:05.341"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:05.342" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:05.342" endtime="20200402 12:48:05.343"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:05.343" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:05.343" endtime="20200402 12:48:05.343"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:05.344" endtime="20200402 12:48:05.344"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:05.344" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:05.344" endtime="20200402 12:48:05.344"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:05.345" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:05.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:05.345" endtime="20200402 12:48:05.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:05.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:05.847" endtime="20200402 12:48:05.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:05.848" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJuRjBtcTUzNk84MWZmM0J1Tm96OGJ4S1RmNEJheVV0czF1azEyUVh2YWdNYUFSMnNIVzY4bi9OU2l6ck09IiwibmJmIjoxNTg1ODExODgzLCJleHAiOjE1ODU4MTE5NDMsImlhdCI6MTU4NTgxMTg4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HCaChcaEVIxjJFEt8oqfXh0tTrCtM7xTd0MS-pSIzIo</msg>
<status status="PASS" starttime="20200402 12:48:05.848" endtime="20200402 12:48:05.848"></status>
</kw>
<msg timestamp="20200402 12:48:05.848" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJuRjBtcTU...</msg>
<status status="PASS" starttime="20200402 12:48:05.342" endtime="20200402 12:48:05.848"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:05.850" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:05.850" endtime="20200402 12:48:05.850"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:05.851" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:05.851" endtime="20200402 12:48:05.851"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:05.851" endtime="20200402 12:48:05.852"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:05.852" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:05.852" endtime="20200402 12:48:05.852"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:05.853" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:09.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:05.853" endtime="20200402 12:48:09.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:09.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:09.292" endtime="20200402 12:48:09.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.295" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmxOUkNuaDlVQWNwNStqeDR2NXBzdm1VSGFUUmpJVnV0bjFvaTI2c1lmeklnM3hhR3ovc3cxbVpXakhPSHhPOWYyNTFvMndxKzFYMWJITGtyQmR1Vlk9IiwibmJmIjoxNTg1ODExODg2LCJleHAiOjE1ODU4MTE5NDYsImlhdCI6MTU4NTgxMTg4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.N3Vb_3-jnsVnbCXV0cNEA4VPChKdqFsx3MtHCKEL58g</msg>
<status status="PASS" starttime="20200402 12:48:09.294" endtime="20200402 12:48:09.295"></status>
</kw>
<msg timestamp="20200402 12:48:09.295" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmxOUkNuaDlVQWNwNStqeDR2NXBzdm1VSGFUUmpJVnV...</msg>
<status status="PASS" starttime="20200402 12:48:05.849" endtime="20200402 12:48:09.295"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:09.297" level="INFO">${Id} = 98470527199681</msg>
<status status="PASS" starttime="20200402 12:48:09.296" endtime="20200402 12:48:09.297"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.297" level="INFO">${IdNumber} = 98470527199681</msg>
<status status="PASS" starttime="20200402 12:48:09.297" endtime="20200402 12:48:09.297"></status>
</kw>
<msg timestamp="20200402 12:48:09.297" level="INFO">${idNum} = 98470527199681</msg>
<status status="PASS" starttime="20200402 12:48:09.296" endtime="20200402 12:48:09.297"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:09.298" level="INFO">${mobile} = 1230876313</msg>
<status status="PASS" starttime="20200402 12:48:09.298" endtime="20200402 12:48:09.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.299" level="INFO">${mobileNo} = 1230876313</msg>
<status status="PASS" starttime="20200402 12:48:09.298" endtime="20200402 12:48:09.299"></status>
</kw>
<msg timestamp="20200402 12:48:09.299" level="INFO">${MobNo} = 1230876313</msg>
<status status="PASS" starttime="20200402 12:48:09.298" endtime="20200402 12:48:09.299"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:09.300" level="INFO">${Emailnum} = 60178</msg>
<status status="PASS" starttime="20200402 12:48:09.300" endtime="20200402 12:48:09.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.301" level="INFO">${enum} = 60178</msg>
<status status="PASS" starttime="20200402 12:48:09.300" endtime="20200402 12:48:09.301"></status>
</kw>
<msg timestamp="20200402 12:48:09.301" level="INFO">${num} = 60178</msg>
<status status="PASS" starttime="20200402 12:48:09.299" endtime="20200402 12:48:09.301"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:09.301" level="INFO">${emailid} = pavan60178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:09.301" endtime="20200402 12:48:09.301"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.302" level="INFO">${email} = pavan60178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:09.302" endtime="20200402 12:48:09.302"></status>
</kw>
<msg timestamp="20200402 12:48:09.302" level="INFO">${emailid} = pavan60178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:09.299" endtime="20200402 12:48:09.302"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:09.304" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:09.304" endtime="20200402 12:48:09.305"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:09.305" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:09.305" endtime="20200402 12:48:09.305"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:09.306" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:09.305" endtime="20200402 12:48:09.306"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:09.307" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:09.306" endtime="20200402 12:48:09.307"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:09.309" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:09.307" endtime="20200402 12:48:09.309"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:09.311" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '98470527199681', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1230876313', 'email': 'pavan60178@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:09.309" endtime="20200402 12:48:09.311"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:09.311" endtime="20200402 12:48:09.312"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:09.312" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmxOUkNuaDlVQWNwNStqeDR2NXBzdm1VSGFU...</msg>
<status status="PASS" starttime="20200402 12:48:09.312" endtime="20200402 12:48:09.313"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:09.313" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:09.313" endtime="20200402 12:48:09.313"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:09.314" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmxOUkNuaDlVQWNwNStqeDR2NXBzdm1VSGFUUmpJVnV0bjFvaTI2c1lmeklnM3hhR3ovc3cxbVpXakhPSHhPOWYyNTFvMndxKzFYMWJITGtyQmR1Vlk9IiwibmJmIjoxNTg1ODExODg2LCJleHAiOjE1ODU4MTE5NDYsImlhdCI6MTU4NTgxMTg4NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.N3Vb_3-jnsVnbCXV0cNEA4VPChKdqFsx3MtHCKEL58g'} 
data={"escrowCompanyId": "001", "idNumber": "98470527199681", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1230876313", "email": "pavan60178@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:09.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:09.313" endtime="20200402 12:48:09.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:09.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:09.598" endtime="20200402 12:48:09.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:09.599" endtime="20200402 12:48:09.600"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:09.600" endtime="20200402 12:48:09.601"></status>
</kw>
<msg timestamp="20200402 12:48:09.602" level="INFO">${sellerid} = f3b2b91d-6b5c-4e02-b2a7-95c119e80abf</msg>
<status status="PASS" starttime="20200402 12:48:09.302" endtime="20200402 12:48:09.602"></status>
</kw>
<msg timestamp="20200402 12:48:09.602" level="INFO">${SellerId} = f3b2b91d-6b5c-4e02-b2a7-95c119e80abf</msg>
<msg timestamp="20200402 12:48:09.602" level="INFO">${idnumber} = 98470527199681</msg>
<status status="PASS" starttime="20200402 12:48:05.849" endtime="20200402 12:48:09.602"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:09.604" level="INFO">${Id} = 63060640221878</msg>
<status status="PASS" starttime="20200402 12:48:09.604" endtime="20200402 12:48:09.604"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:09.605" level="INFO">${IdNumber} = 63060640221878</msg>
<status status="PASS" starttime="20200402 12:48:09.605" endtime="20200402 12:48:09.605"></status>
</kw>
<msg timestamp="20200402 12:48:09.606" level="INFO">${idNum} = 63060640221878</msg>
<status status="PASS" starttime="20200402 12:48:09.603" endtime="20200402 12:48:09.606"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${2}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:09.607" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:09.607" endtime="20200402 12:48:09.608"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:09.609" level="INFO">${typeID} = 2</msg>
<status status="PASS" starttime="20200402 12:48:09.608" endtime="20200402 12:48:09.609"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:09.610" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:09.609" endtime="20200402 12:48:09.610"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:09.612" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'f3b2b91d-6b5c-4e02-b2a7-95c119e80abf', 'idNumber': '63060640221878', 'typeOfID': 2, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:48:09.610" endtime="20200402 12:48:09.612"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:09.613" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJu...</msg>
<status status="PASS" starttime="20200402 12:48:09.612" endtime="20200402 12:48:09.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:09.614" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:09.613" endtime="20200402 12:48:09.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:09.616" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJuRjBtcTUzNk84MWZmM0J1Tm96OGJ4S1RmNEJheVV0czF1azEyUVh2YWdNYUFSMnNIVzY4bi9OU2l6ck09IiwibmJmIjoxNTg1ODExODgzLCJleHAiOjE1ODU4MTE5NDMsImlhdCI6MTU4NTgxMTg4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HCaChcaEVIxjJFEt8oqfXh0tTrCtM7xTd0MS-pSIzIo'} 
data={"escrowCompanyId": "001", "SELLERId": "f3b2b91d-6b5c-4e02-b2a7-95c119e80abf", "idNumber": "63060640221878", "typeOfID": 2, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:48:10.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:09.615" endtime="20200402 12:48:10.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:10.984" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:10.983" endtime="20200402 12:48:10.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:10.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:10.984" endtime="20200402 12:48:10.985"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:10.985" endtime="20200402 12:48:10.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:10.986" endtime="20200402 12:48:10.986"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:09.606" endtime="20200402 12:48:10.986"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:10.988" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:10.988" endtime="20200402 12:48:10.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:10.989" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'f3b2b91d-6b5c-4e02-b2a7-95c119e80abf'}</msg>
<status status="PASS" starttime="20200402 12:48:10.988" endtime="20200402 12:48:10.989"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:10.989" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJu...</msg>
<status status="PASS" starttime="20200402 12:48:10.989" endtime="20200402 12:48:10.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:10.990" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:10.990" endtime="20200402 12:48:10.990"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:10.991" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeDNTdjBJN2EySHBXZm4yeWNtMmlaZ1dYUWJuRjBtcTUzNk84MWZmM0J1Tm96OGJ4S1RmNEJheVV0czF1azEyUVh2YWdNYUFSMnNIVzY4bi9OU2l6ck09IiwibmJmIjoxNTg1ODExODgzLCJleHAiOjE1ODU4MTE5NDMsImlhdCI6MTU4NTgxMTg4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HCaChcaEVIxjJFEt8oqfXh0tTrCtM7xTd0MS-pSIzIo'} 
data={"escrowCompanyId": "001", "sellerID": "f3b2b91d-6b5c-4e02-b2a7-95c119e80abf"} 
json=None</msg>
<msg timestamp="20200402 12:48:11.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:10.990" endtime="20200402 12:48:11.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:11.540" level="INFO">{"escrowCompanyId":"001","sellerId":"f3b2b91d-6b5c-4e02-b2a7-95c119e80abf","idNumber":"63060640221878","typeOfId":2,"mobileCountryCode":"67","mobileNo":"1230876313","email":"pavan60178@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:07","updateDate":"02/04/2020 02:18:08","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:11.540" endtime="20200402 12:48:11.541"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:11.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:11.541" endtime="20200402 12:48:11.542"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:10.987" endtime="20200402 12:48:11.542"></status>
</kw>
<doc>Valid: To Verify response when typeOfId = Passport and kycRequest =0, request is sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:02.338" endtime="20200402 12:48:11.543" critical="yes"></status>
</test>
<test id="s1-t23" name="TC_30 Selle_Details_API TypeOfId equal Others">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:14.548" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:11.547" endtime="20200402 12:48:14.548"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:14.549" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:14.549" endtime="20200402 12:48:14.549"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:14.550" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:14.550" endtime="20200402 12:48:14.550"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:14.550" endtime="20200402 12:48:14.551"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:14.551" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:14.551" endtime="20200402 12:48:14.551"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:14.552" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:15.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:14.551" endtime="20200402 12:48:15.037"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:15.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:15.037" endtime="20200402 12:48:15.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:15.039" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNsT3RyWjFCMGR4TDkxbVQvMXRlMWxPMGsvdUNFR1JlT2VNSzI5L0JHTEdRdWJydk9SQ3B1WGNBV0lhSVU9IiwibmJmIjoxNTg1ODExODkyLCJleHAiOjE1ODU4MTE5NTIsImlhdCI6MTU4NTgxMTg5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lJDfUELCcZsU3wnMjLaCDw47sLdn42dNavUTneqeEPo</msg>
<status status="PASS" starttime="20200402 12:48:15.038" endtime="20200402 12:48:15.039"></status>
</kw>
<msg timestamp="20200402 12:48:15.039" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNsT3RyWjF...</msg>
<status status="PASS" starttime="20200402 12:48:14.548" endtime="20200402 12:48:15.039"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:15.041" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:15.041" endtime="20200402 12:48:15.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:15.042" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:15.042" endtime="20200402 12:48:15.043"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:15.043" endtime="20200402 12:48:15.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:15.044" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:15.044" endtime="20200402 12:48:15.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:15.045" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:16.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:15.044" endtime="20200402 12:48:16.983"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:16.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:16.983" endtime="20200402 12:48:16.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:16.985" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1Y4UVdRM0VOYnZJUWp3WThlWW4raHNoblZISW9ublYvNnpCREdnMklqYTBPOFptWUxEMTRwL0tDNlVXdWE2b3VFNjU0YVlZODVEdkhDVkZia1dxaXc9IiwibmJmIjoxNTg1ODExODk0LCJleHAiOjE1ODU4MTE5NTQsImlhdCI6MTU4NTgxMTg5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1h2UcTU8yum9wxm9NRlZgFuZWY78zUnrqQzz19MPfAM</msg>
<status status="PASS" starttime="20200402 12:48:16.984" endtime="20200402 12:48:16.985"></status>
</kw>
<msg timestamp="20200402 12:48:16.986" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1Y4UVdRM0VOYnZJUWp3WThlWW4raHNoblZISW9ublY...</msg>
<status status="PASS" starttime="20200402 12:48:15.041" endtime="20200402 12:48:16.986"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:16.987" level="INFO">${Id} = 99932519749572</msg>
<status status="PASS" starttime="20200402 12:48:16.987" endtime="20200402 12:48:16.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:16.988" level="INFO">${IdNumber} = 99932519749572</msg>
<status status="PASS" starttime="20200402 12:48:16.988" endtime="20200402 12:48:16.988"></status>
</kw>
<msg timestamp="20200402 12:48:16.989" level="INFO">${idNum} = 99932519749572</msg>
<status status="PASS" starttime="20200402 12:48:16.986" endtime="20200402 12:48:16.989"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:16.990" level="INFO">${mobile} = 3461359166</msg>
<status status="PASS" starttime="20200402 12:48:16.990" endtime="20200402 12:48:16.990"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:16.991" level="INFO">${mobileNo} = 3461359166</msg>
<status status="PASS" starttime="20200402 12:48:16.991" endtime="20200402 12:48:16.991"></status>
</kw>
<msg timestamp="20200402 12:48:16.992" level="INFO">${MobNo} = 3461359166</msg>
<status status="PASS" starttime="20200402 12:48:16.989" endtime="20200402 12:48:16.992"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:16.994" level="INFO">${Emailnum} = 72476</msg>
<status status="PASS" starttime="20200402 12:48:16.993" endtime="20200402 12:48:16.994"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:16.995" level="INFO">${enum} = 72476</msg>
<status status="PASS" starttime="20200402 12:48:16.994" endtime="20200402 12:48:16.995"></status>
</kw>
<msg timestamp="20200402 12:48:16.995" level="INFO">${num} = 72476</msg>
<status status="PASS" starttime="20200402 12:48:16.993" endtime="20200402 12:48:16.995"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:16.996" level="INFO">${emailid} = pavan72476@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:16.995" endtime="20200402 12:48:16.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:16.997" level="INFO">${email} = pavan72476@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:16.996" endtime="20200402 12:48:16.997"></status>
</kw>
<msg timestamp="20200402 12:48:16.997" level="INFO">${emailid} = pavan72476@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:16.992" endtime="20200402 12:48:16.998"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:17.002" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:17.002" endtime="20200402 12:48:17.003"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:17.004" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:17.003" endtime="20200402 12:48:17.004"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:17.005" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:17.004" endtime="20200402 12:48:17.005"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:17.007" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:17.005" endtime="20200402 12:48:17.007"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:17.010" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:17.008" endtime="20200402 12:48:17.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:17.014" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '99932519749572', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3461359166', 'email': 'pavan72476@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:17.010" endtime="20200402 12:48:17.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:17.014" endtime="20200402 12:48:17.015"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:17.016" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1Y4UVdRM0VOYnZJUWp3WThlWW4raHNoblZI...</msg>
<status status="PASS" starttime="20200402 12:48:17.016" endtime="20200402 12:48:17.016"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:17.017" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:17.016" endtime="20200402 12:48:17.017"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:17.018" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1Y4UVdRM0VOYnZJUWp3WThlWW4raHNoblZISW9ublYvNnpCREdnMklqYTBPOFptWUxEMTRwL0tDNlVXdWE2b3VFNjU0YVlZODVEdkhDVkZia1dxaXc9IiwibmJmIjoxNTg1ODExODk0LCJleHAiOjE1ODU4MTE5NTQsImlhdCI6MTU4NTgxMTg5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1h2UcTU8yum9wxm9NRlZgFuZWY78zUnrqQzz19MPfAM'} 
data={"escrowCompanyId": "001", "idNumber": "99932519749572", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3461359166", "email": "pavan72476@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:20.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:17.017" endtime="20200402 12:48:20.501"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:20.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:20.501" endtime="20200402 12:48:20.502"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:20.502" endtime="20200402 12:48:20.503"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:20.503" endtime="20200402 12:48:20.503"></status>
</kw>
<msg timestamp="20200402 12:48:20.504" level="INFO">${sellerid} = e75aa208-a9c8-4769-9a4f-52f45ac6de1b</msg>
<status status="PASS" starttime="20200402 12:48:16.998" endtime="20200402 12:48:20.504"></status>
</kw>
<msg timestamp="20200402 12:48:20.504" level="INFO">${SellerId} = e75aa208-a9c8-4769-9a4f-52f45ac6de1b</msg>
<msg timestamp="20200402 12:48:20.504" level="INFO">${idnumber} = 99932519749572</msg>
<status status="PASS" starttime="20200402 12:48:15.040" endtime="20200402 12:48:20.504"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:20.506" level="INFO">${Id} = 31195341510683</msg>
<status status="PASS" starttime="20200402 12:48:20.506" endtime="20200402 12:48:20.506"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:20.507" level="INFO">${IdNumber} = 31195341510683</msg>
<status status="PASS" starttime="20200402 12:48:20.506" endtime="20200402 12:48:20.507"></status>
</kw>
<msg timestamp="20200402 12:48:20.507" level="INFO">${idNum} = 31195341510683</msg>
<status status="PASS" starttime="20200402 12:48:20.505" endtime="20200402 12:48:20.507"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:20.509" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:20.508" endtime="20200402 12:48:20.509"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:20.509" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:20.509" endtime="20200402 12:48:20.509"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:20.510" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:20.510" endtime="20200402 12:48:20.510"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:20.511" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'e75aa208-a9c8-4769-9a4f-52f45ac6de1b', 'idNumber': '31195341510683', 'typeOfID': 3, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:48:20.510" endtime="20200402 12:48:20.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:20.512" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNs...</msg>
<status status="PASS" starttime="20200402 12:48:20.511" endtime="20200402 12:48:20.512"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:20.512" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:20.512" endtime="20200402 12:48:20.512"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:20.513" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNsT3RyWjFCMGR4TDkxbVQvMXRlMWxPMGsvdUNFR1JlT2VNSzI5L0JHTEdRdWJydk9SQ3B1WGNBV0lhSVU9IiwibmJmIjoxNTg1ODExODkyLCJleHAiOjE1ODU4MTE5NTIsImlhdCI6MTU4NTgxMTg5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lJDfUELCcZsU3wnMjLaCDw47sLdn42dNavUTneqeEPo'} 
data={"escrowCompanyId": "001", "SELLERId": "e75aa208-a9c8-4769-9a4f-52f45ac6de1b", "idNumber": "31195341510683", "typeOfID": 3, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:48:21.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:20.512" endtime="20200402 12:48:21.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:21.945" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:21.944" endtime="20200402 12:48:21.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:21.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:21.945" endtime="20200402 12:48:21.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:21.947" endtime="20200402 12:48:21.947"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:21.947" endtime="20200402 12:48:21.948"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:20.508" endtime="20200402 12:48:21.948"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:21.949" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:21.949" endtime="20200402 12:48:21.950"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:21.950" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'e75aa208-a9c8-4769-9a4f-52f45ac6de1b'}</msg>
<status status="PASS" starttime="20200402 12:48:21.950" endtime="20200402 12:48:21.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:21.951" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNs...</msg>
<status status="PASS" starttime="20200402 12:48:21.951" endtime="20200402 12:48:21.951"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:21.952" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:21.951" endtime="20200402 12:48:21.952"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:21.953" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWFZbTd5amR6aVJVN0lJbjMvUHoxQmNzTmNsT3RyWjFCMGR4TDkxbVQvMXRlMWxPMGsvdUNFR1JlT2VNSzI5L0JHTEdRdWJydk9SQ3B1WGNBV0lhSVU9IiwibmJmIjoxNTg1ODExODkyLCJleHAiOjE1ODU4MTE5NTIsImlhdCI6MTU4NTgxMTg5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lJDfUELCcZsU3wnMjLaCDw47sLdn42dNavUTneqeEPo'} 
data={"escrowCompanyId": "001", "sellerID": "e75aa208-a9c8-4769-9a4f-52f45ac6de1b"} 
json=None</msg>
<msg timestamp="20200402 12:48:22.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:21.952" endtime="20200402 12:48:22.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:22.452" level="INFO">{"escrowCompanyId":"001","sellerId":"e75aa208-a9c8-4769-9a4f-52f45ac6de1b","idNumber":"31195341510683","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3461359166","email":"pavan72476@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:17","updateDate":"02/04/2020 02:18:19","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:22.451" endtime="20200402 12:48:22.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:22.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:22.453" endtime="20200402 12:48:22.453"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:21.948" endtime="20200402 12:48:22.453"></status>
</kw>
<doc>Valid: To Verify response when typeOfId = Others and kycRequest = 0, request is sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:11.544" endtime="20200402 12:48:22.454" critical="yes"></status>
</test>
<test id="s1-t24" name="TC_31 Selle_Details_API Diff TypeOfId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:25.458" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:22.457" endtime="20200402 12:48:25.458"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:25.460" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:25.460" endtime="20200402 12:48:25.460"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:25.461" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:25.460" endtime="20200402 12:48:25.461"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:25.461" endtime="20200402 12:48:25.461"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:25.462" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:25.462" endtime="20200402 12:48:25.462"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:25.463" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:26.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:25.462" endtime="20200402 12:48:26.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.006" endtime="20200402 12:48:26.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.007" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhTRkU5UmxOOHdpV0JKS0twS1V5ZkduSHAxdXZYSWRyLzFRMk1wWU9LMVBDZjExVEhuK050U3JObGFRR3M9IiwibmJmIjoxNTg1ODExOTAzLCJleHAiOjE1ODU4MTE5NjMsImlhdCI6MTU4NTgxMTkwMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7sR861Ny73Lc__RFdmwvZzQsdK96_6qDTLGlj36coHs</msg>
<status status="PASS" starttime="20200402 12:48:26.007" endtime="20200402 12:48:26.007"></status>
</kw>
<msg timestamp="20200402 12:48:26.008" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhTRkU5Umx...</msg>
<status status="PASS" starttime="20200402 12:48:25.459" endtime="20200402 12:48:26.008"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.010" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:26.009" endtime="20200402 12:48:26.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:26.010" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:26.010" endtime="20200402 12:48:26.010"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:26.011" endtime="20200402 12:48:26.011"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:26.011" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:26.011" endtime="20200402 12:48:26.011"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:26.012" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:26.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.012" endtime="20200402 12:48:26.499"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:26.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.499" endtime="20200402 12:48:26.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.501" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3hWazZJbUtQcjV1bnVKYTlOTHMvZE8zRTZhNGJpcDBiYXVkWUxyOVBzVkg1dG5PdDFieHUrQndHdkJCNWp1bkRKWjNEN2V0bHVSOWRuUEZEd24xSjA9IiwibmJmIjoxNTg1ODExOTA0LCJleHAiOjE1ODU4MTE5NjQsImlhdCI6MTU4NTgxMTkwNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._wUncre7AMv6pv6GynEa0X0DXYZicsNBvK-6YBXOm9o</msg>
<status status="PASS" starttime="20200402 12:48:26.501" endtime="20200402 12:48:26.501"></status>
</kw>
<msg timestamp="20200402 12:48:26.502" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3hWazZJbUtQcjV1bnVKYTlOTHMvZE8zRTZhNGJpcDB...</msg>
<status status="PASS" starttime="20200402 12:48:26.009" endtime="20200402 12:48:26.502"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:26.503" level="INFO">${Id} = 96504689875314</msg>
<status status="PASS" starttime="20200402 12:48:26.503" endtime="20200402 12:48:26.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.504" level="INFO">${IdNumber} = 96504689875314</msg>
<status status="PASS" starttime="20200402 12:48:26.503" endtime="20200402 12:48:26.504"></status>
</kw>
<msg timestamp="20200402 12:48:26.504" level="INFO">${idNum} = 96504689875314</msg>
<status status="PASS" starttime="20200402 12:48:26.502" endtime="20200402 12:48:26.504"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:26.506" level="INFO">${mobile} = 9074190210</msg>
<status status="PASS" starttime="20200402 12:48:26.505" endtime="20200402 12:48:26.506"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.506" level="INFO">${mobileNo} = 9074190210</msg>
<status status="PASS" starttime="20200402 12:48:26.506" endtime="20200402 12:48:26.507"></status>
</kw>
<msg timestamp="20200402 12:48:26.507" level="INFO">${MobNo} = 9074190210</msg>
<status status="PASS" starttime="20200402 12:48:26.505" endtime="20200402 12:48:26.507"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:26.509" level="INFO">${Emailnum} = 79055</msg>
<status status="PASS" starttime="20200402 12:48:26.508" endtime="20200402 12:48:26.509"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.510" level="INFO">${enum} = 79055</msg>
<status status="PASS" starttime="20200402 12:48:26.509" endtime="20200402 12:48:26.510"></status>
</kw>
<msg timestamp="20200402 12:48:26.510" level="INFO">${num} = 79055</msg>
<status status="PASS" starttime="20200402 12:48:26.508" endtime="20200402 12:48:26.510"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:26.511" level="INFO">${emailid} = pavan79055@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:26.510" endtime="20200402 12:48:26.511"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.511" level="INFO">${email} = pavan79055@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:26.511" endtime="20200402 12:48:26.511"></status>
</kw>
<msg timestamp="20200402 12:48:26.512" level="INFO">${emailid} = pavan79055@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:26.507" endtime="20200402 12:48:26.512"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:26.516" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:26.515" endtime="20200402 12:48:26.516"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:26.517" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:26.516" endtime="20200402 12:48:26.517"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:26.518" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:26.517" endtime="20200402 12:48:26.518"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:26.520" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:26.518" endtime="20200402 12:48:26.521"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:26.523" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:26.521" endtime="20200402 12:48:26.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:26.528" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '96504689875314', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9074190210', 'email': 'pavan79055@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:26.524" endtime="20200402 12:48:26.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:26.528" endtime="20200402 12:48:26.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:26.530" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3hWazZJbUtQcjV1bnVKYTlOTHMvZE8zRTZh...</msg>
<status status="PASS" starttime="20200402 12:48:26.529" endtime="20200402 12:48:26.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:26.531" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:26.530" endtime="20200402 12:48:26.531"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:26.532" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3hWazZJbUtQcjV1bnVKYTlOTHMvZE8zRTZhNGJpcDBiYXVkWUxyOVBzVkg1dG5PdDFieHUrQndHdkJCNWp1bkRKWjNEN2V0bHVSOWRuUEZEd24xSjA9IiwibmJmIjoxNTg1ODExOTA0LCJleHAiOjE1ODU4MTE5NjQsImlhdCI6MTU4NTgxMTkwNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._wUncre7AMv6pv6GynEa0X0DXYZicsNBvK-6YBXOm9o'} 
data={"escrowCompanyId": "001", "idNumber": "96504689875314", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9074190210", "email": "pavan79055@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:26.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.531" endtime="20200402 12:48:26.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:26.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.781" endtime="20200402 12:48:26.781"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:26.782" endtime="20200402 12:48:26.782"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:26.783" endtime="20200402 12:48:26.783"></status>
</kw>
<msg timestamp="20200402 12:48:26.784" level="INFO">${sellerid} = 1dbb5e40-9fd5-47d7-8123-8d0b66e63599</msg>
<status status="PASS" starttime="20200402 12:48:26.512" endtime="20200402 12:48:26.784"></status>
</kw>
<msg timestamp="20200402 12:48:26.784" level="INFO">${SellerId} = 1dbb5e40-9fd5-47d7-8123-8d0b66e63599</msg>
<msg timestamp="20200402 12:48:26.784" level="INFO">${idnumber} = 96504689875314</msg>
<status status="PASS" starttime="20200402 12:48:26.009" endtime="20200402 12:48:26.784"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:26.786" level="INFO">${Id} = 78892389182243</msg>
<status status="PASS" starttime="20200402 12:48:26.786" endtime="20200402 12:48:26.787"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:26.787" level="INFO">${IdNumber} = 78892389182243</msg>
<status status="PASS" starttime="20200402 12:48:26.787" endtime="20200402 12:48:26.787"></status>
</kw>
<msg timestamp="20200402 12:48:26.788" level="INFO">${idNum} = 78892389182243</msg>
<status status="PASS" starttime="20200402 12:48:26.785" endtime="20200402 12:48:26.788"></status>
</kw>
<kw name="UpdateSellerDetails" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:26.790" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:26.789" endtime="20200402 12:48:26.790"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:26.791" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:48:26.791" endtime="20200402 12:48:26.791"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:26.793" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:26.792" endtime="20200402 12:48:26.793"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:26.794" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '1dbb5e40-9fd5-47d7-8123-8d0b66e63599', 'idNumber': '78892389182243', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:48:26.793" endtime="20200402 12:48:26.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:26.795" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhT...</msg>
<status status="PASS" starttime="20200402 12:48:26.795" endtime="20200402 12:48:26.795"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:26.796" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:26.796" endtime="20200402 12:48:26.796"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:26.797" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhTRkU5UmxOOHdpV0JKS0twS1V5ZkduSHAxdXZYSWRyLzFRMk1wWU9LMVBDZjExVEhuK050U3JObGFRR3M9IiwibmJmIjoxNTg1ODExOTAzLCJleHAiOjE1ODU4MTE5NjMsImlhdCI6MTU4NTgxMTkwMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7sR861Ny73Lc__RFdmwvZzQsdK96_6qDTLGlj36coHs'} 
data={"escrowCompanyId": "001", "SELLERId": "1dbb5e40-9fd5-47d7-8123-8d0b66e63599", "idNumber": "78892389182243", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:48:27.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:26.796" endtime="20200402 12:48:27.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:27.774" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:27.773" endtime="20200402 12:48:27.774"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:27.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:27.775" endtime="20200402 12:48:27.775"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:27.775" endtime="20200402 12:48:27.776"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:27.776" endtime="20200402 12:48:27.777"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:26.788" endtime="20200402 12:48:27.777"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:27.778" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:27.778" endtime="20200402 12:48:27.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:27.779" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '1dbb5e40-9fd5-47d7-8123-8d0b66e63599'}</msg>
<status status="PASS" starttime="20200402 12:48:27.779" endtime="20200402 12:48:27.779"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:27.780" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhT...</msg>
<status status="PASS" starttime="20200402 12:48:27.779" endtime="20200402 12:48:27.780"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:27.780" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:27.780" endtime="20200402 12:48:27.781"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:27.781" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeUswc3I3R3BjSVBjeC9YT1drbjd2ZVNweXhTRkU5UmxOOHdpV0JKS0twS1V5ZkduSHAxdXZYSWRyLzFRMk1wWU9LMVBDZjExVEhuK050U3JObGFRR3M9IiwibmJmIjoxNTg1ODExOTAzLCJleHAiOjE1ODU4MTE5NjMsImlhdCI6MTU4NTgxMTkwMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7sR861Ny73Lc__RFdmwvZzQsdK96_6qDTLGlj36coHs'} 
data={"escrowCompanyId": "001", "sellerID": "1dbb5e40-9fd5-47d7-8123-8d0b66e63599"} 
json=None</msg>
<msg timestamp="20200402 12:48:29.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:27.781" endtime="20200402 12:48:29.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:29.954" level="INFO">{"escrowCompanyId":"001","sellerId":"1dbb5e40-9fd5-47d7-8123-8d0b66e63599","idNumber":"78892389182243","typeOfId":1,"mobileCountryCode":"67","mobileNo":"9074190210","email":"pavan79055@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:24","updateDate":"02/04/2020 02:18:25","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:29.953" endtime="20200402 12:48:29.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:29.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:29.955" endtime="20200402 12:48:29.955"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:27.777" endtime="20200402 12:48:29.955"></status>
</kw>
<doc>Valid: To Verify response with duplicate "idNumber" but typeOfId is different from orignal, KYCRequest = 0 and request is sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:22.456" endtime="20200402 12:48:29.956" critical="yes"></status>
</test>
<test id="s1-t25" name="TC_35 Selle_Details_API Invalid typeOfId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:32.960" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:29.959" endtime="20200402 12:48:32.960"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:32.961" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:32.961" endtime="20200402 12:48:32.962"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:32.963" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:32.962" endtime="20200402 12:48:32.963"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:32.963" endtime="20200402 12:48:32.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:32.964" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:32.963" endtime="20200402 12:48:32.964"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:32.964" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:33.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:32.964" endtime="20200402 12:48:33.159"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:33.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.160" endtime="20200402 12:48:33.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.161" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIyVUVjc3B4TzZkbGNFMlJiZlZucS9DOVZUb0FqYjJDL2dlWHNUdTFJdmU1WnRZUVVrT0t3NlFSMm5GSU09IiwibmJmIjoxNTg1ODExOTEwLCJleHAiOjE1ODU4MTE5NzAsImlhdCI6MTU4NTgxMTkxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2XD6fTYB9RcKhu3BsRyFGkDkQdK6kq3uM2eDt0VzTO4</msg>
<status status="PASS" starttime="20200402 12:48:33.161" endtime="20200402 12:48:33.162"></status>
</kw>
<msg timestamp="20200402 12:48:33.162" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIyVUVjc3B...</msg>
<status status="PASS" starttime="20200402 12:48:32.961" endtime="20200402 12:48:33.162"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:33.164" level="INFO">${Id} = 85444623283154</msg>
<status status="PASS" starttime="20200402 12:48:33.164" endtime="20200402 12:48:33.164"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.165" level="INFO">${IdNumber} = 85444623283154</msg>
<status status="PASS" starttime="20200402 12:48:33.165" endtime="20200402 12:48:33.165"></status>
</kw>
<msg timestamp="20200402 12:48:33.166" level="INFO">${idNum} = 85444623283154</msg>
<status status="PASS" starttime="20200402 12:48:33.163" endtime="20200402 12:48:33.166"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.167" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:33.167" endtime="20200402 12:48:33.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:33.168" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:33.168" endtime="20200402 12:48:33.168"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:33.169" endtime="20200402 12:48:33.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:33.170" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:33.170" endtime="20200402 12:48:33.170"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:33.171" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:33.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.171" endtime="20200402 12:48:33.674"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:33.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.675" endtime="20200402 12:48:33.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.676" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODliUUVjYzR5bVBKYk5NWUdOaml5RXBueXhsRFJreWFUMEtYaFdXdTZMU0paN2I4L0lvMGxjNThPK0o1QXptQjdoQTFNL0VlUlZYUnp1YTBPd3NvbWc9IiwibmJmIjoxNTg1ODExOTExLCJleHAiOjE1ODU4MTE5NzEsImlhdCI6MTU4NTgxMTkxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.-_VqQfKZP_yUqKG72ejGh12gFGOjmF_6wdxwYWWg0u8</msg>
<status status="PASS" starttime="20200402 12:48:33.675" endtime="20200402 12:48:33.676"></status>
</kw>
<msg timestamp="20200402 12:48:33.676" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODliUUVjYzR5bVBKYk5NWUdOaml5RXBueXhsRFJreWF...</msg>
<status status="PASS" starttime="20200402 12:48:33.167" endtime="20200402 12:48:33.676"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:33.677" level="INFO">${Id} = 90715296733218</msg>
<status status="PASS" starttime="20200402 12:48:33.677" endtime="20200402 12:48:33.677"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.677" level="INFO">${IdNumber} = 90715296733218</msg>
<status status="PASS" starttime="20200402 12:48:33.677" endtime="20200402 12:48:33.678"></status>
</kw>
<msg timestamp="20200402 12:48:33.678" level="INFO">${idNum} = 90715296733218</msg>
<status status="PASS" starttime="20200402 12:48:33.676" endtime="20200402 12:48:33.678"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:33.679" level="INFO">${mobile} = 2906674933</msg>
<status status="PASS" starttime="20200402 12:48:33.678" endtime="20200402 12:48:33.679"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.679" level="INFO">${mobileNo} = 2906674933</msg>
<status status="PASS" starttime="20200402 12:48:33.679" endtime="20200402 12:48:33.680"></status>
</kw>
<msg timestamp="20200402 12:48:33.680" level="INFO">${MobNo} = 2906674933</msg>
<status status="PASS" starttime="20200402 12:48:33.678" endtime="20200402 12:48:33.680"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:33.681" level="INFO">${Emailnum} = 54566</msg>
<status status="PASS" starttime="20200402 12:48:33.681" endtime="20200402 12:48:33.681"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.682" level="INFO">${enum} = 54566</msg>
<status status="PASS" starttime="20200402 12:48:33.681" endtime="20200402 12:48:33.682"></status>
</kw>
<msg timestamp="20200402 12:48:33.682" level="INFO">${num} = 54566</msg>
<status status="PASS" starttime="20200402 12:48:33.680" endtime="20200402 12:48:33.682"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:33.683" level="INFO">${emailid} = pavan54566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.683" endtime="20200402 12:48:33.683"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.684" level="INFO">${email} = pavan54566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.683" endtime="20200402 12:48:33.684"></status>
</kw>
<msg timestamp="20200402 12:48:33.684" level="INFO">${emailid} = pavan54566@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.680" endtime="20200402 12:48:33.684"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:33.687" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:33.687" endtime="20200402 12:48:33.687"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:33.688" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:33.687" endtime="20200402 12:48:33.688"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:33.688" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:33.688" endtime="20200402 12:48:33.688"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:33.690" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:33.689" endtime="20200402 12:48:33.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:33.691" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:33.690" endtime="20200402 12:48:33.691"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:33.694" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '90715296733218', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2906674933', 'email': 'pavan54566@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:33.692" endtime="20200402 12:48:33.694"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:33.694" endtime="20200402 12:48:33.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:33.696" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODliUUVjYzR5bVBKYk5NWUdOaml5RXBueXhs...</msg>
<status status="PASS" starttime="20200402 12:48:33.695" endtime="20200402 12:48:33.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:33.696" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:33.696" endtime="20200402 12:48:33.696"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:33.697" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QODliUUVjYzR5bVBKYk5NWUdOaml5RXBueXhsRFJreWFUMEtYaFdXdTZMU0paN2I4L0lvMGxjNThPK0o1QXptQjdoQTFNL0VlUlZYUnp1YTBPd3NvbWc9IiwibmJmIjoxNTg1ODExOTExLCJleHAiOjE1ODU4MTE5NzEsImlhdCI6MTU4NTgxMTkxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.-_VqQfKZP_yUqKG72ejGh12gFGOjmF_6wdxwYWWg0u8'} 
data={"escrowCompanyId": "001", "idNumber": "90715296733218", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2906674933", "email": "pavan54566@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:33.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.697" endtime="20200402 12:48:33.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:33.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.921" endtime="20200402 12:48:33.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:33.921" endtime="20200402 12:48:33.922"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:33.922" endtime="20200402 12:48:33.923"></status>
</kw>
<msg timestamp="20200402 12:48:33.923" level="INFO">${sellerid} = 085bcc90-f841-4ed1-81a9-10f0b60012fc</msg>
<status status="PASS" starttime="20200402 12:48:33.685" endtime="20200402 12:48:33.923"></status>
</kw>
<msg timestamp="20200402 12:48:33.923" level="INFO">${SellerId} = 085bcc90-f841-4ed1-81a9-10f0b60012fc</msg>
<msg timestamp="20200402 12:48:33.923" level="INFO">${idnumber} = 90715296733218</msg>
<status status="PASS" starttime="20200402 12:48:33.166" endtime="20200402 12:48:33.923"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:33.925" level="INFO">${Emailnum} = 92913</msg>
<status status="PASS" starttime="20200402 12:48:33.925" endtime="20200402 12:48:33.925"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.926" level="INFO">${enum} = 92913</msg>
<status status="PASS" starttime="20200402 12:48:33.926" endtime="20200402 12:48:33.926"></status>
</kw>
<msg timestamp="20200402 12:48:33.926" level="INFO">${num} = 92913</msg>
<status status="PASS" starttime="20200402 12:48:33.924" endtime="20200402 12:48:33.926"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:33.927" level="INFO">${emailid} = pavan92913@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.927" endtime="20200402 12:48:33.927"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:33.927" level="INFO">${email} = pavan92913@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.927" endtime="20200402 12:48:33.928"></status>
</kw>
<msg timestamp="20200402 12:48:33.928" level="INFO">${emailid} = pavan92913@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:33.924" endtime="20200402 12:48:33.928"></status>
</kw>
<kw name="UpdateSellerDetails Valid data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${44}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:33.930" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:33.930" endtime="20200402 12:48:33.930"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:33.931" level="INFO">${typeID} = 44</msg>
<status status="PASS" starttime="20200402 12:48:33.930" endtime="20200402 12:48:33.931"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:33.931" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:48:33.931" endtime="20200402 12:48:33.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:33.933" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '085bcc90-f841-4ed1-81a9-10f0b60012fc', 'idNumber': '85444623283154', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '08/03/1992', 'othe...</msg>
<status status="PASS" starttime="20200402 12:48:33.932" endtime="20200402 12:48:33.933"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:33.934" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIy...</msg>
<status status="PASS" starttime="20200402 12:48:33.933" endtime="20200402 12:48:33.934"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:33.935" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:33.934" endtime="20200402 12:48:33.935"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:33.936" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIyVUVjc3B4TzZkbGNFMlJiZlZucS9DOVZUb0FqYjJDL2dlWHNUdTFJdmU1WnRZUVVrT0t3NlFSMm5GSU09IiwibmJmIjoxNTg1ODExOTEwLCJleHAiOjE1ODU4MTE5NzAsImlhdCI6MTU4NTgxMTkxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2XD6fTYB9RcKhu3BsRyFGkDkQdK6kq3uM2eDt0VzTO4'} 
data={"escrowCompanyId": "001", "SELLERId": "085bcc90-f841-4ed1-81a9-10f0b60012fc", "idNumber": "85444623283154", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "08/03/1992", "otherVerification": "AB12311678919", "typeOfID": 44, "kycRequest": 1, "email": "pavan92913@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:48:34.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:33.935" endtime="20200402 12:48:34.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:34.412" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:48:34.411" endtime="20200402 12:48:34.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:34.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:34.413" endtime="20200402 12:48:34.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:34.413" endtime="20200402 12:48:34.414"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:34.414" endtime="20200402 12:48:34.415"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:33.928" endtime="20200402 12:48:34.415"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:34.416" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:34.416" endtime="20200402 12:48:34.416"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:34.417" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '085bcc90-f841-4ed1-81a9-10f0b60012fc'}</msg>
<status status="PASS" starttime="20200402 12:48:34.417" endtime="20200402 12:48:34.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:34.418" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIy...</msg>
<status status="PASS" starttime="20200402 12:48:34.417" endtime="20200402 12:48:34.418"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:34.418" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:34.418" endtime="20200402 12:48:34.419"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:34.419" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2pMVTg5alV2M3l2Z1ZFNGtYcE1TSmtKckIyVUVjc3B4TzZkbGNFMlJiZlZucS9DOVZUb0FqYjJDL2dlWHNUdTFJdmU1WnRZUVVrT0t3NlFSMm5GSU09IiwibmJmIjoxNTg1ODExOTEwLCJleHAiOjE1ODU4MTE5NzAsImlhdCI6MTU4NTgxMTkxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2XD6fTYB9RcKhu3BsRyFGkDkQdK6kq3uM2eDt0VzTO4'} 
data={"escrowCompanyId": "001", "sellerID": "085bcc90-f841-4ed1-81a9-10f0b60012fc"} 
json=None</msg>
<msg timestamp="20200402 12:48:34.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:34.419" endtime="20200402 12:48:34.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:34.608" level="INFO">{"escrowCompanyId":"001","sellerId":"085bcc90-f841-4ed1-81a9-10f0b60012fc","idNumber":"90715296733218","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2906674933","email":"pavan54566@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:31","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:34.607" endtime="20200402 12:48:34.608"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:34.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:34.608" endtime="20200402 12:48:34.609"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:34.415" endtime="20200402 12:48:34.609"></status>
</kw>
<doc>Invalid: To Verify response if we enter invalid typeOfId and request is sent with all mandatory fields (KYCRequest’ = 1 and Valid Id parameter)</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:29.957" endtime="20200402 12:48:34.610" critical="yes"></status>
</test>
<test id="s1-t26" name="TC_36 Selle_Details_API Empty typeOfId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:37.615" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:34.614" endtime="20200402 12:48:37.615"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:37.617" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:37.616" endtime="20200402 12:48:37.617"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:37.618" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:37.617" endtime="20200402 12:48:37.618"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:37.618" endtime="20200402 12:48:37.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:37.620" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:37.619" endtime="20200402 12:48:37.620"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:37.621" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:37.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:37.620" endtime="20200402 12:48:37.827"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:37.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:37.827" endtime="20200402 12:48:37.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:37.828" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlCTGd6WWtjSEpycGRBVDVpaWNzclBYN0NXbHMzdTE0YUxZSWpLMko4cHovYmY5eUUrbnFkeE54b3NLK2M9IiwibmJmIjoxNTg1ODExOTE1LCJleHAiOjE1ODU4MTE5NzUsImlhdCI6MTU4NTgxMTkxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.m9VbCZC_xPBEBsObvM0A_RG-AsPsO09qo8NvPATuIyM</msg>
<status status="PASS" starttime="20200402 12:48:37.828" endtime="20200402 12:48:37.828"></status>
</kw>
<msg timestamp="20200402 12:48:37.828" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlCTGd6WWt...</msg>
<status status="PASS" starttime="20200402 12:48:37.616" endtime="20200402 12:48:37.829"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:37.830" level="INFO">${Id} = 04564709477301</msg>
<status status="PASS" starttime="20200402 12:48:37.830" endtime="20200402 12:48:37.830"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:37.831" level="INFO">${IdNumber} = 04564709477301</msg>
<status status="PASS" starttime="20200402 12:48:37.830" endtime="20200402 12:48:37.831"></status>
</kw>
<msg timestamp="20200402 12:48:37.831" level="INFO">${idNum} = 04564709477301</msg>
<status status="PASS" starttime="20200402 12:48:37.829" endtime="20200402 12:48:37.831"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:37.833" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:37.832" endtime="20200402 12:48:37.833"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:37.834" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:37.833" endtime="20200402 12:48:37.834"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:37.834" endtime="20200402 12:48:37.834"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:37.835" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:37.834" endtime="20200402 12:48:37.835"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:37.835" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:39.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:37.835" endtime="20200402 12:48:39.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:39.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:39.059" endtime="20200402 12:48:39.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:39.061" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhzVE80bmxoZENQbk5Gdko3Y1ovRjBYRnRyVyt3SU1XRmJTK1dGaC93RVJOVW5GbzV4MXRVSFBFc3hkcVBPTjMvUmxNMDh5MXZmd2NsZDRQRUtsRTA9IiwibmJmIjoxNTg1ODExOTE2LCJleHAiOjE1ODU4MTE5NzYsImlhdCI6MTU4NTgxMTkxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.weC0SRTx0FDqIcw9vUjMO1-K_YkHTs4Z5r6KLwDXH3o</msg>
<status status="PASS" starttime="20200402 12:48:39.060" endtime="20200402 12:48:39.061"></status>
</kw>
<msg timestamp="20200402 12:48:39.061" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhzVE80bmxoZENQbk5Gdko3Y1ovRjBYRnRyVyt3SU1...</msg>
<status status="PASS" starttime="20200402 12:48:37.832" endtime="20200402 12:48:39.061"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:39.062" level="INFO">${Id} = 12124719178781</msg>
<status status="PASS" starttime="20200402 12:48:39.062" endtime="20200402 12:48:39.062"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:39.063" level="INFO">${IdNumber} = 12124719178781</msg>
<status status="PASS" starttime="20200402 12:48:39.063" endtime="20200402 12:48:39.063"></status>
</kw>
<msg timestamp="20200402 12:48:39.064" level="INFO">${idNum} = 12124719178781</msg>
<status status="PASS" starttime="20200402 12:48:39.061" endtime="20200402 12:48:39.064"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:39.066" level="INFO">${mobile} = 1173782928</msg>
<status status="PASS" starttime="20200402 12:48:39.065" endtime="20200402 12:48:39.066"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:39.067" level="INFO">${mobileNo} = 1173782928</msg>
<status status="PASS" starttime="20200402 12:48:39.066" endtime="20200402 12:48:39.067"></status>
</kw>
<msg timestamp="20200402 12:48:39.067" level="INFO">${MobNo} = 1173782928</msg>
<status status="PASS" starttime="20200402 12:48:39.064" endtime="20200402 12:48:39.067"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:39.070" level="INFO">${Emailnum} = 38998</msg>
<status status="PASS" starttime="20200402 12:48:39.069" endtime="20200402 12:48:39.070"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:39.072" level="INFO">${enum} = 38998</msg>
<status status="PASS" starttime="20200402 12:48:39.071" endtime="20200402 12:48:39.072"></status>
</kw>
<msg timestamp="20200402 12:48:39.072" level="INFO">${num} = 38998</msg>
<status status="PASS" starttime="20200402 12:48:39.068" endtime="20200402 12:48:39.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:39.074" level="INFO">${emailid} = pavan38998@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:39.073" endtime="20200402 12:48:39.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:39.075" level="INFO">${email} = pavan38998@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:39.074" endtime="20200402 12:48:39.075"></status>
</kw>
<msg timestamp="20200402 12:48:39.075" level="INFO">${emailid} = pavan38998@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:39.067" endtime="20200402 12:48:39.075"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:39.081" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:39.081" endtime="20200402 12:48:39.082"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:39.082" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:39.082" endtime="20200402 12:48:39.083"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:39.083" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:39.083" endtime="20200402 12:48:39.083"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:39.085" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:39.083" endtime="20200402 12:48:39.085"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:39.088" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:39.085" endtime="20200402 12:48:39.088"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:39.093" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '12124719178781', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1173782928', 'email': 'pavan38998@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:39.089" endtime="20200402 12:48:39.093"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:39.094" endtime="20200402 12:48:39.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:39.096" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhzVE80bmxoZENQbk5Gdko3Y1ovRjBYRnRy...</msg>
<status status="PASS" starttime="20200402 12:48:39.095" endtime="20200402 12:48:39.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:39.096" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:39.096" endtime="20200402 12:48:39.096"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:39.097" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhzVE80bmxoZENQbk5Gdko3Y1ovRjBYRnRyVyt3SU1XRmJTK1dGaC93RVJOVW5GbzV4MXRVSFBFc3hkcVBPTjMvUmxNMDh5MXZmd2NsZDRQRUtsRTA9IiwibmJmIjoxNTg1ODExOTE2LCJleHAiOjE1ODU4MTE5NzYsImlhdCI6MTU4NTgxMTkxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.weC0SRTx0FDqIcw9vUjMO1-K_YkHTs4Z5r6KLwDXH3o'} 
data={"escrowCompanyId": "001", "idNumber": "12124719178781", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1173782928", "email": "pavan38998@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:40.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:39.097" endtime="20200402 12:48:40.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:40.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:40.454" endtime="20200402 12:48:40.455"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:40.455" endtime="20200402 12:48:40.456"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:40.457" endtime="20200402 12:48:40.458"></status>
</kw>
<msg timestamp="20200402 12:48:40.458" level="INFO">${sellerid} = 233cd199-f197-4ea1-93b9-9f33d2e060ce</msg>
<status status="PASS" starttime="20200402 12:48:39.076" endtime="20200402 12:48:40.459"></status>
</kw>
<msg timestamp="20200402 12:48:40.459" level="INFO">${SellerId} = 233cd199-f197-4ea1-93b9-9f33d2e060ce</msg>
<msg timestamp="20200402 12:48:40.459" level="INFO">${idnumber} = 12124719178781</msg>
<status status="PASS" starttime="20200402 12:48:37.832" endtime="20200402 12:48:40.459"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:40.462" level="INFO">${Emailnum} = 03832</msg>
<status status="PASS" starttime="20200402 12:48:40.461" endtime="20200402 12:48:40.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:40.463" level="INFO">${enum} = 03832</msg>
<status status="PASS" starttime="20200402 12:48:40.463" endtime="20200402 12:48:40.463"></status>
</kw>
<msg timestamp="20200402 12:48:40.464" level="INFO">${num} = 03832</msg>
<status status="PASS" starttime="20200402 12:48:40.461" endtime="20200402 12:48:40.464"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:40.465" level="INFO">${emailid} = pavan03832@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:40.464" endtime="20200402 12:48:40.465"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:40.466" level="INFO">${email} = pavan03832@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:40.465" endtime="20200402 12:48:40.466"></status>
</kw>
<msg timestamp="20200402 12:48:40.466" level="INFO">${emailid} = pavan03832@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:40.460" endtime="20200402 12:48:40.467"></status>
</kw>
<kw name="UpdateSellerDetails Empty TypeOfId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${EMPTY}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:40.470" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:40.469" endtime="20200402 12:48:40.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${typeOfID}"=="${EMPTY}"</arg>
<arg>${null}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:40.472" level="INFO">${typeID} = None</msg>
<status status="PASS" starttime="20200402 12:48:40.471" endtime="20200402 12:48:40.472"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:40.473" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:48:40.472" endtime="20200402 12:48:40.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:40.476" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '233cd199-f197-4ea1-93b9-9f33d2e060ce', 'idNumber': '04564709477301', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '08/03/1992', 'othe...</msg>
<status status="PASS" starttime="20200402 12:48:40.473" endtime="20200402 12:48:40.476"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:40.477" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlC...</msg>
<status status="PASS" starttime="20200402 12:48:40.476" endtime="20200402 12:48:40.477"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:40.479" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:40.478" endtime="20200402 12:48:40.479"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:40.480" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlCTGd6WWtjSEpycGRBVDVpaWNzclBYN0NXbHMzdTE0YUxZSWpLMko4cHovYmY5eUUrbnFkeE54b3NLK2M9IiwibmJmIjoxNTg1ODExOTE1LCJleHAiOjE1ODU4MTE5NzUsImlhdCI6MTU4NTgxMTkxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.m9VbCZC_xPBEBsObvM0A_RG-AsPsO09qo8NvPATuIyM'} 
data={"escrowCompanyId": "001", "SELLERId": "233cd199-f197-4ea1-93b9-9f33d2e060ce", "idNumber": "04564709477301", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "08/03/1992", "otherVerification": "AB12311678919", "typeOfID": null, "kycRequest": 1, "email": "pavan03832@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:48:42.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:40.479" endtime="20200402 12:48:42.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:42.704" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:48:42.704" endtime="20200402 12:48:42.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:42.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:42.705" endtime="20200402 12:48:42.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:42.706" endtime="20200402 12:48:42.707"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:42.707" endtime="20200402 12:48:42.708"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:40.467" endtime="20200402 12:48:42.708"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:42.710" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:42.710" endtime="20200402 12:48:42.711"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:42.712" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '233cd199-f197-4ea1-93b9-9f33d2e060ce'}</msg>
<status status="PASS" starttime="20200402 12:48:42.711" endtime="20200402 12:48:42.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:42.713" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlC...</msg>
<status status="PASS" starttime="20200402 12:48:42.713" endtime="20200402 12:48:42.713"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:42.714" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:42.713" endtime="20200402 12:48:42.714"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:42.715" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNJeFpIUzAyQ3dHUGRRaitObXlSWVRDRWlCTGd6WWtjSEpycGRBVDVpaWNzclBYN0NXbHMzdTE0YUxZSWpLMko4cHovYmY5eUUrbnFkeE54b3NLK2M9IiwibmJmIjoxNTg1ODExOTE1LCJleHAiOjE1ODU4MTE5NzUsImlhdCI6MTU4NTgxMTkxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.m9VbCZC_xPBEBsObvM0A_RG-AsPsO09qo8NvPATuIyM'} 
data={"escrowCompanyId": "001", "sellerID": "233cd199-f197-4ea1-93b9-9f33d2e060ce"} 
json=None</msg>
<msg timestamp="20200402 12:48:43.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:42.714" endtime="20200402 12:48:43.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:43.214" level="INFO">{"escrowCompanyId":"001","sellerId":"233cd199-f197-4ea1-93b9-9f33d2e060ce","idNumber":"12124719178781","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1173782928","email":"pavan38998@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:37","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:43.214" endtime="20200402 12:48:43.215"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:43.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:43.215" endtime="20200402 12:48:43.216"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:42.709" endtime="20200402 12:48:43.216"></status>
</kw>
<doc>Invalid: To Verify response if we enter invalid typeOfId and request is sent with all mandatory fields (KYCRequest’ = 1 and Valid Id parameter)</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:34.612" endtime="20200402 12:48:43.217" critical="yes"></status>
</test>
<test id="s1-t27" name="TC_37 Selle_Details_API mobilecountrycode empty">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:46.222" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:43.220" endtime="20200402 12:48:46.222"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:46.224" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:46.223" endtime="20200402 12:48:46.224"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:46.225" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:46.225" endtime="20200402 12:48:46.225"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:46.225" endtime="20200402 12:48:46.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:46.226" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:46.226" endtime="20200402 12:48:46.226"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:46.227" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:46.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:46.227" endtime="20200402 12:48:46.520"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:46.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:46.520" endtime="20200402 12:48:46.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:46.522" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1akI3V2FvSk84c214YXFYTTFrRkVGMXdrUGVKcDhVYXlpVDF0Q0R2NlBrRlJIOWFLS0UrbWhDTUVMSkE9IiwibmJmIjoxNTg1ODExOTIzLCJleHAiOjE1ODU4MTE5ODMsImlhdCI6MTU4NTgxMTkyMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.02rhsMUVK6xZrhFxzkoHIohqR9utmzFexTlR9nu2KKU</msg>
<status status="PASS" starttime="20200402 12:48:46.522" endtime="20200402 12:48:46.523"></status>
</kw>
<msg timestamp="20200402 12:48:46.523" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1akI3V2F...</msg>
<status status="PASS" starttime="20200402 12:48:46.223" endtime="20200402 12:48:46.523"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:46.526" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:46.525" endtime="20200402 12:48:46.527"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:46.528" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:46.527" endtime="20200402 12:48:46.528"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:46.528" endtime="20200402 12:48:46.529"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:46.530" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:46.529" endtime="20200402 12:48:46.530"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:46.531" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:48.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:46.530" endtime="20200402 12:48:48.544"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:48.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:48.545" endtime="20200402 12:48:48.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:48.547" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOTRZVWlhakF1dnl1amN3ZDViZklQMGxDaGxyMC9aUjNTZ091RkZralZzV1A1UjlGQm9TQjNUUXJDbFRIbzNBbU00dXJCdng3d0RxZXlzcnI5U3lRSDg9IiwibmJmIjoxNTg1ODExOTI2LCJleHAiOjE1ODU4MTE5ODYsImlhdCI6MTU4NTgxMTkyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.UA2ysceyXtavsUQKSMKHPRLRHeB0TCRVK41P-HHZxKY</msg>
<status status="PASS" starttime="20200402 12:48:48.546" endtime="20200402 12:48:48.547"></status>
</kw>
<msg timestamp="20200402 12:48:48.547" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOTRZVWlhakF1dnl1amN3ZDViZklQMGxDaGxyMC9aUjN...</msg>
<status status="PASS" starttime="20200402 12:48:46.525" endtime="20200402 12:48:48.547"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:48.548" level="INFO">${Id} = 43304745507716</msg>
<status status="PASS" starttime="20200402 12:48:48.548" endtime="20200402 12:48:48.548"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:48.549" level="INFO">${IdNumber} = 43304745507716</msg>
<status status="PASS" starttime="20200402 12:48:48.549" endtime="20200402 12:48:48.549"></status>
</kw>
<msg timestamp="20200402 12:48:48.550" level="INFO">${idNum} = 43304745507716</msg>
<status status="PASS" starttime="20200402 12:48:48.547" endtime="20200402 12:48:48.550"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:48.551" level="INFO">${mobile} = 7713430690</msg>
<status status="PASS" starttime="20200402 12:48:48.550" endtime="20200402 12:48:48.551"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:48.551" level="INFO">${mobileNo} = 7713430690</msg>
<status status="PASS" starttime="20200402 12:48:48.551" endtime="20200402 12:48:48.552"></status>
</kw>
<msg timestamp="20200402 12:48:48.552" level="INFO">${MobNo} = 7713430690</msg>
<status status="PASS" starttime="20200402 12:48:48.550" endtime="20200402 12:48:48.552"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:48.553" level="INFO">${Emailnum} = 29534</msg>
<status status="PASS" starttime="20200402 12:48:48.553" endtime="20200402 12:48:48.553"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:48.554" level="INFO">${enum} = 29534</msg>
<status status="PASS" starttime="20200402 12:48:48.554" endtime="20200402 12:48:48.555"></status>
</kw>
<msg timestamp="20200402 12:48:48.555" level="INFO">${num} = 29534</msg>
<status status="PASS" starttime="20200402 12:48:48.553" endtime="20200402 12:48:48.555"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:48.556" level="INFO">${emailid} = pavan29534@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:48.555" endtime="20200402 12:48:48.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:48.556" level="INFO">${email} = pavan29534@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:48.556" endtime="20200402 12:48:48.556"></status>
</kw>
<msg timestamp="20200402 12:48:48.557" level="INFO">${emailid} = pavan29534@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:48.552" endtime="20200402 12:48:48.557"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:48.561" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:48.561" endtime="20200402 12:48:48.562"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:48.562" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:48.562" endtime="20200402 12:48:48.562"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:48.563" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:48.563" endtime="20200402 12:48:48.563"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:48.565" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:48.564" endtime="20200402 12:48:48.565"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:48.567" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:48.566" endtime="20200402 12:48:48.567"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:48.571" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '43304745507716', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7713430690', 'email': 'pavan29534@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:48.568" endtime="20200402 12:48:48.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:48.572" endtime="20200402 12:48:48.572"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:48.573" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOTRZVWlhakF1dnl1amN3ZDViZklQMGxDaGxy...</msg>
<status status="PASS" starttime="20200402 12:48:48.573" endtime="20200402 12:48:48.573"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:48.574" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:48.574" endtime="20200402 12:48:48.574"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:48.575" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOTRZVWlhakF1dnl1amN3ZDViZklQMGxDaGxyMC9aUjNTZ091RkZralZzV1A1UjlGQm9TQjNUUXJDbFRIbzNBbU00dXJCdng3d0RxZXlzcnI5U3lRSDg9IiwibmJmIjoxNTg1ODExOTI2LCJleHAiOjE1ODU4MTE5ODYsImlhdCI6MTU4NTgxMTkyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.UA2ysceyXtavsUQKSMKHPRLRHeB0TCRVK41P-HHZxKY'} 
data={"escrowCompanyId": "001", "idNumber": "43304745507716", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7713430690", "email": "pavan29534@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:48.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:48.575" endtime="20200402 12:48:48.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:48.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:48.890" endtime="20200402 12:48:48.891"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:48.891" endtime="20200402 12:48:48.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:48.892" endtime="20200402 12:48:48.893"></status>
</kw>
<msg timestamp="20200402 12:48:48.893" level="INFO">${sellerid} = f71517f1-2053-4992-9d91-c74e70d66b23</msg>
<status status="PASS" starttime="20200402 12:48:48.557" endtime="20200402 12:48:48.893"></status>
</kw>
<msg timestamp="20200402 12:48:48.893" level="INFO">${SellerId} = f71517f1-2053-4992-9d91-c74e70d66b23</msg>
<msg timestamp="20200402 12:48:48.893" level="INFO">${idnumber} = 43304745507716</msg>
<status status="PASS" starttime="20200402 12:48:46.524" endtime="20200402 12:48:48.893"></status>
</kw>
<kw name="UpdateSellerDetails Empty MobileCountryCode" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${EMPTY}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:48.896" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:48.895" endtime="20200402 12:48:48.896"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:48.897" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:48.896" endtime="20200402 12:48:48.897"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:48.898" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '', 'SELLERId': 'f71517f1-2053-4992-9d91-c74e70d66b23', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:48:48.897" endtime="20200402 12:48:48.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:48.898" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1...</msg>
<status status="PASS" starttime="20200402 12:48:48.898" endtime="20200402 12:48:48.898"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:48.899" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:48.898" endtime="20200402 12:48:48.899"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:48.900" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1akI3V2FvSk84c214YXFYTTFrRkVGMXdrUGVKcDhVYXlpVDF0Q0R2NlBrRlJIOWFLS0UrbWhDTUVMSkE9IiwibmJmIjoxNTg1ODExOTIzLCJleHAiOjE1ODU4MTE5ODMsImlhdCI6MTU4NTgxMTkyMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.02rhsMUVK6xZrhFxzkoHIohqR9utmzFexTlR9nu2KKU'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "", "SELLERId": "f71517f1-2053-4992-9d91-c74e70d66b23", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:48:49.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:48.899" endtime="20200402 12:48:49.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:49.731" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:49.730" endtime="20200402 12:48:49.731"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:49.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:49.731" endtime="20200402 12:48:49.732"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:49.732" endtime="20200402 12:48:49.732"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:49.732" endtime="20200402 12:48:49.733"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:48.894" endtime="20200402 12:48:49.733"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:49.734" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:49.734" endtime="20200402 12:48:49.735"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:49.735" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'f71517f1-2053-4992-9d91-c74e70d66b23'}</msg>
<status status="PASS" starttime="20200402 12:48:49.735" endtime="20200402 12:48:49.735"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:49.736" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1...</msg>
<status status="PASS" starttime="20200402 12:48:49.736" endtime="20200402 12:48:49.736"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:49.737" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:49.736" endtime="20200402 12:48:49.737"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:49.737" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnhpcXQ2ay93bHJna1V3ZXhKMVRxc3lmdjB1akI3V2FvSk84c214YXFYTTFrRkVGMXdrUGVKcDhVYXlpVDF0Q0R2NlBrRlJIOWFLS0UrbWhDTUVMSkE9IiwibmJmIjoxNTg1ODExOTIzLCJleHAiOjE1ODU4MTE5ODMsImlhdCI6MTU4NTgxMTkyMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.02rhsMUVK6xZrhFxzkoHIohqR9utmzFexTlR9nu2KKU'} 
data={"escrowCompanyId": "001", "sellerID": "f71517f1-2053-4992-9d91-c74e70d66b23"} 
json=None</msg>
<msg timestamp="20200402 12:48:52.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:49.737" endtime="20200402 12:48:52.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:48:52.066" level="INFO">{"escrowCompanyId":"001","sellerId":"f71517f1-2053-4992-9d91-c74e70d66b23","idNumber":"43304745507716","typeOfId":3,"mobileCountryCode":"","mobileNo":"7713430690","email":"pavan29534@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:18:46","updateDate":"02/04/2020 02:18:47","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:48:52.066" endtime="20200402 12:48:52.067"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:52.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:52.067" endtime="20200402 12:48:52.068"></status>
</kw>
<status status="PASS" starttime="20200402 12:48:49.734" endtime="20200402 12:48:52.068"></status>
</kw>
<doc>Valid : To Verify response if mobileCountryCode parameter is entered empty and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:48:43.218" endtime="20200402 12:48:52.069" critical="yes"></status>
</test>
<test id="s1-t28" name="TC_38 Selle_Details_API Valid mobile_country_code">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:55.072" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:52.071" endtime="20200402 12:48:55.072"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.073" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:55.073" endtime="20200402 12:48:55.074"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:55.074" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:55.074" endtime="20200402 12:48:55.074"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:55.074" endtime="20200402 12:48:55.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:55.076" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:55.075" endtime="20200402 12:48:55.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:55.076" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:55.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:55.076" endtime="20200402 12:48:55.718"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:55.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:55.719" endtime="20200402 12:48:55.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.720" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEFacE16QjB6VmRuMmZoRFpxakVEK1FydGZFdTY3TzN0MFJ6bTltdG8rR040RGdWcjVCNVE4ME5hUURiTzF2YldoNENwWGZQb3VPUmtIaVF2OEx0dVU9IiwibmJmIjoxNTg1ODExOTMzLCJleHAiOjE1ODU4MTE5OTMsImlhdCI6MTU4NTgxMTkzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.-wfc3mWtPddJf-uTgS5G-jW5cwDa6BmOWva75WE0kmk</msg>
<status status="PASS" starttime="20200402 12:48:55.720" endtime="20200402 12:48:55.720"></status>
</kw>
<msg timestamp="20200402 12:48:55.720" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEFacE16QjB6VmRuMmZoRFpxakVEK1FydGZFdTY3TzN...</msg>
<status status="PASS" starttime="20200402 12:48:55.073" endtime="20200402 12:48:55.720"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.722" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:55.722" endtime="20200402 12:48:55.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:55.723" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:55.723" endtime="20200402 12:48:55.723"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:55.723" endtime="20200402 12:48:55.724"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:55.724" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:55.724" endtime="20200402 12:48:55.724"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:55.725" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:55.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:55.724" endtime="20200402 12:48:55.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:55.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:55.932" endtime="20200402 12:48:55.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.933" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMU1BZ3c0eFlMbzV2VElkeWFGdjdENkFUcGhib0gzMlovcTJ5RnkrMlc2dE9jcklBMElvTzNwNW5rNFlDY2dXbTBuVHprRW5FQUhhL2pUektqZk9KYnc9IiwibmJmIjoxNTg1ODExOTMzLCJleHAiOjE1ODU4MTE5OTMsImlhdCI6MTU4NTgxMTkzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.A-Qa-xWTdhndpelx1DDoTACclflLZqn1C4esVvYVlgU</msg>
<status status="PASS" starttime="20200402 12:48:55.933" endtime="20200402 12:48:55.933"></status>
</kw>
<msg timestamp="20200402 12:48:55.933" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMU1BZ3c0eFlMbzV2VElkeWFGdjdENkFUcGhib0gzMlo...</msg>
<status status="PASS" starttime="20200402 12:48:55.721" endtime="20200402 12:48:55.933"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:55.934" level="INFO">${Id} = 06422882033214</msg>
<status status="PASS" starttime="20200402 12:48:55.934" endtime="20200402 12:48:55.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.935" level="INFO">${IdNumber} = 06422882033214</msg>
<status status="PASS" starttime="20200402 12:48:55.934" endtime="20200402 12:48:55.935"></status>
</kw>
<msg timestamp="20200402 12:48:55.935" level="INFO">${idNum} = 06422882033214</msg>
<status status="PASS" starttime="20200402 12:48:55.934" endtime="20200402 12:48:55.935"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:55.936" level="INFO">${mobile} = 7715313616</msg>
<status status="PASS" starttime="20200402 12:48:55.936" endtime="20200402 12:48:55.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.937" level="INFO">${mobileNo} = 7715313616</msg>
<status status="PASS" starttime="20200402 12:48:55.936" endtime="20200402 12:48:55.937"></status>
</kw>
<msg timestamp="20200402 12:48:55.937" level="INFO">${MobNo} = 7715313616</msg>
<status status="PASS" starttime="20200402 12:48:55.935" endtime="20200402 12:48:55.937"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:55.940" level="INFO">${Emailnum} = 85108</msg>
<status status="PASS" starttime="20200402 12:48:55.939" endtime="20200402 12:48:55.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.941" level="INFO">${enum} = 85108</msg>
<status status="PASS" starttime="20200402 12:48:55.940" endtime="20200402 12:48:55.941"></status>
</kw>
<msg timestamp="20200402 12:48:55.941" level="INFO">${num} = 85108</msg>
<status status="PASS" starttime="20200402 12:48:55.938" endtime="20200402 12:48:55.941"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:55.942" level="INFO">${emailid} = pavan85108@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:55.942" endtime="20200402 12:48:55.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:55.943" level="INFO">${email} = pavan85108@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:55.942" endtime="20200402 12:48:55.943"></status>
</kw>
<msg timestamp="20200402 12:48:55.943" level="INFO">${emailid} = pavan85108@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:55.938" endtime="20200402 12:48:55.943"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:55.946" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:55.945" endtime="20200402 12:48:55.946"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:55.947" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:55.946" endtime="20200402 12:48:55.947"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:55.947" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:55.947" endtime="20200402 12:48:55.947"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:55.949" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:55.948" endtime="20200402 12:48:55.949"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:55.951" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:55.949" endtime="20200402 12:48:55.951"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:55.954" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '06422882033214', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7715313616', 'email': 'pavan85108@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:55.951" endtime="20200402 12:48:55.954"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:55.954" endtime="20200402 12:48:55.955"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:55.956" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMU1BZ3c0eFlMbzV2VElkeWFGdjdENkFUcGhi...</msg>
<status status="PASS" starttime="20200402 12:48:55.955" endtime="20200402 12:48:55.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:55.956" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:55.956" endtime="20200402 12:48:55.956"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:55.957" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMU1BZ3c0eFlMbzV2VElkeWFGdjdENkFUcGhib0gzMlovcTJ5RnkrMlc2dE9jcklBMElvTzNwNW5rNFlDY2dXbTBuVHprRW5FQUhhL2pUektqZk9KYnc9IiwibmJmIjoxNTg1ODExOTMzLCJleHAiOjE1ODU4MTE5OTMsImlhdCI6MTU4NTgxMTkzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.A-Qa-xWTdhndpelx1DDoTACclflLZqn1C4esVvYVlgU'} 
data={"escrowCompanyId": "001", "idNumber": "06422882033214", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7715313616", "email": "pavan85108@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:48:56.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:55.957" endtime="20200402 12:48:56.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:56.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:56.209" endtime="20200402 12:48:56.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 12:48:56.211" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 12:48:56.210" endtime="20200402 12:48:56.211"></status>
</kw>
<status status="FAIL" starttime="20200402 12:48:55.943" endtime="20200402 12:48:56.211"></status>
</kw>
<status status="FAIL" starttime="20200402 12:48:55.721" endtime="20200402 12:48:56.211"></status>
</kw>
<doc>Valid: To Verify response if mobileCountryCode parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 12:48:52.070" endtime="20200402 12:48:56.212" critical="yes">R03 != 000</status>
</test>
<test id="s1-t29" name="TC_39 Selle_Details_API mobile no">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:48:59.216" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:48:56.216" endtime="20200402 12:48:59.216"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.217" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:59.217" endtime="20200402 12:48:59.218"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:59.218" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:59.218" endtime="20200402 12:48:59.218"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:59.219" endtime="20200402 12:48:59.219"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:59.219" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:59.219" endtime="20200402 12:48:59.219"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:59.220" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:59.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:59.220" endtime="20200402 12:48:59.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:59.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:59.427" endtime="20200402 12:48:59.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.428" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZONkRSbm1lMU5iOStUY2N5MmZOOStZR2REZmR1bkZBaG1qM2swL21GZE8rVm9FdXFJYWhVUjBpdTYrUVFHNlVGYnExMFlWbUs1NlIxcUkyMDZoaDA9IiwibmJmIjoxNTg1ODExOTM2LCJleHAiOjE1ODU4MTE5OTYsImlhdCI6MTU4NTgxMTkzNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.PB1WDc6MKv_xD-0j078xMHjFCz0sJ5ksRTGdqFmoI2I</msg>
<status status="PASS" starttime="20200402 12:48:59.428" endtime="20200402 12:48:59.428"></status>
</kw>
<msg timestamp="20200402 12:48:59.428" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZONkRSbm1lMU5iOStUY2N5MmZOOStZR2REZmR1bkZ...</msg>
<status status="PASS" starttime="20200402 12:48:59.217" endtime="20200402 12:48:59.428"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.431" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:59.430" endtime="20200402 12:48:59.431"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:59.432" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:48:59.431" endtime="20200402 12:48:59.432"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:59.432" endtime="20200402 12:48:59.432"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:48:59.433" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:48:59.432" endtime="20200402 12:48:59.433"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:59.433" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:48:59.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:59.433" endtime="20200402 12:48:59.628"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:48:59.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:48:59.628" endtime="20200402 12:48:59.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.630" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3JVODRHbERDTUpWTVNmMlNCdno0OFA3b2l0UXkyelpLZ1ZKcy9KUm5PdFptMzc5ZHF2S3lpcGZxTlBYdTNHRHpkblpMZkQ3T0h6Q0R6Zzk1dVRza3M9IiwibmJmIjoxNTg1ODExOTM3LCJleHAiOjE1ODU4MTE5OTcsImlhdCI6MTU4NTgxMTkzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.334V2CzFLyD4TINz2nBgkvc9QTmGuEerQl9PSl-Shqg</msg>
<status status="PASS" starttime="20200402 12:48:59.630" endtime="20200402 12:48:59.630"></status>
</kw>
<msg timestamp="20200402 12:48:59.631" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3JVODRHbERDTUpWTVNmMlNCdno0OFA3b2l0UXkyelp...</msg>
<status status="PASS" starttime="20200402 12:48:59.429" endtime="20200402 12:48:59.631"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:48:59.632" level="INFO">${Id} = 26126759319116</msg>
<status status="PASS" starttime="20200402 12:48:59.632" endtime="20200402 12:48:59.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.633" level="INFO">${IdNumber} = 26126759319116</msg>
<status status="PASS" starttime="20200402 12:48:59.633" endtime="20200402 12:48:59.634"></status>
</kw>
<msg timestamp="20200402 12:48:59.634" level="INFO">${idNum} = 26126759319116</msg>
<status status="PASS" starttime="20200402 12:48:59.631" endtime="20200402 12:48:59.634"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:48:59.635" level="INFO">${mobile} = 4534883394</msg>
<status status="PASS" starttime="20200402 12:48:59.635" endtime="20200402 12:48:59.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.636" level="INFO">${mobileNo} = 4534883394</msg>
<status status="PASS" starttime="20200402 12:48:59.635" endtime="20200402 12:48:59.636"></status>
</kw>
<msg timestamp="20200402 12:48:59.636" level="INFO">${MobNo} = 4534883394</msg>
<status status="PASS" starttime="20200402 12:48:59.634" endtime="20200402 12:48:59.636"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:48:59.638" level="INFO">${Emailnum} = 09795</msg>
<status status="PASS" starttime="20200402 12:48:59.638" endtime="20200402 12:48:59.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.640" level="INFO">${enum} = 09795</msg>
<status status="PASS" starttime="20200402 12:48:59.639" endtime="20200402 12:48:59.640"></status>
</kw>
<msg timestamp="20200402 12:48:59.640" level="INFO">${num} = 09795</msg>
<status status="PASS" starttime="20200402 12:48:59.637" endtime="20200402 12:48:59.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:48:59.641" level="INFO">${emailid} = pavan09795@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:59.640" endtime="20200402 12:48:59.641"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:48:59.642" level="INFO">${email} = pavan09795@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:59.641" endtime="20200402 12:48:59.642"></status>
</kw>
<msg timestamp="20200402 12:48:59.642" level="INFO">${emailid} = pavan09795@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:48:59.636" endtime="20200402 12:48:59.642"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:48:59.646" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:48:59.645" endtime="20200402 12:48:59.646"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:48:59.647" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:48:59.646" endtime="20200402 12:48:59.647"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:48:59.647" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:48:59.647" endtime="20200402 12:48:59.647"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:48:59.649" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:59.648" endtime="20200402 12:48:59.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:48:59.650" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:48:59.649" endtime="20200402 12:48:59.650"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:48:59.655" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '26126759319116', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4534883394', 'email': 'pavan09795@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:48:59.651" endtime="20200402 12:48:59.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:48:59.656" endtime="20200402 12:48:59.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:48:59.658" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3JVODRHbERDTUpWTVNmMlNCdno0OFA3b2l0...</msg>
<status status="PASS" starttime="20200402 12:48:59.657" endtime="20200402 12:48:59.658"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:48:59.660" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:48:59.659" endtime="20200402 12:48:59.660"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:48:59.661" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3JVODRHbERDTUpWTVNmMlNCdno0OFA3b2l0UXkyelpLZ1ZKcy9KUm5PdFptMzc5ZHF2S3lpcGZxTlBYdTNHRHpkblpMZkQ3T0h6Q0R6Zzk1dVRza3M9IiwibmJmIjoxNTg1ODExOTM3LCJleHAiOjE1ODU4MTE5OTcsImlhdCI6MTU4NTgxMTkzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.334V2CzFLyD4TINz2nBgkvc9QTmGuEerQl9PSl-Shqg'} 
data={"escrowCompanyId": "001", "idNumber": "26126759319116", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4534883394", "email": "pavan09795@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:03.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:48:59.660" endtime="20200402 12:49:03.101"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:03.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:03.101" endtime="20200402 12:49:03.102"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 12:49:03.103" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 12:49:03.102" endtime="20200402 12:49:03.103"></status>
</kw>
<status status="FAIL" starttime="20200402 12:48:59.642" endtime="20200402 12:49:03.103"></status>
</kw>
<status status="FAIL" starttime="20200402 12:48:59.429" endtime="20200402 12:49:03.104"></status>
</kw>
<doc>Valid: To Verify response if mobileNo parameter is entered valid without first digit 0 and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 12:48:56.214" endtime="20200402 12:49:03.104" critical="yes">R03 != 000</status>
</test>
<test id="s1-t30" name="TC_40 Selle_Details_API Empty mobile no">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:06.109" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:03.108" endtime="20200402 12:49:06.109"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.110" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:06.110" endtime="20200402 12:49:06.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:06.111" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:06.111" endtime="20200402 12:49:06.111"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:06.111" endtime="20200402 12:49:06.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:06.112" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:06.112" endtime="20200402 12:49:06.112"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:06.113" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:06.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:06.112" endtime="20200402 12:49:06.664"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:06.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:06.664" endtime="20200402 12:49:06.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.665" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxjeFhmaVk1Vjlvb2xKbXBCakN3cnZleWRCd0VuUEJubG1NYVBQYlhkOXBQQktCZlM3cUJsenJkeWh2bTQ9IiwibmJmIjoxNTg1ODExOTQ0LCJleHAiOjE1ODU4MTIwMDQsImlhdCI6MTU4NTgxMTk0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EYQDK0sm6StRuxLhCyscQe5mZjPY5F7ruNnwFQmw-mI</msg>
<status status="PASS" starttime="20200402 12:49:06.665" endtime="20200402 12:49:06.665"></status>
</kw>
<msg timestamp="20200402 12:49:06.665" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxjeFhmaVk...</msg>
<status status="PASS" starttime="20200402 12:49:06.110" endtime="20200402 12:49:06.665"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.667" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:06.667" endtime="20200402 12:49:06.668"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:06.668" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:06.668" endtime="20200402 12:49:06.668"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:06.669" endtime="20200402 12:49:06.669"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:06.669" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:06.669" endtime="20200402 12:49:06.669"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:06.670" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:06.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:06.670" endtime="20200402 12:49:06.864"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:06.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:06.864" endtime="20200402 12:49:06.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.865" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenZRT1YvZEdTU29uaVovLzhSYTI3ZVhhTmtkNGhIajRKdXU2R1VROHJmTHJHQ05SYkc5ZVhKcEgwdHlCYjQwM0laY0JlV1dUNVZaL3BIeUNhRGhwcE09IiwibmJmIjoxNTg1ODExOTQ0LCJleHAiOjE1ODU4MTIwMDQsImlhdCI6MTU4NTgxMTk0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.iJ3dQAqGrzEYa4AyMqHvJ4DtRrMTOAW3tn3mMdvom8E</msg>
<status status="PASS" starttime="20200402 12:49:06.865" endtime="20200402 12:49:06.865"></status>
</kw>
<msg timestamp="20200402 12:49:06.865" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenZRT1YvZEdTU29uaVovLzhSYTI3ZVhhTmtkNGhIajR...</msg>
<status status="PASS" starttime="20200402 12:49:06.667" endtime="20200402 12:49:06.865"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:06.866" level="INFO">${Id} = 64364833334379</msg>
<status status="PASS" starttime="20200402 12:49:06.866" endtime="20200402 12:49:06.866"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.867" level="INFO">${IdNumber} = 64364833334379</msg>
<status status="PASS" starttime="20200402 12:49:06.866" endtime="20200402 12:49:06.867"></status>
</kw>
<msg timestamp="20200402 12:49:06.867" level="INFO">${idNum} = 64364833334379</msg>
<status status="PASS" starttime="20200402 12:49:06.865" endtime="20200402 12:49:06.867"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:06.868" level="INFO">${mobile} = 6288262106</msg>
<status status="PASS" starttime="20200402 12:49:06.868" endtime="20200402 12:49:06.868"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.869" level="INFO">${mobileNo} = 6288262106</msg>
<status status="PASS" starttime="20200402 12:49:06.868" endtime="20200402 12:49:06.869"></status>
</kw>
<msg timestamp="20200402 12:49:06.869" level="INFO">${MobNo} = 6288262106</msg>
<status status="PASS" starttime="20200402 12:49:06.867" endtime="20200402 12:49:06.869"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:06.870" level="INFO">${Emailnum} = 47047</msg>
<status status="PASS" starttime="20200402 12:49:06.870" endtime="20200402 12:49:06.870"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.871" level="INFO">${enum} = 47047</msg>
<status status="PASS" starttime="20200402 12:49:06.870" endtime="20200402 12:49:06.871"></status>
</kw>
<msg timestamp="20200402 12:49:06.871" level="INFO">${num} = 47047</msg>
<status status="PASS" starttime="20200402 12:49:06.870" endtime="20200402 12:49:06.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:06.872" level="INFO">${emailid} = pavan47047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:06.872" endtime="20200402 12:49:06.872"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:06.872" level="INFO">${email} = pavan47047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:06.872" endtime="20200402 12:49:06.872"></status>
</kw>
<msg timestamp="20200402 12:49:06.873" level="INFO">${emailid} = pavan47047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:06.869" endtime="20200402 12:49:06.873"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:06.875" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:06.875" endtime="20200402 12:49:06.875"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:06.876" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:06.876" endtime="20200402 12:49:06.876"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:06.877" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:06.877" endtime="20200402 12:49:06.877"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:06.878" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:06.877" endtime="20200402 12:49:06.878"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:06.880" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:06.879" endtime="20200402 12:49:06.880"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:06.883" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '64364833334379', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6288262106', 'email': 'pavan47047@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:06.881" endtime="20200402 12:49:06.883"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:06.883" endtime="20200402 12:49:06.885"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:06.886" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenZRT1YvZEdTU29uaVovLzhSYTI3ZVhhTmtk...</msg>
<status status="PASS" starttime="20200402 12:49:06.885" endtime="20200402 12:49:06.886"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:06.887" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:06.887" endtime="20200402 12:49:06.887"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:06.888" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenZRT1YvZEdTU29uaVovLzhSYTI3ZVhhTmtkNGhIajRKdXU2R1VROHJmTHJHQ05SYkc5ZVhKcEgwdHlCYjQwM0laY0JlV1dUNVZaL3BIeUNhRGhwcE09IiwibmJmIjoxNTg1ODExOTQ0LCJleHAiOjE1ODU4MTIwMDQsImlhdCI6MTU4NTgxMTk0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.iJ3dQAqGrzEYa4AyMqHvJ4DtRrMTOAW3tn3mMdvom8E'} 
data={"escrowCompanyId": "001", "idNumber": "64364833334379", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6288262106", "email": "pavan47047@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:07.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:06.887" endtime="20200402 12:49:07.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:07.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:07.786" endtime="20200402 12:49:07.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:07.787" endtime="20200402 12:49:07.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:07.788" endtime="20200402 12:49:07.789"></status>
</kw>
<msg timestamp="20200402 12:49:07.789" level="INFO">${sellerid} = 9eef37a7-3cf6-4f38-8b97-018ac47172e2</msg>
<status status="PASS" starttime="20200402 12:49:06.873" endtime="20200402 12:49:07.789"></status>
</kw>
<msg timestamp="20200402 12:49:07.790" level="INFO">${SellerId} = 9eef37a7-3cf6-4f38-8b97-018ac47172e2</msg>
<msg timestamp="20200402 12:49:07.790" level="INFO">${idnumber} = 64364833334379</msg>
<status status="PASS" starttime="20200402 12:49:06.666" endtime="20200402 12:49:07.790"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${EMPTY}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:07.792" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:07.792" endtime="20200402 12:49:07.793"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:07.793" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:07.793" endtime="20200402 12:49:07.793"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:07.795" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '', 'SELLERId': '9eef37a7-3cf6-4f38-8b97-018ac47172e2', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:07.794" endtime="20200402 12:49:07.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:07.795" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxj...</msg>
<status status="PASS" starttime="20200402 12:49:07.795" endtime="20200402 12:49:07.796"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:07.797" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:07.796" endtime="20200402 12:49:07.797"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:07.798" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxjeFhmaVk1Vjlvb2xKbXBCakN3cnZleWRCd0VuUEJubG1NYVBQYlhkOXBQQktCZlM3cUJsenJkeWh2bTQ9IiwibmJmIjoxNTg1ODExOTQ0LCJleHAiOjE1ODU4MTIwMDQsImlhdCI6MTU4NTgxMTk0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EYQDK0sm6StRuxLhCyscQe5mZjPY5F7ruNnwFQmw-mI'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "", "SELLERId": "9eef37a7-3cf6-4f38-8b97-018ac47172e2", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:08.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:07.797" endtime="20200402 12:49:08.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:08.436" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:08.435" endtime="20200402 12:49:08.436"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:08.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:08.437" endtime="20200402 12:49:08.438"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:08.439" endtime="20200402 12:49:08.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:08.440" endtime="20200402 12:49:08.440"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:07.791" endtime="20200402 12:49:08.440"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:08.442" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:08.442" endtime="20200402 12:49:08.442"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:08.443" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '9eef37a7-3cf6-4f38-8b97-018ac47172e2'}</msg>
<status status="PASS" starttime="20200402 12:49:08.443" endtime="20200402 12:49:08.443"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:08.444" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxj...</msg>
<status status="PASS" starttime="20200402 12:49:08.444" endtime="20200402 12:49:08.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:08.445" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:08.444" endtime="20200402 12:49:08.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:08.446" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMVlUQlVyU3lqNk11YXNXdk5lbDl4SU1WQmxjeFhmaVk1Vjlvb2xKbXBCakN3cnZleWRCd0VuUEJubG1NYVBQYlhkOXBQQktCZlM3cUJsenJkeWh2bTQ9IiwibmJmIjoxNTg1ODExOTQ0LCJleHAiOjE1ODU4MTIwMDQsImlhdCI6MTU4NTgxMTk0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EYQDK0sm6StRuxLhCyscQe5mZjPY5F7ruNnwFQmw-mI'} 
data={"escrowCompanyId": "001", "sellerID": "9eef37a7-3cf6-4f38-8b97-018ac47172e2"} 
json=None</msg>
<msg timestamp="20200402 12:49:08.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:08.445" endtime="20200402 12:49:08.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:08.958" level="INFO">{"escrowCompanyId":"001","sellerId":"9eef37a7-3cf6-4f38-8b97-018ac47172e2","idNumber":"64364833334379","typeOfId":3,"mobileCountryCode":"67","mobileNo":"","email":"pavan47047@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:05","updateDate":"02/04/2020 02:19:05","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:08.958" endtime="20200402 12:49:08.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:08.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:08.959" endtime="20200402 12:49:08.960"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:08.441" endtime="20200402 12:49:08.960"></status>
</kw>
<doc>Empty: To Verify response if mobileNo parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:03.106" endtime="20200402 12:49:08.961" critical="yes"></status>
</test>
<test id="s1-t31" name="TC_41 Selle_Details_API Empty mobilecountrycode">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:11.964" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:08.964" endtime="20200402 12:49:11.964"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:11.966" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:11.965" endtime="20200402 12:49:11.966"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:11.967" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:11.966" endtime="20200402 12:49:11.967"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:11.967" endtime="20200402 12:49:11.967"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:11.968" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:11.967" endtime="20200402 12:49:11.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:11.968" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:12.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:11.968" endtime="20200402 12:49:12.193"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:12.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.193" endtime="20200402 12:49:12.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.194" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZqYzJCMERCS0hoeHRNK3VkelpxVjRRNzBVajVSTUQ2ZXliS2l6T0VBSWk0Ykd6L3pjRFlta0ZYaUlJUlk9IiwibmJmIjoxNTg1ODExOTQ5LCJleHAiOjE1ODU4MTIwMDksImlhdCI6MTU4NTgxMTk0OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8PxulaUdhyGNfyhHndVu362nHcqpXnEP8jfFI_QYw10</msg>
<status status="PASS" starttime="20200402 12:49:12.194" endtime="20200402 12:49:12.195"></status>
</kw>
<msg timestamp="20200402 12:49:12.195" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZqYzJCMER...</msg>
<status status="PASS" starttime="20200402 12:49:11.965" endtime="20200402 12:49:12.195"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.198" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:12.197" endtime="20200402 12:49:12.198"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:12.199" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:12.199" endtime="20200402 12:49:12.199"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:12.200" endtime="20200402 12:49:12.200"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:12.201" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:12.201" endtime="20200402 12:49:12.201"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:12.202" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:12.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.201" endtime="20200402 12:49:12.396"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:12.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.397" endtime="20200402 12:49:12.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.399" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXZFV0dnNkxTUUV4eE9EbkNCVldwdXVQMlA5NjBGeWpxQUZ1d2RXdUZhR2FacDh3SUFsbEhSZ2dYSGpIck9EK0UzVlQxWVQ2dHRWRWJtSTQzM2RYbWM9IiwibmJmIjoxNTg1ODExOTQ5LCJleHAiOjE1ODU4MTIwMDksImlhdCI6MTU4NTgxMTk0OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.910AEf7C0jraGKUAPyyXh4zOkn4qzBaBcvAuULQ9His</msg>
<status status="PASS" starttime="20200402 12:49:12.398" endtime="20200402 12:49:12.400"></status>
</kw>
<msg timestamp="20200402 12:49:12.401" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXZFV0dnNkxTUUV4eE9EbkNCVldwdXVQMlA5NjBGeWp...</msg>
<status status="PASS" starttime="20200402 12:49:12.197" endtime="20200402 12:49:12.401"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:12.403" level="INFO">${Id} = 78505342497348</msg>
<status status="PASS" starttime="20200402 12:49:12.402" endtime="20200402 12:49:12.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.404" level="INFO">${IdNumber} = 78505342497348</msg>
<status status="PASS" starttime="20200402 12:49:12.403" endtime="20200402 12:49:12.405"></status>
</kw>
<msg timestamp="20200402 12:49:12.405" level="INFO">${idNum} = 78505342497348</msg>
<status status="PASS" starttime="20200402 12:49:12.401" endtime="20200402 12:49:12.405"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:12.408" level="INFO">${mobile} = 1178753553</msg>
<status status="PASS" starttime="20200402 12:49:12.407" endtime="20200402 12:49:12.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.410" level="INFO">${mobileNo} = 1178753553</msg>
<status status="PASS" starttime="20200402 12:49:12.408" endtime="20200402 12:49:12.410"></status>
</kw>
<msg timestamp="20200402 12:49:12.410" level="INFO">${MobNo} = 1178753553</msg>
<status status="PASS" starttime="20200402 12:49:12.406" endtime="20200402 12:49:12.411"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:12.413" level="INFO">${Emailnum} = 18930</msg>
<status status="PASS" starttime="20200402 12:49:12.413" endtime="20200402 12:49:12.413"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.415" level="INFO">${enum} = 18930</msg>
<status status="PASS" starttime="20200402 12:49:12.414" endtime="20200402 12:49:12.415"></status>
</kw>
<msg timestamp="20200402 12:49:12.416" level="INFO">${num} = 18930</msg>
<status status="PASS" starttime="20200402 12:49:12.412" endtime="20200402 12:49:12.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:12.417" level="INFO">${emailid} = pavan18930@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:12.417" endtime="20200402 12:49:12.417"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.419" level="INFO">${email} = pavan18930@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:12.418" endtime="20200402 12:49:12.419"></status>
</kw>
<msg timestamp="20200402 12:49:12.419" level="INFO">${emailid} = pavan18930@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:12.411" endtime="20200402 12:49:12.420"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:12.450" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:12.449" endtime="20200402 12:49:12.450"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:12.451" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:12.451" endtime="20200402 12:49:12.451"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:12.452" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:12.451" endtime="20200402 12:49:12.452"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:12.454" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:12.452" endtime="20200402 12:49:12.454"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:12.455" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:12.454" endtime="20200402 12:49:12.455"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:12.458" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '78505342497348', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1178753553', 'email': 'pavan18930@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:12.456" endtime="20200402 12:49:12.459"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:12.459" endtime="20200402 12:49:12.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:12.462" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXZFV0dnNkxTUUV4eE9EbkNCVldwdXVQMlA5...</msg>
<status status="PASS" starttime="20200402 12:49:12.461" endtime="20200402 12:49:12.462"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:12.463" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:12.462" endtime="20200402 12:49:12.463"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:12.465" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXZFV0dnNkxTUUV4eE9EbkNCVldwdXVQMlA5NjBGeWpxQUZ1d2RXdUZhR2FacDh3SUFsbEhSZ2dYSGpIck9EK0UzVlQxWVQ2dHRWRWJtSTQzM2RYbWM9IiwibmJmIjoxNTg1ODExOTQ5LCJleHAiOjE1ODU4MTIwMDksImlhdCI6MTU4NTgxMTk0OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.910AEf7C0jraGKUAPyyXh4zOkn4qzBaBcvAuULQ9His'} 
data={"escrowCompanyId": "001", "idNumber": "78505342497348", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1178753553", "email": "pavan18930@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:12.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.464" endtime="20200402 12:49:12.707"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:12.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.707" endtime="20200402 12:49:12.708"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:12.708" endtime="20200402 12:49:12.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:12.709" endtime="20200402 12:49:12.709"></status>
</kw>
<msg timestamp="20200402 12:49:12.710" level="INFO">${sellerid} = ae195c7f-b01c-40fb-9458-00161e8f30b3</msg>
<status status="PASS" starttime="20200402 12:49:12.420" endtime="20200402 12:49:12.710"></status>
</kw>
<msg timestamp="20200402 12:49:12.711" level="INFO">${SellerId} = ae195c7f-b01c-40fb-9458-00161e8f30b3</msg>
<msg timestamp="20200402 12:49:12.711" level="INFO">${idnumber} = 78505342497348</msg>
<status status="PASS" starttime="20200402 12:49:12.196" endtime="20200402 12:49:12.711"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:12.713" level="INFO">${mobile} = 5065529561</msg>
<status status="PASS" starttime="20200402 12:49:12.712" endtime="20200402 12:49:12.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:12.714" level="INFO">${mobileNo} = 5065529561</msg>
<status status="PASS" starttime="20200402 12:49:12.713" endtime="20200402 12:49:12.714"></status>
</kw>
<msg timestamp="20200402 12:49:12.714" level="INFO">${MobNo} = 5065529561</msg>
<status status="PASS" starttime="20200402 12:49:12.711" endtime="20200402 12:49:12.714"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${EMPTY}</arg>
<arg>${MobNo}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:12.716" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:12.716" endtime="20200402 12:49:12.717"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:12.717" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:12.717" endtime="20200402 12:49:12.717"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:12.718" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '', 'mobileNo': '5065529561', 'SELLERId': 'ae195c7f-b01c-40fb-9458-00161e8f30b3', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:12.718" endtime="20200402 12:49:12.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:12.719" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZq...</msg>
<status status="PASS" starttime="20200402 12:49:12.718" endtime="20200402 12:49:12.719"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:12.719" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:12.719" endtime="20200402 12:49:12.719"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:12.720" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZqYzJCMERCS0hoeHRNK3VkelpxVjRRNzBVajVSTUQ2ZXliS2l6T0VBSWk0Ykd6L3pjRFlta0ZYaUlJUlk9IiwibmJmIjoxNTg1ODExOTQ5LCJleHAiOjE1ODU4MTIwMDksImlhdCI6MTU4NTgxMTk0OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8PxulaUdhyGNfyhHndVu362nHcqpXnEP8jfFI_QYw10'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "", "mobileNo": "5065529561", "SELLERId": "ae195c7f-b01c-40fb-9458-00161e8f30b3", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:13.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:12.720" endtime="20200402 12:49:13.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:13.523" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:49:13.523" endtime="20200402 12:49:13.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:13.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:13.524" endtime="20200402 12:49:13.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:13.525" endtime="20200402 12:49:13.526"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:13.526" endtime="20200402 12:49:13.526"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:12.715" endtime="20200402 12:49:13.526"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:13.528" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:13.527" endtime="20200402 12:49:13.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:13.529" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'ae195c7f-b01c-40fb-9458-00161e8f30b3'}</msg>
<status status="PASS" starttime="20200402 12:49:13.528" endtime="20200402 12:49:13.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:13.529" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZq...</msg>
<status status="PASS" starttime="20200402 12:49:13.529" endtime="20200402 12:49:13.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:13.530" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:13.530" endtime="20200402 12:49:13.530"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:13.531" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMFNaY3V6UGdxcDQ1UDJxNURzRW1PQmJXWXZqYzJCMERCS0hoeHRNK3VkelpxVjRRNzBVajVSTUQ2ZXliS2l6T0VBSWk0Ykd6L3pjRFlta0ZYaUlJUlk9IiwibmJmIjoxNTg1ODExOTQ5LCJleHAiOjE1ODU4MTIwMDksImlhdCI6MTU4NTgxMTk0OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8PxulaUdhyGNfyhHndVu362nHcqpXnEP8jfFI_QYw10'} 
data={"escrowCompanyId": "001", "sellerID": "ae195c7f-b01c-40fb-9458-00161e8f30b3"} 
json=None</msg>
<msg timestamp="20200402 12:49:14.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:13.530" endtime="20200402 12:49:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:14.062" level="INFO">{"escrowCompanyId":"001","sellerId":"ae195c7f-b01c-40fb-9458-00161e8f30b3","idNumber":"78505342497348","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1178753553","email":"pavan18930@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:10","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:14.062" endtime="20200402 12:49:14.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:14.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:14.063" endtime="20200402 12:49:14.064"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:13.527" endtime="20200402 12:49:14.064"></status>
</kw>
<doc>Empty: To Verify response if mobileNo parameter is entered and mobileCountryCode is NOT entered and request sent with all mandatory fields</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:08.962" endtime="20200402 12:49:14.065" critical="yes"></status>
</test>
<test id="s1-t32" name="TC_42 Selle_Details_API Valid mobile no">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:17.069" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:14.068" endtime="20200402 12:49:17.069"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:17.071" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:17.070" endtime="20200402 12:49:17.071"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:17.071" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:17.071" endtime="20200402 12:49:17.071"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:17.072" endtime="20200402 12:49:17.072"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:17.072" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:17.072" endtime="20200402 12:49:17.072"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:17.073" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:17.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:17.073" endtime="20200402 12:49:17.560"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:17.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:17.560" endtime="20200402 12:49:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:17.562" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1WFFpMng4Z1VLUG4wS3NXWFlzMy9TQ3VYUGtHbUFtMDdqeTRTTWxDMjBDd1p4T1I3bGlVbGJyTmlsam89IiwibmJmIjoxNTg1ODExOTU1LCJleHAiOjE1ODU4MTIwMTUsImlhdCI6MTU4NTgxMTk1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8NyQy_p7ghGiMXRpeU6MRblaZ-BieIKPbXD_tGt9_PQ</msg>
<status status="PASS" starttime="20200402 12:49:17.561" endtime="20200402 12:49:17.562"></status>
</kw>
<msg timestamp="20200402 12:49:17.563" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1WFFpMng...</msg>
<status status="PASS" starttime="20200402 12:49:17.070" endtime="20200402 12:49:17.563"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:17.566" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:17.565" endtime="20200402 12:49:17.566"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:17.567" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:17.567" endtime="20200402 12:49:17.567"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:17.567" endtime="20200402 12:49:17.568"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:17.568" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:17.568" endtime="20200402 12:49:17.568"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:17.569" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:18.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:17.569" endtime="20200402 12:49:18.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:18.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.083" endtime="20200402 12:49:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.085" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGMvVXpCYWRIbDdGN1I3cXRLOHVwTVM2YXZnT2lxcnJQVTk0TkQvUDgwTUtMb1oyWW9TRTJwcWhkc1g2TkdOalJDZmxnMyt3Y2kxN2xiVHpNaHJWYnc9IiwibmJmIjoxNTg1ODExOTU1LCJleHAiOjE1ODU4MTIwMTUsImlhdCI6MTU4NTgxMTk1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2qQ9DPKFhVaRMDpkMbOsM1TS6DGYxWVb2XH6x8JFo2c</msg>
<status status="PASS" starttime="20200402 12:49:18.084" endtime="20200402 12:49:18.085"></status>
</kw>
<msg timestamp="20200402 12:49:18.086" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGMvVXpCYWRIbDdGN1I3cXRLOHVwTVM2YXZnT2lxcnJ...</msg>
<status status="PASS" starttime="20200402 12:49:17.565" endtime="20200402 12:49:18.086"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:18.087" level="INFO">${Id} = 86297206097508</msg>
<status status="PASS" starttime="20200402 12:49:18.087" endtime="20200402 12:49:18.087"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.088" level="INFO">${IdNumber} = 86297206097508</msg>
<status status="PASS" starttime="20200402 12:49:18.088" endtime="20200402 12:49:18.088"></status>
</kw>
<msg timestamp="20200402 12:49:18.089" level="INFO">${idNum} = 86297206097508</msg>
<status status="PASS" starttime="20200402 12:49:18.086" endtime="20200402 12:49:18.089"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:18.090" level="INFO">${mobile} = 8190599912</msg>
<status status="PASS" starttime="20200402 12:49:18.090" endtime="20200402 12:49:18.090"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.091" level="INFO">${mobileNo} = 8190599912</msg>
<status status="PASS" starttime="20200402 12:49:18.091" endtime="20200402 12:49:18.092"></status>
</kw>
<msg timestamp="20200402 12:49:18.092" level="INFO">${MobNo} = 8190599912</msg>
<status status="PASS" starttime="20200402 12:49:18.089" endtime="20200402 12:49:18.092"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:18.094" level="INFO">${Emailnum} = 67217</msg>
<status status="PASS" starttime="20200402 12:49:18.093" endtime="20200402 12:49:18.094"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.095" level="INFO">${enum} = 67217</msg>
<status status="PASS" starttime="20200402 12:49:18.094" endtime="20200402 12:49:18.095"></status>
</kw>
<msg timestamp="20200402 12:49:18.096" level="INFO">${num} = 67217</msg>
<status status="PASS" starttime="20200402 12:49:18.093" endtime="20200402 12:49:18.096"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:18.096" level="INFO">${emailid} = pavan67217@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:18.096" endtime="20200402 12:49:18.096"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.097" level="INFO">${email} = pavan67217@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:18.097" endtime="20200402 12:49:18.098"></status>
</kw>
<msg timestamp="20200402 12:49:18.098" level="INFO">${emailid} = pavan67217@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:18.092" endtime="20200402 12:49:18.098"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:18.102" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:18.102" endtime="20200402 12:49:18.103"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:18.104" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:18.103" endtime="20200402 12:49:18.104"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:18.105" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:18.104" endtime="20200402 12:49:18.105"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:18.107" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:18.105" endtime="20200402 12:49:18.107"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:18.110" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:18.108" endtime="20200402 12:49:18.110"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:18.115" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '86297206097508', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8190599912', 'email': 'pavan67217@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:18.111" endtime="20200402 12:49:18.115"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:18.115" endtime="20200402 12:49:18.116"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:18.117" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGMvVXpCYWRIbDdGN1I3cXRLOHVwTVM2YXZn...</msg>
<status status="PASS" starttime="20200402 12:49:18.117" endtime="20200402 12:49:18.117"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:18.118" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:18.118" endtime="20200402 12:49:18.118"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:18.120" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGMvVXpCYWRIbDdGN1I3cXRLOHVwTVM2YXZnT2lxcnJQVTk0TkQvUDgwTUtMb1oyWW9TRTJwcWhkc1g2TkdOalJDZmxnMyt3Y2kxN2xiVHpNaHJWYnc9IiwibmJmIjoxNTg1ODExOTU1LCJleHAiOjE1ODU4MTIwMTUsImlhdCI6MTU4NTgxMTk1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2qQ9DPKFhVaRMDpkMbOsM1TS6DGYxWVb2XH6x8JFo2c'} 
data={"escrowCompanyId": "001", "idNumber": "86297206097508", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8190599912", "email": "pavan67217@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:18.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.119" endtime="20200402 12:49:18.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:18.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.371" endtime="20200402 12:49:18.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:18.372" endtime="20200402 12:49:18.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:18.373" endtime="20200402 12:49:18.373"></status>
</kw>
<msg timestamp="20200402 12:49:18.374" level="INFO">${sellerid} = cb541251-c3c2-49c5-b55c-65f156a220e7</msg>
<status status="PASS" starttime="20200402 12:49:18.098" endtime="20200402 12:49:18.374"></status>
</kw>
<msg timestamp="20200402 12:49:18.374" level="INFO">${SellerId} = cb541251-c3c2-49c5-b55c-65f156a220e7</msg>
<msg timestamp="20200402 12:49:18.374" level="INFO">${idnumber} = 86297206097508</msg>
<status status="PASS" starttime="20200402 12:49:17.564" endtime="20200402 12:49:18.374"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:18.376" level="INFO">${mobile} = 6774500995</msg>
<status status="PASS" starttime="20200402 12:49:18.376" endtime="20200402 12:49:18.376"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:18.377" level="INFO">${mobileNo} = 6774500995</msg>
<status status="PASS" starttime="20200402 12:49:18.376" endtime="20200402 12:49:18.377"></status>
</kw>
<msg timestamp="20200402 12:49:18.377" level="INFO">${MobNo} = 6774500995</msg>
<status status="PASS" starttime="20200402 12:49:18.375" endtime="20200402 12:49:18.377"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:18.378" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:18.378" endtime="20200402 12:49:18.379"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:18.379" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:18.379" endtime="20200402 12:49:18.379"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:18.380" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '6774500995', 'SELLERId': 'cb541251-c3c2-49c5-b55c-65f156a220e7', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:18.379" endtime="20200402 12:49:18.380"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:18.381" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1...</msg>
<status status="PASS" starttime="20200402 12:49:18.380" endtime="20200402 12:49:18.381"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:18.381" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:18.381" endtime="20200402 12:49:18.381"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:18.382" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1WFFpMng4Z1VLUG4wS3NXWFlzMy9TQ3VYUGtHbUFtMDdqeTRTTWxDMjBDd1p4T1I3bGlVbGJyTmlsam89IiwibmJmIjoxNTg1ODExOTU1LCJleHAiOjE1ODU4MTIwMTUsImlhdCI6MTU4NTgxMTk1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8NyQy_p7ghGiMXRpeU6MRblaZ-BieIKPbXD_tGt9_PQ'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "6774500995", "SELLERId": "cb541251-c3c2-49c5-b55c-65f156a220e7", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:18.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.382" endtime="20200402 12:49:18.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:18.908" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:18.908" endtime="20200402 12:49:18.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:18.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.908" endtime="20200402 12:49:18.909"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:18.909" endtime="20200402 12:49:18.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:18.910" endtime="20200402 12:49:18.910"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:18.377" endtime="20200402 12:49:18.910"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:18.912" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:18.912" endtime="20200402 12:49:18.912"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:18.913" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'cb541251-c3c2-49c5-b55c-65f156a220e7'}</msg>
<status status="PASS" starttime="20200402 12:49:18.912" endtime="20200402 12:49:18.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:18.913" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1...</msg>
<status status="PASS" starttime="20200402 12:49:18.913" endtime="20200402 12:49:18.913"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:18.914" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:18.914" endtime="20200402 12:49:18.914"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:18.915" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTlidEREd2RpQVNaTllpMk9aSmx1N3FwRlc1WFFpMng4Z1VLUG4wS3NXWFlzMy9TQ3VYUGtHbUFtMDdqeTRTTWxDMjBDd1p4T1I3bGlVbGJyTmlsam89IiwibmJmIjoxNTg1ODExOTU1LCJleHAiOjE1ODU4MTIwMTUsImlhdCI6MTU4NTgxMTk1NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8NyQy_p7ghGiMXRpeU6MRblaZ-BieIKPbXD_tGt9_PQ'} 
data={"escrowCompanyId": "001", "sellerID": "cb541251-c3c2-49c5-b55c-65f156a220e7"} 
json=None</msg>
<msg timestamp="20200402 12:49:20.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:18.915" endtime="20200402 12:49:20.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:20.319" level="INFO">{"escrowCompanyId":"001","sellerId":"cb541251-c3c2-49c5-b55c-65f156a220e7","idNumber":"86297206097508","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6774500995","email":"pavan67217@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:15","updateDate":"02/04/2020 02:19:16","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:20.319" endtime="20200402 12:49:20.320"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:20.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:20.320" endtime="20200402 12:49:20.321"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:18.911" endtime="20200402 12:49:20.321"></status>
</kw>
<doc>Valid: To Verify response if mobileNo parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:14.066" endtime="20200402 12:49:20.321" critical="yes"></status>
</test>
<test id="s1-t33" name="TC_43 Selle_Details_API Duplicate mobile no Status 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:23.327" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:20.325" endtime="20200402 12:49:23.327"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:23.329" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:23.328" endtime="20200402 12:49:23.329"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:23.330" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:23.329" endtime="20200402 12:49:23.330"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:23.330" endtime="20200402 12:49:23.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:23.331" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:23.330" endtime="20200402 12:49:23.331"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:23.331" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:23.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:23.331" endtime="20200402 12:49:23.781"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:23.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:23.781" endtime="20200402 12:49:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:23.782" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVjYVJSTkRsT2VVSzVCRXJ5Q0Q3cEh1OHV3ZXVzNUlZbUxONXpUNkxMQllZTDdZSG9RUC9qVmxmdkR6NUE9IiwibmJmIjoxNTg1ODExOTYxLCJleHAiOjE1ODU4MTIwMjEsImlhdCI6MTU4NTgxMTk2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.txT4jH2dD4NDsYEfaNdx6-MrUWm0HRowJQLDREN7DNU</msg>
<status status="PASS" starttime="20200402 12:49:23.781" endtime="20200402 12:49:23.782"></status>
</kw>
<msg timestamp="20200402 12:49:23.782" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVjYVJSTkR...</msg>
<status status="PASS" starttime="20200402 12:49:23.328" endtime="20200402 12:49:23.782"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:23.784" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:23.784" endtime="20200402 12:49:23.784"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:23.785" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:23.784" endtime="20200402 12:49:23.785"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:23.785" endtime="20200402 12:49:23.785"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:23.786" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:23.785" endtime="20200402 12:49:23.786"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:23.787" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:24.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:23.786" endtime="20200402 12:49:24.994"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:24.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:24.994" endtime="20200402 12:49:24.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:24.996" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3gxcTROZ015NjJpYlVWMjB4NlYzUGhGaXpUSkxEdkg4SGZ2NG02UGo5TGo5VDJDbDVKSzVZUmhLV0QyMG1BUEYrMUUwZlZtQnRFaGo3bkozYVJwRWM9IiwibmJmIjoxNTg1ODExOTYyLCJleHAiOjE1ODU4MTIwMjIsImlhdCI6MTU4NTgxMTk2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bKhn_RemLEWlvzKLqzRf4PTjy3Pf1IchzAhytBxxjj0</msg>
<status status="PASS" starttime="20200402 12:49:24.995" endtime="20200402 12:49:24.996"></status>
</kw>
<msg timestamp="20200402 12:49:24.997" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3gxcTROZ015NjJpYlVWMjB4NlYzUGhGaXpUSkxEdkg...</msg>
<status status="PASS" starttime="20200402 12:49:23.783" endtime="20200402 12:49:24.997"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:24.998" level="INFO">${Id} = 58883182260664</msg>
<status status="PASS" starttime="20200402 12:49:24.997" endtime="20200402 12:49:24.998"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:24.999" level="INFO">${IdNumber} = 58883182260664</msg>
<status status="PASS" starttime="20200402 12:49:24.998" endtime="20200402 12:49:24.999"></status>
</kw>
<msg timestamp="20200402 12:49:24.999" level="INFO">${idNum} = 58883182260664</msg>
<status status="PASS" starttime="20200402 12:49:24.997" endtime="20200402 12:49:24.999"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:25.000" level="INFO">${mobile} = 6798645591</msg>
<status status="PASS" starttime="20200402 12:49:25.000" endtime="20200402 12:49:25.000"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:25.001" level="INFO">${mobileNo} = 6798645591</msg>
<status status="PASS" starttime="20200402 12:49:25.001" endtime="20200402 12:49:25.001"></status>
</kw>
<msg timestamp="20200402 12:49:25.001" level="INFO">${MobNo} = 6798645591</msg>
<status status="PASS" starttime="20200402 12:49:24.999" endtime="20200402 12:49:25.001"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:25.003" level="INFO">${Emailnum} = 99608</msg>
<status status="PASS" starttime="20200402 12:49:25.002" endtime="20200402 12:49:25.003"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:25.004" level="INFO">${enum} = 99608</msg>
<status status="PASS" starttime="20200402 12:49:25.003" endtime="20200402 12:49:25.004"></status>
</kw>
<msg timestamp="20200402 12:49:25.004" level="INFO">${num} = 99608</msg>
<status status="PASS" starttime="20200402 12:49:25.002" endtime="20200402 12:49:25.004"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:25.005" level="INFO">${emailid} = pavan99608@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:25.005" endtime="20200402 12:49:25.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:25.007" level="INFO">${email} = pavan99608@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:25.006" endtime="20200402 12:49:25.007"></status>
</kw>
<msg timestamp="20200402 12:49:25.007" level="INFO">${emailid} = pavan99608@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:25.002" endtime="20200402 12:49:25.007"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:25.012" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:25.011" endtime="20200402 12:49:25.012"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:25.013" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:25.013" endtime="20200402 12:49:25.013"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:25.014" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:25.014" endtime="20200402 12:49:25.014"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:25.016" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:25.014" endtime="20200402 12:49:25.016"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:25.019" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:25.016" endtime="20200402 12:49:25.019"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:25.023" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '58883182260664', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6798645591', 'email': 'pavan99608@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:25.019" endtime="20200402 12:49:25.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:25.023" endtime="20200402 12:49:25.024"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:25.025" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3gxcTROZ015NjJpYlVWMjB4NlYzUGhGaXpU...</msg>
<status status="PASS" starttime="20200402 12:49:25.025" endtime="20200402 12:49:25.025"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:25.026" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:25.026" endtime="20200402 12:49:25.027"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:25.028" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3gxcTROZ015NjJpYlVWMjB4NlYzUGhGaXpUSkxEdkg4SGZ2NG02UGo5TGo5VDJDbDVKSzVZUmhLV0QyMG1BUEYrMUUwZlZtQnRFaGo3bkozYVJwRWM9IiwibmJmIjoxNTg1ODExOTYyLCJleHAiOjE1ODU4MTIwMjIsImlhdCI6MTU4NTgxMTk2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bKhn_RemLEWlvzKLqzRf4PTjy3Pf1IchzAhytBxxjj0'} 
data={"escrowCompanyId": "001", "idNumber": "58883182260664", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6798645591", "email": "pavan99608@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:25.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:25.027" endtime="20200402 12:49:25.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:25.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:25.283" endtime="20200402 12:49:25.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:25.284" endtime="20200402 12:49:25.284"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:25.284" endtime="20200402 12:49:25.285"></status>
</kw>
<msg timestamp="20200402 12:49:25.285" level="INFO">${sellerid} = 01d58352-e34d-4684-b201-aee1d1198138</msg>
<status status="PASS" starttime="20200402 12:49:25.007" endtime="20200402 12:49:25.285"></status>
</kw>
<msg timestamp="20200402 12:49:25.285" level="INFO">${SellerId} = 01d58352-e34d-4684-b201-aee1d1198138</msg>
<msg timestamp="20200402 12:49:25.285" level="INFO">${idnumber} = 58883182260664</msg>
<status status="PASS" starttime="20200402 12:49:23.783" endtime="20200402 12:49:25.286"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId1}</arg>
<arg>mobileNo</arg>
</arguments>
<assign>
<var>${MobNo1}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:25.287" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:25.287" endtime="20200402 12:49:25.288"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:25.288" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '541fcd0d-1e0a-4afa-baac-bbea92c34da9'}</msg>
<status status="PASS" starttime="20200402 12:49:25.288" endtime="20200402 12:49:25.288"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:25.289" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVj...</msg>
<status status="PASS" starttime="20200402 12:49:25.289" endtime="20200402 12:49:25.289"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:25.290" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:25.289" endtime="20200402 12:49:25.290"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:25.291" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVjYVJSTkRsT2VVSzVCRXJ5Q0Q3cEh1OHV3ZXVzNUlZbUxONXpUNkxMQllZTDdZSG9RUC9qVmxmdkR6NUE9IiwibmJmIjoxNTg1ODExOTYxLCJleHAiOjE1ODU4MTIwMjEsImlhdCI6MTU4NTgxMTk2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.txT4jH2dD4NDsYEfaNdx6-MrUWm0HRowJQLDREN7DNU'} 
data={"escrowCompanyId": "001", "sellerID": "541fcd0d-1e0a-4afa-baac-bbea92c34da9"} 
json=None</msg>
<msg timestamp="20200402 12:49:26.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:25.290" endtime="20200402 12:49:26.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:26.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:26.522" endtime="20200402 12:49:26.522"></status>
</kw>
<msg timestamp="20200402 12:49:26.523" level="INFO">${MobNo1} = 2429463000</msg>
<status status="PASS" starttime="20200402 12:49:25.286" endtime="20200402 12:49:26.523"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo1}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>U01</arg>
<arg>Duplicate ID card, email or mobile no.</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:26.524" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:26.524" endtime="20200402 12:49:26.525"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:26.525" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:26.525" endtime="20200402 12:49:26.525"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:26.526" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '2429463000', 'SELLERId': '01d58352-e34d-4684-b201-aee1d1198138', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:26.526" endtime="20200402 12:49:26.526"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:26.527" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVj...</msg>
<status status="PASS" starttime="20200402 12:49:26.526" endtime="20200402 12:49:26.527"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:26.527" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:26.527" endtime="20200402 12:49:26.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:26.528" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVjYVJSTkRsT2VVSzVCRXJ5Q0Q3cEh1OHV3ZXVzNUlZbUxONXpUNkxMQllZTDdZSG9RUC9qVmxmdkR6NUE9IiwibmJmIjoxNTg1ODExOTYxLCJleHAiOjE1ODU4MTIwMjEsImlhdCI6MTU4NTgxMTk2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.txT4jH2dD4NDsYEfaNdx6-MrUWm0HRowJQLDREN7DNU'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "2429463000", "SELLERId": "01d58352-e34d-4684-b201-aee1d1198138", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:27.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:26.528" endtime="20200402 12:49:27.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:27.073" level="INFO">{"responseCode":"U01","resDescription":"Duplicate ID card, email or mobile no."}</msg>
<status status="PASS" starttime="20200402 12:49:27.072" endtime="20200402 12:49:27.074"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:27.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:27.074" endtime="20200402 12:49:27.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:27.076" endtime="20200402 12:49:27.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:27.077" endtime="20200402 12:49:27.078"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:26.523" endtime="20200402 12:49:27.078"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:27.079" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:27.079" endtime="20200402 12:49:27.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:27.081" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '01d58352-e34d-4684-b201-aee1d1198138'}</msg>
<status status="PASS" starttime="20200402 12:49:27.080" endtime="20200402 12:49:27.081"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:27.081" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVj...</msg>
<status status="PASS" starttime="20200402 12:49:27.081" endtime="20200402 12:49:27.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:27.082" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:27.082" endtime="20200402 12:49:27.082"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:27.083" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVQ0SGFSSHY2K01nbkZkVUtReGJKMEQxeWVjYVJSTkRsT2VVSzVCRXJ5Q0Q3cEh1OHV3ZXVzNUlZbUxONXpUNkxMQllZTDdZSG9RUC9qVmxmdkR6NUE9IiwibmJmIjoxNTg1ODExOTYxLCJleHAiOjE1ODU4MTIwMjEsImlhdCI6MTU4NTgxMTk2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.txT4jH2dD4NDsYEfaNdx6-MrUWm0HRowJQLDREN7DNU'} 
data={"escrowCompanyId": "001", "sellerID": "01d58352-e34d-4684-b201-aee1d1198138"} 
json=None</msg>
<msg timestamp="20200402 12:49:28.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:27.082" endtime="20200402 12:49:28.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:28.259" level="INFO">{"escrowCompanyId":"001","sellerId":"01d58352-e34d-4684-b201-aee1d1198138","idNumber":"58883182260664","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6798645591","email":"pavan99608@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:22","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:28.258" endtime="20200402 12:49:28.259"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:28.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:28.259" endtime="20200402 12:49:28.260"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:27.078" endtime="20200402 12:49:28.260"></status>
</kw>
<doc>Duplicate: To check Mobile number is entered duplicate (duplicate mobile number should belong to Seller status = Active) and request is send with all mandatory fields</doc>
<tags>
<tag>U01</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:20.323" endtime="20200402 12:49:28.260" critical="yes"></status>
</test>
<test id="s1-t34" name="TC_44 Selle_Details_API Duplicate mobile no Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:31.264" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:28.263" endtime="20200402 12:49:31.264"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:31.266" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:31.265" endtime="20200402 12:49:31.266"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:31.267" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:31.266" endtime="20200402 12:49:31.267"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:31.267" endtime="20200402 12:49:31.268"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:31.270" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:31.269" endtime="20200402 12:49:31.270"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:31.271" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:35.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:31.270" endtime="20200402 12:49:35.415"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:35.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:35.416" endtime="20200402 12:49:35.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:35.417" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2xzT3NRQ0h4MldtMDdQYTJSTG1pUHBoWkV4d3JGVWw0aWhFaCsrQzkwcjlzQWZwdU8rVS9qNmM9IiwibmJmIjoxNTg1ODExOTcyLCJleHAiOjE1ODU4MTIwMzIsImlhdCI6MTU4NTgxMTk3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p9Y-UdLR-b_VFmnfO7khuDMJDvva2XKMicSXMHd2uYM</msg>
<status status="PASS" starttime="20200402 12:49:35.417" endtime="20200402 12:49:35.418"></status>
</kw>
<msg timestamp="20200402 12:49:35.418" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2x...</msg>
<status status="PASS" starttime="20200402 12:49:31.265" endtime="20200402 12:49:35.418"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Idnum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:35.420" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:35.420" endtime="20200402 12:49:35.421"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:35.421" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:35.421" endtime="20200402 12:49:35.421"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:35.422" endtime="20200402 12:49:35.422"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:35.422" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:35.422" endtime="20200402 12:49:35.422"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:35.423" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:43.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:35.423" endtime="20200402 12:49:43.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:43.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:43.386" endtime="20200402 12:49:43.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:43.387" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMWk0aE5XckxFbXdHa3lLL0c1T0dpSVB2VmFSRFNyZndUZ1NOYmIyN1FCTmhCMzZmQ0dtQ2svT0xzeVlBeHR1UkdwanZkTGRYSVFiekQyTnlXclVZNGc9IiwibmJmIjoxNTg1ODExOTgwLCJleHAiOjE1ODU4MTIwNDAsImlhdCI6MTU4NTgxMTk4MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xPUxuN1HIvLiRF3IjNYxexaJtz_-Pzrtheng0--pHKk</msg>
<status status="PASS" starttime="20200402 12:49:43.387" endtime="20200402 12:49:43.387"></status>
</kw>
<msg timestamp="20200402 12:49:43.388" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMWk0aE5XckxFbXdHa3lLL0c1T0dpSVB2VmFSRFNyZnd...</msg>
<status status="PASS" starttime="20200402 12:49:35.419" endtime="20200402 12:49:43.388"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:43.389" level="INFO">${Id} = 06157543184906</msg>
<status status="PASS" starttime="20200402 12:49:43.388" endtime="20200402 12:49:43.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:43.389" level="INFO">${IdNumber} = 06157543184906</msg>
<status status="PASS" starttime="20200402 12:49:43.389" endtime="20200402 12:49:43.389"></status>
</kw>
<msg timestamp="20200402 12:49:43.390" level="INFO">${idNum} = 06157543184906</msg>
<status status="PASS" starttime="20200402 12:49:43.388" endtime="20200402 12:49:43.390"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:43.390" level="INFO">${mobile} = 0617175317</msg>
<status status="PASS" starttime="20200402 12:49:43.390" endtime="20200402 12:49:43.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:43.391" level="INFO">${mobileNo} = 0617175317</msg>
<status status="PASS" starttime="20200402 12:49:43.391" endtime="20200402 12:49:43.391"></status>
</kw>
<msg timestamp="20200402 12:49:43.391" level="INFO">${MobNo} = 0617175317</msg>
<status status="PASS" starttime="20200402 12:49:43.390" endtime="20200402 12:49:43.391"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:43.393" level="INFO">${Emailnum} = 73506</msg>
<status status="PASS" starttime="20200402 12:49:43.392" endtime="20200402 12:49:43.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:43.393" level="INFO">${enum} = 73506</msg>
<status status="PASS" starttime="20200402 12:49:43.393" endtime="20200402 12:49:43.393"></status>
</kw>
<msg timestamp="20200402 12:49:43.393" level="INFO">${num} = 73506</msg>
<status status="PASS" starttime="20200402 12:49:43.392" endtime="20200402 12:49:43.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:43.394" level="INFO">${emailid} = pavan73506@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:43.394" endtime="20200402 12:49:43.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:43.394" level="INFO">${email} = pavan73506@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:43.394" endtime="20200402 12:49:43.394"></status>
</kw>
<msg timestamp="20200402 12:49:43.395" level="INFO">${emailid} = pavan73506@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:43.392" endtime="20200402 12:49:43.395"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:43.397" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:43.397" endtime="20200402 12:49:43.397"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:43.398" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:43.398" endtime="20200402 12:49:43.398"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:43.398" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:43.398" endtime="20200402 12:49:43.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:43.400" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:43.399" endtime="20200402 12:49:43.400"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:43.402" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:43.400" endtime="20200402 12:49:43.402"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:43.404" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '06157543184906', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0617175317', 'email': 'pavan73506@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:43.402" endtime="20200402 12:49:43.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:43.404" endtime="20200402 12:49:43.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:43.406" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMWk0aE5XckxFbXdHa3lLL0c1T0dpSVB2VmFS...</msg>
<status status="PASS" starttime="20200402 12:49:43.405" endtime="20200402 12:49:43.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:43.407" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:43.406" endtime="20200402 12:49:43.407"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:43.407" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMWk0aE5XckxFbXdHa3lLL0c1T0dpSVB2VmFSRFNyZndUZ1NOYmIyN1FCTmhCMzZmQ0dtQ2svT0xzeVlBeHR1UkdwanZkTGRYSVFiekQyTnlXclVZNGc9IiwibmJmIjoxNTg1ODExOTgwLCJleHAiOjE1ODU4MTIwNDAsImlhdCI6MTU4NTgxMTk4MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xPUxuN1HIvLiRF3IjNYxexaJtz_-Pzrtheng0--pHKk'} 
data={"escrowCompanyId": "001", "idNumber": "06157543184906", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0617175317", "email": "pavan73506@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:44.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:43.407" endtime="20200402 12:49:44.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:44.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:44.647" endtime="20200402 12:49:44.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:44.648" endtime="20200402 12:49:44.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:44.648" endtime="20200402 12:49:44.649"></status>
</kw>
<msg timestamp="20200402 12:49:44.649" level="INFO">${sellerid} = 75c7358c-1969-493d-af17-b9a1d04f9d29</msg>
<status status="PASS" starttime="20200402 12:49:43.395" endtime="20200402 12:49:44.649"></status>
</kw>
<msg timestamp="20200402 12:49:44.649" level="INFO">${SellerId} = 75c7358c-1969-493d-af17-b9a1d04f9d29</msg>
<msg timestamp="20200402 12:49:44.649" level="INFO">${Idnum} = 06157543184906</msg>
<status status="PASS" starttime="20200402 12:49:35.419" endtime="20200402 12:49:44.649"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerIdno1}</var>
<var>${Idnum`}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:44.652" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:44.651" endtime="20200402 12:49:44.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:44.654" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:44.653" endtime="20200402 12:49:44.654"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:44.654" endtime="20200402 12:49:44.655"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:44.656" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:44.655" endtime="20200402 12:49:44.656"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:44.657" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:45.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:44.656" endtime="20200402 12:49:45.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:45.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.126" endtime="20200402 12:49:45.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:45.127" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0cwSkdOdHhaelNKWU1rWUhtN212QVE5eXVybU1ldFlITnJ4by9tLzJCSTgzaTdCUTlhRmxQWVpCS1JhVXZJVStFOTd1ejdVaXd6bkZ0TE83bGFmTk09IiwibmJmIjoxNTg1ODExOTgyLCJleHAiOjE1ODU4MTIwNDIsImlhdCI6MTU4NTgxMTk4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.wHIbMJv97hpOkthZSnJJAc7-IysBTBkIw9iCkP4rHHc</msg>
<status status="PASS" starttime="20200402 12:49:45.127" endtime="20200402 12:49:45.127"></status>
</kw>
<msg timestamp="20200402 12:49:45.128" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0cwSkdOdHhaelNKWU1rWUhtN212QVE5eXVybU1ldFl...</msg>
<status status="PASS" starttime="20200402 12:49:44.651" endtime="20200402 12:49:45.128"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:45.129" level="INFO">${Id} = 97247338956966</msg>
<status status="PASS" starttime="20200402 12:49:45.128" endtime="20200402 12:49:45.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:45.129" level="INFO">${IdNumber} = 97247338956966</msg>
<status status="PASS" starttime="20200402 12:49:45.129" endtime="20200402 12:49:45.129"></status>
</kw>
<msg timestamp="20200402 12:49:45.129" level="INFO">${idNum} = 97247338956966</msg>
<status status="PASS" starttime="20200402 12:49:45.128" endtime="20200402 12:49:45.129"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:45.130" level="INFO">${mobile} = 0460986128</msg>
<status status="PASS" starttime="20200402 12:49:45.130" endtime="20200402 12:49:45.130"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:45.131" level="INFO">${mobileNo} = 0460986128</msg>
<status status="PASS" starttime="20200402 12:49:45.130" endtime="20200402 12:49:45.131"></status>
</kw>
<msg timestamp="20200402 12:49:45.131" level="INFO">${MobNo} = 0460986128</msg>
<status status="PASS" starttime="20200402 12:49:45.130" endtime="20200402 12:49:45.131"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:45.132" level="INFO">${Emailnum} = 95870</msg>
<status status="PASS" starttime="20200402 12:49:45.132" endtime="20200402 12:49:45.132"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:45.133" level="INFO">${enum} = 95870</msg>
<status status="PASS" starttime="20200402 12:49:45.132" endtime="20200402 12:49:45.133"></status>
</kw>
<msg timestamp="20200402 12:49:45.133" level="INFO">${num} = 95870</msg>
<status status="PASS" starttime="20200402 12:49:45.132" endtime="20200402 12:49:45.133"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:45.134" level="INFO">${emailid} = pavan95870@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:45.133" endtime="20200402 12:49:45.134"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:45.134" level="INFO">${email} = pavan95870@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:45.134" endtime="20200402 12:49:45.134"></status>
</kw>
<msg timestamp="20200402 12:49:45.134" level="INFO">${emailid} = pavan95870@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:45.131" endtime="20200402 12:49:45.134"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:45.137" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:45.137" endtime="20200402 12:49:45.138"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:45.138" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:45.138" endtime="20200402 12:49:45.138"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:45.139" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:45.139" endtime="20200402 12:49:45.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:45.140" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:45.139" endtime="20200402 12:49:45.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:45.142" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:45.140" endtime="20200402 12:49:45.142"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:45.144" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '97247338956966', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0460986128', 'email': 'pavan95870@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:45.142" endtime="20200402 12:49:45.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:45.145" endtime="20200402 12:49:45.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:45.146" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0cwSkdOdHhaelNKWU1rWUhtN212QVE5eXVy...</msg>
<status status="PASS" starttime="20200402 12:49:45.146" endtime="20200402 12:49:45.146"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:45.147" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:45.146" endtime="20200402 12:49:45.147"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:45.148" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0cwSkdOdHhaelNKWU1rWUhtN212QVE5eXVybU1ldFlITnJ4by9tLzJCSTgzaTdCUTlhRmxQWVpCS1JhVXZJVStFOTd1ejdVaXd6bkZ0TE83bGFmTk09IiwibmJmIjoxNTg1ODExOTgyLCJleHAiOjE1ODU4MTIwNDIsImlhdCI6MTU4NTgxMTk4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.wHIbMJv97hpOkthZSnJJAc7-IysBTBkIw9iCkP4rHHc'} 
data={"escrowCompanyId": "001", "idNumber": "97247338956966", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0460986128", "email": "pavan95870@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:45.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.147" endtime="20200402 12:49:45.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:45.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.381" endtime="20200402 12:49:45.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:45.382" endtime="20200402 12:49:45.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:45.382" endtime="20200402 12:49:45.383"></status>
</kw>
<msg timestamp="20200402 12:49:45.383" level="INFO">${sellerid} = 2db39517-74a0-47a4-9648-f1d2b6a7e86b</msg>
<status status="PASS" starttime="20200402 12:49:45.135" endtime="20200402 12:49:45.383"></status>
</kw>
<msg timestamp="20200402 12:49:45.384" level="INFO">${SellerIdno1} = 2db39517-74a0-47a4-9648-f1d2b6a7e86b</msg>
<msg timestamp="20200402 12:49:45.384" level="INFO">${Idnum`} = 97247338956966</msg>
<status status="PASS" starttime="20200402 12:49:44.650" endtime="20200402 12:49:45.384"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerIdno1}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:45.385" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:45.385" endtime="20200402 12:49:45.386"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:49:45.386" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:49:45.386" endtime="20200402 12:49:45.386"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:45.387" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '2db39517-74a0-47a4-9648-f1d2b6a7e86b', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:49:45.387" endtime="20200402 12:49:45.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:45.388" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8r...</msg>
<status status="PASS" starttime="20200402 12:49:45.387" endtime="20200402 12:49:45.388"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:45.388" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:45.388" endtime="20200402 12:49:45.388"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:45.389" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2xzT3NRQ0h4MldtMDdQYTJSTG1pUHBoWkV4d3JGVWw0aWhFaCsrQzkwcjlzQWZwdU8rVS9qNmM9IiwibmJmIjoxNTg1ODExOTcyLCJleHAiOjE1ODU4MTIwMzIsImlhdCI6MTU4NTgxMTk3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p9Y-UdLR-b_VFmnfO7khuDMJDvva2XKMicSXMHd2uYM'} 
data={"escrowCompanyId": "001", "SELLERId": "2db39517-74a0-47a4-9648-f1d2b6a7e86b", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:49:45.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.388" endtime="20200402 12:49:45.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:45.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.920" endtime="20200402 12:49:45.921"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:45.385" endtime="20200402 12:49:45.921"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerIdno1}</arg>
<arg>mobileNo</arg>
</arguments>
<assign>
<var>${MobNo1}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:45.923" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:45.922" endtime="20200402 12:49:45.923"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:45.924" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '2db39517-74a0-47a4-9648-f1d2b6a7e86b'}</msg>
<status status="PASS" starttime="20200402 12:49:45.923" endtime="20200402 12:49:45.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:45.925" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8r...</msg>
<status status="PASS" starttime="20200402 12:49:45.924" endtime="20200402 12:49:45.925"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:45.926" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:45.925" endtime="20200402 12:49:45.926"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:45.927" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2xzT3NRQ0h4MldtMDdQYTJSTG1pUHBoWkV4d3JGVWw0aWhFaCsrQzkwcjlzQWZwdU8rVS9qNmM9IiwibmJmIjoxNTg1ODExOTcyLCJleHAiOjE1ODU4MTIwMzIsImlhdCI6MTU4NTgxMTk3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p9Y-UdLR-b_VFmnfO7khuDMJDvva2XKMicSXMHd2uYM'} 
data={"escrowCompanyId": "001", "sellerID": "2db39517-74a0-47a4-9648-f1d2b6a7e86b"} 
json=None</msg>
<msg timestamp="20200402 12:49:47.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:45.926" endtime="20200402 12:49:47.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:47.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:47.674" endtime="20200402 12:49:47.674"></status>
</kw>
<msg timestamp="20200402 12:49:47.675" level="INFO">${MobNo1} = 0460986128</msg>
<status status="PASS" starttime="20200402 12:49:45.921" endtime="20200402 12:49:47.675"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo1}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:47.677" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:47.677" endtime="20200402 12:49:47.677"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:47.678" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:47.677" endtime="20200402 12:49:47.678"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:47.678" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '0460986128', 'SELLERId': '75c7358c-1969-493d-af17-b9a1d04f9d29', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:47.678" endtime="20200402 12:49:47.679"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:47.679" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8r...</msg>
<status status="PASS" starttime="20200402 12:49:47.679" endtime="20200402 12:49:47.679"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:47.680" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:47.679" endtime="20200402 12:49:47.680"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:47.680" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2xzT3NRQ0h4MldtMDdQYTJSTG1pUHBoWkV4d3JGVWw0aWhFaCsrQzkwcjlzQWZwdU8rVS9qNmM9IiwibmJmIjoxNTg1ODExOTcyLCJleHAiOjE1ODU4MTIwMzIsImlhdCI6MTU4NTgxMTk3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p9Y-UdLR-b_VFmnfO7khuDMJDvva2XKMicSXMHd2uYM'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "0460986128", "SELLERId": "75c7358c-1969-493d-af17-b9a1d04f9d29", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:48.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:47.680" endtime="20200402 12:49:48.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:48.200" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:48.200" endtime="20200402 12:49:48.201"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:48.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:48.201" endtime="20200402 12:49:48.202"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:48.202" endtime="20200402 12:49:48.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:48.203" endtime="20200402 12:49:48.205"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:47.676" endtime="20200402 12:49:48.205"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:48.207" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:48.207" endtime="20200402 12:49:48.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:48.208" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '75c7358c-1969-493d-af17-b9a1d04f9d29'}</msg>
<status status="PASS" starttime="20200402 12:49:48.208" endtime="20200402 12:49:48.208"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:48.209" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8r...</msg>
<status status="PASS" starttime="20200402 12:49:48.209" endtime="20200402 12:49:48.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:48.210" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:48.210" endtime="20200402 12:49:48.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:48.211" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3ZralJ5MmRvZy9GSTFWa3NBaVBwUTYyRS8rQktOc2xzT3NRQ0h4MldtMDdQYTJSTG1pUHBoWkV4d3JGVWw0aWhFaCsrQzkwcjlzQWZwdU8rVS9qNmM9IiwibmJmIjoxNTg1ODExOTcyLCJleHAiOjE1ODU4MTIwMzIsImlhdCI6MTU4NTgxMTk3MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.p9Y-UdLR-b_VFmnfO7khuDMJDvva2XKMicSXMHd2uYM'} 
data={"escrowCompanyId": "001", "sellerID": "75c7358c-1969-493d-af17-b9a1d04f9d29"} 
json=None</msg>
<msg timestamp="20200402 12:49:49.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:48.211" endtime="20200402 12:49:49.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:49.925" level="INFO">{"escrowCompanyId":"001","sellerId":"75c7358c-1969-493d-af17-b9a1d04f9d29","idNumber":"06157543184906","typeOfId":3,"mobileCountryCode":"67","mobileNo":"0460986128","email":"pavan73506@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:42","updateDate":"02/04/2020 02:19:45","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:49.924" endtime="20200402 12:49:49.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:49.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:49.926" endtime="20200402 12:49:49.926"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:48.206" endtime="20200402 12:49:49.926"></status>
</kw>
<doc>Duplicate : To check Mobile number is entered duplicate (duplicate mobile number should belong to Seller status = terminated ) and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:28.261" endtime="20200402 12:49:49.927" critical="yes"></status>
</test>
<test id="s1-t35" name="TC_45 Selle_Details_API Duplicate mobile no Status 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:49:52.931" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:49.930" endtime="20200402 12:49:52.931"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:52.932" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:52.932" endtime="20200402 12:49:52.933"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:52.933" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:52.933" endtime="20200402 12:49:52.933"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:52.934" endtime="20200402 12:49:52.934"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:52.934" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:52.934" endtime="20200402 12:49:52.934"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:52.935" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:54.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:52.935" endtime="20200402 12:49:54.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:54.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:54.165" endtime="20200402 12:49:54.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.166" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXhoYVB0OUVXdEZBdEtZRG9aTTY0emR3TWVBbVk3MnAxVndiVUNmVUVIeW1seXNFQ0tudHd6b1htMmlvMmc9IiwibmJmIjoxNTg1ODExOTkxLCJleHAiOjE1ODU4MTIwNTEsImlhdCI6MTU4NTgxMTk5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tWlOxY-OXvgdaoPObeNjBCa5wf2DsD056VDyoWoSA-c</msg>
<status status="PASS" starttime="20200402 12:49:54.165" endtime="20200402 12:49:54.166"></status>
</kw>
<msg timestamp="20200402 12:49:54.166" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXhoYVB0OUV...</msg>
<status status="PASS" starttime="20200402 12:49:52.932" endtime="20200402 12:49:54.166"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Idnum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.167" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:54.167" endtime="20200402 12:49:54.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:54.168" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:49:54.168" endtime="20200402 12:49:54.168"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:54.168" endtime="20200402 12:49:54.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:49:54.169" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:49:54.169" endtime="20200402 12:49:54.169"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:54.170" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:49:54.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:54.169" endtime="20200402 12:49:54.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:54.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:54.696" endtime="20200402 12:49:54.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.697" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEd5LzFYS05UK1UzSjdiMktDSjhJRmVuZmg1NXFMbysxREUyMUZpaVFwbGhHSFRreXdsQWVYY0xQWEJjMU9SbFZ4SlByRWUxYWtuR0dTQ05NSGJONlE9IiwibmJmIjoxNTg1ODExOTkyLCJleHAiOjE1ODU4MTIwNTIsImlhdCI6MTU4NTgxMTk5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HkogoGZPhWm17pIy_ZJtNDWaKcTqYvOF6IlrfmLQ0X0</msg>
<status status="PASS" starttime="20200402 12:49:54.696" endtime="20200402 12:49:54.697"></status>
</kw>
<msg timestamp="20200402 12:49:54.697" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEd5LzFYS05UK1UzSjdiMktDSjhJRmVuZmg1NXFMbys...</msg>
<status status="PASS" starttime="20200402 12:49:54.166" endtime="20200402 12:49:54.697"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:49:54.698" level="INFO">${Id} = 59017673237498</msg>
<status status="PASS" starttime="20200402 12:49:54.698" endtime="20200402 12:49:54.698"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.699" level="INFO">${IdNumber} = 59017673237498</msg>
<status status="PASS" starttime="20200402 12:49:54.698" endtime="20200402 12:49:54.699"></status>
</kw>
<msg timestamp="20200402 12:49:54.699" level="INFO">${idNum} = 59017673237498</msg>
<status status="PASS" starttime="20200402 12:49:54.697" endtime="20200402 12:49:54.699"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:49:54.700" level="INFO">${mobile} = 5481170901</msg>
<status status="PASS" starttime="20200402 12:49:54.699" endtime="20200402 12:49:54.700"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.700" level="INFO">${mobileNo} = 5481170901</msg>
<status status="PASS" starttime="20200402 12:49:54.700" endtime="20200402 12:49:54.700"></status>
</kw>
<msg timestamp="20200402 12:49:54.701" level="INFO">${MobNo} = 5481170901</msg>
<status status="PASS" starttime="20200402 12:49:54.699" endtime="20200402 12:49:54.701"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:49:54.702" level="INFO">${Emailnum} = 01344</msg>
<status status="PASS" starttime="20200402 12:49:54.702" endtime="20200402 12:49:54.702"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.702" level="INFO">${enum} = 01344</msg>
<status status="PASS" starttime="20200402 12:49:54.702" endtime="20200402 12:49:54.703"></status>
</kw>
<msg timestamp="20200402 12:49:54.703" level="INFO">${num} = 01344</msg>
<status status="PASS" starttime="20200402 12:49:54.701" endtime="20200402 12:49:54.703"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:49:54.703" level="INFO">${emailid} = pavan01344@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:54.703" endtime="20200402 12:49:54.703"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:49:54.704" level="INFO">${email} = pavan01344@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:54.704" endtime="20200402 12:49:54.704"></status>
</kw>
<msg timestamp="20200402 12:49:54.704" level="INFO">${emailid} = pavan01344@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:49:54.701" endtime="20200402 12:49:54.704"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:54.707" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:54.707" endtime="20200402 12:49:54.708"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:49:54.708" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:49:54.708" endtime="20200402 12:49:54.708"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:54.709" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:54.708" endtime="20200402 12:49:54.709"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:49:54.710" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:54.709" endtime="20200402 12:49:54.710"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:49:54.711" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:49:54.710" endtime="20200402 12:49:54.711"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:54.714" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '59017673237498', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5481170901', 'email': 'pavan01344@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:49:54.712" endtime="20200402 12:49:54.714"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:54.714" endtime="20200402 12:49:54.715"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:54.715" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEd5LzFYS05UK1UzSjdiMktDSjhJRmVuZmg1...</msg>
<status status="PASS" starttime="20200402 12:49:54.715" endtime="20200402 12:49:54.716"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:54.716" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:54.716" endtime="20200402 12:49:54.716"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:54.717" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEd5LzFYS05UK1UzSjdiMktDSjhJRmVuZmg1NXFMbysxREUyMUZpaVFwbGhHSFRreXdsQWVYY0xQWEJjMU9SbFZ4SlByRWUxYWtuR0dTQ05NSGJONlE9IiwibmJmIjoxNTg1ODExOTkyLCJleHAiOjE1ODU4MTIwNTIsImlhdCI6MTU4NTgxMTk5MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HkogoGZPhWm17pIy_ZJtNDWaKcTqYvOF6IlrfmLQ0X0'} 
data={"escrowCompanyId": "001", "idNumber": "59017673237498", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5481170901", "email": "pavan01344@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:49:56.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:54.716" endtime="20200402 12:49:56.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:56.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:56.126" endtime="20200402 12:49:56.127"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:56.127" endtime="20200402 12:49:56.127"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:56.127" endtime="20200402 12:49:56.128"></status>
</kw>
<msg timestamp="20200402 12:49:56.128" level="INFO">${sellerid} = 9a7bad44-8186-4ff5-9eb7-a1128460ae49</msg>
<status status="PASS" starttime="20200402 12:49:54.704" endtime="20200402 12:49:56.128"></status>
</kw>
<msg timestamp="20200402 12:49:56.128" level="INFO">${SellerId} = 9a7bad44-8186-4ff5-9eb7-a1128460ae49</msg>
<msg timestamp="20200402 12:49:56.128" level="INFO">${Idnum} = 59017673237498</msg>
<status status="PASS" starttime="20200402 12:49:54.166" endtime="20200402 12:49:56.128"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>mobileNo</arg>
</arguments>
<assign>
<var>${MobNo1}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:56.130" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:56.130" endtime="20200402 12:49:56.131"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:56.131" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '9a7bad44-8186-4ff5-9eb7-a1128460ae49'}</msg>
<status status="PASS" starttime="20200402 12:49:56.131" endtime="20200402 12:49:56.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:56.132" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXho...</msg>
<status status="PASS" starttime="20200402 12:49:56.131" endtime="20200402 12:49:56.132"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:56.132" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:56.132" endtime="20200402 12:49:56.132"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:56.133" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXhoYVB0OUVXdEZBdEtZRG9aTTY0emR3TWVBbVk3MnAxVndiVUNmVUVIeW1seXNFQ0tudHd6b1htMmlvMmc9IiwibmJmIjoxNTg1ODExOTkxLCJleHAiOjE1ODU4MTIwNTEsImlhdCI6MTU4NTgxMTk5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tWlOxY-OXvgdaoPObeNjBCa5wf2DsD056VDyoWoSA-c'} 
data={"escrowCompanyId": "001", "sellerID": "9a7bad44-8186-4ff5-9eb7-a1128460ae49"} 
json=None</msg>
<msg timestamp="20200402 12:49:57.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:56.133" endtime="20200402 12:49:57.804"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:57.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:57.805" endtime="20200402 12:49:57.805"></status>
</kw>
<msg timestamp="20200402 12:49:57.805" level="INFO">${MobNo1} = 5481170901</msg>
<status status="PASS" starttime="20200402 12:49:56.129" endtime="20200402 12:49:57.806"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo1}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:57.807" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:57.807" endtime="20200402 12:49:57.808"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:49:57.808" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:49:57.808" endtime="20200402 12:49:57.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:57.809" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '5481170901', 'SELLERId': '9a7bad44-8186-4ff5-9eb7-a1128460ae49', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:49:57.809" endtime="20200402 12:49:57.809"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:57.810" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXho...</msg>
<status status="PASS" starttime="20200402 12:49:57.810" endtime="20200402 12:49:57.810"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:57.811" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:57.810" endtime="20200402 12:49:57.811"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:57.811" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXhoYVB0OUVXdEZBdEtZRG9aTTY0emR3TWVBbVk3MnAxVndiVUNmVUVIeW1seXNFQ0tudHd6b1htMmlvMmc9IiwibmJmIjoxNTg1ODExOTkxLCJleHAiOjE1ODU4MTIwNTEsImlhdCI6MTU4NTgxMTk5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tWlOxY-OXvgdaoPObeNjBCa5wf2DsD056VDyoWoSA-c'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "5481170901", "SELLERId": "9a7bad44-8186-4ff5-9eb7-a1128460ae49", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:49:58.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:57.811" endtime="20200402 12:49:58.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:58.373" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:58.372" endtime="20200402 12:49:58.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:58.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:58.373" endtime="20200402 12:49:58.374"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:58.374" endtime="20200402 12:49:58.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:49:58.375" endtime="20200402 12:49:58.375"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:57.806" endtime="20200402 12:49:58.375"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:49:58.377" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:49:58.377" endtime="20200402 12:49:58.377"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:49:58.378" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '9a7bad44-8186-4ff5-9eb7-a1128460ae49'}</msg>
<status status="PASS" starttime="20200402 12:49:58.378" endtime="20200402 12:49:58.378"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:49:58.379" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXho...</msg>
<status status="PASS" starttime="20200402 12:49:58.378" endtime="20200402 12:49:58.379"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:49:58.380" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:49:58.379" endtime="20200402 12:49:58.380"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:49:58.381" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qek54MEhmQkRUVEV6ZW5WdldmdlJHZXIyTXhoYVB0OUVXdEZBdEtZRG9aTTY0emR3TWVBbVk3MnAxVndiVUNmVUVIeW1seXNFQ0tudHd6b1htMmlvMmc9IiwibmJmIjoxNTg1ODExOTkxLCJleHAiOjE1ODU4MTIwNTEsImlhdCI6MTU4NTgxMTk5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tWlOxY-OXvgdaoPObeNjBCa5wf2DsD056VDyoWoSA-c'} 
data={"escrowCompanyId": "001", "sellerID": "9a7bad44-8186-4ff5-9eb7-a1128460ae49"} 
json=None</msg>
<msg timestamp="20200402 12:49:58.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:49:58.380" endtime="20200402 12:49:58.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:49:58.995" level="INFO">{"escrowCompanyId":"001","sellerId":"9a7bad44-8186-4ff5-9eb7-a1128460ae49","idNumber":"59017673237498","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5481170901","email":"pavan01344@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:19:53","updateDate":"02/04/2020 02:19:55","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:49:58.995" endtime="20200402 12:49:58.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:49:58.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:49:58.996" endtime="20200402 12:49:58.997"></status>
</kw>
<status status="PASS" starttime="20200402 12:49:58.376" endtime="20200402 12:49:58.997"></status>
</kw>
<doc>Duplicate: To check Mobile number is entered duplicate with own user (duplicate mobile number should belong to Seller status = Active) and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:49.928" endtime="20200402 12:49:58.997" critical="yes"></status>
</test>
<test id="s1-t36" name="TC_46 Selle_Details_API Duplicate mobile no Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:02.002" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:49:59.000" endtime="20200402 12:50:02.002"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:02.003" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:02.003" endtime="20200402 12:50:02.004"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:02.004" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:02.004" endtime="20200402 12:50:02.004"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:02.005" endtime="20200402 12:50:02.005"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:02.005" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:02.005" endtime="20200402 12:50:02.005"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:02.006" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:02.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:02.006" endtime="20200402 12:50:02.333"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:02.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:02.333" endtime="20200402 12:50:02.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:02.334" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVcwbysvNllOV2hZVXFZM0tJSnAyak1KS3FMa1lrQUlqMy9Pak54NDk2Tk1CL3l4YkJUeU45bXM9IiwibmJmIjoxNTg1ODExOTk5LCJleHAiOjE1ODU4MTIwNTksImlhdCI6MTU4NTgxMTk5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QMIw4psESeTbXXMm6kKOKfHV0k9aend40KkWB7aBb7Y</msg>
<status status="PASS" starttime="20200402 12:50:02.334" endtime="20200402 12:50:02.334"></status>
</kw>
<msg timestamp="20200402 12:50:02.334" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVc...</msg>
<status status="PASS" starttime="20200402 12:50:02.003" endtime="20200402 12:50:02.334"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${Idnum}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:02.336" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:02.336" endtime="20200402 12:50:02.337"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:02.337" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:02.337" endtime="20200402 12:50:02.337"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:02.337" endtime="20200402 12:50:02.338"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:02.338" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:02.338" endtime="20200402 12:50:02.338"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:02.339" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:03.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:02.338" endtime="20200402 12:50:03.633"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:03.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:03.634" endtime="20200402 12:50:03.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:03.635" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFFIR2hvUlMvZFlET01aRktuaGdjblp0ZlJtekppd2VKUVk2cUdxRndnSmtPWnB5QWt4MW5JMDRsNDZYWjNCbFQxWWQ5RnRUNzVCSCt2dFlXbVpxcnc9IiwibmJmIjoxNTg1ODEyMDAxLCJleHAiOjE1ODU4MTIwNjEsImlhdCI6MTU4NTgxMjAwMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.E14KsmbGhR3QE95M4WeN7OPPQnuKmi8IqlK99daOiQo</msg>
<status status="PASS" starttime="20200402 12:50:03.635" endtime="20200402 12:50:03.635"></status>
</kw>
<msg timestamp="20200402 12:50:03.636" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFFIR2hvUlMvZFlET01aRktuaGdjblp0ZlJtekppd2V...</msg>
<status status="PASS" starttime="20200402 12:50:02.335" endtime="20200402 12:50:03.636"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:03.637" level="INFO">${Id} = 65349055005250</msg>
<status status="PASS" starttime="20200402 12:50:03.636" endtime="20200402 12:50:03.637"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:03.637" level="INFO">${IdNumber} = 65349055005250</msg>
<status status="PASS" starttime="20200402 12:50:03.637" endtime="20200402 12:50:03.637"></status>
</kw>
<msg timestamp="20200402 12:50:03.638" level="INFO">${idNum} = 65349055005250</msg>
<status status="PASS" starttime="20200402 12:50:03.636" endtime="20200402 12:50:03.638"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:03.638" level="INFO">${mobile} = 2999536781</msg>
<status status="PASS" starttime="20200402 12:50:03.638" endtime="20200402 12:50:03.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:03.639" level="INFO">${mobileNo} = 2999536781</msg>
<status status="PASS" starttime="20200402 12:50:03.639" endtime="20200402 12:50:03.639"></status>
</kw>
<msg timestamp="20200402 12:50:03.639" level="INFO">${MobNo} = 2999536781</msg>
<status status="PASS" starttime="20200402 12:50:03.638" endtime="20200402 12:50:03.639"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:03.640" level="INFO">${Emailnum} = 83669</msg>
<status status="PASS" starttime="20200402 12:50:03.640" endtime="20200402 12:50:03.640"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:03.641" level="INFO">${enum} = 83669</msg>
<status status="PASS" starttime="20200402 12:50:03.641" endtime="20200402 12:50:03.641"></status>
</kw>
<msg timestamp="20200402 12:50:03.641" level="INFO">${num} = 83669</msg>
<status status="PASS" starttime="20200402 12:50:03.640" endtime="20200402 12:50:03.641"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:03.642" level="INFO">${emailid} = pavan83669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:03.641" endtime="20200402 12:50:03.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:03.642" level="INFO">${email} = pavan83669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:03.642" endtime="20200402 12:50:03.642"></status>
</kw>
<msg timestamp="20200402 12:50:03.643" level="INFO">${emailid} = pavan83669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:03.639" endtime="20200402 12:50:03.643"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:03.645" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:03.645" endtime="20200402 12:50:03.645"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:03.646" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:03.645" endtime="20200402 12:50:03.646"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:03.646" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:03.646" endtime="20200402 12:50:03.646"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:03.648" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:03.646" endtime="20200402 12:50:03.648"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:03.649" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:03.648" endtime="20200402 12:50:03.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:03.651" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '65349055005250', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2999536781', 'email': 'pavan83669@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:03.649" endtime="20200402 12:50:03.651"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:03.652" endtime="20200402 12:50:03.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:03.653" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFFIR2hvUlMvZFlET01aRktuaGdjblp0ZlJt...</msg>
<status status="PASS" starttime="20200402 12:50:03.653" endtime="20200402 12:50:03.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:03.655" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:03.654" endtime="20200402 12:50:03.655"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:03.656" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOFFIR2hvUlMvZFlET01aRktuaGdjblp0ZlJtekppd2VKUVk2cUdxRndnSmtPWnB5QWt4MW5JMDRsNDZYWjNCbFQxWWQ5RnRUNzVCSCt2dFlXbVpxcnc9IiwibmJmIjoxNTg1ODEyMDAxLCJleHAiOjE1ODU4MTIwNjEsImlhdCI6MTU4NTgxMjAwMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.E14KsmbGhR3QE95M4WeN7OPPQnuKmi8IqlK99daOiQo'} 
data={"escrowCompanyId": "001", "idNumber": "65349055005250", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2999536781", "email": "pavan83669@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:04.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:03.655" endtime="20200402 12:50:04.284"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:04.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:04.284" endtime="20200402 12:50:04.284"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:04.285" endtime="20200402 12:50:04.286"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:04.287" endtime="20200402 12:50:04.287"></status>
</kw>
<msg timestamp="20200402 12:50:04.288" level="INFO">${sellerid} = c61870a5-6c05-48b2-8baf-33910c6e543e</msg>
<status status="PASS" starttime="20200402 12:50:03.643" endtime="20200402 12:50:04.288"></status>
</kw>
<msg timestamp="20200402 12:50:04.288" level="INFO">${SellerId} = c61870a5-6c05-48b2-8baf-33910c6e543e</msg>
<msg timestamp="20200402 12:50:04.288" level="INFO">${Idnum} = 65349055005250</msg>
<status status="PASS" starttime="20200402 12:50:02.335" endtime="20200402 12:50:04.288"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:04.291" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:04.291" endtime="20200402 12:50:04.292"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:50:04.293" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:50:04.292" endtime="20200402 12:50:04.293"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:04.294" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'c61870a5-6c05-48b2-8baf-33910c6e543e', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:50:04.293" endtime="20200402 12:50:04.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:04.295" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFs...</msg>
<status status="PASS" starttime="20200402 12:50:04.294" endtime="20200402 12:50:04.295"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:04.295" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:04.295" endtime="20200402 12:50:04.295"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:04.296" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVcwbysvNllOV2hZVXFZM0tJSnAyak1KS3FMa1lrQUlqMy9Pak54NDk2Tk1CL3l4YkJUeU45bXM9IiwibmJmIjoxNTg1ODExOTk5LCJleHAiOjE1ODU4MTIwNTksImlhdCI6MTU4NTgxMTk5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QMIw4psESeTbXXMm6kKOKfHV0k9aend40KkWB7aBb7Y'} 
data={"escrowCompanyId": "001", "SELLERId": "c61870a5-6c05-48b2-8baf-33910c6e543e", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:50:05.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:04.296" endtime="20200402 12:50:05.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:05.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:05.831" endtime="20200402 12:50:05.832"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:04.289" endtime="20200402 12:50:05.832"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>mobileNo</arg>
</arguments>
<assign>
<var>${MobNo_dup}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:05.834" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:05.833" endtime="20200402 12:50:05.834"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:05.835" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c61870a5-6c05-48b2-8baf-33910c6e543e'}</msg>
<status status="PASS" starttime="20200402 12:50:05.834" endtime="20200402 12:50:05.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:05.836" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFs...</msg>
<status status="PASS" starttime="20200402 12:50:05.835" endtime="20200402 12:50:05.836"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:05.837" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:05.836" endtime="20200402 12:50:05.837"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:05.837" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVcwbysvNllOV2hZVXFZM0tJSnAyak1KS3FMa1lrQUlqMy9Pak54NDk2Tk1CL3l4YkJUeU45bXM9IiwibmJmIjoxNTg1ODExOTk5LCJleHAiOjE1ODU4MTIwNTksImlhdCI6MTU4NTgxMTk5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QMIw4psESeTbXXMm6kKOKfHV0k9aend40KkWB7aBb7Y'} 
data={"escrowCompanyId": "001", "sellerID": "c61870a5-6c05-48b2-8baf-33910c6e543e"} 
json=None</msg>
<msg timestamp="20200402 12:50:07.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:05.837" endtime="20200402 12:50:07.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:07.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:07.955" endtime="20200402 12:50:07.956"></status>
</kw>
<msg timestamp="20200402 12:50:07.956" level="INFO">${MobNo_dup} = 2999536781</msg>
<status status="PASS" starttime="20200402 12:50:05.833" endtime="20200402 12:50:07.956"></status>
</kw>
<kw name="UpdateSellerDetails MobileCountrycode mobile" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo_dup}</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:07.958" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:07.958" endtime="20200402 12:50:07.958"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:07.959" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:07.958" endtime="20200402 12:50:07.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:07.960" level="INFO">${body} = {'escrowCompanyId': '001', 'mobileCountryCode': '67', 'mobileNo': '2999536781', 'SELLERId': 'c61870a5-6c05-48b2-8baf-33910c6e543e', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:07.959" endtime="20200402 12:50:07.960"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:07.960" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFs...</msg>
<status status="PASS" starttime="20200402 12:50:07.960" endtime="20200402 12:50:07.960"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:07.961" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:07.960" endtime="20200402 12:50:07.961"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:07.961" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVcwbysvNllOV2hZVXFZM0tJSnAyak1KS3FMa1lrQUlqMy9Pak54NDk2Tk1CL3l4YkJUeU45bXM9IiwibmJmIjoxNTg1ODExOTk5LCJleHAiOjE1ODU4MTIwNTksImlhdCI6MTU4NTgxMTk5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QMIw4psESeTbXXMm6kKOKfHV0k9aend40KkWB7aBb7Y'} 
data={"escrowCompanyId": "001", "mobileCountryCode": "67", "mobileNo": "2999536781", "SELLERId": "c61870a5-6c05-48b2-8baf-33910c6e543e", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:09.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:07.961" endtime="20200402 12:50:09.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:09.299" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:50:09.299" endtime="20200402 12:50:09.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:09.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:09.300" endtime="20200402 12:50:09.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:09.301" endtime="20200402 12:50:09.301"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:09.301" endtime="20200402 12:50:09.302"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:07.957" endtime="20200402 12:50:09.302"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:09.303" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:09.303" endtime="20200402 12:50:09.304"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:09.304" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c61870a5-6c05-48b2-8baf-33910c6e543e'}</msg>
<status status="PASS" starttime="20200402 12:50:09.304" endtime="20200402 12:50:09.304"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:09.305" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFs...</msg>
<status status="PASS" starttime="20200402 12:50:09.305" endtime="20200402 12:50:09.305"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:09.306" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:09.305" endtime="20200402 12:50:09.306"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:09.306" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDhNSmF0Lzh6bXFzYUtEejlUazRjbUxHejFsZyswRVcwbysvNllOV2hZVXFZM0tJSnAyak1KS3FMa1lrQUlqMy9Pak54NDk2Tk1CL3l4YkJUeU45bXM9IiwibmJmIjoxNTg1ODExOTk5LCJleHAiOjE1ODU4MTIwNTksImlhdCI6MTU4NTgxMTk5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QMIw4psESeTbXXMm6kKOKfHV0k9aend40KkWB7aBb7Y'} 
data={"escrowCompanyId": "001", "sellerID": "c61870a5-6c05-48b2-8baf-33910c6e543e"} 
json=None</msg>
<msg timestamp="20200402 12:50:10.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:09.306" endtime="20200402 12:50:10.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:10.507" level="INFO">{"escrowCompanyId":"001","sellerId":"c61870a5-6c05-48b2-8baf-33910c6e543e","idNumber":"65349055005250","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2999536781","email":"pavan83669@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":4,"statusText":"Terminated","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:01","updateDate":"02/04/2020 02:20:03","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:10.506" endtime="20200402 12:50:10.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:10.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:10.508" endtime="20200402 12:50:10.509"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:09.303" endtime="20200402 12:50:10.509"></status>
</kw>
<doc>Duplicate : To check Mobile number is entered duplicate (duplicate mobile number should belong to Seller status = terminated ) and request is send with all mandatory fields</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:49:58.999" endtime="20200402 12:50:10.510" critical="yes"></status>
</test>
<test id="s1-t37" name="TC_47 Selle_Details_API Empty Email">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:13.515" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:10.513" endtime="20200402 12:50:13.515"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:13.517" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:13.517" endtime="20200402 12:50:13.517"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:13.518" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:13.518" endtime="20200402 12:50:13.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:13.519" endtime="20200402 12:50:13.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:13.520" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:13.520" endtime="20200402 12:50:13.520"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:13.521" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:15.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:13.520" endtime="20200402 12:50:15.074"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:15.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.075" endtime="20200402 12:50:15.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.077" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNvdU1Jd3padmpZMjQ5Vy9wOXJMVUN3WlZISSsrNnI2dWxnQndLdVREL0JxbER5Vm9YVE1jcW5kbVZDUWc9IiwibmJmIjoxNTg1ODEyMDEyLCJleHAiOjE1ODU4MTIwNzIsImlhdCI6MTU4NTgxMjAxMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sne6P-atnh77iOFt6KpAik1JNxb1YkrYqWwu-dhpaj8</msg>
<status status="PASS" starttime="20200402 12:50:15.076" endtime="20200402 12:50:15.077"></status>
</kw>
<msg timestamp="20200402 12:50:15.077" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNvdU1Jd3p...</msg>
<status status="PASS" starttime="20200402 12:50:13.516" endtime="20200402 12:50:15.078"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.080" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:15.079" endtime="20200402 12:50:15.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:15.081" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:15.080" endtime="20200402 12:50:15.081"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:15.081" endtime="20200402 12:50:15.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:15.081" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:15.081" endtime="20200402 12:50:15.082"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:15.082" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:15.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.082" endtime="20200402 12:50:15.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:15.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.453" endtime="20200402 12:50:15.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.454" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjMya2RZN3JQWVp1eGIrelBlc2FUUjc0VEl5S2RJSnBneVJaQmVRcmY3VVM2WXFWUDFqcFovS2UycmV2MTg0MzdycHpqVmtiOG5VU2tPOEVIODJjOWM9IiwibmJmIjoxNTg1ODEyMDEyLCJleHAiOjE1ODU4MTIwNzIsImlhdCI6MTU4NTgxMjAxMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P0o-diBVxySH0bxlkwbk4wv8V6CVA4sh5xyNDzVDcYM</msg>
<status status="PASS" starttime="20200402 12:50:15.454" endtime="20200402 12:50:15.454"></status>
</kw>
<msg timestamp="20200402 12:50:15.455" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjMya2RZN3JQWVp1eGIrelBlc2FUUjc0VEl5S2RJSnB...</msg>
<status status="PASS" starttime="20200402 12:50:15.079" endtime="20200402 12:50:15.455"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:15.456" level="INFO">${Id} = 36097359027502</msg>
<status status="PASS" starttime="20200402 12:50:15.456" endtime="20200402 12:50:15.456"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.457" level="INFO">${IdNumber} = 36097359027502</msg>
<status status="PASS" starttime="20200402 12:50:15.456" endtime="20200402 12:50:15.457"></status>
</kw>
<msg timestamp="20200402 12:50:15.457" level="INFO">${idNum} = 36097359027502</msg>
<status status="PASS" starttime="20200402 12:50:15.455" endtime="20200402 12:50:15.457"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:15.459" level="INFO">${mobile} = 3398799944</msg>
<status status="PASS" starttime="20200402 12:50:15.458" endtime="20200402 12:50:15.459"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.460" level="INFO">${mobileNo} = 3398799944</msg>
<status status="PASS" starttime="20200402 12:50:15.459" endtime="20200402 12:50:15.460"></status>
</kw>
<msg timestamp="20200402 12:50:15.460" level="INFO">${MobNo} = 3398799944</msg>
<status status="PASS" starttime="20200402 12:50:15.458" endtime="20200402 12:50:15.460"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:15.462" level="INFO">${Emailnum} = 93017</msg>
<status status="PASS" starttime="20200402 12:50:15.462" endtime="20200402 12:50:15.462"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.463" level="INFO">${enum} = 93017</msg>
<status status="PASS" starttime="20200402 12:50:15.463" endtime="20200402 12:50:15.463"></status>
</kw>
<msg timestamp="20200402 12:50:15.464" level="INFO">${num} = 93017</msg>
<status status="PASS" starttime="20200402 12:50:15.461" endtime="20200402 12:50:15.464"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:15.465" level="INFO">${emailid} = pavan93017@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:15.464" endtime="20200402 12:50:15.465"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:15.466" level="INFO">${email} = pavan93017@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:15.465" endtime="20200402 12:50:15.466"></status>
</kw>
<msg timestamp="20200402 12:50:15.466" level="INFO">${emailid} = pavan93017@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:15.461" endtime="20200402 12:50:15.466"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:15.471" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:15.470" endtime="20200402 12:50:15.471"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:15.472" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:15.471" endtime="20200402 12:50:15.472"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:15.473" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:15.472" endtime="20200402 12:50:15.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:15.476" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:15.473" endtime="20200402 12:50:15.476"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:15.479" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:15.476" endtime="20200402 12:50:15.479"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:15.483" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '36097359027502', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3398799944', 'email': 'pavan93017@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:15.479" endtime="20200402 12:50:15.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:15.484" endtime="20200402 12:50:15.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:15.486" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjMya2RZN3JQWVp1eGIrelBlc2FUUjc0VEl5...</msg>
<status status="PASS" starttime="20200402 12:50:15.485" endtime="20200402 12:50:15.486"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:15.487" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:15.486" endtime="20200402 12:50:15.487"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:15.488" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMjMya2RZN3JQWVp1eGIrelBlc2FUUjc0VEl5S2RJSnBneVJaQmVRcmY3VVM2WXFWUDFqcFovS2UycmV2MTg0MzdycHpqVmtiOG5VU2tPOEVIODJjOWM9IiwibmJmIjoxNTg1ODEyMDEyLCJleHAiOjE1ODU4MTIwNzIsImlhdCI6MTU4NTgxMjAxMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.P0o-diBVxySH0bxlkwbk4wv8V6CVA4sh5xyNDzVDcYM'} 
data={"escrowCompanyId": "001", "idNumber": "36097359027502", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3398799944", "email": "pavan93017@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:15.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.487" endtime="20200402 12:50:15.889"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:15.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.889" endtime="20200402 12:50:15.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:15.890" endtime="20200402 12:50:15.890"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:15.890" endtime="20200402 12:50:15.891"></status>
</kw>
<msg timestamp="20200402 12:50:15.891" level="INFO">${sellerid} = 395dea92-229a-4fbb-ae9c-23d9fa5e8a33</msg>
<status status="PASS" starttime="20200402 12:50:15.466" endtime="20200402 12:50:15.891"></status>
</kw>
<msg timestamp="20200402 12:50:15.891" level="INFO">${SellerId} = 395dea92-229a-4fbb-ae9c-23d9fa5e8a33</msg>
<msg timestamp="20200402 12:50:15.892" level="INFO">${idnumber} = 36097359027502</msg>
<status status="PASS" starttime="20200402 12:50:15.078" endtime="20200402 12:50:15.892"></status>
</kw>
<kw name="UpdateSellerDetails Email" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:15.893" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:15.893" endtime="20200402 12:50:15.894"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:15.894" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:15.894" endtime="20200402 12:50:15.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>email=${email}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:15.895" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '395dea92-229a-4fbb-ae9c-23d9fa5e8a33', 'email': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:15.894" endtime="20200402 12:50:15.895"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:15.896" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNv...</msg>
<status status="PASS" starttime="20200402 12:50:15.895" endtime="20200402 12:50:15.896"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:15.896" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:15.896" endtime="20200402 12:50:15.896"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:15.897" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNvdU1Jd3padmpZMjQ5Vy9wOXJMVUN3WlZISSsrNnI2dWxnQndLdVREL0JxbER5Vm9YVE1jcW5kbVZDUWc9IiwibmJmIjoxNTg1ODEyMDEyLCJleHAiOjE1ODU4MTIwNzIsImlhdCI6MTU4NTgxMjAxMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sne6P-atnh77iOFt6KpAik1JNxb1YkrYqWwu-dhpaj8'} 
data={"escrowCompanyId": "001", "SELLERId": "395dea92-229a-4fbb-ae9c-23d9fa5e8a33", "email": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:16.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:15.896" endtime="20200402 12:50:16.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:16.811" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:16.811" endtime="20200402 12:50:16.811"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:16.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:16.812" endtime="20200402 12:50:16.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:16.812" endtime="20200402 12:50:16.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:16.813" endtime="20200402 12:50:16.814"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:15.892" endtime="20200402 12:50:16.814"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:16.815" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:16.815" endtime="20200402 12:50:16.816"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:16.816" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '395dea92-229a-4fbb-ae9c-23d9fa5e8a33'}</msg>
<status status="PASS" starttime="20200402 12:50:16.816" endtime="20200402 12:50:16.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:16.817" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNv...</msg>
<status status="PASS" starttime="20200402 12:50:16.817" endtime="20200402 12:50:16.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:16.817" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:16.817" endtime="20200402 12:50:16.817"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:16.818" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenRudmdZSFkzRytWN0ZZSnhIMEEwU1F6eUNvdU1Jd3padmpZMjQ5Vy9wOXJMVUN3WlZISSsrNnI2dWxnQndLdVREL0JxbER5Vm9YVE1jcW5kbVZDUWc9IiwibmJmIjoxNTg1ODEyMDEyLCJleHAiOjE1ODU4MTIwNzIsImlhdCI6MTU4NTgxMjAxMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sne6P-atnh77iOFt6KpAik1JNxb1YkrYqWwu-dhpaj8'} 
data={"escrowCompanyId": "001", "sellerID": "395dea92-229a-4fbb-ae9c-23d9fa5e8a33"} 
json=None</msg>
<msg timestamp="20200402 12:50:18.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:16.818" endtime="20200402 12:50:18.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:18.344" level="INFO">{"escrowCompanyId":"001","sellerId":"395dea92-229a-4fbb-ae9c-23d9fa5e8a33","idNumber":"36097359027502","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3398799944","email":"","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:13","updateDate":"02/04/2020 02:20:14","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:18.343" endtime="20200402 12:50:18.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:18.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:18.345" endtime="20200402 12:50:18.346"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:16.815" endtime="20200402 12:50:18.346"></status>
</kw>
<doc>Valid: To Verify response if email parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:50:10.511" endtime="20200402 12:50:18.346" critical="yes"></status>
</test>
<test id="s1-t38" name="TC_48 Selle_Details_API Invalid Email">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:21.351" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:18.349" endtime="20200402 12:50:21.351"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:21.356" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:21.356" endtime="20200402 12:50:21.357"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:21.359" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:21.358" endtime="20200402 12:50:21.359"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:21.360" endtime="20200402 12:50:21.360"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:21.362" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:21.361" endtime="20200402 12:50:21.362"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:21.363" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:22.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:21.362" endtime="20200402 12:50:22.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:22.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:22.482" endtime="20200402 12:50:22.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:22.484" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpLVVJkMnBZNmViNDI5STRYSVg1bzZTWlB1WGE0R0lBVWJEdFZkU2dTRFRxWkpSZGFSWmZxWmtIWWxjU289IiwibmJmIjoxNTg1ODEyMDE5LCJleHAiOjE1ODU4MTIwNzksImlhdCI6MTU4NTgxMjAxOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._ee8qByQSoerqx817RtrGRIYDEZcbfYhgC4Q78OPXlY</msg>
<status status="PASS" starttime="20200402 12:50:22.483" endtime="20200402 12:50:22.484"></status>
</kw>
<msg timestamp="20200402 12:50:22.485" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpLVVJkMnB...</msg>
<status status="PASS" starttime="20200402 12:50:21.355" endtime="20200402 12:50:22.485"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:22.487" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:22.487" endtime="20200402 12:50:22.488"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:22.489" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:22.488" endtime="20200402 12:50:22.489"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:22.489" endtime="20200402 12:50:22.490"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:22.490" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:22.490" endtime="20200402 12:50:22.490"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:22.491" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:23.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:22.490" endtime="20200402 12:50:23.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:23.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:23.651" endtime="20200402 12:50:23.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:23.654" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeW91YTdhbnpqV3hsOG5qeFBoNkpxUGxIVWdFV0xwR3RZRUpiMFZaL1VERnVNSE8xaGRHZHNmQjVIRFpKekQ4TGpjbFRmMS9aWUg5aStZOTN3R2xqMk09IiwibmJmIjoxNTg1ODEyMDIxLCJleHAiOjE1ODU4MTIwODEsImlhdCI6MTU4NTgxMjAyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Dc0hr1Qrt5JBqU7MlNJ2BQu6eTs9_c7IMR8CgAIPmiA</msg>
<status status="PASS" starttime="20200402 12:50:23.653" endtime="20200402 12:50:23.654"></status>
</kw>
<msg timestamp="20200402 12:50:23.654" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeW91YTdhbnpqV3hsOG5qeFBoNkpxUGxIVWdFV0xwR3R...</msg>
<status status="PASS" starttime="20200402 12:50:22.486" endtime="20200402 12:50:23.654"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:23.656" level="INFO">${Id} = 65244279159193</msg>
<status status="PASS" starttime="20200402 12:50:23.655" endtime="20200402 12:50:23.656"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:23.657" level="INFO">${IdNumber} = 65244279159193</msg>
<status status="PASS" starttime="20200402 12:50:23.656" endtime="20200402 12:50:23.657"></status>
</kw>
<msg timestamp="20200402 12:50:23.657" level="INFO">${idNum} = 65244279159193</msg>
<status status="PASS" starttime="20200402 12:50:23.655" endtime="20200402 12:50:23.657"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:23.659" level="INFO">${mobile} = 1447140672</msg>
<status status="PASS" starttime="20200402 12:50:23.658" endtime="20200402 12:50:23.659"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:23.660" level="INFO">${mobileNo} = 1447140672</msg>
<status status="PASS" starttime="20200402 12:50:23.659" endtime="20200402 12:50:23.660"></status>
</kw>
<msg timestamp="20200402 12:50:23.661" level="INFO">${MobNo} = 1447140672</msg>
<status status="PASS" starttime="20200402 12:50:23.658" endtime="20200402 12:50:23.661"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:23.663" level="INFO">${Emailnum} = 29158</msg>
<status status="PASS" starttime="20200402 12:50:23.662" endtime="20200402 12:50:23.663"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:23.664" level="INFO">${enum} = 29158</msg>
<status status="PASS" starttime="20200402 12:50:23.663" endtime="20200402 12:50:23.664"></status>
</kw>
<msg timestamp="20200402 12:50:23.664" level="INFO">${num} = 29158</msg>
<status status="PASS" starttime="20200402 12:50:23.662" endtime="20200402 12:50:23.664"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:23.665" level="INFO">${emailid} = pavan29158@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:23.665" endtime="20200402 12:50:23.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:23.666" level="INFO">${email} = pavan29158@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:23.666" endtime="20200402 12:50:23.667"></status>
</kw>
<msg timestamp="20200402 12:50:23.667" level="INFO">${emailid} = pavan29158@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:23.661" endtime="20200402 12:50:23.667"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:23.671" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:23.671" endtime="20200402 12:50:23.672"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:23.673" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:23.672" endtime="20200402 12:50:23.673"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:23.675" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:23.674" endtime="20200402 12:50:23.675"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:23.678" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:23.675" endtime="20200402 12:50:23.678"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:23.680" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:23.678" endtime="20200402 12:50:23.680"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:23.685" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '65244279159193', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1447140672', 'email': 'pavan29158@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:23.681" endtime="20200402 12:50:23.686"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:23.686" endtime="20200402 12:50:23.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:23.708" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeW91YTdhbnpqV3hsOG5qeFBoNkpxUGxIVWdF...</msg>
<status status="PASS" starttime="20200402 12:50:23.708" endtime="20200402 12:50:23.709"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:23.710" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:23.709" endtime="20200402 12:50:23.710"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:23.712" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeW91YTdhbnpqV3hsOG5qeFBoNkpxUGxIVWdFV0xwR3RZRUpiMFZaL1VERnVNSE8xaGRHZHNmQjVIRFpKekQ4TGpjbFRmMS9aWUg5aStZOTN3R2xqMk09IiwibmJmIjoxNTg1ODEyMDIxLCJleHAiOjE1ODU4MTIwODEsImlhdCI6MTU4NTgxMjAyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Dc0hr1Qrt5JBqU7MlNJ2BQu6eTs9_c7IMR8CgAIPmiA'} 
data={"escrowCompanyId": "001", "idNumber": "65244279159193", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1447140672", "email": "pavan29158@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:24.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:23.710" endtime="20200402 12:50:24.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:24.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:24.079" endtime="20200402 12:50:24.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:24.080" endtime="20200402 12:50:24.081"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:24.081" endtime="20200402 12:50:24.081"></status>
</kw>
<msg timestamp="20200402 12:50:24.082" level="INFO">${sellerid} = c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e</msg>
<status status="PASS" starttime="20200402 12:50:23.667" endtime="20200402 12:50:24.082"></status>
</kw>
<msg timestamp="20200402 12:50:24.082" level="INFO">${SellerId} = c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e</msg>
<msg timestamp="20200402 12:50:24.082" level="INFO">${idnumber} = 65244279159193</msg>
<status status="PASS" starttime="20200402 12:50:22.485" endtime="20200402 12:50:24.082"></status>
</kw>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:24.083" level="INFO">${Emailnum} = 17234</msg>
<status status="PASS" starttime="20200402 12:50:24.083" endtime="20200402 12:50:24.083"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:24.084" level="INFO">${enum} = 17234</msg>
<status status="PASS" starttime="20200402 12:50:24.084" endtime="20200402 12:50:24.084"></status>
</kw>
<msg timestamp="20200402 12:50:24.084" level="INFO">${emailid} = 17234</msg>
<status status="PASS" starttime="20200402 12:50:24.083" endtime="20200402 12:50:24.084"></status>
</kw>
<kw name="UpdateSellerDetails Email" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>pavan${emailid}</arg>
<arg>${0}</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:24.086" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:24.086" endtime="20200402 12:50:24.086"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:24.087" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:24.086" endtime="20200402 12:50:24.087"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>email=${email}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:24.087" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e', 'email': 'pavan17234', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:24.087" endtime="20200402 12:50:24.088"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:24.088" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpL...</msg>
<status status="PASS" starttime="20200402 12:50:24.088" endtime="20200402 12:50:24.088"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:24.089" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:24.088" endtime="20200402 12:50:24.089"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:24.089" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpLVVJkMnBZNmViNDI5STRYSVg1bzZTWlB1WGE0R0lBVWJEdFZkU2dTRFRxWkpSZGFSWmZxWmtIWWxjU289IiwibmJmIjoxNTg1ODEyMDE5LCJleHAiOjE1ODU4MTIwNzksImlhdCI6MTU4NTgxMjAxOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._ee8qByQSoerqx817RtrGRIYDEZcbfYhgC4Q78OPXlY'} 
data={"escrowCompanyId": "001", "SELLERId": "c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e", "email": "pavan17234", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:25.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:24.089" endtime="20200402 12:50:25.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:25.306" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:50:25.306" endtime="20200402 12:50:25.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:25.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:25.307" endtime="20200402 12:50:25.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:25.308" endtime="20200402 12:50:25.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:25.308" endtime="20200402 12:50:25.309"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:24.085" endtime="20200402 12:50:25.309"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:25.310" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:25.310" endtime="20200402 12:50:25.311"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:25.311" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e'}</msg>
<status status="PASS" starttime="20200402 12:50:25.311" endtime="20200402 12:50:25.312"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:25.312" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpL...</msg>
<status status="PASS" starttime="20200402 12:50:25.312" endtime="20200402 12:50:25.312"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:25.313" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:25.312" endtime="20200402 12:50:25.313"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:25.313" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXUremxRMU1XdWxRa3ZLKzRZb3c4TW9RREpLVVJkMnBZNmViNDI5STRYSVg1bzZTWlB1WGE0R0lBVWJEdFZkU2dTRFRxWkpSZGFSWmZxWmtIWWxjU289IiwibmJmIjoxNTg1ODEyMDE5LCJleHAiOjE1ODU4MTIwNzksImlhdCI6MTU4NTgxMjAxOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._ee8qByQSoerqx817RtrGRIYDEZcbfYhgC4Q78OPXlY'} 
data={"escrowCompanyId": "001", "sellerID": "c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e"} 
json=None</msg>
<msg timestamp="20200402 12:50:26.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:25.313" endtime="20200402 12:50:26.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:26.530" level="INFO">{"escrowCompanyId":"001","sellerId":"c1465e04-75cd-4ec8-a5a8-c1d4e0c6073e","idNumber":"65244279159193","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1447140672","email":"pavan29158@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:21","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:26.530" endtime="20200402 12:50:26.531"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:26.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:26.532" endtime="20200402 12:50:26.532"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:25.310" endtime="20200402 12:50:26.533"></status>
</kw>
<doc>Invalid: To Verify response if email parameter is entered invalid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:50:18.348" endtime="20200402 12:50:26.533" critical="yes"></status>
</test>
<test id="s1-t39" name="TC_49 Selle_Details_API Valid Email">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:29.538" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:26.536" endtime="20200402 12:50:29.538"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:29.540" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:29.539" endtime="20200402 12:50:29.540"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:29.541" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:29.541" endtime="20200402 12:50:29.541"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:29.542" endtime="20200402 12:50:29.542"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:29.543" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:29.542" endtime="20200402 12:50:29.543"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:29.544" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:29.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:29.543" endtime="20200402 12:50:29.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:29.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:29.808" endtime="20200402 12:50:29.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:29.811" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVKaytpMVoyR1dRNHNlaVdKTUttMU5zQ1ZEeklwc3gzTUJ6VlNFUkZYaXB4R3FnTm0yZnV5aVBVcTJWWm89IiwibmJmIjoxNTg1ODEyMDI3LCJleHAiOjE1ODU4MTIwODcsImlhdCI6MTU4NTgxMjAyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.D6DFC8YDvo6yodyM8IR4xFlCkp4MgUYDVp4rcJBCuWI</msg>
<status status="PASS" starttime="20200402 12:50:29.810" endtime="20200402 12:50:29.811"></status>
</kw>
<msg timestamp="20200402 12:50:29.812" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVKaytpMVo...</msg>
<status status="PASS" starttime="20200402 12:50:29.539" endtime="20200402 12:50:29.812"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:29.815" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:29.814" endtime="20200402 12:50:29.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:29.816" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:29.816" endtime="20200402 12:50:29.817"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:29.817" endtime="20200402 12:50:29.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:29.818" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:29.818" endtime="20200402 12:50:29.818"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:29.819" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:31.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:29.819" endtime="20200402 12:50:31.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:31.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:31.175" endtime="20200402 12:50:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.176" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2t4TFhCaU5kdGpaOVlSeEw2bVVqemQzbFdLNDUwdFZCcFJyb2NOQnhyK1RhQlNTWkMvSGJyZEJBWThvYktlOUVRRTZFcmVIamFhdGk2WndHT28vaHM9IiwibmJmIjoxNTg1ODEyMDI4LCJleHAiOjE1ODU4MTIwODgsImlhdCI6MTU4NTgxMjAyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HXOLIk-jMmIRkW5EPOe7IHewkj-0UWQOMp512R_P4Vw</msg>
<status status="PASS" starttime="20200402 12:50:31.175" endtime="20200402 12:50:31.176"></status>
</kw>
<msg timestamp="20200402 12:50:31.176" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2t4TFhCaU5kdGpaOVlSeEw2bVVqemQzbFdLNDUwdFZ...</msg>
<status status="PASS" starttime="20200402 12:50:29.813" endtime="20200402 12:50:31.176"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:31.177" level="INFO">${Id} = 86086245160012</msg>
<status status="PASS" starttime="20200402 12:50:31.177" endtime="20200402 12:50:31.177"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.178" level="INFO">${IdNumber} = 86086245160012</msg>
<status status="PASS" starttime="20200402 12:50:31.177" endtime="20200402 12:50:31.178"></status>
</kw>
<msg timestamp="20200402 12:50:31.178" level="INFO">${idNum} = 86086245160012</msg>
<status status="PASS" starttime="20200402 12:50:31.176" endtime="20200402 12:50:31.178"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:31.179" level="INFO">${mobile} = 3970288884</msg>
<status status="PASS" starttime="20200402 12:50:31.178" endtime="20200402 12:50:31.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.179" level="INFO">${mobileNo} = 3970288884</msg>
<status status="PASS" starttime="20200402 12:50:31.179" endtime="20200402 12:50:31.179"></status>
</kw>
<msg timestamp="20200402 12:50:31.179" level="INFO">${MobNo} = 3970288884</msg>
<status status="PASS" starttime="20200402 12:50:31.178" endtime="20200402 12:50:31.180"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:31.181" level="INFO">${Emailnum} = 85561</msg>
<status status="PASS" starttime="20200402 12:50:31.180" endtime="20200402 12:50:31.181"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.181" level="INFO">${enum} = 85561</msg>
<status status="PASS" starttime="20200402 12:50:31.181" endtime="20200402 12:50:31.181"></status>
</kw>
<msg timestamp="20200402 12:50:31.181" level="INFO">${num} = 85561</msg>
<status status="PASS" starttime="20200402 12:50:31.180" endtime="20200402 12:50:31.181"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:31.182" level="INFO">${emailid} = pavan85561@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.182" endtime="20200402 12:50:31.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.182" level="INFO">${email} = pavan85561@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.182" endtime="20200402 12:50:31.182"></status>
</kw>
<msg timestamp="20200402 12:50:31.183" level="INFO">${emailid} = pavan85561@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.180" endtime="20200402 12:50:31.183"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:31.186" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:31.185" endtime="20200402 12:50:31.186"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:31.187" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:31.186" endtime="20200402 12:50:31.187"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:31.187" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:31.187" endtime="20200402 12:50:31.187"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:31.188" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:31.187" endtime="20200402 12:50:31.188"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:31.190" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:31.189" endtime="20200402 12:50:31.190"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:31.192" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '86086245160012', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3970288884', 'email': 'pavan85561@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:31.190" endtime="20200402 12:50:31.193"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:31.193" endtime="20200402 12:50:31.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:31.194" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2t4TFhCaU5kdGpaOVlSeEw2bVVqemQzbFdL...</msg>
<status status="PASS" starttime="20200402 12:50:31.194" endtime="20200402 12:50:31.194"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:31.195" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:31.195" endtime="20200402 12:50:31.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:31.196" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2t4TFhCaU5kdGpaOVlSeEw2bVVqemQzbFdLNDUwdFZCcFJyb2NOQnhyK1RhQlNTWkMvSGJyZEJBWThvYktlOUVRRTZFcmVIamFhdGk2WndHT28vaHM9IiwibmJmIjoxNTg1ODEyMDI4LCJleHAiOjE1ODU4MTIwODgsImlhdCI6MTU4NTgxMjAyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HXOLIk-jMmIRkW5EPOe7IHewkj-0UWQOMp512R_P4Vw'} 
data={"escrowCompanyId": "001", "idNumber": "86086245160012", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3970288884", "email": "pavan85561@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:31.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:31.195" endtime="20200402 12:50:31.701"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:31.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:31.702" endtime="20200402 12:50:31.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:31.702" endtime="20200402 12:50:31.703"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:31.703" endtime="20200402 12:50:31.703"></status>
</kw>
<msg timestamp="20200402 12:50:31.704" level="INFO">${sellerid} = e7dbd909-61d6-4403-b7f1-45d267cb3dde</msg>
<status status="PASS" starttime="20200402 12:50:31.183" endtime="20200402 12:50:31.704"></status>
</kw>
<msg timestamp="20200402 12:50:31.704" level="INFO">${SellerId} = e7dbd909-61d6-4403-b7f1-45d267cb3dde</msg>
<msg timestamp="20200402 12:50:31.704" level="INFO">${idnumber} = 86086245160012</msg>
<status status="PASS" starttime="20200402 12:50:29.813" endtime="20200402 12:50:31.704"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:31.706" level="INFO">${Emailnum} = 96546</msg>
<status status="PASS" starttime="20200402 12:50:31.706" endtime="20200402 12:50:31.706"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.707" level="INFO">${enum} = 96546</msg>
<status status="PASS" starttime="20200402 12:50:31.706" endtime="20200402 12:50:31.707"></status>
</kw>
<msg timestamp="20200402 12:50:31.707" level="INFO">${num} = 96546</msg>
<status status="PASS" starttime="20200402 12:50:31.705" endtime="20200402 12:50:31.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:31.707" level="INFO">${emailid} = pavan96546@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.707" endtime="20200402 12:50:31.707"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.708" level="INFO">${email} = pavan96546@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.708" endtime="20200402 12:50:31.708"></status>
</kw>
<msg timestamp="20200402 12:50:31.708" level="INFO">${emailid} = pavan96546@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.705" endtime="20200402 12:50:31.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:31.709" level="INFO">${email} = pavan96546@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:31.709" endtime="20200402 12:50:31.709"></status>
</kw>
<kw name="UpdateSellerDetails Email" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${email}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:31.710" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:31.710" endtime="20200402 12:50:31.711"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:31.711" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:31.711" endtime="20200402 12:50:31.711"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>email=${email}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:31.712" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'e7dbd909-61d6-4403-b7f1-45d267cb3dde', 'email': 'pavan96546@2c2p.com', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:31.711" endtime="20200402 12:50:31.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:31.712" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVK...</msg>
<status status="PASS" starttime="20200402 12:50:31.712" endtime="20200402 12:50:31.713"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:31.713" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:31.713" endtime="20200402 12:50:31.713"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:31.714" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVKaytpMVoyR1dRNHNlaVdKTUttMU5zQ1ZEeklwc3gzTUJ6VlNFUkZYaXB4R3FnTm0yZnV5aVBVcTJWWm89IiwibmJmIjoxNTg1ODEyMDI3LCJleHAiOjE1ODU4MTIwODcsImlhdCI6MTU4NTgxMjAyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.D6DFC8YDvo6yodyM8IR4xFlCkp4MgUYDVp4rcJBCuWI'} 
data={"escrowCompanyId": "001", "SELLERId": "e7dbd909-61d6-4403-b7f1-45d267cb3dde", "email": "pavan96546@2c2p.com", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:32.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:31.713" endtime="20200402 12:50:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:32.613" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:32.612" endtime="20200402 12:50:32.613"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:32.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:32.613" endtime="20200402 12:50:32.613"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:32.614" endtime="20200402 12:50:32.614"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:32.614" endtime="20200402 12:50:32.615"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:31.709" endtime="20200402 12:50:32.615"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:32.617" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:32.617" endtime="20200402 12:50:32.617"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:32.618" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'e7dbd909-61d6-4403-b7f1-45d267cb3dde'}</msg>
<status status="PASS" starttime="20200402 12:50:32.618" endtime="20200402 12:50:32.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:32.619" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVK...</msg>
<status status="PASS" starttime="20200402 12:50:32.618" endtime="20200402 12:50:32.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:32.619" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:32.619" endtime="20200402 12:50:32.619"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:32.620" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGFhOHFLQno3dXpwU05QVkIwTm9tOUkxaFVKaytpMVoyR1dRNHNlaVdKTUttMU5zQ1ZEeklwc3gzTUJ6VlNFUkZYaXB4R3FnTm0yZnV5aVBVcTJWWm89IiwibmJmIjoxNTg1ODEyMDI3LCJleHAiOjE1ODU4MTIwODcsImlhdCI6MTU4NTgxMjAyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.D6DFC8YDvo6yodyM8IR4xFlCkp4MgUYDVp4rcJBCuWI'} 
data={"escrowCompanyId": "001", "sellerID": "e7dbd909-61d6-4403-b7f1-45d267cb3dde"} 
json=None</msg>
<msg timestamp="20200402 12:50:33.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:32.619" endtime="20200402 12:50:33.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:33.694" level="INFO">{"escrowCompanyId":"001","sellerId":"e7dbd909-61d6-4403-b7f1-45d267cb3dde","idNumber":"86086245160012","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3970288884","email":"pavan96546@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:29","updateDate":"02/04/2020 02:20:30","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:33.694" endtime="20200402 12:50:33.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:33.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:33.695" endtime="20200402 12:50:33.696"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:32.615" endtime="20200402 12:50:33.697"></status>
</kw>
<doc>Valid: To Verify response if email parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:50:26.535" endtime="20200402 12:50:33.697" critical="yes"></status>
</test>
<test id="s1-t40" name="TC_50 Selle_Details_API Duplicate Email Status 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:36.703" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:33.701" endtime="20200402 12:50:36.703"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:36.705" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:36.704" endtime="20200402 12:50:36.705"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:36.705" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:36.705" endtime="20200402 12:50:36.705"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:36.706" endtime="20200402 12:50:36.706"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:36.706" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:36.706" endtime="20200402 12:50:36.706"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:36.707" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:37.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:36.707" endtime="20200402 12:50:37.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:37.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:37.925" endtime="20200402 12:50:37.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:37.927" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4bVoyY0VRV1IxejBtOS9DNzZxNTZML05CcjFlZHNBYlhTT3ZMU1ZQTmFWdFd2YXhpTjB3ZnFVYUg1eWc9IiwibmJmIjoxNTg1ODEyMDM1LCJleHAiOjE1ODU4MTIwOTUsImlhdCI6MTU4NTgxMjAzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.mE_pcLFQG6WEBN31MlGOaAj3PabQXq22px2eQ-7IGdI</msg>
<status status="PASS" starttime="20200402 12:50:37.927" endtime="20200402 12:50:37.927"></status>
</kw>
<msg timestamp="20200402 12:50:37.928" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4bVoyY0V...</msg>
<status status="PASS" starttime="20200402 12:50:36.704" endtime="20200402 12:50:37.928"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:37.953" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:37.953" endtime="20200402 12:50:37.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:37.956" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:37.955" endtime="20200402 12:50:37.956"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:37.956" endtime="20200402 12:50:37.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:37.958" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:37.957" endtime="20200402 12:50:37.958"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:37.960" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:39.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:37.959" endtime="20200402 12:50:39.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:39.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:39.710" endtime="20200402 12:50:39.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:39.711" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5SaDl0czJKUUtHVFcwbSsveTBENXVGekxCYmx3aXI3QUdOMjM1K3paODBFUjlBYmptUGp4d0s2aXpwMFNSM2VRZDJqRWMrcHRjMzgyMnhtM2I1OHc9IiwibmJmIjoxNTg1ODEyMDM3LCJleHAiOjE1ODU4MTIwOTcsImlhdCI6MTU4NTgxMjAzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Fw38hLUb5uzlMisyO8o8CMtWVeaPXrGv8tJyzH4c2Nc</msg>
<status status="PASS" starttime="20200402 12:50:39.711" endtime="20200402 12:50:39.711"></status>
</kw>
<msg timestamp="20200402 12:50:39.711" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5SaDl0czJKUUtHVFcwbSsveTBENXVGekxCYmx3aXI...</msg>
<status status="PASS" starttime="20200402 12:50:37.952" endtime="20200402 12:50:39.711"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:39.712" level="INFO">${Id} = 95279902774902</msg>
<status status="PASS" starttime="20200402 12:50:39.712" endtime="20200402 12:50:39.712"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:39.713" level="INFO">${IdNumber} = 95279902774902</msg>
<status status="PASS" starttime="20200402 12:50:39.712" endtime="20200402 12:50:39.713"></status>
</kw>
<msg timestamp="20200402 12:50:39.713" level="INFO">${idNum} = 95279902774902</msg>
<status status="PASS" starttime="20200402 12:50:39.712" endtime="20200402 12:50:39.713"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:39.714" level="INFO">${mobile} = 3703278920</msg>
<status status="PASS" starttime="20200402 12:50:39.714" endtime="20200402 12:50:39.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:39.715" level="INFO">${mobileNo} = 3703278920</msg>
<status status="PASS" starttime="20200402 12:50:39.715" endtime="20200402 12:50:39.715"></status>
</kw>
<msg timestamp="20200402 12:50:39.715" level="INFO">${MobNo} = 3703278920</msg>
<status status="PASS" starttime="20200402 12:50:39.713" endtime="20200402 12:50:39.715"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:39.717" level="INFO">${Emailnum} = 68474</msg>
<status status="PASS" starttime="20200402 12:50:39.717" endtime="20200402 12:50:39.717"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:39.719" level="INFO">${enum} = 68474</msg>
<status status="PASS" starttime="20200402 12:50:39.718" endtime="20200402 12:50:39.719"></status>
</kw>
<msg timestamp="20200402 12:50:39.719" level="INFO">${num} = 68474</msg>
<status status="PASS" starttime="20200402 12:50:39.716" endtime="20200402 12:50:39.719"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:39.720" level="INFO">${emailid} = pavan68474@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:39.720" endtime="20200402 12:50:39.720"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:39.721" level="INFO">${email} = pavan68474@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:39.721" endtime="20200402 12:50:39.721"></status>
</kw>
<msg timestamp="20200402 12:50:39.722" level="INFO">${emailid} = pavan68474@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:39.715" endtime="20200402 12:50:39.722"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:39.726" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:39.726" endtime="20200402 12:50:39.726"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:39.727" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:39.727" endtime="20200402 12:50:39.727"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:39.728" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:39.728" endtime="20200402 12:50:39.729"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:39.732" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:39.729" endtime="20200402 12:50:39.732"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:39.734" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:39.732" endtime="20200402 12:50:39.734"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:39.738" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '95279902774902', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3703278920', 'email': 'pavan68474@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:39.734" endtime="20200402 12:50:39.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:39.738" endtime="20200402 12:50:39.739"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:39.740" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5SaDl0czJKUUtHVFcwbSsveTBENXVGekxC...</msg>
<status status="PASS" starttime="20200402 12:50:39.739" endtime="20200402 12:50:39.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:39.740" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:39.740" endtime="20200402 12:50:39.740"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:39.741" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOU5SaDl0czJKUUtHVFcwbSsveTBENXVGekxCYmx3aXI3QUdOMjM1K3paODBFUjlBYmptUGp4d0s2aXpwMFNSM2VRZDJqRWMrcHRjMzgyMnhtM2I1OHc9IiwibmJmIjoxNTg1ODEyMDM3LCJleHAiOjE1ODU4MTIwOTcsImlhdCI6MTU4NTgxMjAzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Fw38hLUb5uzlMisyO8o8CMtWVeaPXrGv8tJyzH4c2Nc'} 
data={"escrowCompanyId": "001", "idNumber": "95279902774902", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3703278920", "email": "pavan68474@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:40.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:39.741" endtime="20200402 12:50:40.032"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:40.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:40.033" endtime="20200402 12:50:40.034"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:40.034" endtime="20200402 12:50:40.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:40.035" endtime="20200402 12:50:40.036"></status>
</kw>
<msg timestamp="20200402 12:50:40.036" level="INFO">${sellerid} = 6d704eeb-7099-4bce-94a8-17d8b5ab4c9c</msg>
<status status="PASS" starttime="20200402 12:50:39.722" endtime="20200402 12:50:40.036"></status>
</kw>
<msg timestamp="20200402 12:50:40.037" level="INFO">${SellerId} = 6d704eeb-7099-4bce-94a8-17d8b5ab4c9c</msg>
<msg timestamp="20200402 12:50:40.037" level="INFO">${idnumber} = 95279902774902</msg>
<status status="PASS" starttime="20200402 12:50:37.951" endtime="20200402 12:50:40.037"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId1}</arg>
<arg>email</arg>
</arguments>
<assign>
<var>${Email}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:40.039" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:40.039" endtime="20200402 12:50:40.039"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:40.041" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '541fcd0d-1e0a-4afa-baac-bbea92c34da9'}</msg>
<status status="PASS" starttime="20200402 12:50:40.040" endtime="20200402 12:50:40.041"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:40.041" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4...</msg>
<status status="PASS" starttime="20200402 12:50:40.041" endtime="20200402 12:50:40.041"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:40.042" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:40.042" endtime="20200402 12:50:40.042"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:40.043" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4bVoyY0VRV1IxejBtOS9DNzZxNTZML05CcjFlZHNBYlhTT3ZMU1ZQTmFWdFd2YXhpTjB3ZnFVYUg1eWc9IiwibmJmIjoxNTg1ODEyMDM1LCJleHAiOjE1ODU4MTIwOTUsImlhdCI6MTU4NTgxMjAzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.mE_pcLFQG6WEBN31MlGOaAj3PabQXq22px2eQ-7IGdI'} 
data={"escrowCompanyId": "001", "sellerID": "541fcd0d-1e0a-4afa-baac-bbea92c34da9"} 
json=None</msg>
<msg timestamp="20200402 12:50:40.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:40.043" endtime="20200402 12:50:40.596"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:40.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:40.596" endtime="20200402 12:50:40.597"></status>
</kw>
<msg timestamp="20200402 12:50:40.598" level="INFO">${Email} = pavan54634@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:40.038" endtime="20200402 12:50:40.598"></status>
</kw>
<kw name="UpdateSellerDetails Email" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${Email}</arg>
<arg>${0}</arg>
<arg>U01</arg>
<arg>Duplicate ID card, email or mobile no.</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:40.600" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:40.599" endtime="20200402 12:50:40.600"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:40.601" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:40.600" endtime="20200402 12:50:40.601"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>email=${email}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:40.601" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '6d704eeb-7099-4bce-94a8-17d8b5ab4c9c', 'email': 'pavan54634@2c2p.com', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:40.601" endtime="20200402 12:50:40.601"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:40.602" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4...</msg>
<status status="PASS" starttime="20200402 12:50:40.602" endtime="20200402 12:50:40.602"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:40.603" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:40.602" endtime="20200402 12:50:40.603"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:40.603" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4bVoyY0VRV1IxejBtOS9DNzZxNTZML05CcjFlZHNBYlhTT3ZMU1ZQTmFWdFd2YXhpTjB3ZnFVYUg1eWc9IiwibmJmIjoxNTg1ODEyMDM1LCJleHAiOjE1ODU4MTIwOTUsImlhdCI6MTU4NTgxMjAzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.mE_pcLFQG6WEBN31MlGOaAj3PabQXq22px2eQ-7IGdI'} 
data={"escrowCompanyId": "001", "SELLERId": "6d704eeb-7099-4bce-94a8-17d8b5ab4c9c", "email": "pavan54634@2c2p.com", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:41.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:40.603" endtime="20200402 12:50:41.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:41.308" level="INFO">{"responseCode":"U01","resDescription":"Duplicate ID card, email or mobile no."}</msg>
<status status="PASS" starttime="20200402 12:50:41.307" endtime="20200402 12:50:41.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:41.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:41.309" endtime="20200402 12:50:41.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:41.310" endtime="20200402 12:50:41.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:41.310" endtime="20200402 12:50:41.311"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:40.599" endtime="20200402 12:50:41.311"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:41.313" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:41.313" endtime="20200402 12:50:41.313"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:41.314" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6d704eeb-7099-4bce-94a8-17d8b5ab4c9c'}</msg>
<status status="PASS" starttime="20200402 12:50:41.314" endtime="20200402 12:50:41.314"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:41.315" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4...</msg>
<status status="PASS" starttime="20200402 12:50:41.314" endtime="20200402 12:50:41.315"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:41.315" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:41.315" endtime="20200402 12:50:41.315"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:41.316" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3o4UVd0cUFUM2NCUmNjVmpZMDM5Y21OeDQ4bVoyY0VRV1IxejBtOS9DNzZxNTZML05CcjFlZHNBYlhTT3ZMU1ZQTmFWdFd2YXhpTjB3ZnFVYUg1eWc9IiwibmJmIjoxNTg1ODEyMDM1LCJleHAiOjE1ODU4MTIwOTUsImlhdCI6MTU4NTgxMjAzNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.mE_pcLFQG6WEBN31MlGOaAj3PabQXq22px2eQ-7IGdI'} 
data={"escrowCompanyId": "001", "sellerID": "6d704eeb-7099-4bce-94a8-17d8b5ab4c9c"} 
json=None</msg>
<msg timestamp="20200402 12:50:43.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:41.315" endtime="20200402 12:50:43.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:43.646" level="INFO">{"escrowCompanyId":"001","sellerId":"6d704eeb-7099-4bce-94a8-17d8b5ab4c9c","idNumber":"95279902774902","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3703278920","email":"pavan68474@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:37","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:43.645" endtime="20200402 12:50:43.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:43.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:43.647" endtime="20200402 12:50:43.648"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:41.312" endtime="20200402 12:50:43.648"></status>
</kw>
<doc>Duplicate: To check Email Address is entered duplicate (duplicate Email Address should belong to Seller status = Active)and request is send with all mandatory fields</doc>
<tags>
<tag>U01</tag>
</tags>
<status status="PASS" starttime="20200402 12:50:33.699" endtime="20200402 12:50:43.648" critical="yes"></status>
</test>
<test id="s1-t41" name="TC_51 Selle_Details_API Duplicate Email Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:46.651" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:43.651" endtime="20200402 12:50:46.651"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:46.653" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:46.653" endtime="20200402 12:50:46.654"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:46.655" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:46.654" endtime="20200402 12:50:46.655"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:46.655" endtime="20200402 12:50:46.656"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:46.657" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:46.657" endtime="20200402 12:50:46.657"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:46.659" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:47.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:46.658" endtime="20200402 12:50:47.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:47.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:47.399" endtime="20200402 12:50:47.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.401" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS83TFAzbmh0REd2M1dGcFQ5amYxTDNOQnY1ZnF5N3NlUnRvTlREazlPWVV2bC9IWitZR2J4bXc9IiwibmJmIjoxNTg1ODEyMDQ0LCJleHAiOjE1ODU4MTIxMDQsImlhdCI6MTU4NTgxMjA0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fNXNazrYLo92h84J7z6vfpdTzYkPiPUCK11ewbfbBf4</msg>
<status status="PASS" starttime="20200402 12:50:47.400" endtime="20200402 12:50:47.401"></status>
</kw>
<msg timestamp="20200402 12:50:47.401" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS8...</msg>
<status status="PASS" starttime="20200402 12:50:46.652" endtime="20200402 12:50:47.401"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.403" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:47.402" endtime="20200402 12:50:47.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:47.404" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:47.403" endtime="20200402 12:50:47.404"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:47.404" endtime="20200402 12:50:47.404"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:47.405" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:47.404" endtime="20200402 12:50:47.405"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:47.405" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:47.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:47.405" endtime="20200402 12:50:47.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:47.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:47.794" endtime="20200402 12:50:47.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.796" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW5qemo3NVVnNVZOR3QzajgxUGk5MFlxTDBBYVdMd2ljWmZyYzZTRXFKdEcwWlUydlF6aWdEaWhDMnFaUFptQWN3TE5ZTTlVSGtjZWsyNjIyWHMrazg9IiwibmJmIjoxNTg1ODEyMDQ1LCJleHAiOjE1ODU4MTIxMDUsImlhdCI6MTU4NTgxMjA0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4Hnb-Zs0iezbRr7o2TfNpPvqDwKSJKExya7nCIWWVJM</msg>
<status status="PASS" starttime="20200402 12:50:47.795" endtime="20200402 12:50:47.796"></status>
</kw>
<msg timestamp="20200402 12:50:47.796" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW5qemo3NVVnNVZOR3QzajgxUGk5MFlxTDBBYVdMd2l...</msg>
<status status="PASS" starttime="20200402 12:50:47.402" endtime="20200402 12:50:47.796"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:47.798" level="INFO">${Id} = 55509468844252</msg>
<status status="PASS" starttime="20200402 12:50:47.797" endtime="20200402 12:50:47.798"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.799" level="INFO">${IdNumber} = 55509468844252</msg>
<status status="PASS" starttime="20200402 12:50:47.798" endtime="20200402 12:50:47.799"></status>
</kw>
<msg timestamp="20200402 12:50:47.799" level="INFO">${idNum} = 55509468844252</msg>
<status status="PASS" starttime="20200402 12:50:47.797" endtime="20200402 12:50:47.799"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:47.800" level="INFO">${mobile} = 4569750308</msg>
<status status="PASS" starttime="20200402 12:50:47.800" endtime="20200402 12:50:47.800"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.801" level="INFO">${mobileNo} = 4569750308</msg>
<status status="PASS" starttime="20200402 12:50:47.800" endtime="20200402 12:50:47.801"></status>
</kw>
<msg timestamp="20200402 12:50:47.801" level="INFO">${MobNo} = 4569750308</msg>
<status status="PASS" starttime="20200402 12:50:47.799" endtime="20200402 12:50:47.801"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:47.802" level="INFO">${Emailnum} = 16726</msg>
<status status="PASS" starttime="20200402 12:50:47.802" endtime="20200402 12:50:47.802"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.803" level="INFO">${enum} = 16726</msg>
<status status="PASS" starttime="20200402 12:50:47.802" endtime="20200402 12:50:47.803"></status>
</kw>
<msg timestamp="20200402 12:50:47.803" level="INFO">${num} = 16726</msg>
<status status="PASS" starttime="20200402 12:50:47.801" endtime="20200402 12:50:47.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:47.803" level="INFO">${emailid} = pavan16726@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:47.803" endtime="20200402 12:50:47.803"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:47.804" level="INFO">${email} = pavan16726@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:47.804" endtime="20200402 12:50:47.804"></status>
</kw>
<msg timestamp="20200402 12:50:47.804" level="INFO">${emailid} = pavan16726@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:47.801" endtime="20200402 12:50:47.804"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:47.807" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:47.807" endtime="20200402 12:50:47.807"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:47.808" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:47.808" endtime="20200402 12:50:47.808"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:47.808" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:47.808" endtime="20200402 12:50:47.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:47.810" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:47.809" endtime="20200402 12:50:47.810"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:47.812" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:47.810" endtime="20200402 12:50:47.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:47.815" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '55509468844252', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4569750308', 'email': 'pavan16726@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:47.812" endtime="20200402 12:50:47.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:47.816" endtime="20200402 12:50:47.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:47.818" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW5qemo3NVVnNVZOR3QzajgxUGk5MFlxTDBB...</msg>
<status status="PASS" starttime="20200402 12:50:47.818" endtime="20200402 12:50:47.818"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:47.819" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:47.818" endtime="20200402 12:50:47.820"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:47.821" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW5qemo3NVVnNVZOR3QzajgxUGk5MFlxTDBBYVdMd2ljWmZyYzZTRXFKdEcwWlUydlF6aWdEaWhDMnFaUFptQWN3TE5ZTTlVSGtjZWsyNjIyWHMrazg9IiwibmJmIjoxNTg1ODEyMDQ1LCJleHAiOjE1ODU4MTIxMDUsImlhdCI6MTU4NTgxMjA0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4Hnb-Zs0iezbRr7o2TfNpPvqDwKSJKExya7nCIWWVJM'} 
data={"escrowCompanyId": "001", "idNumber": "55509468844252", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4569750308", "email": "pavan16726@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:49.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:47.820" endtime="20200402 12:50:49.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:49.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:49.995" endtime="20200402 12:50:49.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:49.996" endtime="20200402 12:50:49.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:49.997" endtime="20200402 12:50:49.997"></status>
</kw>
<msg timestamp="20200402 12:50:49.998" level="INFO">${sellerid} = 3b654115-1380-48e6-80e9-a1f94c74ef5b</msg>
<status status="PASS" starttime="20200402 12:50:47.805" endtime="20200402 12:50:49.998"></status>
</kw>
<msg timestamp="20200402 12:50:49.998" level="INFO">${SellerId} = 3b654115-1380-48e6-80e9-a1f94c74ef5b</msg>
<msg timestamp="20200402 12:50:49.998" level="INFO">${idnumber} = 55509468844252</msg>
<status status="PASS" starttime="20200402 12:50:47.402" endtime="20200402 12:50:49.998"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerIdno1}</var>
<var>${idnumber1}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.000" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:49.999" endtime="20200402 12:50:50.000"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:50.001" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:50.000" endtime="20200402 12:50:50.001"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:50.001" endtime="20200402 12:50:50.001"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:50.002" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:50.001" endtime="20200402 12:50:50.002"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:50.002" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:50:50.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:50.002" endtime="20200402 12:50:50.544"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:50.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:50.545" endtime="20200402 12:50:50.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.547" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUdaR1dacmpzVzRrckdiYkd3M1ZBbkxKekFhOTQzb2RpR0RMNFNGMWtYZENxZDV1d21GWUlMTGlKYWdpSTFEbXRybHVkUHBlUld0RXhEU29RL3Y0WUE9IiwibmJmIjoxNTg1ODEyMDQ4LCJleHAiOjE1ODU4MTIxMDgsImlhdCI6MTU4NTgxMjA0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VKuqsKlUU9z99r39H20WER1z7HuXwi7MeLWRbq7EyEA</msg>
<status status="PASS" starttime="20200402 12:50:50.546" endtime="20200402 12:50:50.547"></status>
</kw>
<msg timestamp="20200402 12:50:50.548" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUdaR1dacmpzVzRrckdiYkd3M1ZBbkxKekFhOTQzb2R...</msg>
<status status="PASS" starttime="20200402 12:50:49.999" endtime="20200402 12:50:50.548"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:50:50.549" level="INFO">${Id} = 05123452411938</msg>
<status status="PASS" starttime="20200402 12:50:50.549" endtime="20200402 12:50:50.550"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.550" level="INFO">${IdNumber} = 05123452411938</msg>
<status status="PASS" starttime="20200402 12:50:50.550" endtime="20200402 12:50:50.551"></status>
</kw>
<msg timestamp="20200402 12:50:50.551" level="INFO">${idNum} = 05123452411938</msg>
<status status="PASS" starttime="20200402 12:50:50.548" endtime="20200402 12:50:50.551"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:50:50.552" level="INFO">${mobile} = 1433402904</msg>
<status status="PASS" starttime="20200402 12:50:50.552" endtime="20200402 12:50:50.552"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.553" level="INFO">${mobileNo} = 1433402904</msg>
<status status="PASS" starttime="20200402 12:50:50.553" endtime="20200402 12:50:50.554"></status>
</kw>
<msg timestamp="20200402 12:50:50.554" level="INFO">${MobNo} = 1433402904</msg>
<status status="PASS" starttime="20200402 12:50:50.551" endtime="20200402 12:50:50.554"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:50:50.556" level="INFO">${Emailnum} = 74827</msg>
<status status="PASS" starttime="20200402 12:50:50.555" endtime="20200402 12:50:50.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.557" level="INFO">${enum} = 74827</msg>
<status status="PASS" starttime="20200402 12:50:50.557" endtime="20200402 12:50:50.558"></status>
</kw>
<msg timestamp="20200402 12:50:50.558" level="INFO">${num} = 74827</msg>
<status status="PASS" starttime="20200402 12:50:50.555" endtime="20200402 12:50:50.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:50:50.559" level="INFO">${emailid} = pavan74827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:50.559" endtime="20200402 12:50:50.559"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:50:50.561" level="INFO">${email} = pavan74827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:50.560" endtime="20200402 12:50:50.561"></status>
</kw>
<msg timestamp="20200402 12:50:50.562" level="INFO">${emailid} = pavan74827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:50.554" endtime="20200402 12:50:50.562"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:50.564" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:50.564" endtime="20200402 12:50:50.565"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:50:50.565" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:50:50.565" endtime="20200402 12:50:50.566"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:50.566" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:50.566" endtime="20200402 12:50:50.567"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:50:50.569" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:50.567" endtime="20200402 12:50:50.569"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:50:50.571" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:50:50.569" endtime="20200402 12:50:50.571"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:50.574" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '05123452411938', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1433402904', 'email': 'pavan74827@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:50:50.571" endtime="20200402 12:50:50.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:50.575" endtime="20200402 12:50:50.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:50.577" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUdaR1dacmpzVzRrckdiYkd3M1ZBbkxKekFh...</msg>
<status status="PASS" starttime="20200402 12:50:50.576" endtime="20200402 12:50:50.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:50.578" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:50.577" endtime="20200402 12:50:50.578"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:50.579" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUdaR1dacmpzVzRrckdiYkd3M1ZBbkxKekFhOTQzb2RpR0RMNFNGMWtYZENxZDV1d21GWUlMTGlKYWdpSTFEbXRybHVkUHBlUld0RXhEU29RL3Y0WUE9IiwibmJmIjoxNTg1ODEyMDQ4LCJleHAiOjE1ODU4MTIxMDgsImlhdCI6MTU4NTgxMjA0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VKuqsKlUU9z99r39H20WER1z7HuXwi7MeLWRbq7EyEA'} 
data={"escrowCompanyId": "001", "idNumber": "05123452411938", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1433402904", "email": "pavan74827@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:50:50.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:50.578" endtime="20200402 12:50:50.913"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:50.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:50.913" endtime="20200402 12:50:50.913"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:50.913" endtime="20200402 12:50:50.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:50.914" endtime="20200402 12:50:50.915"></status>
</kw>
<msg timestamp="20200402 12:50:50.915" level="INFO">${sellerid} = 35d59238-97eb-4818-baf4-15a5e49c5463</msg>
<status status="PASS" starttime="20200402 12:50:50.562" endtime="20200402 12:50:50.915"></status>
</kw>
<msg timestamp="20200402 12:50:50.915" level="INFO">${SellerIdno1} = 35d59238-97eb-4818-baf4-15a5e49c5463</msg>
<msg timestamp="20200402 12:50:50.915" level="INFO">${idnumber1} = 05123452411938</msg>
<status status="PASS" starttime="20200402 12:50:49.999" endtime="20200402 12:50:50.915"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerIdno1}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:50.917" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:50.917" endtime="20200402 12:50:50.917"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:50:50.918" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:50:50.917" endtime="20200402 12:50:50.918"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:50.919" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '35d59238-97eb-4818-baf4-15a5e49c5463', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:50:50.918" endtime="20200402 12:50:50.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:50.919" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05v...</msg>
<status status="PASS" starttime="20200402 12:50:50.919" endtime="20200402 12:50:50.920"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:50.920" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:50.920" endtime="20200402 12:50:50.920"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:50.921" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS83TFAzbmh0REd2M1dGcFQ5amYxTDNOQnY1ZnF5N3NlUnRvTlREazlPWVV2bC9IWitZR2J4bXc9IiwibmJmIjoxNTg1ODEyMDQ0LCJleHAiOjE1ODU4MTIxMDQsImlhdCI6MTU4NTgxMjA0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fNXNazrYLo92h84J7z6vfpdTzYkPiPUCK11ewbfbBf4'} 
data={"escrowCompanyId": "001", "SELLERId": "35d59238-97eb-4818-baf4-15a5e49c5463", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:50:51.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:50.920" endtime="20200402 12:50:51.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:51.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:51.920" endtime="20200402 12:50:51.921"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:50.916" endtime="20200402 12:50:51.921"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerIdno1}</arg>
<arg>email</arg>
</arguments>
<assign>
<var>${Email}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:51.923" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:51.922" endtime="20200402 12:50:51.923"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:51.924" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '35d59238-97eb-4818-baf4-15a5e49c5463'}</msg>
<status status="PASS" starttime="20200402 12:50:51.923" endtime="20200402 12:50:51.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:51.924" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05v...</msg>
<status status="PASS" starttime="20200402 12:50:51.924" endtime="20200402 12:50:51.924"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:51.925" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:51.924" endtime="20200402 12:50:51.925"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:51.925" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS83TFAzbmh0REd2M1dGcFQ5amYxTDNOQnY1ZnF5N3NlUnRvTlREazlPWVV2bC9IWitZR2J4bXc9IiwibmJmIjoxNTg1ODEyMDQ0LCJleHAiOjE1ODU4MTIxMDQsImlhdCI6MTU4NTgxMjA0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fNXNazrYLo92h84J7z6vfpdTzYkPiPUCK11ewbfbBf4'} 
data={"escrowCompanyId": "001", "sellerID": "35d59238-97eb-4818-baf4-15a5e49c5463"} 
json=None</msg>
<msg timestamp="20200402 12:50:52.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:51.925" endtime="20200402 12:50:52.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:52.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:52.220" endtime="20200402 12:50:52.221"></status>
</kw>
<msg timestamp="20200402 12:50:52.222" level="INFO">${Email} = pavan74827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:50:51.922" endtime="20200402 12:50:52.222"></status>
</kw>
<kw name="UpdateSellerDetails Email" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${Email}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:52.224" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:52.223" endtime="20200402 12:50:52.224"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:50:52.225" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:50:52.225" endtime="20200402 12:50:52.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>email=${email}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:52.226" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '3b654115-1380-48e6-80e9-a1f94c74ef5b', 'email': 'pavan74827@2c2p.com', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:50:52.225" endtime="20200402 12:50:52.226"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:52.227" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05v...</msg>
<status status="PASS" starttime="20200402 12:50:52.227" endtime="20200402 12:50:52.227"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:52.228" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:52.227" endtime="20200402 12:50:52.228"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:52.230" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS83TFAzbmh0REd2M1dGcFQ5amYxTDNOQnY1ZnF5N3NlUnRvTlREazlPWVV2bC9IWitZR2J4bXc9IiwibmJmIjoxNTg1ODEyMDQ0LCJleHAiOjE1ODU4MTIxMDQsImlhdCI6MTU4NTgxMjA0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fNXNazrYLo92h84J7z6vfpdTzYkPiPUCK11ewbfbBf4'} 
data={"escrowCompanyId": "001", "SELLERId": "3b654115-1380-48e6-80e9-a1f94c74ef5b", "email": "pavan74827@2c2p.com", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:50:54.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:52.229" endtime="20200402 12:50:54.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:54.160" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:54.160" endtime="20200402 12:50:54.161"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:54.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:54.161" endtime="20200402 12:50:54.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:54.162" endtime="20200402 12:50:54.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:54.163" endtime="20200402 12:50:54.164"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:52.222" endtime="20200402 12:50:54.164"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:50:54.166" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:54.166" endtime="20200402 12:50:54.167"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:50:54.168" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '3b654115-1380-48e6-80e9-a1f94c74ef5b'}</msg>
<status status="PASS" starttime="20200402 12:50:54.167" endtime="20200402 12:50:54.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:50:54.168" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05v...</msg>
<status status="PASS" starttime="20200402 12:50:54.168" endtime="20200402 12:50:54.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:54.169" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:50:54.169" endtime="20200402 12:50:54.169"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:54.170" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekZIdGZ1UmI3di9PK0RSbXpScmYxbmNsR05vamRNNS83TFAzbmh0REd2M1dGcFQ5amYxTDNOQnY1ZnF5N3NlUnRvTlREazlPWVV2bC9IWitZR2J4bXc9IiwibmJmIjoxNTg1ODEyMDQ0LCJleHAiOjE1ODU4MTIxMDQsImlhdCI6MTU4NTgxMjA0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fNXNazrYLo92h84J7z6vfpdTzYkPiPUCK11ewbfbBf4'} 
data={"escrowCompanyId": "001", "sellerID": "3b654115-1380-48e6-80e9-a1f94c74ef5b"} 
json=None</msg>
<msg timestamp="20200402 12:50:55.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:54.170" endtime="20200402 12:50:55.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:50:55.898" level="INFO">{"escrowCompanyId":"001","sellerId":"3b654115-1380-48e6-80e9-a1f94c74ef5b","idNumber":"55509468844252","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4569750308","email":"pavan74827@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:20:47","updateDate":"02/04/2020 02:20:51","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:50:55.898" endtime="20200402 12:50:55.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:50:55.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:50:55.899" endtime="20200402 12:50:55.899"></status>
</kw>
<status status="PASS" starttime="20200402 12:50:54.165" endtime="20200402 12:50:55.899"></status>
</kw>
<doc>Duplicate: To check Email Address is entered duplicate (duplicate Email Address should belong to Seller status = terminated )and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:50:43.650" endtime="20200402 12:50:55.900" critical="yes"></status>
</test>
<test id="s1-t42" name="TC_52 Selle_Details_API Duplicate Email Status 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:50:58.904" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:50:55.903" endtime="20200402 12:50:58.904"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:50:58.906" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:50:58.906" endtime="20200402 12:50:58.906"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:50:58.907" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:50:58.907" endtime="20200402 12:50:58.907"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:50:58.907" endtime="20200402 12:50:58.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:50:58.908" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:50:58.908" endtime="20200402 12:50:58.908"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:50:58.909" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:00.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:50:58.908" endtime="20200402 12:51:00.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:00.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:00.133" endtime="20200402 12:51:00.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.134" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ZVaFF2djdEaUJBRENmWFVCcnh3UlRldG05d052dHI3UkxEMEM0Si9hdWV2K3M3YWFtOTRLQmlyQ2xiSXcrQ2Fsc2J4eWVtWXJpZkhXWG1qZmVCUUk9IiwibmJmIjoxNTg1ODEyMDU3LCJleHAiOjE1ODU4MTIxMTcsImlhdCI6MTU4NTgxMjA1NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8wn6KehlzfTynU2sE6-ta_yVBQkz47RKzcusxaUHrng</msg>
<status status="PASS" starttime="20200402 12:51:00.134" endtime="20200402 12:51:00.134"></status>
</kw>
<msg timestamp="20200402 12:51:00.134" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ZVaFF2djdEaUJBRENmWFVCcnh3UlRldG05d052dHI...</msg>
<status status="PASS" starttime="20200402 12:50:58.905" endtime="20200402 12:51:00.135"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.137" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:00.136" endtime="20200402 12:51:00.137"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:00.138" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:00.138" endtime="20200402 12:51:00.138"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:00.138" endtime="20200402 12:51:00.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:00.140" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:00.139" endtime="20200402 12:51:00.140"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:00.141" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:00.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:00.140" endtime="20200402 12:51:00.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:00.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:00.567" endtime="20200402 12:51:00.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.569" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1cwdUluY0szekk5bEkvZ0s2eU4reG9LUUpGRjdmMGYyTE40QWdSSVl6QXVIZEFyT1QzMTk2ZVYrc2tNL3NNWUNldmxHV2c5VW1CSGNRQnNxK1Mrd2M9IiwibmJmIjoxNTg1ODEyMDU3LCJleHAiOjE1ODU4MTIxMTcsImlhdCI6MTU4NTgxMjA1NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VM5VRg4ccUqefFFg-K79d4-niRudMXJVGv-vDhVvPyg</msg>
<status status="PASS" starttime="20200402 12:51:00.568" endtime="20200402 12:51:00.570"></status>
</kw>
<msg timestamp="20200402 12:51:00.570" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1cwdUluY0szekk5bEkvZ0s2eU4reG9LUUpGRjdmMGY...</msg>
<status status="PASS" starttime="20200402 12:51:00.136" endtime="20200402 12:51:00.570"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:00.572" level="INFO">${Id} = 48050912597742</msg>
<status status="PASS" starttime="20200402 12:51:00.571" endtime="20200402 12:51:00.572"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.573" level="INFO">${IdNumber} = 48050912597742</msg>
<status status="PASS" starttime="20200402 12:51:00.573" endtime="20200402 12:51:00.574"></status>
</kw>
<msg timestamp="20200402 12:51:00.574" level="INFO">${idNum} = 48050912597742</msg>
<status status="PASS" starttime="20200402 12:51:00.571" endtime="20200402 12:51:00.574"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:00.576" level="INFO">${mobile} = 4230093417</msg>
<status status="PASS" starttime="20200402 12:51:00.575" endtime="20200402 12:51:00.576"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.577" level="INFO">${mobileNo} = 4230093417</msg>
<status status="PASS" starttime="20200402 12:51:00.576" endtime="20200402 12:51:00.577"></status>
</kw>
<msg timestamp="20200402 12:51:00.577" level="INFO">${MobNo} = 4230093417</msg>
<status status="PASS" starttime="20200402 12:51:00.574" endtime="20200402 12:51:00.577"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:00.580" level="INFO">${Emailnum} = 90440</msg>
<status status="PASS" starttime="20200402 12:51:00.579" endtime="20200402 12:51:00.580"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.581" level="INFO">${enum} = 90440</msg>
<status status="PASS" starttime="20200402 12:51:00.580" endtime="20200402 12:51:00.581"></status>
</kw>
<msg timestamp="20200402 12:51:00.581" level="INFO">${num} = 90440</msg>
<status status="PASS" starttime="20200402 12:51:00.578" endtime="20200402 12:51:00.581"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:00.582" level="INFO">${emailid} = pavan90440@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:00.581" endtime="20200402 12:51:00.582"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.582" level="INFO">${email} = pavan90440@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:00.582" endtime="20200402 12:51:00.582"></status>
</kw>
<msg timestamp="20200402 12:51:00.583" level="INFO">${emailid} = pavan90440@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:00.578" endtime="20200402 12:51:00.583"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:00.585" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:00.585" endtime="20200402 12:51:00.586"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:00.587" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:00.586" endtime="20200402 12:51:00.587"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:00.587" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:00.587" endtime="20200402 12:51:00.587"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:00.589" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:00.588" endtime="20200402 12:51:00.589"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:00.591" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:00.589" endtime="20200402 12:51:00.591"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:00.593" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '48050912597742', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4230093417', 'email': 'pavan90440@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:00.591" endtime="20200402 12:51:00.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:00.593" endtime="20200402 12:51:00.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:00.595" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1cwdUluY0szekk5bEkvZ0s2eU4reG9LUUpG...</msg>
<status status="PASS" starttime="20200402 12:51:00.594" endtime="20200402 12:51:00.595"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:00.596" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:00.595" endtime="20200402 12:51:00.596"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:00.597" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN1cwdUluY0szekk5bEkvZ0s2eU4reG9LUUpGRjdmMGYyTE40QWdSSVl6QXVIZEFyT1QzMTk2ZVYrc2tNL3NNWUNldmxHV2c5VW1CSGNRQnNxK1Mrd2M9IiwibmJmIjoxNTg1ODEyMDU3LCJleHAiOjE1ODU4MTIxMTcsImlhdCI6MTU4NTgxMjA1NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VM5VRg4ccUqefFFg-K79d4-niRudMXJVGv-vDhVvPyg'} 
data={"escrowCompanyId": "001", "idNumber": "48050912597742", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4230093417", "email": "pavan90440@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:00.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:00.596" endtime="20200402 12:51:00.900"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:00.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:00.900" endtime="20200402 12:51:00.900"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 12:51:00.901" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 12:51:00.901" endtime="20200402 12:51:00.901"></status>
</kw>
<status status="FAIL" starttime="20200402 12:51:00.583" endtime="20200402 12:51:00.901"></status>
</kw>
<status status="FAIL" starttime="20200402 12:51:00.135" endtime="20200402 12:51:00.902"></status>
</kw>
<doc>Duplicate: To check Email Address is entered duplicate (duplicate Email Address should belong to Seller status = terminated )and request is send with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 12:50:55.901" endtime="20200402 12:51:00.902" critical="yes">R03 != 000</status>
</test>
<test id="s1-t43" name="TC_53 Selle_Details_API Duplicate Email Status 4">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:03.908" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:00.907" endtime="20200402 12:51:03.908"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:03.909" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:03.909" endtime="20200402 12:51:03.910"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:03.910" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:03.910" endtime="20200402 12:51:03.910"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:03.910" endtime="20200402 12:51:03.911"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:03.911" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:03.911" endtime="20200402 12:51:03.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:03.912" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:04.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:03.911" endtime="20200402 12:51:04.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:04.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:04.137" endtime="20200402 12:51:04.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.139" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODdFMHF1c0o2VzhWYitSWDFadW0xTVYrOVQ1UUxYTnowemkxYUxWV045ejBINFpIL1B5NmMvbWM9IiwibmJmIjoxNTg1ODEyMDYxLCJleHAiOjE1ODU4MTIxMjEsImlhdCI6MTU4NTgxMjA2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LdaZIc7hUPvovbnE56tVzq2TaaIoPW2ZVjGZ-l4VH58</msg>
<status status="PASS" starttime="20200402 12:51:04.139" endtime="20200402 12:51:04.139"></status>
</kw>
<msg timestamp="20200402 12:51:04.139" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODd...</msg>
<status status="PASS" starttime="20200402 12:51:03.908" endtime="20200402 12:51:04.140"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.141" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:04.140" endtime="20200402 12:51:04.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:04.141" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:04.141" endtime="20200402 12:51:04.141"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:04.142" endtime="20200402 12:51:04.142"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:04.142" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:04.142" endtime="20200402 12:51:04.142"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:04.143" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:04.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:04.143" endtime="20200402 12:51:04.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:04.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:04.704" endtime="20200402 12:51:04.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.706" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDhzSFVOcXZkZTJYOU9RVzVORWtkdytaT2s0TDE4NFNmdUVJcVUyRUlYMllkcXRwdHFlZWFxZXpSdjFPc04ydStxK0N0NUp4S2tyZy9wWjVlYkdWV2s9IiwibmJmIjoxNTg1ODEyMDYyLCJleHAiOjE1ODU4MTIxMjIsImlhdCI6MTU4NTgxMjA2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5EBZO-KK9jEohUm4grT95i2E1LeUOKsrI3XWTsdUrqU</msg>
<status status="PASS" starttime="20200402 12:51:04.705" endtime="20200402 12:51:04.706"></status>
</kw>
<msg timestamp="20200402 12:51:04.706" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDhzSFVOcXZkZTJYOU9RVzVORWtkdytaT2s0TDE4NFN...</msg>
<status status="PASS" starttime="20200402 12:51:04.140" endtime="20200402 12:51:04.706"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:04.708" level="INFO">${Id} = 58534779130274</msg>
<status status="PASS" starttime="20200402 12:51:04.707" endtime="20200402 12:51:04.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.709" level="INFO">${IdNumber} = 58534779130274</msg>
<status status="PASS" starttime="20200402 12:51:04.708" endtime="20200402 12:51:04.709"></status>
</kw>
<msg timestamp="20200402 12:51:04.709" level="INFO">${idNum} = 58534779130274</msg>
<status status="PASS" starttime="20200402 12:51:04.706" endtime="20200402 12:51:04.709"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:04.710" level="INFO">${mobile} = 4373367658</msg>
<status status="PASS" starttime="20200402 12:51:04.710" endtime="20200402 12:51:04.710"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.711" level="INFO">${mobileNo} = 4373367658</msg>
<status status="PASS" starttime="20200402 12:51:04.711" endtime="20200402 12:51:04.711"></status>
</kw>
<msg timestamp="20200402 12:51:04.712" level="INFO">${MobNo} = 4373367658</msg>
<status status="PASS" starttime="20200402 12:51:04.709" endtime="20200402 12:51:04.712"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:04.714" level="INFO">${Emailnum} = 65134</msg>
<status status="PASS" starttime="20200402 12:51:04.713" endtime="20200402 12:51:04.714"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.715" level="INFO">${enum} = 65134</msg>
<status status="PASS" starttime="20200402 12:51:04.714" endtime="20200402 12:51:04.715"></status>
</kw>
<msg timestamp="20200402 12:51:04.715" level="INFO">${num} = 65134</msg>
<status status="PASS" starttime="20200402 12:51:04.713" endtime="20200402 12:51:04.715"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:04.716" level="INFO">${emailid} = pavan65134@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:04.716" endtime="20200402 12:51:04.716"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:04.717" level="INFO">${email} = pavan65134@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:04.716" endtime="20200402 12:51:04.717"></status>
</kw>
<msg timestamp="20200402 12:51:04.717" level="INFO">${emailid} = pavan65134@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:04.712" endtime="20200402 12:51:04.717"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:04.721" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:04.720" endtime="20200402 12:51:04.721"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:04.722" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:04.722" endtime="20200402 12:51:04.722"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:04.723" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:04.722" endtime="20200402 12:51:04.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:04.725" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:04.723" endtime="20200402 12:51:04.725"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:04.727" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:04.726" endtime="20200402 12:51:04.727"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:04.732" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '58534779130274', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4373367658', 'email': 'pavan65134@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:04.728" endtime="20200402 12:51:04.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:04.732" endtime="20200402 12:51:04.733"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:04.734" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDhzSFVOcXZkZTJYOU9RVzVORWtkdytaT2s0...</msg>
<status status="PASS" starttime="20200402 12:51:04.734" endtime="20200402 12:51:04.734"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:04.735" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:04.735" endtime="20200402 12:51:04.735"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:04.737" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNDhzSFVOcXZkZTJYOU9RVzVORWtkdytaT2s0TDE4NFNmdUVJcVUyRUlYMllkcXRwdHFlZWFxZXpSdjFPc04ydStxK0N0NUp4S2tyZy9wWjVlYkdWV2s9IiwibmJmIjoxNTg1ODEyMDYyLCJleHAiOjE1ODU4MTIxMjIsImlhdCI6MTU4NTgxMjA2MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5EBZO-KK9jEohUm4grT95i2E1LeUOKsrI3XWTsdUrqU'} 
data={"escrowCompanyId": "001", "idNumber": "58534779130274", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4373367658", "email": "pavan65134@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:09.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:04.736" endtime="20200402 12:51:09.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:09.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:09.342" endtime="20200402 12:51:09.343"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:09.343" endtime="20200402 12:51:09.343"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:09.343" endtime="20200402 12:51:09.344"></status>
</kw>
<msg timestamp="20200402 12:51:09.344" level="INFO">${sellerid} = 4711fc19-ad6a-492d-b538-bcf5e8aea770</msg>
<status status="PASS" starttime="20200402 12:51:04.717" endtime="20200402 12:51:09.344"></status>
</kw>
<msg timestamp="20200402 12:51:09.344" level="INFO">${SellerId} = 4711fc19-ad6a-492d-b538-bcf5e8aea770</msg>
<msg timestamp="20200402 12:51:09.345" level="INFO">${idnumber} = 58534779130274</msg>
<status status="PASS" starttime="20200402 12:51:04.140" endtime="20200402 12:51:09.345"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:09.345" level="INFO">${Id} = 50637503068914</msg>
<status status="PASS" starttime="20200402 12:51:09.345" endtime="20200402 12:51:09.345"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:09.346" level="INFO">${IdNumber} = 50637503068914</msg>
<status status="PASS" starttime="20200402 12:51:09.346" endtime="20200402 12:51:09.346"></status>
</kw>
<msg timestamp="20200402 12:51:09.346" level="INFO">${idNum} = 50637503068914</msg>
<status status="PASS" starttime="20200402 12:51:09.345" endtime="20200402 12:51:09.346"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:09.348" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:09.348" endtime="20200402 12:51:09.348"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:51:09.349" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:51:09.348" endtime="20200402 12:51:09.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:09.349" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4711fc19-ad6a-492d-b538-bcf5e8aea770', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:51:09.349" endtime="20200402 12:51:09.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:09.350" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZa...</msg>
<status status="PASS" starttime="20200402 12:51:09.350" endtime="20200402 12:51:09.350"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:09.351" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:09.350" endtime="20200402 12:51:09.351"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:09.352" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODdFMHF1c0o2VzhWYitSWDFadW0xTVYrOVQ1UUxYTnowemkxYUxWV045ejBINFpIL1B5NmMvbWM9IiwibmJmIjoxNTg1ODEyMDYxLCJleHAiOjE1ODU4MTIxMjEsImlhdCI6MTU4NTgxMjA2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LdaZIc7hUPvovbnE56tVzq2TaaIoPW2ZVjGZ-l4VH58'} 
data={"escrowCompanyId": "001", "SELLERId": "4711fc19-ad6a-492d-b538-bcf5e8aea770", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:51:11.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:09.351" endtime="20200402 12:51:11.480"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:11.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:11.480" endtime="20200402 12:51:11.481"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:09.347" endtime="20200402 12:51:11.481"></status>
</kw>
<kw name="GetSellerDetails ReturnAttribute" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}</arg>
<arg>${SellerId}</arg>
<arg>email</arg>
</arguments>
<assign>
<var>${Email}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:11.483" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:11.483" endtime="20200402 12:51:11.484"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:11.484" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '4711fc19-ad6a-492d-b538-bcf5e8aea770'}</msg>
<status status="PASS" starttime="20200402 12:51:11.484" endtime="20200402 12:51:11.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:11.485" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZa...</msg>
<status status="PASS" starttime="20200402 12:51:11.485" endtime="20200402 12:51:11.485"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:11.486" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:11.485" endtime="20200402 12:51:11.486"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:11.487" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODdFMHF1c0o2VzhWYitSWDFadW0xTVYrOVQ1UUxYTnowemkxYUxWV045ejBINFpIL1B5NmMvbWM9IiwibmJmIjoxNTg1ODEyMDYxLCJleHAiOjE1ODU4MTIxMjEsImlhdCI6MTU4NTgxMjA2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LdaZIc7hUPvovbnE56tVzq2TaaIoPW2ZVjGZ-l4VH58'} 
data={"escrowCompanyId": "001", "sellerID": "4711fc19-ad6a-492d-b538-bcf5e8aea770"} 
json=None</msg>
<msg timestamp="20200402 12:51:12.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:11.486" endtime="20200402 12:51:12.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:12.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:12.158" endtime="20200402 12:51:12.159"></status>
</kw>
<msg timestamp="20200402 12:51:12.159" level="INFO">${Email} = pavan65134@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:11.482" endtime="20200402 12:51:12.159"></status>
</kw>
<kw name="UpdateSellerDetails Email TypeId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${Email}</arg>
<arg>${1}</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:12.161" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:12.161" endtime="20200402 12:51:12.161"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:12.162" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:51:12.161" endtime="20200402 12:51:12.162"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:12.162" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:12.162" endtime="20200402 12:51:12.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>email=${email}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:12.163" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4711fc19-ad6a-492d-b538-bcf5e8aea770', 'idNumber': '50637503068914', 'email': 'pavan65134@2c2p.com', 'typeOfID': 1, 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:12.163" endtime="20200402 12:51:12.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:12.164" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZa...</msg>
<status status="PASS" starttime="20200402 12:51:12.164" endtime="20200402 12:51:12.164"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:12.165" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:12.164" endtime="20200402 12:51:12.165"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:12.166" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODdFMHF1c0o2VzhWYitSWDFadW0xTVYrOVQ1UUxYTnowemkxYUxWV045ejBINFpIL1B5NmMvbWM9IiwibmJmIjoxNTg1ODEyMDYxLCJleHAiOjE1ODU4MTIxMjEsImlhdCI6MTU4NTgxMjA2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LdaZIc7hUPvovbnE56tVzq2TaaIoPW2ZVjGZ-l4VH58'} 
data={"escrowCompanyId": "001", "SELLERId": "4711fc19-ad6a-492d-b538-bcf5e8aea770", "idNumber": "50637503068914", "email": "pavan65134@2c2p.com", "typeOfID": 1, "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:13.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:12.165" endtime="20200402 12:51:13.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:13.203" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:51:13.203" endtime="20200402 12:51:13.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:13.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:13.204" endtime="20200402 12:51:13.204"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:13.205" endtime="20200402 12:51:13.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:13.205" endtime="20200402 12:51:13.206"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:12.160" endtime="20200402 12:51:13.206"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:13.208" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:13.207" endtime="20200402 12:51:13.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:13.209" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '4711fc19-ad6a-492d-b538-bcf5e8aea770'}</msg>
<status status="PASS" starttime="20200402 12:51:13.208" endtime="20200402 12:51:13.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:13.209" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZa...</msg>
<status status="PASS" starttime="20200402 12:51:13.209" endtime="20200402 12:51:13.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:13.210" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:13.209" endtime="20200402 12:51:13.210"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:13.211" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnZybjY1Rm5rcUVGeGM3ZUpsTlJsUkIxalZaaC8wODdFMHF1c0o2VzhWYitSWDFadW0xTVYrOVQ1UUxYTnowemkxYUxWV045ejBINFpIL1B5NmMvbWM9IiwibmJmIjoxNTg1ODEyMDYxLCJleHAiOjE1ODU4MTIxMjEsImlhdCI6MTU4NTgxMjA2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LdaZIc7hUPvovbnE56tVzq2TaaIoPW2ZVjGZ-l4VH58'} 
data={"escrowCompanyId": "001", "sellerID": "4711fc19-ad6a-492d-b538-bcf5e8aea770"} 
json=None</msg>
<msg timestamp="20200402 12:51:13.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:13.210" endtime="20200402 12:51:13.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:13.714" level="INFO">{"escrowCompanyId":"001","sellerId":"4711fc19-ad6a-492d-b538-bcf5e8aea770","idNumber":"58534779130274","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4373367658","email":"pavan65134@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":4,"statusText":"Terminated","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:06","updateDate":"02/04/2020 02:21:08","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:13.713" endtime="20200402 12:51:13.714"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:13.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:13.714" endtime="20200402 12:51:13.715"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:13.207" endtime="20200402 12:51:13.715"></status>
</kw>
<doc>Duplicate: To check Email Address is entered duplicate (duplicate Email Address should belong to Seller status = terminated )and request is send with all mandatory fields</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:00.905" endtime="20200402 12:51:13.716" critical="yes"></status>
</test>
<test id="s1-t44" name="TC_54 Selle_Details_API Empty Gender">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:16.720" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:13.719" endtime="20200402 12:51:16.720"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:16.721" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:16.721" endtime="20200402 12:51:16.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:16.722" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:16.722" endtime="20200402 12:51:16.722"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:16.722" endtime="20200402 12:51:16.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:16.723" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:16.723" endtime="20200402 12:51:16.723"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:16.724" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:17.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:16.723" endtime="20200402 12:51:17.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:17.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:17.252" endtime="20200402 12:51:17.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.253" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVIbERoa01rN2FRdGYzM2lOTHNzVkxyc1hzd20yRVNaSmk2YXJ6Tk9PeWcvRTNzUHBibHlPOCtzSkdDSDQ9IiwibmJmIjoxNTg1ODEyMDc0LCJleHAiOjE1ODU4MTIxMzQsImlhdCI6MTU4NTgxMjA3NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vdOlRJ1SeridMvMrPRljzgh8b0IM1VusuHRpXz8-O5s</msg>
<status status="PASS" starttime="20200402 12:51:17.252" endtime="20200402 12:51:17.253"></status>
</kw>
<msg timestamp="20200402 12:51:17.253" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVIbERoa01...</msg>
<status status="PASS" starttime="20200402 12:51:16.721" endtime="20200402 12:51:17.253"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.255" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:17.255" endtime="20200402 12:51:17.255"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:17.256" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:17.255" endtime="20200402 12:51:17.256"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:17.256" endtime="20200402 12:51:17.256"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:17.257" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:17.256" endtime="20200402 12:51:17.257"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:17.257" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:17.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:17.257" endtime="20200402 12:51:17.983"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:17.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:17.983" endtime="20200402 12:51:17.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.985" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW91Vjl2LytUeGYxbVFVZ1g4aUFRYWhPUHF4UittOHN4KzU4WHhkWDE2STM2Y3QrdWFpVWVTeUVDRU1nSzhYOXVsU0Y2Zk9zM1BRSmF4TnBkV0xsM009IiwibmJmIjoxNTg1ODEyMDc1LCJleHAiOjE1ODU4MTIxMzUsImlhdCI6MTU4NTgxMjA3NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1YxG3SuH5YFrw1yHtOXy-Cj9i9xkZI1RDHUipTIYna0</msg>
<status status="PASS" starttime="20200402 12:51:17.984" endtime="20200402 12:51:17.985"></status>
</kw>
<msg timestamp="20200402 12:51:17.985" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW91Vjl2LytUeGYxbVFVZ1g4aUFRYWhPUHF4UittOHN...</msg>
<status status="PASS" starttime="20200402 12:51:17.254" endtime="20200402 12:51:17.985"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:17.987" level="INFO">${Id} = 79948799138986</msg>
<status status="PASS" starttime="20200402 12:51:17.987" endtime="20200402 12:51:17.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.988" level="INFO">${IdNumber} = 79948799138986</msg>
<status status="PASS" starttime="20200402 12:51:17.987" endtime="20200402 12:51:17.988"></status>
</kw>
<msg timestamp="20200402 12:51:17.988" level="INFO">${idNum} = 79948799138986</msg>
<status status="PASS" starttime="20200402 12:51:17.986" endtime="20200402 12:51:17.988"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:17.989" level="INFO">${mobile} = 7744568520</msg>
<status status="PASS" starttime="20200402 12:51:17.989" endtime="20200402 12:51:17.989"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.990" level="INFO">${mobileNo} = 7744568520</msg>
<status status="PASS" starttime="20200402 12:51:17.990" endtime="20200402 12:51:17.991"></status>
</kw>
<msg timestamp="20200402 12:51:17.991" level="INFO">${MobNo} = 7744568520</msg>
<status status="PASS" starttime="20200402 12:51:17.988" endtime="20200402 12:51:17.991"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:17.993" level="INFO">${Emailnum} = 42852</msg>
<status status="PASS" starttime="20200402 12:51:17.993" endtime="20200402 12:51:17.993"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.994" level="INFO">${enum} = 42852</msg>
<status status="PASS" starttime="20200402 12:51:17.994" endtime="20200402 12:51:17.995"></status>
</kw>
<msg timestamp="20200402 12:51:17.995" level="INFO">${num} = 42852</msg>
<status status="PASS" starttime="20200402 12:51:17.992" endtime="20200402 12:51:17.995"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:17.996" level="INFO">${emailid} = pavan42852@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:17.995" endtime="20200402 12:51:17.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:17.996" level="INFO">${email} = pavan42852@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:17.996" endtime="20200402 12:51:17.997"></status>
</kw>
<msg timestamp="20200402 12:51:17.997" level="INFO">${emailid} = pavan42852@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:17.991" endtime="20200402 12:51:17.997"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:18.001" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:18.000" endtime="20200402 12:51:18.002"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:18.002" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:18.002" endtime="20200402 12:51:18.002"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:18.003" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:18.003" endtime="20200402 12:51:18.003"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:18.005" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:18.003" endtime="20200402 12:51:18.005"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:18.007" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:18.005" endtime="20200402 12:51:18.007"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:18.011" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '79948799138986', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7744568520', 'email': 'pavan42852@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:18.007" endtime="20200402 12:51:18.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:18.012" endtime="20200402 12:51:18.013"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:18.013" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW91Vjl2LytUeGYxbVFVZ1g4aUFRYWhPUHF4...</msg>
<status status="PASS" starttime="20200402 12:51:18.013" endtime="20200402 12:51:18.014"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:18.014" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:18.014" endtime="20200402 12:51:18.014"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:18.016" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMW91Vjl2LytUeGYxbVFVZ1g4aUFRYWhPUHF4UittOHN4KzU4WHhkWDE2STM2Y3QrdWFpVWVTeUVDRU1nSzhYOXVsU0Y2Zk9zM1BRSmF4TnBkV0xsM009IiwibmJmIjoxNTg1ODEyMDc1LCJleHAiOjE1ODU4MTIxMzUsImlhdCI6MTU4NTgxMjA3NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1YxG3SuH5YFrw1yHtOXy-Cj9i9xkZI1RDHUipTIYna0'} 
data={"escrowCompanyId": "001", "idNumber": "79948799138986", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7744568520", "email": "pavan42852@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:19.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:18.015" endtime="20200402 12:51:19.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:19.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:19.481" endtime="20200402 12:51:19.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:19.483" endtime="20200402 12:51:19.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:19.484" endtime="20200402 12:51:19.484"></status>
</kw>
<msg timestamp="20200402 12:51:19.485" level="INFO">${sellerid} = b700e5f8-e8fc-427f-814c-c8a6192f6c34</msg>
<status status="PASS" starttime="20200402 12:51:17.997" endtime="20200402 12:51:19.485"></status>
</kw>
<msg timestamp="20200402 12:51:19.485" level="INFO">${SellerId} = b700e5f8-e8fc-427f-814c-c8a6192f6c34</msg>
<msg timestamp="20200402 12:51:19.485" level="INFO">${idnumber} = 79948799138986</msg>
<status status="PASS" starttime="20200402 12:51:17.254" endtime="20200402 12:51:19.486"></status>
</kw>
<kw name="UpdateSellerDetails Gender" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:19.488" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:19.487" endtime="20200402 12:51:19.488"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:19.489" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:19.488" endtime="20200402 12:51:19.489"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>gender=${gender}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:19.490" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'b700e5f8-e8fc-427f-814c-c8a6192f6c34', 'gender': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:19.489" endtime="20200402 12:51:19.490"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:19.491" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVI...</msg>
<status status="PASS" starttime="20200402 12:51:19.490" endtime="20200402 12:51:19.491"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:19.491" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:19.491" endtime="20200402 12:51:19.492"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:19.492" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVIbERoa01rN2FRdGYzM2lOTHNzVkxyc1hzd20yRVNaSmk2YXJ6Tk9PeWcvRTNzUHBibHlPOCtzSkdDSDQ9IiwibmJmIjoxNTg1ODEyMDc0LCJleHAiOjE1ODU4MTIxMzQsImlhdCI6MTU4NTgxMjA3NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vdOlRJ1SeridMvMrPRljzgh8b0IM1VusuHRpXz8-O5s'} 
data={"escrowCompanyId": "001", "SELLERId": "b700e5f8-e8fc-427f-814c-c8a6192f6c34", "gender": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:19.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:19.492" endtime="20200402 12:51:19.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:19.765" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:19.764" endtime="20200402 12:51:19.765"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:19.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:19.765" endtime="20200402 12:51:19.766"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:19.766" endtime="20200402 12:51:19.766"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:19.767" endtime="20200402 12:51:19.767"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:19.486" endtime="20200402 12:51:19.767"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:19.768" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:19.768" endtime="20200402 12:51:19.769"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:19.770" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'b700e5f8-e8fc-427f-814c-c8a6192f6c34'}</msg>
<status status="PASS" starttime="20200402 12:51:19.769" endtime="20200402 12:51:19.770"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:19.770" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVI...</msg>
<status status="PASS" starttime="20200402 12:51:19.770" endtime="20200402 12:51:19.770"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:19.771" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:19.770" endtime="20200402 12:51:19.771"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:19.771" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNnYvbnVxbkNkanoxUmtaRHpxL3l3MGd2dmVIbERoa01rN2FRdGYzM2lOTHNzVkxyc1hzd20yRVNaSmk2YXJ6Tk9PeWcvRTNzUHBibHlPOCtzSkdDSDQ9IiwibmJmIjoxNTg1ODEyMDc0LCJleHAiOjE1ODU4MTIxMzQsImlhdCI6MTU4NTgxMjA3NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vdOlRJ1SeridMvMrPRljzgh8b0IM1VusuHRpXz8-O5s'} 
data={"escrowCompanyId": "001", "sellerID": "b700e5f8-e8fc-427f-814c-c8a6192f6c34"} 
json=None</msg>
<msg timestamp="20200402 12:51:20.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:19.771" endtime="20200402 12:51:20.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:20.263" level="INFO">{"escrowCompanyId":"001","sellerId":"b700e5f8-e8fc-427f-814c-c8a6192f6c34","idNumber":"79948799138986","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7744568520","email":"pavan42852@2c2p.com","gender":"","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:16","updateDate":"02/04/2020 02:21:17","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:20.262" endtime="20200402 12:51:20.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:20.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:20.264" endtime="20200402 12:51:20.265"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:19.768" endtime="20200402 12:51:20.265"></status>
</kw>
<doc>Empty: To Verify response if gender parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:13.718" endtime="20200402 12:51:20.265" critical="yes"></status>
</test>
<test id="s1-t45" name="TC_55 Selle_Details_API Invalid Gender">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:23.271" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:20.269" endtime="20200402 12:51:23.271"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:23.273" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:23.272" endtime="20200402 12:51:23.273"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:23.273" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:23.273" endtime="20200402 12:51:23.274"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:23.274" endtime="20200402 12:51:23.274"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:23.275" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:23.274" endtime="20200402 12:51:23.275"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:23.275" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:24.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:23.275" endtime="20200402 12:51:24.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:24.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:24.988" endtime="20200402 12:51:24.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:24.991" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9JalpRN3V3dUdKMzFnUmdvdHFlUmNzR05BWDNFRjlnRTk5ZFhqYkRGdC9nRFhQNm9NUjVrN091SitjWjA9IiwibmJmIjoxNTg1ODEyMDgyLCJleHAiOjE1ODU4MTIxNDIsImlhdCI6MTU4NTgxMjA4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4YtLquwQG0m5Vz0__rWSrwbjPXm8xsjgBdkIwaALJas</msg>
<status status="PASS" starttime="20200402 12:51:24.990" endtime="20200402 12:51:24.991"></status>
</kw>
<msg timestamp="20200402 12:51:24.991" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9JalpRN3V...</msg>
<status status="PASS" starttime="20200402 12:51:23.272" endtime="20200402 12:51:24.991"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:24.994" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:24.994" endtime="20200402 12:51:24.995"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:24.996" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:24.995" endtime="20200402 12:51:24.996"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:24.996" endtime="20200402 12:51:24.997"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:24.998" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:24.997" endtime="20200402 12:51:24.998"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:24.999" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:25.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:24.998" endtime="20200402 12:51:25.714"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:25.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:25.715" endtime="20200402 12:51:25.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:25.716" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzV1WHJNNlg1RFAvcVl2Y3dQNnlIZXp6am1oQWVTSDBWbHpKR0YySXoyV2JITUc1MEExZGF3Z1ZZWWlWZHhKUjdDYWRTakZrbThYMGlHN2dFTjQwVDA9IiwibmJmIjoxNTg1ODEyMDgzLCJleHAiOjE1ODU4MTIxNDMsImlhdCI6MTU4NTgxMjA4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fYYiS1Hnqhowus5OdK1eXm1BL6W3hp2Dj-aUNQ9vpTE</msg>
<status status="PASS" starttime="20200402 12:51:25.715" endtime="20200402 12:51:25.716"></status>
</kw>
<msg timestamp="20200402 12:51:25.716" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzV1WHJNNlg1RFAvcVl2Y3dQNnlIZXp6am1oQWVTSDB...</msg>
<status status="PASS" starttime="20200402 12:51:24.993" endtime="20200402 12:51:25.716"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:25.717" level="INFO">${Id} = 84580578278970</msg>
<status status="PASS" starttime="20200402 12:51:25.717" endtime="20200402 12:51:25.717"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:25.718" level="INFO">${IdNumber} = 84580578278970</msg>
<status status="PASS" starttime="20200402 12:51:25.717" endtime="20200402 12:51:25.718"></status>
</kw>
<msg timestamp="20200402 12:51:25.718" level="INFO">${idNum} = 84580578278970</msg>
<status status="PASS" starttime="20200402 12:51:25.716" endtime="20200402 12:51:25.718"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:25.719" level="INFO">${mobile} = 0758797646</msg>
<status status="PASS" starttime="20200402 12:51:25.719" endtime="20200402 12:51:25.719"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:25.720" level="INFO">${mobileNo} = 0758797646</msg>
<status status="PASS" starttime="20200402 12:51:25.719" endtime="20200402 12:51:25.720"></status>
</kw>
<msg timestamp="20200402 12:51:25.720" level="INFO">${MobNo} = 0758797646</msg>
<status status="PASS" starttime="20200402 12:51:25.718" endtime="20200402 12:51:25.720"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:25.721" level="INFO">${Emailnum} = 31336</msg>
<status status="PASS" starttime="20200402 12:51:25.721" endtime="20200402 12:51:25.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:25.722" level="INFO">${enum} = 31336</msg>
<status status="PASS" starttime="20200402 12:51:25.721" endtime="20200402 12:51:25.722"></status>
</kw>
<msg timestamp="20200402 12:51:25.722" level="INFO">${num} = 31336</msg>
<status status="PASS" starttime="20200402 12:51:25.720" endtime="20200402 12:51:25.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:25.723" level="INFO">${emailid} = pavan31336@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:25.722" endtime="20200402 12:51:25.723"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:25.723" level="INFO">${email} = pavan31336@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:25.723" endtime="20200402 12:51:25.723"></status>
</kw>
<msg timestamp="20200402 12:51:25.723" level="INFO">${emailid} = pavan31336@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:25.720" endtime="20200402 12:51:25.723"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:25.726" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:25.726" endtime="20200402 12:51:25.727"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:25.728" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:25.727" endtime="20200402 12:51:25.728"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:25.729" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:25.728" endtime="20200402 12:51:25.729"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:25.730" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:25.729" endtime="20200402 12:51:25.730"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:25.732" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:25.731" endtime="20200402 12:51:25.732"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:25.734" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '84580578278970', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0758797646', 'email': 'pavan31336@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:25.732" endtime="20200402 12:51:25.734"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:25.735" endtime="20200402 12:51:25.735"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:25.736" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzV1WHJNNlg1RFAvcVl2Y3dQNnlIZXp6am1o...</msg>
<status status="PASS" starttime="20200402 12:51:25.736" endtime="20200402 12:51:25.736"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:25.737" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:25.737" endtime="20200402 12:51:25.737"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:25.738" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzV1WHJNNlg1RFAvcVl2Y3dQNnlIZXp6am1oQWVTSDBWbHpKR0YySXoyV2JITUc1MEExZGF3Z1ZZWWlWZHhKUjdDYWRTakZrbThYMGlHN2dFTjQwVDA9IiwibmJmIjoxNTg1ODEyMDgzLCJleHAiOjE1ODU4MTIxNDMsImlhdCI6MTU4NTgxMjA4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fYYiS1Hnqhowus5OdK1eXm1BL6W3hp2Dj-aUNQ9vpTE'} 
data={"escrowCompanyId": "001", "idNumber": "84580578278970", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0758797646", "email": "pavan31336@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:27.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:25.737" endtime="20200402 12:51:27.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:27.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:27.025" endtime="20200402 12:51:27.026"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:27.027" endtime="20200402 12:51:27.027"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:27.027" endtime="20200402 12:51:27.028"></status>
</kw>
<msg timestamp="20200402 12:51:27.028" level="INFO">${sellerid} = 4cbe2d75-c290-4004-8240-f804010af043</msg>
<status status="PASS" starttime="20200402 12:51:25.724" endtime="20200402 12:51:27.028"></status>
</kw>
<msg timestamp="20200402 12:51:27.028" level="INFO">${SellerId} = 4cbe2d75-c290-4004-8240-f804010af043</msg>
<msg timestamp="20200402 12:51:27.029" level="INFO">${idnumber} = 84580578278970</msg>
<status status="PASS" starttime="20200402 12:51:24.992" endtime="20200402 12:51:27.029"></status>
</kw>
<kw name="UpdateSellerDetails Gender" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>Y</arg>
<arg>${0}</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:27.030" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:27.029" endtime="20200402 12:51:27.030"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:27.030" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:27.030" endtime="20200402 12:51:27.030"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>gender=${gender}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:27.031" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4cbe2d75-c290-4004-8240-f804010af043', 'gender': 'Y', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:27.031" endtime="20200402 12:51:27.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:27.032" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9J...</msg>
<status status="PASS" starttime="20200402 12:51:27.032" endtime="20200402 12:51:27.032"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:27.033" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:27.032" endtime="20200402 12:51:27.033"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:27.033" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9JalpRN3V3dUdKMzFnUmdvdHFlUmNzR05BWDNFRjlnRTk5ZFhqYkRGdC9nRFhQNm9NUjVrN091SitjWjA9IiwibmJmIjoxNTg1ODEyMDgyLCJleHAiOjE1ODU4MTIxNDIsImlhdCI6MTU4NTgxMjA4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4YtLquwQG0m5Vz0__rWSrwbjPXm8xsjgBdkIwaALJas'} 
data={"escrowCompanyId": "001", "SELLERId": "4cbe2d75-c290-4004-8240-f804010af043", "gender": "Y", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:27.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:27.033" endtime="20200402 12:51:27.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:27.804" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:51:27.803" endtime="20200402 12:51:27.805"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:27.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:27.805" endtime="20200402 12:51:27.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:27.806" endtime="20200402 12:51:27.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:27.807" endtime="20200402 12:51:27.808"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:27.029" endtime="20200402 12:51:27.808"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:27.810" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:27.810" endtime="20200402 12:51:27.811"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:27.812" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '4cbe2d75-c290-4004-8240-f804010af043'}</msg>
<status status="PASS" starttime="20200402 12:51:27.811" endtime="20200402 12:51:27.812"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:27.813" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9J...</msg>
<status status="PASS" starttime="20200402 12:51:27.812" endtime="20200402 12:51:27.813"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:27.814" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:27.814" endtime="20200402 12:51:27.814"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:27.816" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3RUeDFIK1ErYWI4OFBnbTR0K3cxUTJXRC9JalpRN3V3dUdKMzFnUmdvdHFlUmNzR05BWDNFRjlnRTk5ZFhqYkRGdC9nRFhQNm9NUjVrN091SitjWjA9IiwibmJmIjoxNTg1ODEyMDgyLCJleHAiOjE1ODU4MTIxNDIsImlhdCI6MTU4NTgxMjA4MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.4YtLquwQG0m5Vz0__rWSrwbjPXm8xsjgBdkIwaALJas'} 
data={"escrowCompanyId": "001", "sellerID": "4cbe2d75-c290-4004-8240-f804010af043"} 
json=None</msg>
<msg timestamp="20200402 12:51:28.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:27.815" endtime="20200402 12:51:28.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:28.699" level="INFO">{"escrowCompanyId":"001","sellerId":"4cbe2d75-c290-4004-8240-f804010af043","idNumber":"84580578278970","typeOfId":3,"mobileCountryCode":"67","mobileNo":"0758797646","email":"pavan31336@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:24","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:28.699" endtime="20200402 12:51:28.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:28.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:28.700" endtime="20200402 12:51:28.700"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:27.809" endtime="20200402 12:51:28.701"></status>
</kw>
<doc>Invalid: To Verify response if gender parameter is entered invalid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:20.267" endtime="20200402 12:51:28.701" critical="yes"></status>
</test>
<test id="s1-t46" name="TC_56 Selle_Details_API Valid Gender">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:31.706" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:28.704" endtime="20200402 12:51:31.706"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:31.709" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:31.708" endtime="20200402 12:51:31.709"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:31.710" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:31.710" endtime="20200402 12:51:31.711"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:31.711" endtime="20200402 12:51:31.712"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:31.713" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:31.712" endtime="20200402 12:51:31.713"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:31.714" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:32.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:31.713" endtime="20200402 12:51:32.376"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:32.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:32.376" endtime="20200402 12:51:32.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:32.377" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxiVTNSWGhMd2pKQldVSkJ3TDhqOWM4QUVtN3BNVkhrMHJyNDZDdnp3QVNpN2g1VjkyaUp4SmhZSGx4ZG89IiwibmJmIjoxNTg1ODEyMDg5LCJleHAiOjE1ODU4MTIxNDksImlhdCI6MTU4NTgxMjA4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JEqyxLxyt-kBjtCR5yYHWM8LEQfedKxqWsrfh0a2J5Q</msg>
<status status="PASS" starttime="20200402 12:51:32.377" endtime="20200402 12:51:32.378"></status>
</kw>
<msg timestamp="20200402 12:51:32.378" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxiVTNSWGh...</msg>
<status status="PASS" starttime="20200402 12:51:31.708" endtime="20200402 12:51:32.379"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:32.382" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:32.382" endtime="20200402 12:51:32.384"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:32.385" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:32.384" endtime="20200402 12:51:32.385"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:32.385" endtime="20200402 12:51:32.386"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:32.387" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:32.386" endtime="20200402 12:51:32.387"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:32.388" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:33.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:32.387" endtime="20200402 12:51:33.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:33.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.306" endtime="20200402 12:51:33.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:33.307" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWgvS04vRXhYbEdDdno4QlAvSmY0ODIxQ1dVQXhieTNwTk5zU252UDRJWWdUOURHNHhEb3pTNGZWRC9ZQ0xoMVNNYndiVitUUGlUd3drWXVlN1JUSTg9IiwibmJmIjoxNTg1ODEyMDkwLCJleHAiOjE1ODU4MTIxNTAsImlhdCI6MTU4NTgxMjA5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yiw0TsYbXI6tT2wIvSFW95bNMo2SSgBqv9JwCsfYzwI</msg>
<status status="PASS" starttime="20200402 12:51:33.307" endtime="20200402 12:51:33.307"></status>
</kw>
<msg timestamp="20200402 12:51:33.308" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWgvS04vRXhYbEdDdno4QlAvSmY0ODIxQ1dVQXhieTN...</msg>
<status status="PASS" starttime="20200402 12:51:32.381" endtime="20200402 12:51:33.308"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:33.309" level="INFO">${Id} = 95426111377987</msg>
<status status="PASS" starttime="20200402 12:51:33.308" endtime="20200402 12:51:33.309"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:33.310" level="INFO">${IdNumber} = 95426111377987</msg>
<status status="PASS" starttime="20200402 12:51:33.309" endtime="20200402 12:51:33.310"></status>
</kw>
<msg timestamp="20200402 12:51:33.310" level="INFO">${idNum} = 95426111377987</msg>
<status status="PASS" starttime="20200402 12:51:33.308" endtime="20200402 12:51:33.310"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:33.311" level="INFO">${mobile} = 2774876418</msg>
<status status="PASS" starttime="20200402 12:51:33.310" endtime="20200402 12:51:33.311"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:33.311" level="INFO">${mobileNo} = 2774876418</msg>
<status status="PASS" starttime="20200402 12:51:33.311" endtime="20200402 12:51:33.311"></status>
</kw>
<msg timestamp="20200402 12:51:33.312" level="INFO">${MobNo} = 2774876418</msg>
<status status="PASS" starttime="20200402 12:51:33.310" endtime="20200402 12:51:33.312"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:33.313" level="INFO">${Emailnum} = 75009</msg>
<status status="PASS" starttime="20200402 12:51:33.313" endtime="20200402 12:51:33.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:33.313" level="INFO">${enum} = 75009</msg>
<status status="PASS" starttime="20200402 12:51:33.313" endtime="20200402 12:51:33.313"></status>
</kw>
<msg timestamp="20200402 12:51:33.314" level="INFO">${num} = 75009</msg>
<status status="PASS" starttime="20200402 12:51:33.312" endtime="20200402 12:51:33.314"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:33.314" level="INFO">${emailid} = pavan75009@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:33.314" endtime="20200402 12:51:33.314"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:33.315" level="INFO">${email} = pavan75009@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:33.314" endtime="20200402 12:51:33.315"></status>
</kw>
<msg timestamp="20200402 12:51:33.315" level="INFO">${emailid} = pavan75009@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:33.312" endtime="20200402 12:51:33.315"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:33.319" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:33.319" endtime="20200402 12:51:33.319"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:33.320" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:33.319" endtime="20200402 12:51:33.320"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:33.320" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:33.320" endtime="20200402 12:51:33.320"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:33.323" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:33.321" endtime="20200402 12:51:33.323"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:33.324" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:33.323" endtime="20200402 12:51:33.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:33.327" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '95426111377987', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2774876418', 'email': 'pavan75009@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:33.325" endtime="20200402 12:51:33.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:33.328" endtime="20200402 12:51:33.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:33.330" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWgvS04vRXhYbEdDdno4QlAvSmY0ODIxQ1dV...</msg>
<status status="PASS" starttime="20200402 12:51:33.329" endtime="20200402 12:51:33.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:33.331" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:33.330" endtime="20200402 12:51:33.331"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:33.332" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWgvS04vRXhYbEdDdno4QlAvSmY0ODIxQ1dVQXhieTNwTk5zU252UDRJWWdUOURHNHhEb3pTNGZWRC9ZQ0xoMVNNYndiVitUUGlUd3drWXVlN1JUSTg9IiwibmJmIjoxNTg1ODEyMDkwLCJleHAiOjE1ODU4MTIxNTAsImlhdCI6MTU4NTgxMjA5MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yiw0TsYbXI6tT2wIvSFW95bNMo2SSgBqv9JwCsfYzwI'} 
data={"escrowCompanyId": "001", "idNumber": "95426111377987", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2774876418", "email": "pavan75009@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:33.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.331" endtime="20200402 12:51:33.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:33.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.636" endtime="20200402 12:51:33.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:33.637" endtime="20200402 12:51:33.638"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:33.639" endtime="20200402 12:51:33.639"></status>
</kw>
<msg timestamp="20200402 12:51:33.640" level="INFO">${sellerid} = 9a1563a5-a6ff-4716-b1d2-8619087a457b</msg>
<status status="PASS" starttime="20200402 12:51:33.316" endtime="20200402 12:51:33.640"></status>
</kw>
<msg timestamp="20200402 12:51:33.640" level="INFO">${SellerId} = 9a1563a5-a6ff-4716-b1d2-8619087a457b</msg>
<msg timestamp="20200402 12:51:33.641" level="INFO">${idnumber} = 95426111377987</msg>
<status status="PASS" starttime="20200402 12:51:32.380" endtime="20200402 12:51:33.641"></status>
</kw>
<kw name="UpdateSellerDetails Gender" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>M</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:33.643" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:33.642" endtime="20200402 12:51:33.644"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:33.645" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:33.644" endtime="20200402 12:51:33.645"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>gender=${gender}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:33.647" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '9a1563a5-a6ff-4716-b1d2-8619087a457b', 'gender': 'M', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:33.645" endtime="20200402 12:51:33.647"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:33.648" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxi...</msg>
<status status="PASS" starttime="20200402 12:51:33.647" endtime="20200402 12:51:33.648"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:33.649" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:33.648" endtime="20200402 12:51:33.649"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:33.650" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxiVTNSWGhMd2pKQldVSkJ3TDhqOWM4QUVtN3BNVkhrMHJyNDZDdnp3QVNpN2g1VjkyaUp4SmhZSGx4ZG89IiwibmJmIjoxNTg1ODEyMDg5LCJleHAiOjE1ODU4MTIxNDksImlhdCI6MTU4NTgxMjA4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JEqyxLxyt-kBjtCR5yYHWM8LEQfedKxqWsrfh0a2J5Q'} 
data={"escrowCompanyId": "001", "SELLERId": "9a1563a5-a6ff-4716-b1d2-8619087a457b", "gender": "M", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:33.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.649" endtime="20200402 12:51:33.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:33.850" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:33.850" endtime="20200402 12:51:33.850"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:33.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.851" endtime="20200402 12:51:33.851"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:33.852" endtime="20200402 12:51:33.852"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:33.852" endtime="20200402 12:51:33.853"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:33.641" endtime="20200402 12:51:33.853"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:33.854" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:33.854" endtime="20200402 12:51:33.855"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:33.855" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '9a1563a5-a6ff-4716-b1d2-8619087a457b'}</msg>
<status status="PASS" starttime="20200402 12:51:33.855" endtime="20200402 12:51:33.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:33.856" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxi...</msg>
<status status="PASS" starttime="20200402 12:51:33.855" endtime="20200402 12:51:33.856"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:33.856" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:33.856" endtime="20200402 12:51:33.856"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:33.857" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBkd2tkUVZjd2cyVmxCaTJ2YjhFbzFsWGxiVTNSWGhMd2pKQldVSkJ3TDhqOWM4QUVtN3BNVkhrMHJyNDZDdnp3QVNpN2g1VjkyaUp4SmhZSGx4ZG89IiwibmJmIjoxNTg1ODEyMDg5LCJleHAiOjE1ODU4MTIxNDksImlhdCI6MTU4NTgxMjA4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JEqyxLxyt-kBjtCR5yYHWM8LEQfedKxqWsrfh0a2J5Q'} 
data={"escrowCompanyId": "001", "sellerID": "9a1563a5-a6ff-4716-b1d2-8619087a457b"} 
json=None</msg>
<msg timestamp="20200402 12:51:34.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:33.857" endtime="20200402 12:51:34.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:34.734" level="INFO">{"escrowCompanyId":"001","sellerId":"9a1563a5-a6ff-4716-b1d2-8619087a457b","idNumber":"95426111377987","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2774876418","email":"pavan75009@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:31","updateDate":"02/04/2020 02:21:31","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:34.734" endtime="20200402 12:51:34.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:34.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:34.736" endtime="20200402 12:51:34.737"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:33.853" endtime="20200402 12:51:34.737"></status>
</kw>
<doc>Valid: To Verify response if gender parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:28.703" endtime="20200402 12:51:34.738" critical="yes"></status>
</test>
<test id="s1-t47" name="TC_57 Selle_Details_API Valid titleEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:37.744" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:34.742" endtime="20200402 12:51:37.744"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:37.763" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:37.762" endtime="20200402 12:51:37.764"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:37.765" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:37.764" endtime="20200402 12:51:37.765"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:37.765" endtime="20200402 12:51:37.766"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:37.767" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:37.766" endtime="20200402 12:51:37.767"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:37.768" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:38.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:37.767" endtime="20200402 12:51:38.615"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:38.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:38.616" endtime="20200402 12:51:38.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:38.617" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpvTDhlSm5GNkVFRGJuckJlUksrLzdvMk9JSDhPQXgwbXAyTFBzV29YaDFKU0ZjVG5DWGhiUm1LOW5IYTA9IiwibmJmIjoxNTg1ODEyMDk2LCJleHAiOjE1ODU4MTIxNTYsImlhdCI6MTU4NTgxMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Sg0g3-UR8lg6JDl0Ep6TjZS0RBcRM6t7wrszQopmtRI</msg>
<status status="PASS" starttime="20200402 12:51:38.617" endtime="20200402 12:51:38.618"></status>
</kw>
<msg timestamp="20200402 12:51:38.618" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpvTDhlSm5...</msg>
<status status="PASS" starttime="20200402 12:51:37.762" endtime="20200402 12:51:38.618"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:38.621" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:38.621" endtime="20200402 12:51:38.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:38.623" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:38.622" endtime="20200402 12:51:38.623"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:38.623" endtime="20200402 12:51:38.624"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:38.625" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:38.624" endtime="20200402 12:51:38.625"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:38.626" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:39.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:38.625" endtime="20200402 12:51:39.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:39.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:39.195" endtime="20200402 12:51:39.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:39.196" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNhSnJnUVhRUnZiYXh3dCtRNHJlRFNuMjVMRWpEQU56WC9vTFVnekNNb2pMaENZb1hNUytibXpDRzlqcjlLSDlBa1Zhd3dTUklkZU9CQVdZTVlyTzA9IiwibmJmIjoxNTg1ODEyMDk2LCJleHAiOjE1ODU4MTIxNTYsImlhdCI6MTU4NTgxMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5V-giWUUdt1Y2nsDmkTAmvgIOAtsq8IoInUjL2e59Hc</msg>
<status status="PASS" starttime="20200402 12:51:39.196" endtime="20200402 12:51:39.197"></status>
</kw>
<msg timestamp="20200402 12:51:39.197" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNhSnJnUVhRUnZiYXh3dCtRNHJlRFNuMjVMRWpEQU5...</msg>
<status status="PASS" starttime="20200402 12:51:38.620" endtime="20200402 12:51:39.197"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:39.199" level="INFO">${Id} = 51677358923116</msg>
<status status="PASS" starttime="20200402 12:51:39.198" endtime="20200402 12:51:39.199"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:39.200" level="INFO">${IdNumber} = 51677358923116</msg>
<status status="PASS" starttime="20200402 12:51:39.200" endtime="20200402 12:51:39.200"></status>
</kw>
<msg timestamp="20200402 12:51:39.201" level="INFO">${idNum} = 51677358923116</msg>
<status status="PASS" starttime="20200402 12:51:39.198" endtime="20200402 12:51:39.201"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:39.203" level="INFO">${mobile} = 8271051605</msg>
<status status="PASS" starttime="20200402 12:51:39.202" endtime="20200402 12:51:39.203"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:39.204" level="INFO">${mobileNo} = 8271051605</msg>
<status status="PASS" starttime="20200402 12:51:39.203" endtime="20200402 12:51:39.204"></status>
</kw>
<msg timestamp="20200402 12:51:39.205" level="INFO">${MobNo} = 8271051605</msg>
<status status="PASS" starttime="20200402 12:51:39.201" endtime="20200402 12:51:39.205"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:39.208" level="INFO">${Emailnum} = 01111</msg>
<status status="PASS" starttime="20200402 12:51:39.207" endtime="20200402 12:51:39.208"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:39.209" level="INFO">${enum} = 01111</msg>
<status status="PASS" starttime="20200402 12:51:39.208" endtime="20200402 12:51:39.209"></status>
</kw>
<msg timestamp="20200402 12:51:39.209" level="INFO">${num} = 01111</msg>
<status status="PASS" starttime="20200402 12:51:39.206" endtime="20200402 12:51:39.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:39.210" level="INFO">${emailid} = pavan01111@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:39.210" endtime="20200402 12:51:39.211"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:39.212" level="INFO">${email} = pavan01111@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:39.211" endtime="20200402 12:51:39.212"></status>
</kw>
<msg timestamp="20200402 12:51:39.212" level="INFO">${emailid} = pavan01111@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:39.205" endtime="20200402 12:51:39.212"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:39.217" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:39.217" endtime="20200402 12:51:39.218"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:39.219" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:39.218" endtime="20200402 12:51:39.219"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:39.220" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:39.219" endtime="20200402 12:51:39.220"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:39.222" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:39.220" endtime="20200402 12:51:39.223"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:39.225" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:39.223" endtime="20200402 12:51:39.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:39.231" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '51677358923116', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8271051605', 'email': 'pavan01111@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:39.226" endtime="20200402 12:51:39.231"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:39.231" endtime="20200402 12:51:39.232"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:39.233" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNhSnJnUVhRUnZiYXh3dCtRNHJlRFNuMjVM...</msg>
<status status="PASS" starttime="20200402 12:51:39.233" endtime="20200402 12:51:39.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:39.235" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:39.234" endtime="20200402 12:51:39.235"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:39.236" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWNhSnJnUVhRUnZiYXh3dCtRNHJlRFNuMjVMRWpEQU56WC9vTFVnekNNb2pMaENZb1hNUytibXpDRzlqcjlLSDlBa1Zhd3dTUklkZU9CQVdZTVlyTzA9IiwibmJmIjoxNTg1ODEyMDk2LCJleHAiOjE1ODU4MTIxNTYsImlhdCI6MTU4NTgxMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5V-giWUUdt1Y2nsDmkTAmvgIOAtsq8IoInUjL2e59Hc'} 
data={"escrowCompanyId": "001", "idNumber": "51677358923116", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8271051605", "email": "pavan01111@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:39.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:39.235" endtime="20200402 12:51:39.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:39.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:39.495" endtime="20200402 12:51:39.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:39.495" endtime="20200402 12:51:39.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:39.496" endtime="20200402 12:51:39.497"></status>
</kw>
<msg timestamp="20200402 12:51:39.497" level="INFO">${sellerid} = b34b74d0-81b7-41ce-810f-47a1b7605dc6</msg>
<status status="PASS" starttime="20200402 12:51:39.213" endtime="20200402 12:51:39.497"></status>
</kw>
<msg timestamp="20200402 12:51:39.497" level="INFO">${SellerId} = b34b74d0-81b7-41ce-810f-47a1b7605dc6</msg>
<msg timestamp="20200402 12:51:39.497" level="INFO">${idnumber} = 51677358923116</msg>
<status status="PASS" starttime="20200402 12:51:38.619" endtime="20200402 12:51:39.497"></status>
</kw>
<kw name="UpdateSellerDetails titleEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>Mr</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:39.499" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:39.498" endtime="20200402 12:51:39.499"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:39.500" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:39.499" endtime="20200402 12:51:39.500"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleEn=${titleEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:39.500" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'b34b74d0-81b7-41ce-810f-47a1b7605dc6', 'titleEn': 'Mr', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:39.500" endtime="20200402 12:51:39.500"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:39.501" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpv...</msg>
<status status="PASS" starttime="20200402 12:51:39.501" endtime="20200402 12:51:39.501"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:39.501" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:39.501" endtime="20200402 12:51:39.502"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:39.502" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpvTDhlSm5GNkVFRGJuckJlUksrLzdvMk9JSDhPQXgwbXAyTFBzV29YaDFKU0ZjVG5DWGhiUm1LOW5IYTA9IiwibmJmIjoxNTg1ODEyMDk2LCJleHAiOjE1ODU4MTIxNTYsImlhdCI6MTU4NTgxMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Sg0g3-UR8lg6JDl0Ep6TjZS0RBcRM6t7wrszQopmtRI'} 
data={"escrowCompanyId": "001", "SELLERId": "b34b74d0-81b7-41ce-810f-47a1b7605dc6", "titleEn": "Mr", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:40.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:39.502" endtime="20200402 12:51:40.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:40.112" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:40.111" endtime="20200402 12:51:40.112"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:40.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:40.112" endtime="20200402 12:51:40.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:40.113" endtime="20200402 12:51:40.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:40.114" endtime="20200402 12:51:40.115"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:39.498" endtime="20200402 12:51:40.115"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:40.117" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:40.116" endtime="20200402 12:51:40.117"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:40.118" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'b34b74d0-81b7-41ce-810f-47a1b7605dc6'}</msg>
<status status="PASS" starttime="20200402 12:51:40.118" endtime="20200402 12:51:40.118"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:40.119" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpv...</msg>
<status status="PASS" starttime="20200402 12:51:40.118" endtime="20200402 12:51:40.119"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:40.120" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:40.119" endtime="20200402 12:51:40.120"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:40.121" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMk9ucGhSVXExL3ZhSXlyUG85dVpIQU5oOWpvTDhlSm5GNkVFRGJuckJlUksrLzdvMk9JSDhPQXgwbXAyTFBzV29YaDFKU0ZjVG5DWGhiUm1LOW5IYTA9IiwibmJmIjoxNTg1ODEyMDk2LCJleHAiOjE1ODU4MTIxNTYsImlhdCI6MTU4NTgxMjA5NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Sg0g3-UR8lg6JDl0Ep6TjZS0RBcRM6t7wrszQopmtRI'} 
data={"escrowCompanyId": "001", "sellerID": "b34b74d0-81b7-41ce-810f-47a1b7605dc6"} 
json=None</msg>
<msg timestamp="20200402 12:51:40.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:40.120" endtime="20200402 12:51:40.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:40.641" level="INFO">{"escrowCompanyId":"001","sellerId":"b34b74d0-81b7-41ce-810f-47a1b7605dc6","idNumber":"51677358923116","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8271051605","email":"pavan01111@2c2p.com","gender":"M","titleEn":"Mr","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:36","updateDate":"02/04/2020 02:21:37","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:40.640" endtime="20200402 12:51:40.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:40.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:40.641" endtime="20200402 12:51:40.642"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:40.116" endtime="20200402 12:51:40.642"></status>
</kw>
<doc>Valid: To Verify response if titleEn is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:34.740" endtime="20200402 12:51:40.643" critical="yes"></status>
</test>
<test id="s1-t48" name="TC_58 Selle_Details_API Empty titleEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:43.647" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:40.645" endtime="20200402 12:51:43.647"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:43.648" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:43.648" endtime="20200402 12:51:43.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:43.649" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:43.649" endtime="20200402 12:51:43.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:43.650" endtime="20200402 12:51:43.650"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:43.650" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:43.650" endtime="20200402 12:51:43.651"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:43.651" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:44.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:43.651" endtime="20200402 12:51:44.601"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:44.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:44.601" endtime="20200402 12:51:44.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.603" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpnRkc3cVIwS0xWcndTd3ZuQXVObCs5bFlBR2Y2MWl6ZGx5V2J5L2JpSnVZclBEaE5pemZrelNvdW1KblE9IiwibmJmIjoxNTg1ODEyMTAyLCJleHAiOjE1ODU4MTIxNjIsImlhdCI6MTU4NTgxMjEwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rrcneOcCuHMLp-mP5EtwmO7oFXuHxP5YCecZRudZp28</msg>
<status status="PASS" starttime="20200402 12:51:44.602" endtime="20200402 12:51:44.603"></status>
</kw>
<msg timestamp="20200402 12:51:44.603" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpnRkc3cVI...</msg>
<status status="PASS" starttime="20200402 12:51:43.648" endtime="20200402 12:51:44.603"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.605" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:44.604" endtime="20200402 12:51:44.605"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:44.606" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:44.606" endtime="20200402 12:51:44.606"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:44.606" endtime="20200402 12:51:44.607"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:44.607" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:44.607" endtime="20200402 12:51:44.607"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:44.608" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:44.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:44.607" endtime="20200402 12:51:44.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:44.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:44.820" endtime="20200402 12:51:44.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.822" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHltd081bG1LUjNBVEhqaldiOTFzQjlCUDdHWEZSWGM1dWVlNzVFLzNrL0RJV3JDRGFsZEhybDNXL3FQeFhlVEtIcUc3bGtjbWZNaTM1OHBRYTlHNVk9IiwibmJmIjoxNTg1ODEyMTAyLCJleHAiOjE1ODU4MTIxNjIsImlhdCI6MTU4NTgxMjEwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sDzMTiLdJS0HPLCEROFnbEeGdFqCGIaaESBb2C24m98</msg>
<status status="PASS" starttime="20200402 12:51:44.821" endtime="20200402 12:51:44.822"></status>
</kw>
<msg timestamp="20200402 12:51:44.822" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHltd081bG1LUjNBVEhqaldiOTFzQjlCUDdHWEZSWGM...</msg>
<status status="PASS" starttime="20200402 12:51:44.604" endtime="20200402 12:51:44.822"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:44.823" level="INFO">${Id} = 34039647890702</msg>
<status status="PASS" starttime="20200402 12:51:44.823" endtime="20200402 12:51:44.823"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.824" level="INFO">${IdNumber} = 34039647890702</msg>
<status status="PASS" starttime="20200402 12:51:44.823" endtime="20200402 12:51:44.824"></status>
</kw>
<msg timestamp="20200402 12:51:44.824" level="INFO">${idNum} = 34039647890702</msg>
<status status="PASS" starttime="20200402 12:51:44.822" endtime="20200402 12:51:44.824"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:44.825" level="INFO">${mobile} = 1917845871</msg>
<status status="PASS" starttime="20200402 12:51:44.824" endtime="20200402 12:51:44.825"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.825" level="INFO">${mobileNo} = 1917845871</msg>
<status status="PASS" starttime="20200402 12:51:44.825" endtime="20200402 12:51:44.825"></status>
</kw>
<msg timestamp="20200402 12:51:44.825" level="INFO">${MobNo} = 1917845871</msg>
<status status="PASS" starttime="20200402 12:51:44.824" endtime="20200402 12:51:44.825"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:44.827" level="INFO">${Emailnum} = 30518</msg>
<status status="PASS" starttime="20200402 12:51:44.826" endtime="20200402 12:51:44.827"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.827" level="INFO">${enum} = 30518</msg>
<status status="PASS" starttime="20200402 12:51:44.827" endtime="20200402 12:51:44.827"></status>
</kw>
<msg timestamp="20200402 12:51:44.827" level="INFO">${num} = 30518</msg>
<status status="PASS" starttime="20200402 12:51:44.826" endtime="20200402 12:51:44.827"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:44.828" level="INFO">${emailid} = pavan30518@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:44.828" endtime="20200402 12:51:44.828"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:44.828" level="INFO">${email} = pavan30518@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:44.828" endtime="20200402 12:51:44.829"></status>
</kw>
<msg timestamp="20200402 12:51:44.829" level="INFO">${emailid} = pavan30518@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:44.826" endtime="20200402 12:51:44.829"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:44.831" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:44.831" endtime="20200402 12:51:44.831"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:44.832" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:44.832" endtime="20200402 12:51:44.832"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:44.832" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:44.832" endtime="20200402 12:51:44.832"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:44.834" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:44.833" endtime="20200402 12:51:44.834"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:44.836" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:44.834" endtime="20200402 12:51:44.836"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:44.838" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '34039647890702', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1917845871', 'email': 'pavan30518@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:44.836" endtime="20200402 12:51:44.838"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:44.838" endtime="20200402 12:51:44.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:44.840" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHltd081bG1LUjNBVEhqaldiOTFzQjlCUDdH...</msg>
<status status="PASS" starttime="20200402 12:51:44.840" endtime="20200402 12:51:44.840"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:44.841" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:44.840" endtime="20200402 12:51:44.841"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:44.841" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHltd081bG1LUjNBVEhqaldiOTFzQjlCUDdHWEZSWGM1dWVlNzVFLzNrL0RJV3JDRGFsZEhybDNXL3FQeFhlVEtIcUc3bGtjbWZNaTM1OHBRYTlHNVk9IiwibmJmIjoxNTg1ODEyMTAyLCJleHAiOjE1ODU4MTIxNjIsImlhdCI6MTU4NTgxMjEwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sDzMTiLdJS0HPLCEROFnbEeGdFqCGIaaESBb2C24m98'} 
data={"escrowCompanyId": "001", "idNumber": "34039647890702", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1917845871", "email": "pavan30518@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:45.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:44.841" endtime="20200402 12:51:45.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:45.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:45.070" endtime="20200402 12:51:45.071"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:45.072" endtime="20200402 12:51:45.073"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:45.073" endtime="20200402 12:51:45.074"></status>
</kw>
<msg timestamp="20200402 12:51:45.075" level="INFO">${sellerid} = 9e0a12f9-715c-43ef-9b55-1748961fdec8</msg>
<status status="PASS" starttime="20200402 12:51:44.829" endtime="20200402 12:51:45.075"></status>
</kw>
<msg timestamp="20200402 12:51:45.075" level="INFO">${SellerId} = 9e0a12f9-715c-43ef-9b55-1748961fdec8</msg>
<msg timestamp="20200402 12:51:45.076" level="INFO">${idnumber} = 34039647890702</msg>
<status status="PASS" starttime="20200402 12:51:44.604" endtime="20200402 12:51:45.076"></status>
</kw>
<kw name="UpdateSellerDetails titleEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:45.078" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:45.078" endtime="20200402 12:51:45.079"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:45.080" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:45.079" endtime="20200402 12:51:45.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleEn=${titleEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:45.081" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '9e0a12f9-715c-43ef-9b55-1748961fdec8', 'titleEn': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:45.080" endtime="20200402 12:51:45.081"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:45.082" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpn...</msg>
<status status="PASS" starttime="20200402 12:51:45.082" endtime="20200402 12:51:45.082"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:45.083" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:45.082" endtime="20200402 12:51:45.083"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:45.083" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpnRkc3cVIwS0xWcndTd3ZuQXVObCs5bFlBR2Y2MWl6ZGx5V2J5L2JpSnVZclBEaE5pemZrelNvdW1KblE9IiwibmJmIjoxNTg1ODEyMTAyLCJleHAiOjE1ODU4MTIxNjIsImlhdCI6MTU4NTgxMjEwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rrcneOcCuHMLp-mP5EtwmO7oFXuHxP5YCecZRudZp28'} 
data={"escrowCompanyId": "001", "SELLERId": "9e0a12f9-715c-43ef-9b55-1748961fdec8", "titleEn": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:45.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:45.083" endtime="20200402 12:51:45.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:45.656" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:45.656" endtime="20200402 12:51:45.657"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:45.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:45.657" endtime="20200402 12:51:45.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:45.658" endtime="20200402 12:51:45.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:45.659" endtime="20200402 12:51:45.659"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:45.076" endtime="20200402 12:51:45.660"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:45.661" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:45.661" endtime="20200402 12:51:45.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:45.662" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '9e0a12f9-715c-43ef-9b55-1748961fdec8'}</msg>
<status status="PASS" starttime="20200402 12:51:45.662" endtime="20200402 12:51:45.662"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:45.663" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpn...</msg>
<status status="PASS" starttime="20200402 12:51:45.662" endtime="20200402 12:51:45.663"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:45.663" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:45.663" endtime="20200402 12:51:45.663"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:45.664" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM2QzSVN4SDN6eTBXL1c5dlFibmpHcyt6OEpnRkc3cVIwS0xWcndTd3ZuQXVObCs5bFlBR2Y2MWl6ZGx5V2J5L2JpSnVZclBEaE5pemZrelNvdW1KblE9IiwibmJmIjoxNTg1ODEyMTAyLCJleHAiOjE1ODU4MTIxNjIsImlhdCI6MTU4NTgxMjEwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.rrcneOcCuHMLp-mP5EtwmO7oFXuHxP5YCecZRudZp28'} 
data={"escrowCompanyId": "001", "sellerID": "9e0a12f9-715c-43ef-9b55-1748961fdec8"} 
json=None</msg>
<msg timestamp="20200402 12:51:46.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:45.663" endtime="20200402 12:51:46.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:46.162" level="INFO">{"escrowCompanyId":"001","sellerId":"9e0a12f9-715c-43ef-9b55-1748961fdec8","idNumber":"34039647890702","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1917845871","email":"pavan30518@2c2p.com","gender":"M","titleEn":"","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:42","updateDate":"02/04/2020 02:21:43","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:46.162" endtime="20200402 12:51:46.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:46.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:46.164" endtime="20200402 12:51:46.165"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:45.660" endtime="20200402 12:51:46.165"></status>
</kw>
<doc>Empty: To Verify response if titleEn parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:40.644" endtime="20200402 12:51:46.165" critical="yes"></status>
</test>
<test id="s1-t49" name="TC_59 Selle_Details_API Invalid titleEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:49.170" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:46.169" endtime="20200402 12:51:49.170"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.172" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:49.172" endtime="20200402 12:51:49.173"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:49.174" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:49.173" endtime="20200402 12:51:49.174"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:49.174" endtime="20200402 12:51:49.174"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:49.175" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:49.174" endtime="20200402 12:51:49.175"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:49.175" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:49.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:49.175" endtime="20200402 12:51:49.501"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:49.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:49.502" endtime="20200402 12:51:49.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.503" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZSGpiOXY5TEFFMTJjZFI3SW9HZmk3MUNPLzlYNkhmZWZ6bVJHbGtxVmRueWxwYWM5cEhMRnk1aFk0UEU9IiwibmJmIjoxNTg1ODEyMTA3LCJleHAiOjE1ODU4MTIxNjcsImlhdCI6MTU4NTgxMjEwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cF5eFfPu6XlYQkM8gqH2YxqwUUudzvexP0NvDXb3ek8</msg>
<status status="PASS" starttime="20200402 12:51:49.502" endtime="20200402 12:51:49.503"></status>
</kw>
<msg timestamp="20200402 12:51:49.503" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZSGpiOXY...</msg>
<status status="PASS" starttime="20200402 12:51:49.171" endtime="20200402 12:51:49.503"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.505" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:49.505" endtime="20200402 12:51:49.505"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:49.506" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:49.506" endtime="20200402 12:51:49.506"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:49.506" endtime="20200402 12:51:49.507"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:49.507" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:49.507" endtime="20200402 12:51:49.507"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:49.508" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:49.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:49.508" endtime="20200402 12:51:49.700"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:49.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:49.700" endtime="20200402 12:51:49.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.703" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEZGQjQ1VGlBdndFdWk1ODJQbjkwTVpnMTRrN1gwUVNCMVpTR3hBNkVyaXNoRFdrK0Yxb3FYMjBpS0lCYTlDc2JJVjgwbDhWaFM5Q251cER1SHl2MzA9IiwibmJmIjoxNTg1ODEyMTA3LCJleHAiOjE1ODU4MTIxNjcsImlhdCI6MTU4NTgxMjEwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TtEn8je0UKOW2UdycTHev-SQlMOkjCHhpd9iGTJufDw</msg>
<status status="PASS" starttime="20200402 12:51:49.702" endtime="20200402 12:51:49.703"></status>
</kw>
<msg timestamp="20200402 12:51:49.703" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEZGQjQ1VGlBdndFdWk1ODJQbjkwTVpnMTRrN1gwUVN...</msg>
<status status="PASS" starttime="20200402 12:51:49.504" endtime="20200402 12:51:49.703"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:49.705" level="INFO">${Id} = 46072560246682</msg>
<status status="PASS" starttime="20200402 12:51:49.704" endtime="20200402 12:51:49.705"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.707" level="INFO">${IdNumber} = 46072560246682</msg>
<status status="PASS" starttime="20200402 12:51:49.706" endtime="20200402 12:51:49.707"></status>
</kw>
<msg timestamp="20200402 12:51:49.707" level="INFO">${idNum} = 46072560246682</msg>
<status status="PASS" starttime="20200402 12:51:49.704" endtime="20200402 12:51:49.707"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:49.709" level="INFO">${mobile} = 8255126264</msg>
<status status="PASS" starttime="20200402 12:51:49.708" endtime="20200402 12:51:49.709"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.710" level="INFO">${mobileNo} = 8255126264</msg>
<status status="PASS" starttime="20200402 12:51:49.709" endtime="20200402 12:51:49.710"></status>
</kw>
<msg timestamp="20200402 12:51:49.710" level="INFO">${MobNo} = 8255126264</msg>
<status status="PASS" starttime="20200402 12:51:49.708" endtime="20200402 12:51:49.710"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:49.713" level="INFO">${Emailnum} = 51748</msg>
<status status="PASS" starttime="20200402 12:51:49.712" endtime="20200402 12:51:49.713"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.714" level="INFO">${enum} = 51748</msg>
<status status="PASS" starttime="20200402 12:51:49.713" endtime="20200402 12:51:49.714"></status>
</kw>
<msg timestamp="20200402 12:51:49.715" level="INFO">${num} = 51748</msg>
<status status="PASS" starttime="20200402 12:51:49.711" endtime="20200402 12:51:49.715"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:49.716" level="INFO">${emailid} = pavan51748@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:49.715" endtime="20200402 12:51:49.716"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:49.717" level="INFO">${email} = pavan51748@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:49.716" endtime="20200402 12:51:49.717"></status>
</kw>
<msg timestamp="20200402 12:51:49.717" level="INFO">${emailid} = pavan51748@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:49.711" endtime="20200402 12:51:49.717"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:49.721" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:49.721" endtime="20200402 12:51:49.722"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:49.723" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:49.722" endtime="20200402 12:51:49.723"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:49.724" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:49.724" endtime="20200402 12:51:49.724"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:49.727" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:49.725" endtime="20200402 12:51:49.727"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:49.730" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:49.727" endtime="20200402 12:51:49.730"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:49.735" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '46072560246682', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8255126264', 'email': 'pavan51748@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:49.730" endtime="20200402 12:51:49.735"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:49.736" endtime="20200402 12:51:49.737"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:49.738" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEZGQjQ1VGlBdndFdWk1ODJQbjkwTVpnMTRr...</msg>
<status status="PASS" starttime="20200402 12:51:49.737" endtime="20200402 12:51:49.738"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:49.739" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:49.738" endtime="20200402 12:51:49.739"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:49.741" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEZGQjQ1VGlBdndFdWk1ODJQbjkwTVpnMTRrN1gwUVNCMVpTR3hBNkVyaXNoRFdrK0Yxb3FYMjBpS0lCYTlDc2JJVjgwbDhWaFM5Q251cER1SHl2MzA9IiwibmJmIjoxNTg1ODEyMTA3LCJleHAiOjE1ODU4MTIxNjcsImlhdCI6MTU4NTgxMjEwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.TtEn8je0UKOW2UdycTHev-SQlMOkjCHhpd9iGTJufDw'} 
data={"escrowCompanyId": "001", "idNumber": "46072560246682", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8255126264", "email": "pavan51748@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:50.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:49.740" endtime="20200402 12:51:50.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:50.996" endtime="20200402 12:51:50.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:50.997" endtime="20200402 12:51:50.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:50.998" endtime="20200402 12:51:50.998"></status>
</kw>
<msg timestamp="20200402 12:51:50.998" level="INFO">${sellerid} = 6b3c5347-b87e-44e6-9836-64cc7bf0a44f</msg>
<status status="PASS" starttime="20200402 12:51:49.718" endtime="20200402 12:51:50.999"></status>
</kw>
<msg timestamp="20200402 12:51:50.999" level="INFO">${SellerId} = 6b3c5347-b87e-44e6-9836-64cc7bf0a44f</msg>
<msg timestamp="20200402 12:51:50.999" level="INFO">${idnumber} = 46072560246682</msg>
<status status="PASS" starttime="20200402 12:51:49.504" endtime="20200402 12:51:50.999"></status>
</kw>
<kw name="UpdateSellerDetails titleEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>Mr.3467</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:51.000" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:51.000" endtime="20200402 12:51:51.001"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:51.002" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:51.001" endtime="20200402 12:51:51.002"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleEn=${titleEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:51.002" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '6b3c5347-b87e-44e6-9836-64cc7bf0a44f', 'titleEn': 'Mr.3467', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:51.002" endtime="20200402 12:51:51.003"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:51.003" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZ...</msg>
<status status="PASS" starttime="20200402 12:51:51.003" endtime="20200402 12:51:51.003"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:51.004" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:51.004" endtime="20200402 12:51:51.004"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:51.005" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZSGpiOXY5TEFFMTJjZFI3SW9HZmk3MUNPLzlYNkhmZWZ6bVJHbGtxVmRueWxwYWM5cEhMRnk1aFk0UEU9IiwibmJmIjoxNTg1ODEyMTA3LCJleHAiOjE1ODU4MTIxNjcsImlhdCI6MTU4NTgxMjEwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cF5eFfPu6XlYQkM8gqH2YxqwUUudzvexP0NvDXb3ek8'} 
data={"escrowCompanyId": "001", "SELLERId": "6b3c5347-b87e-44e6-9836-64cc7bf0a44f", "titleEn": "Mr.3467", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:51.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:51.005" endtime="20200402 12:51:51.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:51.505" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:51:51.505" endtime="20200402 12:51:51.506"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:51.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:51.506" endtime="20200402 12:51:51.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:51.507" endtime="20200402 12:51:51.507"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:51.508" endtime="20200402 12:51:51.508"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:50.999" endtime="20200402 12:51:51.508"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:51.510" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:51.510" endtime="20200402 12:51:51.511"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:51.512" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6b3c5347-b87e-44e6-9836-64cc7bf0a44f'}</msg>
<status status="PASS" starttime="20200402 12:51:51.511" endtime="20200402 12:51:51.512"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:51.513" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZ...</msg>
<status status="PASS" starttime="20200402 12:51:51.512" endtime="20200402 12:51:51.513"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:51.513" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:51.513" endtime="20200402 12:51:51.513"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:51.514" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVRCMVdhWUdCTE1jVCt1UUpZd1cwWWMwVmNZSGpiOXY5TEFFMTJjZFI3SW9HZmk3MUNPLzlYNkhmZWZ6bVJHbGtxVmRueWxwYWM5cEhMRnk1aFk0UEU9IiwibmJmIjoxNTg1ODEyMTA3LCJleHAiOjE1ODU4MTIxNjcsImlhdCI6MTU4NTgxMjEwNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cF5eFfPu6XlYQkM8gqH2YxqwUUudzvexP0NvDXb3ek8'} 
data={"escrowCompanyId": "001", "sellerID": "6b3c5347-b87e-44e6-9836-64cc7bf0a44f"} 
json=None</msg>
<msg timestamp="20200402 12:51:53.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:51.514" endtime="20200402 12:51:53.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:53.357" level="INFO">{"escrowCompanyId":"001","sellerId":"6b3c5347-b87e-44e6-9836-64cc7bf0a44f","idNumber":"46072560246682","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8255126264","email":"pavan51748@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:48","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:53.357" endtime="20200402 12:51:53.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:53.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:53.358" endtime="20200402 12:51:53.359"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:51.509" endtime="20200402 12:51:53.359"></status>
</kw>
<doc>Invalid: To Verify response if titleEn parameter is entered more than size 5 and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:46.167" endtime="20200402 12:51:53.360" critical="yes"></status>
</test>
<test id="s1-t50" name="TC_60 Selle_Details_API Valid firstNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:51:56.365" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:53.362" endtime="20200402 12:51:56.365"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:56.367" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:56.367" endtime="20200402 12:51:56.368"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:56.369" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:56.369" endtime="20200402 12:51:56.370"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:56.370" endtime="20200402 12:51:56.371"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:56.372" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:56.371" endtime="20200402 12:51:56.372"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:56.373" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:57.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:56.372" endtime="20200402 12:51:57.584"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:57.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:57.585" endtime="20200402 12:51:57.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:57.587" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9xd0lFV1V2UjNLQlgyNVVyMW0xVHduUlFoeHJzdnJYRDFlZ3BJdnJGMCtScWY2VkpQbVFFaWhHTDhFQkE9IiwibmJmIjoxNTg1ODEyMTE1LCJleHAiOjE1ODU4MTIxNzUsImlhdCI6MTU4NTgxMjExNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.OMg6ZcH-VnQ-jkVpIRrWlH8AXADjyIkmu9BMaUOgsSs</msg>
<status status="PASS" starttime="20200402 12:51:57.586" endtime="20200402 12:51:57.587"></status>
</kw>
<msg timestamp="20200402 12:51:57.588" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9xd0lFV1V...</msg>
<status status="PASS" starttime="20200402 12:51:56.366" endtime="20200402 12:51:57.588"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:51:57.591" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:57.590" endtime="20200402 12:51:57.592"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:57.593" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:51:57.592" endtime="20200402 12:51:57.593"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:57.593" endtime="20200402 12:51:57.594"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:51:57.595" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:51:57.594" endtime="20200402 12:51:57.595"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:57.596" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:51:58.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:57.595" endtime="20200402 12:51:58.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:58.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:58.311" endtime="20200402 12:51:58.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:51:58.313" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1hvN29NNzRXVXVBcEEzT2pRVXpEK2pDRmZ3WWlMc05LVVMvcGl5bU9mOW92N3Z5SnZwRlA0ZklSOVdFcFFvRXFVbGQycURZNUxpenRUaldqbjNscWM9IiwibmJmIjoxNTg1ODEyMTE1LCJleHAiOjE1ODU4MTIxNzUsImlhdCI6MTU4NTgxMjExNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DfK2JWSCQAdPE4PgQDaFRDTQAg-WI9AK0GEaCHXztEM</msg>
<status status="PASS" starttime="20200402 12:51:58.312" endtime="20200402 12:51:58.313"></status>
</kw>
<msg timestamp="20200402 12:51:58.314" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1hvN29NNzRXVXVBcEEzT2pRVXpEK2pDRmZ3WWlMc05...</msg>
<status status="PASS" starttime="20200402 12:51:57.589" endtime="20200402 12:51:58.314"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:51:58.315" level="INFO">${Id} = 29140858116554</msg>
<status status="PASS" starttime="20200402 12:51:58.315" endtime="20200402 12:51:58.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:51:58.316" level="INFO">${IdNumber} = 29140858116554</msg>
<status status="PASS" starttime="20200402 12:51:58.316" endtime="20200402 12:51:58.316"></status>
</kw>
<msg timestamp="20200402 12:51:58.317" level="INFO">${idNum} = 29140858116554</msg>
<status status="PASS" starttime="20200402 12:51:58.314" endtime="20200402 12:51:58.317"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:51:58.318" level="INFO">${mobile} = 5848810231</msg>
<status status="PASS" starttime="20200402 12:51:58.318" endtime="20200402 12:51:58.318"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:51:58.319" level="INFO">${mobileNo} = 5848810231</msg>
<status status="PASS" starttime="20200402 12:51:58.319" endtime="20200402 12:51:58.319"></status>
</kw>
<msg timestamp="20200402 12:51:58.320" level="INFO">${MobNo} = 5848810231</msg>
<status status="PASS" starttime="20200402 12:51:58.317" endtime="20200402 12:51:58.320"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:51:58.322" level="INFO">${Emailnum} = 15473</msg>
<status status="PASS" starttime="20200402 12:51:58.321" endtime="20200402 12:51:58.322"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:51:58.323" level="INFO">${enum} = 15473</msg>
<status status="PASS" starttime="20200402 12:51:58.322" endtime="20200402 12:51:58.323"></status>
</kw>
<msg timestamp="20200402 12:51:58.323" level="INFO">${num} = 15473</msg>
<status status="PASS" starttime="20200402 12:51:58.321" endtime="20200402 12:51:58.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:51:58.324" level="INFO">${emailid} = pavan15473@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:58.324" endtime="20200402 12:51:58.324"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:51:58.325" level="INFO">${email} = pavan15473@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:58.324" endtime="20200402 12:51:58.325"></status>
</kw>
<msg timestamp="20200402 12:51:58.326" level="INFO">${emailid} = pavan15473@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:51:58.320" endtime="20200402 12:51:58.326"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:58.330" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:58.330" endtime="20200402 12:51:58.331"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:51:58.332" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:51:58.331" endtime="20200402 12:51:58.332"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:58.333" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:58.332" endtime="20200402 12:51:58.333"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:51:58.336" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:58.333" endtime="20200402 12:51:58.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:51:58.338" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:51:58.336" endtime="20200402 12:51:58.338"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:58.343" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '29140858116554', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5848810231', 'email': 'pavan15473@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:51:58.339" endtime="20200402 12:51:58.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:58.343" endtime="20200402 12:51:58.344"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:58.345" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1hvN29NNzRXVXVBcEEzT2pRVXpEK2pDRmZ3...</msg>
<status status="PASS" starttime="20200402 12:51:58.345" endtime="20200402 12:51:58.345"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:58.346" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:58.345" endtime="20200402 12:51:58.346"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:58.348" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK1hvN29NNzRXVXVBcEEzT2pRVXpEK2pDRmZ3WWlMc05LVVMvcGl5bU9mOW92N3Z5SnZwRlA0ZklSOVdFcFFvRXFVbGQycURZNUxpenRUaldqbjNscWM9IiwibmJmIjoxNTg1ODEyMTE1LCJleHAiOjE1ODU4MTIxNzUsImlhdCI6MTU4NTgxMjExNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DfK2JWSCQAdPE4PgQDaFRDTQAg-WI9AK0GEaCHXztEM'} 
data={"escrowCompanyId": "001", "idNumber": "29140858116554", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5848810231", "email": "pavan15473@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:51:58.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:58.347" endtime="20200402 12:51:58.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:58.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:58.641" endtime="20200402 12:51:58.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:58.643" endtime="20200402 12:51:58.643"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:58.644" endtime="20200402 12:51:58.645"></status>
</kw>
<msg timestamp="20200402 12:51:58.645" level="INFO">${sellerid} = 72a42bea-ab12-4334-81d6-27f360dfd9e0</msg>
<status status="PASS" starttime="20200402 12:51:58.326" endtime="20200402 12:51:58.645"></status>
</kw>
<msg timestamp="20200402 12:51:58.646" level="INFO">${SellerId} = 72a42bea-ab12-4334-81d6-27f360dfd9e0</msg>
<msg timestamp="20200402 12:51:58.646" level="INFO">${idnumber} = 29140858116554</msg>
<status status="PASS" starttime="20200402 12:51:57.589" endtime="20200402 12:51:58.646"></status>
</kw>
<kw name="UpdateSellerDetails firstNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:58.648" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:58.647" endtime="20200402 12:51:58.648"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:51:58.648" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:51:58.648" endtime="20200402 12:51:58.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameEn=${firstNameEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:58.650" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '72a42bea-ab12-4334-81d6-27f360dfd9e0', 'firstNameEn': 'pavan', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:51:58.649" endtime="20200402 12:51:58.651"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:58.652" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9x...</msg>
<status status="PASS" starttime="20200402 12:51:58.651" endtime="20200402 12:51:58.652"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:58.653" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:58.652" endtime="20200402 12:51:58.653"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:58.655" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9xd0lFV1V2UjNLQlgyNVVyMW0xVHduUlFoeHJzdnJYRDFlZ3BJdnJGMCtScWY2VkpQbVFFaWhHTDhFQkE9IiwibmJmIjoxNTg1ODEyMTE1LCJleHAiOjE1ODU4MTIxNzUsImlhdCI6MTU4NTgxMjExNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.OMg6ZcH-VnQ-jkVpIRrWlH8AXADjyIkmu9BMaUOgsSs'} 
data={"escrowCompanyId": "001", "SELLERId": "72a42bea-ab12-4334-81d6-27f360dfd9e0", "firstNameEn": "pavan", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:51:59.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:58.654" endtime="20200402 12:51:59.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:59.182" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:59.181" endtime="20200402 12:51:59.182"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:59.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:59.183" endtime="20200402 12:51:59.183"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:59.184" endtime="20200402 12:51:59.185"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:51:59.185" endtime="20200402 12:51:59.186"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:58.646" endtime="20200402 12:51:59.186"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:51:59.187" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:51:59.187" endtime="20200402 12:51:59.188"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:51:59.188" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '72a42bea-ab12-4334-81d6-27f360dfd9e0'}</msg>
<status status="PASS" starttime="20200402 12:51:59.188" endtime="20200402 12:51:59.189"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:51:59.189" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9x...</msg>
<status status="PASS" starttime="20200402 12:51:59.189" endtime="20200402 12:51:59.189"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:51:59.190" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:51:59.189" endtime="20200402 12:51:59.190"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:51:59.190" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEhnNk96Zzdka3pDdm0vZG5tQTF6Tmh6NW9xd0lFV1V2UjNLQlgyNVVyMW0xVHduUlFoeHJzdnJYRDFlZ3BJdnJGMCtScWY2VkpQbVFFaWhHTDhFQkE9IiwibmJmIjoxNTg1ODEyMTE1LCJleHAiOjE1ODU4MTIxNzUsImlhdCI6MTU4NTgxMjExNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.OMg6ZcH-VnQ-jkVpIRrWlH8AXADjyIkmu9BMaUOgsSs'} 
data={"escrowCompanyId": "001", "sellerID": "72a42bea-ab12-4334-81d6-27f360dfd9e0"} 
json=None</msg>
<msg timestamp="20200402 12:51:59.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:51:59.190" endtime="20200402 12:51:59.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:51:59.767" level="INFO">{"escrowCompanyId":"001","sellerId":"72a42bea-ab12-4334-81d6-27f360dfd9e0","idNumber":"29140858116554","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5848810231","email":"pavan15473@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:21:56","updateDate":"02/04/2020 02:21:56","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:51:59.766" endtime="20200402 12:51:59.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:51:59.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:51:59.768" endtime="20200402 12:51:59.769"></status>
</kw>
<status status="PASS" starttime="20200402 12:51:59.186" endtime="20200402 12:51:59.769"></status>
</kw>
<doc>Valid: To Verify response if titleEn is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:53.361" endtime="20200402 12:51:59.770" critical="yes"></status>
</test>
<test id="s1-t51" name="TC_61 Selle_Details_API Empty firstNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:02.775" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:51:59.773" endtime="20200402 12:52:02.775"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:02.776" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:02.776" endtime="20200402 12:52:02.777"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:02.778" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:02.778" endtime="20200402 12:52:02.778"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:02.778" endtime="20200402 12:52:02.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:02.780" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:02.779" endtime="20200402 12:52:02.780"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:02.781" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:03.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:02.780" endtime="20200402 12:52:03.051"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:03.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.051" endtime="20200402 12:52:03.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.052" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEyWjJ1SHkyU1J6eU45TGhzdDVEaENMams0NUxZMGxpT0k1L0NGS0ZvbzNteVMyWS8xUHZ5MXRQNnNtSnM9IiwibmJmIjoxNTg1ODEyMTIwLCJleHAiOjE1ODU4MTIxODAsImlhdCI6MTU4NTgxMjEyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.STG8CwiDEZYwo67IvmQyqIN-lDCFJKoaTojlsJAiUqc</msg>
<status status="PASS" starttime="20200402 12:52:03.052" endtime="20200402 12:52:03.052"></status>
</kw>
<msg timestamp="20200402 12:52:03.053" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEyWjJ1SHk...</msg>
<status status="PASS" starttime="20200402 12:52:02.776" endtime="20200402 12:52:03.053"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.055" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:03.055" endtime="20200402 12:52:03.055"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:03.056" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:03.055" endtime="20200402 12:52:03.056"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:03.056" endtime="20200402 12:52:03.056"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:03.057" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:03.057" endtime="20200402 12:52:03.057"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:03.058" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:03.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.058" endtime="20200402 12:52:03.302"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:03.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.303" endtime="20200402 12:52:03.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.304" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUw3dUhNd3FSOHp6ZlB3WHI3U2hLeTl5NmpGL21ZVzlaUUlXTDhXdWZHTGJjMXF1M1FSc0U2Ym9kb0pHenRRVENVa0ZxQ09PNVNvUEJWOWdRVFhjcTg9IiwibmJmIjoxNTg1ODEyMTIwLCJleHAiOjE1ODU4MTIxODAsImlhdCI6MTU4NTgxMjEyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gpB3lvGdxqQV_7ySKAV0CFnG49JuIrPkj2f9uSC6y8Q</msg>
<status status="PASS" starttime="20200402 12:52:03.303" endtime="20200402 12:52:03.304"></status>
</kw>
<msg timestamp="20200402 12:52:03.304" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUw3dUhNd3FSOHp6ZlB3WHI3U2hLeTl5NmpGL21ZVzl...</msg>
<status status="PASS" starttime="20200402 12:52:03.054" endtime="20200402 12:52:03.304"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:03.306" level="INFO">${Id} = 38830339836325</msg>
<status status="PASS" starttime="20200402 12:52:03.306" endtime="20200402 12:52:03.306"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.307" level="INFO">${IdNumber} = 38830339836325</msg>
<status status="PASS" starttime="20200402 12:52:03.307" endtime="20200402 12:52:03.308"></status>
</kw>
<msg timestamp="20200402 12:52:03.308" level="INFO">${idNum} = 38830339836325</msg>
<status status="PASS" starttime="20200402 12:52:03.305" endtime="20200402 12:52:03.308"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:03.309" level="INFO">${mobile} = 8622008167</msg>
<status status="PASS" starttime="20200402 12:52:03.309" endtime="20200402 12:52:03.309"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.310" level="INFO">${mobileNo} = 8622008167</msg>
<status status="PASS" starttime="20200402 12:52:03.310" endtime="20200402 12:52:03.310"></status>
</kw>
<msg timestamp="20200402 12:52:03.310" level="INFO">${MobNo} = 8622008167</msg>
<status status="PASS" starttime="20200402 12:52:03.308" endtime="20200402 12:52:03.310"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:03.312" level="INFO">${Emailnum} = 94543</msg>
<status status="PASS" starttime="20200402 12:52:03.311" endtime="20200402 12:52:03.312"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.312" level="INFO">${enum} = 94543</msg>
<status status="PASS" starttime="20200402 12:52:03.312" endtime="20200402 12:52:03.312"></status>
</kw>
<msg timestamp="20200402 12:52:03.312" level="INFO">${num} = 94543</msg>
<status status="PASS" starttime="20200402 12:52:03.311" endtime="20200402 12:52:03.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:03.313" level="INFO">${emailid} = pavan94543@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:03.313" endtime="20200402 12:52:03.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:03.314" level="INFO">${email} = pavan94543@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:03.313" endtime="20200402 12:52:03.314"></status>
</kw>
<msg timestamp="20200402 12:52:03.314" level="INFO">${emailid} = pavan94543@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:03.311" endtime="20200402 12:52:03.314"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:03.316" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:03.316" endtime="20200402 12:52:03.316"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:03.317" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:03.317" endtime="20200402 12:52:03.317"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:03.317" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:03.317" endtime="20200402 12:52:03.317"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:03.321" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:03.320" endtime="20200402 12:52:03.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:03.322" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:03.321" endtime="20200402 12:52:03.322"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:03.324" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '38830339836325', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8622008167', 'email': 'pavan94543@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:03.322" endtime="20200402 12:52:03.325"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:03.325" endtime="20200402 12:52:03.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:03.326" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUw3dUhNd3FSOHp6ZlB3WHI3U2hLeTl5NmpG...</msg>
<status status="PASS" starttime="20200402 12:52:03.326" endtime="20200402 12:52:03.326"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:03.327" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:03.326" endtime="20200402 12:52:03.327"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:03.328" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMUw3dUhNd3FSOHp6ZlB3WHI3U2hLeTl5NmpGL21ZVzlaUUlXTDhXdWZHTGJjMXF1M1FSc0U2Ym9kb0pHenRRVENVa0ZxQ09PNVNvUEJWOWdRVFhjcTg9IiwibmJmIjoxNTg1ODEyMTIwLCJleHAiOjE1ODU4MTIxODAsImlhdCI6MTU4NTgxMjEyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gpB3lvGdxqQV_7ySKAV0CFnG49JuIrPkj2f9uSC6y8Q'} 
data={"escrowCompanyId": "001", "idNumber": "38830339836325", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8622008167", "email": "pavan94543@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:03.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.327" endtime="20200402 12:52:03.581"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:03.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.581" endtime="20200402 12:52:03.582"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:03.582" endtime="20200402 12:52:03.583"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:03.583" endtime="20200402 12:52:03.584"></status>
</kw>
<msg timestamp="20200402 12:52:03.584" level="INFO">${sellerid} = 8d08f991-1e11-460e-b335-270a7cb32286</msg>
<status status="PASS" starttime="20200402 12:52:03.314" endtime="20200402 12:52:03.584"></status>
</kw>
<msg timestamp="20200402 12:52:03.584" level="INFO">${SellerId} = 8d08f991-1e11-460e-b335-270a7cb32286</msg>
<msg timestamp="20200402 12:52:03.584" level="INFO">${idnumber} = 38830339836325</msg>
<status status="PASS" starttime="20200402 12:52:03.054" endtime="20200402 12:52:03.584"></status>
</kw>
<kw name="UpdateSellerDetails firstNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:03.586" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:03.586" endtime="20200402 12:52:03.586"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:03.587" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:03.586" endtime="20200402 12:52:03.587"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameEn=${firstNameEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:03.588" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '8d08f991-1e11-460e-b335-270a7cb32286', 'firstNameEn': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:52:03.587" endtime="20200402 12:52:03.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:03.588" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEy...</msg>
<status status="PASS" starttime="20200402 12:52:03.588" endtime="20200402 12:52:03.588"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:03.589" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:03.589" endtime="20200402 12:52:03.589"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:03.590" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEyWjJ1SHkyU1J6eU45TGhzdDVEaENMams0NUxZMGxpT0k1L0NGS0ZvbzNteVMyWS8xUHZ5MXRQNnNtSnM9IiwibmJmIjoxNTg1ODEyMTIwLCJleHAiOjE1ODU4MTIxODAsImlhdCI6MTU4NTgxMjEyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.STG8CwiDEZYwo67IvmQyqIN-lDCFJKoaTojlsJAiUqc'} 
data={"escrowCompanyId": "001", "SELLERId": "8d08f991-1e11-460e-b335-270a7cb32286", "firstNameEn": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:04.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:03.589" endtime="20200402 12:52:04.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:04.128" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:04.128" endtime="20200402 12:52:04.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:04.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:04.129" endtime="20200402 12:52:04.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:04.129" endtime="20200402 12:52:04.130"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:04.130" endtime="20200402 12:52:04.130"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:03.585" endtime="20200402 12:52:04.130"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:04.132" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:04.131" endtime="20200402 12:52:04.132"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:04.133" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '8d08f991-1e11-460e-b335-270a7cb32286'}</msg>
<status status="PASS" starttime="20200402 12:52:04.132" endtime="20200402 12:52:04.133"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:04.133" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEy...</msg>
<status status="PASS" starttime="20200402 12:52:04.133" endtime="20200402 12:52:04.133"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:04.134" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:04.134" endtime="20200402 12:52:04.134"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:04.135" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJTcW9OK3hxdHMrYTI1VmRSZ0V6YTkzWHEyWjJ1SHkyU1J6eU45TGhzdDVEaENMams0NUxZMGxpT0k1L0NGS0ZvbzNteVMyWS8xUHZ5MXRQNnNtSnM9IiwibmJmIjoxNTg1ODEyMTIwLCJleHAiOjE1ODU4MTIxODAsImlhdCI6MTU4NTgxMjEyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.STG8CwiDEZYwo67IvmQyqIN-lDCFJKoaTojlsJAiUqc'} 
data={"escrowCompanyId": "001", "sellerID": "8d08f991-1e11-460e-b335-270a7cb32286"} 
json=None</msg>
<msg timestamp="20200402 12:52:05.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:04.134" endtime="20200402 12:52:05.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:05.653" level="INFO">{"escrowCompanyId":"001","sellerId":"8d08f991-1e11-460e-b335-270a7cb32286","idNumber":"38830339836325","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8622008167","email":"pavan94543@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:01","updateDate":"02/04/2020 02:22:01","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:05.652" endtime="20200402 12:52:05.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:05.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:05.654" endtime="20200402 12:52:05.655"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:04.131" endtime="20200402 12:52:05.655"></status>
</kw>
<doc>Empty: To Verify response if titleEn parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:51:59.771" endtime="20200402 12:52:05.656" critical="yes"></status>
</test>
<test id="s1-t52" name="TC_62 Selle_Details_API Invalid firstNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:08.660" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:05.658" endtime="20200402 12:52:08.660"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:08.661" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:08.661" endtime="20200402 12:52:08.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:08.663" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:08.662" endtime="20200402 12:52:08.663"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:08.663" endtime="20200402 12:52:08.663"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:08.664" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:08.664" endtime="20200402 12:52:08.664"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:08.665" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:10.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:08.664" endtime="20200402 12:52:10.064"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:10.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.065" endtime="20200402 12:52:10.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.066" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVFcmV3QmdaY0gxblRsQmRCMGQ0ZGN5YUpGSlAzMk84VW5KeDlNM2hqcXlneVppeWEvQmRjZFZyQXBuUWM9IiwibmJmIjoxNTg1ODEyMTI3LCJleHAiOjE1ODU4MTIxODcsImlhdCI6MTU4NTgxMjEyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lQFOiYmN_LgZrvFXWVO-lOwgJa_7iTFnsZ6ZwYKPgeg</msg>
<status status="PASS" starttime="20200402 12:52:10.065" endtime="20200402 12:52:10.066"></status>
</kw>
<msg timestamp="20200402 12:52:10.066" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVFcmV3Qmd...</msg>
<status status="PASS" starttime="20200402 12:52:08.661" endtime="20200402 12:52:10.066"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.068" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:10.067" endtime="20200402 12:52:10.068"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:10.069" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:10.068" endtime="20200402 12:52:10.069"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:10.069" endtime="20200402 12:52:10.069"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:10.070" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:10.070" endtime="20200402 12:52:10.070"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:10.071" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:10.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.071" endtime="20200402 12:52:10.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:10.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.551" endtime="20200402 12:52:10.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.553" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3pwYkduTElrM3J4SnBacTRwTlkzSmdqSEUrdFFMZEhFaEluV3VZWnVXdTBiU2VWQnd4M0pnMi9HQUVrLzFuaW5FNTAycDFYRXJpeTZXcG5xKzUyMmc9IiwibmJmIjoxNTg1ODEyMTI4LCJleHAiOjE1ODU4MTIxODgsImlhdCI6MTU4NTgxMjEyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NLrLk4jjruwJ_v0MB1nQv8ZTPLwqJ6--58K6kIV2pMQ</msg>
<status status="PASS" starttime="20200402 12:52:10.552" endtime="20200402 12:52:10.553"></status>
</kw>
<msg timestamp="20200402 12:52:10.553" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3pwYkduTElrM3J4SnBacTRwTlkzSmdqSEUrdFFMZEh...</msg>
<status status="PASS" starttime="20200402 12:52:10.067" endtime="20200402 12:52:10.553"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:10.555" level="INFO">${Id} = 04165185915792</msg>
<status status="PASS" starttime="20200402 12:52:10.554" endtime="20200402 12:52:10.555"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.556" level="INFO">${IdNumber} = 04165185915792</msg>
<status status="PASS" starttime="20200402 12:52:10.555" endtime="20200402 12:52:10.556"></status>
</kw>
<msg timestamp="20200402 12:52:10.556" level="INFO">${idNum} = 04165185915792</msg>
<status status="PASS" starttime="20200402 12:52:10.554" endtime="20200402 12:52:10.556"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:10.558" level="INFO">${mobile} = 1582371142</msg>
<status status="PASS" starttime="20200402 12:52:10.557" endtime="20200402 12:52:10.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.559" level="INFO">${mobileNo} = 1582371142</msg>
<status status="PASS" starttime="20200402 12:52:10.558" endtime="20200402 12:52:10.559"></status>
</kw>
<msg timestamp="20200402 12:52:10.559" level="INFO">${MobNo} = 1582371142</msg>
<status status="PASS" starttime="20200402 12:52:10.557" endtime="20200402 12:52:10.559"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:10.561" level="INFO">${Emailnum} = 28306</msg>
<status status="PASS" starttime="20200402 12:52:10.561" endtime="20200402 12:52:10.561"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.562" level="INFO">${enum} = 28306</msg>
<status status="PASS" starttime="20200402 12:52:10.562" endtime="20200402 12:52:10.562"></status>
</kw>
<msg timestamp="20200402 12:52:10.563" level="INFO">${num} = 28306</msg>
<status status="PASS" starttime="20200402 12:52:10.560" endtime="20200402 12:52:10.563"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:10.564" level="INFO">${emailid} = pavan28306@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:10.563" endtime="20200402 12:52:10.564"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:10.565" level="INFO">${email} = pavan28306@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:10.564" endtime="20200402 12:52:10.565"></status>
</kw>
<msg timestamp="20200402 12:52:10.565" level="INFO">${emailid} = pavan28306@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:10.560" endtime="20200402 12:52:10.565"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:10.569" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:10.569" endtime="20200402 12:52:10.570"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:10.571" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:10.570" endtime="20200402 12:52:10.571"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:10.572" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:10.571" endtime="20200402 12:52:10.572"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:10.575" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:10.572" endtime="20200402 12:52:10.575"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:10.578" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:10.575" endtime="20200402 12:52:10.578"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:10.582" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '04165185915792', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1582371142', 'email': 'pavan28306@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:10.578" endtime="20200402 12:52:10.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:10.583" endtime="20200402 12:52:10.584"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:10.585" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3pwYkduTElrM3J4SnBacTRwTlkzSmdqSEUr...</msg>
<status status="PASS" starttime="20200402 12:52:10.584" endtime="20200402 12:52:10.585"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:10.586" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:10.585" endtime="20200402 12:52:10.586"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:10.587" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3pwYkduTElrM3J4SnBacTRwTlkzSmdqSEUrdFFMZEhFaEluV3VZWnVXdTBiU2VWQnd4M0pnMi9HQUVrLzFuaW5FNTAycDFYRXJpeTZXcG5xKzUyMmc9IiwibmJmIjoxNTg1ODEyMTI4LCJleHAiOjE1ODU4MTIxODgsImlhdCI6MTU4NTgxMjEyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NLrLk4jjruwJ_v0MB1nQv8ZTPLwqJ6--58K6kIV2pMQ'} 
data={"escrowCompanyId": "001", "idNumber": "04165185915792", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1582371142", "email": "pavan28306@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:10.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.586" endtime="20200402 12:52:10.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:10.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.832" endtime="20200402 12:52:10.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:10.834" endtime="20200402 12:52:10.834"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:10.835" endtime="20200402 12:52:10.835"></status>
</kw>
<msg timestamp="20200402 12:52:10.836" level="INFO">${sellerid} = 3413dc66-c5d3-4c53-aa8a-bfb3b4454861</msg>
<status status="PASS" starttime="20200402 12:52:10.565" endtime="20200402 12:52:10.836"></status>
</kw>
<msg timestamp="20200402 12:52:10.836" level="INFO">${SellerId} = 3413dc66-c5d3-4c53-aa8a-bfb3b4454861</msg>
<msg timestamp="20200402 12:52:10.836" level="INFO">${idnumber} = 04165185915792</msg>
<status status="PASS" starttime="20200402 12:52:10.067" endtime="20200402 12:52:10.837"></status>
</kw>
<kw name="UpdateSellerDetails firstNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn1_lastnm}</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:10.839" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:10.839" endtime="20200402 12:52:10.839"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:10.840" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:10.839" endtime="20200402 12:52:10.840"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameEn=${firstNameEn}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:10.841" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '3413dc66-c5d3-4c53-aa8a-bfb3b4454861', 'firstNameEn': '123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345...</msg>
<status status="PASS" starttime="20200402 12:52:10.840" endtime="20200402 12:52:10.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:10.841" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVF...</msg>
<status status="PASS" starttime="20200402 12:52:10.841" endtime="20200402 12:52:10.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:10.842" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:10.842" endtime="20200402 12:52:10.842"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:10.843" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVFcmV3QmdaY0gxblRsQmRCMGQ0ZGN5YUpGSlAzMk84VW5KeDlNM2hqcXlneVppeWEvQmRjZFZyQXBuUWM9IiwibmJmIjoxNTg1ODEyMTI3LCJleHAiOjE1ODU4MTIxODcsImlhdCI6MTU4NTgxMjEyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lQFOiYmN_LgZrvFXWVO-lOwgJa_7iTFnsZ6ZwYKPgeg'} 
data={"escrowCompanyId": "001", "SELLERId": "3413dc66-c5d3-4c53-aa8a-bfb3b4454861", "firstNameEn": "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:11.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:10.842" endtime="20200402 12:52:11.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:11.358" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:52:11.357" endtime="20200402 12:52:11.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:11.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:11.358" endtime="20200402 12:52:11.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:11.359" endtime="20200402 12:52:11.360"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:11.360" endtime="20200402 12:52:11.360"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:10.837" endtime="20200402 12:52:11.360"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:11.362" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:11.362" endtime="20200402 12:52:11.362"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:11.363" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '3413dc66-c5d3-4c53-aa8a-bfb3b4454861'}</msg>
<status status="PASS" starttime="20200402 12:52:11.362" endtime="20200402 12:52:11.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:11.363" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVF...</msg>
<status status="PASS" starttime="20200402 12:52:11.363" endtime="20200402 12:52:11.363"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:11.364" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:11.364" endtime="20200402 12:52:11.364"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:11.365" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNENHUXRROHRPN3c4amdmK2hGUXdNMjg4ZlVFcmV3QmdaY0gxblRsQmRCMGQ0ZGN5YUpGSlAzMk84VW5KeDlNM2hqcXlneVppeWEvQmRjZFZyQXBuUWM9IiwibmJmIjoxNTg1ODEyMTI3LCJleHAiOjE1ODU4MTIxODcsImlhdCI6MTU4NTgxMjEyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lQFOiYmN_LgZrvFXWVO-lOwgJa_7iTFnsZ6ZwYKPgeg'} 
data={"escrowCompanyId": "001", "sellerID": "3413dc66-c5d3-4c53-aa8a-bfb3b4454861"} 
json=None</msg>
<msg timestamp="20200402 12:52:11.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:11.364" endtime="20200402 12:52:11.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:11.575" level="INFO">{"escrowCompanyId":"001","sellerId":"3413dc66-c5d3-4c53-aa8a-bfb3b4454861","idNumber":"04165185915792","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1582371142","email":"pavan28306@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:08","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:11.575" endtime="20200402 12:52:11.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:11.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:11.577" endtime="20200402 12:52:11.578"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:11.361" endtime="20200402 12:52:11.578"></status>
</kw>
<doc>Invalid: To Verify response if titleEn parameter is entered more than size 5 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:05.657" endtime="20200402 12:52:11.579" critical="yes"></status>
</test>
<test id="s1-t53" name="TC_63 Selle_Details_API Valid lastNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:14.584" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:11.582" endtime="20200402 12:52:14.584"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:14.585" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:14.584" endtime="20200402 12:52:14.586"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:14.586" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:14.586" endtime="20200402 12:52:14.586"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:14.586" endtime="20200402 12:52:14.587"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:14.587" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:14.587" endtime="20200402 12:52:14.587"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:14.588" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:15.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:14.588" endtime="20200402 12:52:15.190"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:15.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:15.190" endtime="20200402 12:52:15.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:15.191" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0dWNGVlE1ZWx1SWtMVXpTQ0R6MFhnTlV4TW0rdXJkM2dHaUE5QmdsZXhRd0Vacm5iemp4dW05TnFWbnM9IiwibmJmIjoxNTg1ODEyMTMyLCJleHAiOjE1ODU4MTIxOTIsImlhdCI6MTU4NTgxMjEzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NwawJLO-lraMxtJsOqdn9uoErC1lLS3OFO9bqCUWHBQ</msg>
<status status="PASS" starttime="20200402 12:52:15.191" endtime="20200402 12:52:15.191"></status>
</kw>
<msg timestamp="20200402 12:52:15.192" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0dWNGVlE...</msg>
<status status="PASS" starttime="20200402 12:52:14.584" endtime="20200402 12:52:15.192"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:15.193" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:15.193" endtime="20200402 12:52:15.194"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:15.194" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:15.194" endtime="20200402 12:52:15.194"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:15.195" endtime="20200402 12:52:15.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:15.195" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:15.195" endtime="20200402 12:52:15.195"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:15.196" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:16.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:15.196" endtime="20200402 12:52:16.068"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:16.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:16.068" endtime="20200402 12:52:16.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:16.069" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWZSdmRDc3gwYXpDOGg5YlZyT1hjQVVxRE12TW4ydHUrb2RpVHpUTFpoZ3dCYklRNFRtZWNOK2pEUmxUZndIOXBzUVpEREVDZUZDQklTTllOSzErMW89IiwibmJmIjoxNTg1ODEyMTMzLCJleHAiOjE1ODU4MTIxOTMsImlhdCI6MTU4NTgxMjEzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.PLWdFXLE8B4k7wlOvK6qHBhiav_fXvS4yYuGxP8E2_U</msg>
<status status="PASS" starttime="20200402 12:52:16.069" endtime="20200402 12:52:16.069"></status>
</kw>
<msg timestamp="20200402 12:52:16.070" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWZSdmRDc3gwYXpDOGg5YlZyT1hjQVVxRE12TW4ydHU...</msg>
<status status="PASS" starttime="20200402 12:52:15.193" endtime="20200402 12:52:16.070"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:16.071" level="INFO">${Id} = 35555161946832</msg>
<status status="PASS" starttime="20200402 12:52:16.070" endtime="20200402 12:52:16.071"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:16.071" level="INFO">${IdNumber} = 35555161946832</msg>
<status status="PASS" starttime="20200402 12:52:16.071" endtime="20200402 12:52:16.071"></status>
</kw>
<msg timestamp="20200402 12:52:16.071" level="INFO">${idNum} = 35555161946832</msg>
<status status="PASS" starttime="20200402 12:52:16.070" endtime="20200402 12:52:16.071"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:16.072" level="INFO">${mobile} = 6358251082</msg>
<status status="PASS" starttime="20200402 12:52:16.072" endtime="20200402 12:52:16.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:16.073" level="INFO">${mobileNo} = 6358251082</msg>
<status status="PASS" starttime="20200402 12:52:16.072" endtime="20200402 12:52:16.073"></status>
</kw>
<msg timestamp="20200402 12:52:16.073" level="INFO">${MobNo} = 6358251082</msg>
<status status="PASS" starttime="20200402 12:52:16.072" endtime="20200402 12:52:16.073"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:16.074" level="INFO">${Emailnum} = 18827</msg>
<status status="PASS" starttime="20200402 12:52:16.074" endtime="20200402 12:52:16.074"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:16.075" level="INFO">${enum} = 18827</msg>
<status status="PASS" starttime="20200402 12:52:16.075" endtime="20200402 12:52:16.075"></status>
</kw>
<msg timestamp="20200402 12:52:16.076" level="INFO">${num} = 18827</msg>
<status status="PASS" starttime="20200402 12:52:16.074" endtime="20200402 12:52:16.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:16.076" level="INFO">${emailid} = pavan18827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:16.076" endtime="20200402 12:52:16.076"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:16.077" level="INFO">${email} = pavan18827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:16.076" endtime="20200402 12:52:16.077"></status>
</kw>
<msg timestamp="20200402 12:52:16.077" level="INFO">${emailid} = pavan18827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:16.073" endtime="20200402 12:52:16.077"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:16.079" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:16.079" endtime="20200402 12:52:16.080"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:16.080" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:16.080" endtime="20200402 12:52:16.080"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:16.081" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:16.081" endtime="20200402 12:52:16.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:16.083" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:16.081" endtime="20200402 12:52:16.083"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:16.084" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:16.083" endtime="20200402 12:52:16.084"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:16.087" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '35555161946832', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6358251082', 'email': 'pavan18827@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:16.084" endtime="20200402 12:52:16.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:16.087" endtime="20200402 12:52:16.088"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:16.088" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWZSdmRDc3gwYXpDOGg5YlZyT1hjQVVxRE12...</msg>
<status status="PASS" starttime="20200402 12:52:16.088" endtime="20200402 12:52:16.089"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:16.089" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:16.089" endtime="20200402 12:52:16.089"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:16.090" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNWZSdmRDc3gwYXpDOGg5YlZyT1hjQVVxRE12TW4ydHUrb2RpVHpUTFpoZ3dCYklRNFRtZWNOK2pEUmxUZndIOXBzUVpEREVDZUZDQklTTllOSzErMW89IiwibmJmIjoxNTg1ODEyMTMzLCJleHAiOjE1ODU4MTIxOTMsImlhdCI6MTU4NTgxMjEzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.PLWdFXLE8B4k7wlOvK6qHBhiav_fXvS4yYuGxP8E2_U'} 
data={"escrowCompanyId": "001", "idNumber": "35555161946832", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6358251082", "email": "pavan18827@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:16.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:16.090" endtime="20200402 12:52:16.362"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:16.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:16.362" endtime="20200402 12:52:16.363"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:16.364" endtime="20200402 12:52:16.364"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:16.365" endtime="20200402 12:52:16.366"></status>
</kw>
<msg timestamp="20200402 12:52:16.366" level="INFO">${sellerid} = c4bb5c1a-2c70-47da-91c3-694682cbd7f0</msg>
<status status="PASS" starttime="20200402 12:52:16.077" endtime="20200402 12:52:16.366"></status>
</kw>
<msg timestamp="20200402 12:52:16.366" level="INFO">${SellerId} = c4bb5c1a-2c70-47da-91c3-694682cbd7f0</msg>
<msg timestamp="20200402 12:52:16.367" level="INFO">${idnumber} = 35555161946832</msg>
<status status="PASS" starttime="20200402 12:52:15.192" endtime="20200402 12:52:16.367"></status>
</kw>
<kw name="UpdateSellerDetails lastNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:16.384" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:16.383" endtime="20200402 12:52:16.384"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:16.385" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:16.385" endtime="20200402 12:52:16.385"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameEn=${lastNameEn }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:16.387" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'c4bb5c1a-2c70-47da-91c3-694682cbd7f0', 'lastNameEn': 'pavan', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:52:16.386" endtime="20200402 12:52:16.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:16.388" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0...</msg>
<status status="PASS" starttime="20200402 12:52:16.387" endtime="20200402 12:52:16.388"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:16.389" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:16.388" endtime="20200402 12:52:16.389"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:16.390" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0dWNGVlE1ZWx1SWtMVXpTQ0R6MFhnTlV4TW0rdXJkM2dHaUE5QmdsZXhRd0Vacm5iemp4dW05TnFWbnM9IiwibmJmIjoxNTg1ODEyMTMyLCJleHAiOjE1ODU4MTIxOTIsImlhdCI6MTU4NTgxMjEzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NwawJLO-lraMxtJsOqdn9uoErC1lLS3OFO9bqCUWHBQ'} 
data={"escrowCompanyId": "001", "SELLERId": "c4bb5c1a-2c70-47da-91c3-694682cbd7f0", "lastNameEn": "pavan", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:17.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:16.389" endtime="20200402 12:52:17.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:17.320" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:17.319" endtime="20200402 12:52:17.320"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:17.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:17.321" endtime="20200402 12:52:17.321"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:17.322" endtime="20200402 12:52:17.322"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:17.323" endtime="20200402 12:52:17.323"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:16.382" endtime="20200402 12:52:17.324"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:17.326" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:17.325" endtime="20200402 12:52:17.327"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:17.328" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c4bb5c1a-2c70-47da-91c3-694682cbd7f0'}</msg>
<status status="PASS" starttime="20200402 12:52:17.327" endtime="20200402 12:52:17.328"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:17.329" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0...</msg>
<status status="PASS" starttime="20200402 12:52:17.328" endtime="20200402 12:52:17.329"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:17.330" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:17.329" endtime="20200402 12:52:17.330"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:17.332" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0dlYkhJZC82UE45c2lOMEQxNE5sYldUNlM0dWNGVlE1ZWx1SWtMVXpTQ0R6MFhnTlV4TW0rdXJkM2dHaUE5QmdsZXhRd0Vacm5iemp4dW05TnFWbnM9IiwibmJmIjoxNTg1ODEyMTMyLCJleHAiOjE1ODU4MTIxOTIsImlhdCI6MTU4NTgxMjEzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NwawJLO-lraMxtJsOqdn9uoErC1lLS3OFO9bqCUWHBQ'} 
data={"escrowCompanyId": "001", "sellerID": "c4bb5c1a-2c70-47da-91c3-694682cbd7f0"} 
json=None</msg>
<msg timestamp="20200402 12:52:17.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:17.331" endtime="20200402 12:52:17.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:17.571" level="INFO">{"escrowCompanyId":"001","sellerId":"c4bb5c1a-2c70-47da-91c3-694682cbd7f0","idNumber":"35555161946832","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6358251082","email":"pavan18827@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"pavan","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:13","updateDate":"02/04/2020 02:22:14","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:17.571" endtime="20200402 12:52:17.572"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:17.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:17.573" endtime="20200402 12:52:17.573"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:17.324" endtime="20200402 12:52:17.574"></status>
</kw>
<doc>Valid: To Verify response if titleEn is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:11.580" endtime="20200402 12:52:17.574" critical="yes"></status>
</test>
<test id="s1-t54" name="TC_64 Selle_Details_API Empty lastNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:20.579" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:17.577" endtime="20200402 12:52:20.579"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:20.721" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:20.720" endtime="20200402 12:52:20.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:20.723" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:20.722" endtime="20200402 12:52:20.723"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:20.723" endtime="20200402 12:52:20.724"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:20.725" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:20.724" endtime="20200402 12:52:20.725"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:20.726" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:20.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:20.726" endtime="20200402 12:52:20.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:20.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:20.904" endtime="20200402 12:52:20.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:20.905" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRXV3FiZkFScUhvb2lTRUFEVmlkOUNtZUphU1JiMFdPT2UyQkdicXRqa09yaHNweGlsc1pKY2RaOFRWbTg9IiwibmJmIjoxNTg1ODEyMTM4LCJleHAiOjE1ODU4MTIxOTgsImlhdCI6MTU4NTgxMjEzOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tGagnY6xGW5ikNhUF1163vFkw7V-uva50IFOpOf2aw0</msg>
<status status="PASS" starttime="20200402 12:52:20.905" endtime="20200402 12:52:20.905"></status>
</kw>
<msg timestamp="20200402 12:52:20.906" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRXV3FiZkF...</msg>
<status status="PASS" starttime="20200402 12:52:20.719" endtime="20200402 12:52:20.906"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:20.908" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:20.908" endtime="20200402 12:52:20.910"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:20.910" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:20.910" endtime="20200402 12:52:20.910"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:20.910" endtime="20200402 12:52:20.911"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:20.911" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:20.911" endtime="20200402 12:52:20.911"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:20.912" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:21.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:20.912" endtime="20200402 12:52:21.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:21.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:21.099" endtime="20200402 12:52:21.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:21.102" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNtR3IvTkthT2xRc2czYm9MdDZ3ei84cGxnZFJMbHdqMnQ5ckU2MXN6aXVPNk5MeEc0bWJTKy9TR0hqSTFrNUtweEZFcTZGTkJjR3hLNk5xamZ1WVk9IiwibmJmIjoxNTg1ODEyMTM4LCJleHAiOjE1ODU4MTIxOTgsImlhdCI6MTU4NTgxMjEzOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I1XkoQL5lgs0AYXJfF7QWIIPvSibWKEKvfrKGLVJGIA</msg>
<status status="PASS" starttime="20200402 12:52:21.101" endtime="20200402 12:52:21.102"></status>
</kw>
<msg timestamp="20200402 12:52:21.103" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNtR3IvTkthT2xRc2czYm9MdDZ3ei84cGxnZFJMbHd...</msg>
<status status="PASS" starttime="20200402 12:52:20.907" endtime="20200402 12:52:21.103"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:21.105" level="INFO">${Id} = 12456218200528</msg>
<status status="PASS" starttime="20200402 12:52:21.104" endtime="20200402 12:52:21.105"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:21.106" level="INFO">${IdNumber} = 12456218200528</msg>
<status status="PASS" starttime="20200402 12:52:21.105" endtime="20200402 12:52:21.106"></status>
</kw>
<msg timestamp="20200402 12:52:21.106" level="INFO">${idNum} = 12456218200528</msg>
<status status="PASS" starttime="20200402 12:52:21.103" endtime="20200402 12:52:21.107"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:21.108" level="INFO">${mobile} = 7888471443</msg>
<status status="PASS" starttime="20200402 12:52:21.108" endtime="20200402 12:52:21.108"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:21.109" level="INFO">${mobileNo} = 7888471443</msg>
<status status="PASS" starttime="20200402 12:52:21.109" endtime="20200402 12:52:21.109"></status>
</kw>
<msg timestamp="20200402 12:52:21.110" level="INFO">${MobNo} = 7888471443</msg>
<status status="PASS" starttime="20200402 12:52:21.107" endtime="20200402 12:52:21.110"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:21.112" level="INFO">${Emailnum} = 94813</msg>
<status status="PASS" starttime="20200402 12:52:21.111" endtime="20200402 12:52:21.112"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:21.113" level="INFO">${enum} = 94813</msg>
<status status="PASS" starttime="20200402 12:52:21.112" endtime="20200402 12:52:21.113"></status>
</kw>
<msg timestamp="20200402 12:52:21.114" level="INFO">${num} = 94813</msg>
<status status="PASS" starttime="20200402 12:52:21.111" endtime="20200402 12:52:21.114"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:21.115" level="INFO">${emailid} = pavan94813@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:21.115" endtime="20200402 12:52:21.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:21.116" level="INFO">${email} = pavan94813@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:21.116" endtime="20200402 12:52:21.116"></status>
</kw>
<msg timestamp="20200402 12:52:21.117" level="INFO">${emailid} = pavan94813@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:21.110" endtime="20200402 12:52:21.117"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:21.121" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:21.121" endtime="20200402 12:52:21.122"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:21.123" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:21.122" endtime="20200402 12:52:21.123"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:21.124" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:21.123" endtime="20200402 12:52:21.124"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:21.127" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:21.124" endtime="20200402 12:52:21.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:21.130" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:21.128" endtime="20200402 12:52:21.130"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:21.134" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '12456218200528', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7888471443', 'email': 'pavan94813@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:21.130" endtime="20200402 12:52:21.134"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:21.134" endtime="20200402 12:52:21.135"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:21.136" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNtR3IvTkthT2xRc2czYm9MdDZ3ei84cGxn...</msg>
<status status="PASS" starttime="20200402 12:52:21.136" endtime="20200402 12:52:21.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:21.138" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:21.137" endtime="20200402 12:52:21.138"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:21.139" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUNtR3IvTkthT2xRc2czYm9MdDZ3ei84cGxnZFJMbHdqMnQ5ckU2MXN6aXVPNk5MeEc0bWJTKy9TR0hqSTFrNUtweEZFcTZGTkJjR3hLNk5xamZ1WVk9IiwibmJmIjoxNTg1ODEyMTM4LCJleHAiOjE1ODU4MTIxOTgsImlhdCI6MTU4NTgxMjEzOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.I1XkoQL5lgs0AYXJfF7QWIIPvSibWKEKvfrKGLVJGIA'} 
data={"escrowCompanyId": "001", "idNumber": "12456218200528", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7888471443", "email": "pavan94813@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:21.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:21.138" endtime="20200402 12:52:21.397"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:21.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:21.398" endtime="20200402 12:52:21.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:21.399" endtime="20200402 12:52:21.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:21.400" endtime="20200402 12:52:21.401"></status>
</kw>
<msg timestamp="20200402 12:52:21.402" level="INFO">${sellerid} = 44eae140-b5c4-49cc-861c-2b5c5957ab25</msg>
<status status="PASS" starttime="20200402 12:52:21.117" endtime="20200402 12:52:21.402"></status>
</kw>
<msg timestamp="20200402 12:52:21.402" level="INFO">${SellerId} = 44eae140-b5c4-49cc-861c-2b5c5957ab25</msg>
<msg timestamp="20200402 12:52:21.402" level="INFO">${idnumber} = 12456218200528</msg>
<status status="PASS" starttime="20200402 12:52:20.906" endtime="20200402 12:52:21.403"></status>
</kw>
<kw name="UpdateSellerDetails lastNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:21.407" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:21.406" endtime="20200402 12:52:21.408"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:21.409" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:21.408" endtime="20200402 12:52:21.409"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameEn=${lastNameEn }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:21.411" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '44eae140-b5c4-49cc-861c-2b5c5957ab25', 'lastNameEn': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:52:21.409" endtime="20200402 12:52:21.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:21.412" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRX...</msg>
<status status="PASS" starttime="20200402 12:52:21.411" endtime="20200402 12:52:21.412"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:21.413" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:21.412" endtime="20200402 12:52:21.413"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:21.415" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRXV3FiZkFScUhvb2lTRUFEVmlkOUNtZUphU1JiMFdPT2UyQkdicXRqa09yaHNweGlsc1pKY2RaOFRWbTg9IiwibmJmIjoxNTg1ODEyMTM4LCJleHAiOjE1ODU4MTIxOTgsImlhdCI6MTU4NTgxMjEzOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tGagnY6xGW5ikNhUF1163vFkw7V-uva50IFOpOf2aw0'} 
data={"escrowCompanyId": "001", "SELLERId": "44eae140-b5c4-49cc-861c-2b5c5957ab25", "lastNameEn": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:27.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:21.414" endtime="20200402 12:52:27.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:27.927" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:27.927" endtime="20200402 12:52:27.928"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:27.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:27.928" endtime="20200402 12:52:27.928"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:27.929" endtime="20200402 12:52:27.930"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:27.930" endtime="20200402 12:52:27.931"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:21.405" endtime="20200402 12:52:27.931"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:27.933" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:27.933" endtime="20200402 12:52:27.934"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:27.935" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '44eae140-b5c4-49cc-861c-2b5c5957ab25'}</msg>
<status status="PASS" starttime="20200402 12:52:27.934" endtime="20200402 12:52:27.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:27.936" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRX...</msg>
<status status="PASS" starttime="20200402 12:52:27.936" endtime="20200402 12:52:27.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:27.938" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:27.937" endtime="20200402 12:52:27.938"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:27.939" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXg4dHBhZVJ1bk9wMFM2cHlBN2VnV2lCeXRXV3FiZkFScUhvb2lTRUFEVmlkOUNtZUphU1JiMFdPT2UyQkdicXRqa09yaHNweGlsc1pKY2RaOFRWbTg9IiwibmJmIjoxNTg1ODEyMTM4LCJleHAiOjE1ODU4MTIxOTgsImlhdCI6MTU4NTgxMjEzOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.tGagnY6xGW5ikNhUF1163vFkw7V-uva50IFOpOf2aw0'} 
data={"escrowCompanyId": "001", "sellerID": "44eae140-b5c4-49cc-861c-2b5c5957ab25"} 
json=None</msg>
<msg timestamp="20200402 12:52:28.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:27.938" endtime="20200402 12:52:28.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:28.447" level="INFO">{"escrowCompanyId":"001","sellerId":"44eae140-b5c4-49cc-861c-2b5c5957ab25","idNumber":"12456218200528","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7888471443","email":"pavan94813@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:18","updateDate":"02/04/2020 02:22:25","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:28.446" endtime="20200402 12:52:28.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:28.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:28.448" endtime="20200402 12:52:28.448"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:27.932" endtime="20200402 12:52:28.449"></status>
</kw>
<doc>Empty: To Verify response if titleEn parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:17.576" endtime="20200402 12:52:28.450" critical="yes"></status>
</test>
<test id="s1-t55" name="TC_65 Selle_Details_API Invalid lastNameEn">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:31.454" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:28.453" endtime="20200402 12:52:31.454"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:31.455" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:31.455" endtime="20200402 12:52:31.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:31.456" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:31.456" endtime="20200402 12:52:31.456"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:31.457" endtime="20200402 12:52:31.457"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:31.458" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:31.457" endtime="20200402 12:52:31.458"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:31.458" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:35.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:31.458" endtime="20200402 12:52:35.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:35.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:35.204" endtime="20200402 12:52:35.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:35.206" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRHSkpxSFR1UnFGeXZSbXk5RGRoc0xTU0czTHk4THp3NlJlQnB5VHVJby9JS041dkRJSGRZMmo2Z3hEQmc9IiwibmJmIjoxNTg1ODEyMTUyLCJleHAiOjE1ODU4MTIyMTIsImlhdCI6MTU4NTgxMjE1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7Z8U8ql2RLTqjK9JBp7U4YX_cFh9DD1iy7Vn18xurK4</msg>
<status status="PASS" starttime="20200402 12:52:35.205" endtime="20200402 12:52:35.206"></status>
</kw>
<msg timestamp="20200402 12:52:35.206" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRHSkpxSFR...</msg>
<status status="PASS" starttime="20200402 12:52:31.455" endtime="20200402 12:52:35.207"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:35.210" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:35.209" endtime="20200402 12:52:35.211"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:35.212" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:35.211" endtime="20200402 12:52:35.212"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:35.212" endtime="20200402 12:52:35.213"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:35.213" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:35.213" endtime="20200402 12:52:35.213"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:35.215" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:36.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:35.214" endtime="20200402 12:52:36.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:36.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:36.807" endtime="20200402 12:52:36.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:36.809" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeCt0V0dOVE13MGhpREEvN2E3ZGsvV1VjVU9vc2R4L0k1YVd0THdxdXFYbU5ENHV1cjB4Uk5YZHFucU45cUJYS2ZoeTNlcWI4bmdFcDEyc1VhRUNvUkU9IiwibmJmIjoxNTg1ODEyMTU0LCJleHAiOjE1ODU4MTIyMTQsImlhdCI6MTU4NTgxMjE1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.a1QKZdH4q32OpwCU_pTIVDRb1N2BA757_Km-H1kz3tY</msg>
<status status="PASS" starttime="20200402 12:52:36.809" endtime="20200402 12:52:36.810"></status>
</kw>
<msg timestamp="20200402 12:52:36.810" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeCt0V0dOVE13MGhpREEvN2E3ZGsvV1VjVU9vc2R4L0k...</msg>
<status status="PASS" starttime="20200402 12:52:35.209" endtime="20200402 12:52:36.810"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:36.812" level="INFO">${Id} = 09230425972005</msg>
<status status="PASS" starttime="20200402 12:52:36.811" endtime="20200402 12:52:36.812"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:36.813" level="INFO">${IdNumber} = 09230425972005</msg>
<status status="PASS" starttime="20200402 12:52:36.812" endtime="20200402 12:52:36.813"></status>
</kw>
<msg timestamp="20200402 12:52:36.813" level="INFO">${idNum} = 09230425972005</msg>
<status status="PASS" starttime="20200402 12:52:36.811" endtime="20200402 12:52:36.813"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:36.815" level="INFO">${mobile} = 8685588307</msg>
<status status="PASS" starttime="20200402 12:52:36.814" endtime="20200402 12:52:36.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:36.816" level="INFO">${mobileNo} = 8685588307</msg>
<status status="PASS" starttime="20200402 12:52:36.815" endtime="20200402 12:52:36.816"></status>
</kw>
<msg timestamp="20200402 12:52:36.816" level="INFO">${MobNo} = 8685588307</msg>
<status status="PASS" starttime="20200402 12:52:36.814" endtime="20200402 12:52:36.816"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:36.819" level="INFO">${Emailnum} = 64387</msg>
<status status="PASS" starttime="20200402 12:52:36.818" endtime="20200402 12:52:36.819"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:36.820" level="INFO">${enum} = 64387</msg>
<status status="PASS" starttime="20200402 12:52:36.819" endtime="20200402 12:52:36.820"></status>
</kw>
<msg timestamp="20200402 12:52:36.820" level="INFO">${num} = 64387</msg>
<status status="PASS" starttime="20200402 12:52:36.817" endtime="20200402 12:52:36.820"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:36.821" level="INFO">${emailid} = pavan64387@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:36.821" endtime="20200402 12:52:36.822"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:36.823" level="INFO">${email} = pavan64387@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:36.822" endtime="20200402 12:52:36.823"></status>
</kw>
<msg timestamp="20200402 12:52:36.823" level="INFO">${emailid} = pavan64387@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:36.817" endtime="20200402 12:52:36.823"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:36.832" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:36.831" endtime="20200402 12:52:36.832"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:36.833" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:36.833" endtime="20200402 12:52:36.833"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:36.835" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:36.834" endtime="20200402 12:52:36.835"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:36.837" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:36.835" endtime="20200402 12:52:36.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:36.840" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:36.838" endtime="20200402 12:52:36.840"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:36.845" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '09230425972005', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8685588307', 'email': 'pavan64387@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:36.841" endtime="20200402 12:52:36.845"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:36.845" endtime="20200402 12:52:36.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:36.861" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeCt0V0dOVE13MGhpREEvN2E3ZGsvV1VjVU9v...</msg>
<status status="PASS" starttime="20200402 12:52:36.861" endtime="20200402 12:52:36.861"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:36.862" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:36.862" endtime="20200402 12:52:36.862"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:36.864" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeCt0V0dOVE13MGhpREEvN2E3ZGsvV1VjVU9vc2R4L0k1YVd0THdxdXFYbU5ENHV1cjB4Uk5YZHFucU45cUJYS2ZoeTNlcWI4bmdFcDEyc1VhRUNvUkU9IiwibmJmIjoxNTg1ODEyMTU0LCJleHAiOjE1ODU4MTIyMTQsImlhdCI6MTU4NTgxMjE1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.a1QKZdH4q32OpwCU_pTIVDRb1N2BA757_Km-H1kz3tY'} 
data={"escrowCompanyId": "001", "idNumber": "09230425972005", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8685588307", "email": "pavan64387@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:37.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:36.863" endtime="20200402 12:52:37.127"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:37.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:37.127" endtime="20200402 12:52:37.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:37.128" endtime="20200402 12:52:37.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:37.129" endtime="20200402 12:52:37.130"></status>
</kw>
<msg timestamp="20200402 12:52:37.130" level="INFO">${sellerid} = 0ae809d0-465a-488a-9721-86c05ba8e8ff</msg>
<status status="PASS" starttime="20200402 12:52:36.824" endtime="20200402 12:52:37.131"></status>
</kw>
<msg timestamp="20200402 12:52:37.131" level="INFO">${SellerId} = 0ae809d0-465a-488a-9721-86c05ba8e8ff</msg>
<msg timestamp="20200402 12:52:37.131" level="INFO">${idnumber} = 09230425972005</msg>
<status status="PASS" starttime="20200402 12:52:35.208" endtime="20200402 12:52:37.131"></status>
</kw>
<kw name="UpdateSellerDetails lastNameEn" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn1_lastnm}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:37.133" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:37.133" endtime="20200402 12:52:37.133"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:37.134" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:37.134" endtime="20200402 12:52:37.134"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameEn=${lastNameEn }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:37.136" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '0ae809d0-465a-488a-9721-86c05ba8e8ff', 'lastNameEn': '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456...</msg>
<status status="PASS" starttime="20200402 12:52:37.135" endtime="20200402 12:52:37.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:37.137" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRH...</msg>
<status status="PASS" starttime="20200402 12:52:37.136" endtime="20200402 12:52:37.137"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:37.137" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:37.137" endtime="20200402 12:52:37.137"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:37.138" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRHSkpxSFR1UnFGeXZSbXk5RGRoc0xTU0czTHk4THp3NlJlQnB5VHVJby9JS041dkRJSGRZMmo2Z3hEQmc9IiwibmJmIjoxNTg1ODEyMTUyLCJleHAiOjE1ODU4MTIyMTIsImlhdCI6MTU4NTgxMjE1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7Z8U8ql2RLTqjK9JBp7U4YX_cFh9DD1iy7Vn18xurK4'} 
data={"escrowCompanyId": "001", "SELLERId": "0ae809d0-465a-488a-9721-86c05ba8e8ff", "lastNameEn": "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:37.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:37.138" endtime="20200402 12:52:37.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:37.606" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:52:37.605" endtime="20200402 12:52:37.606"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:37.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:37.607" endtime="20200402 12:52:37.607"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:37.608" endtime="20200402 12:52:37.609"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:37.609" endtime="20200402 12:52:37.609"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:37.132" endtime="20200402 12:52:37.610"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:37.611" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:37.611" endtime="20200402 12:52:37.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:37.613" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '0ae809d0-465a-488a-9721-86c05ba8e8ff'}</msg>
<status status="PASS" starttime="20200402 12:52:37.612" endtime="20200402 12:52:37.613"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:37.613" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRH...</msg>
<status status="PASS" starttime="20200402 12:52:37.613" endtime="20200402 12:52:37.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:37.614" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:37.614" endtime="20200402 12:52:37.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:37.615" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnpjcFRQNGtTeGFCcG4zTWFhaUdpSTlXUkRHSkpxSFR1UnFGeXZSbXk5RGRoc0xTU0czTHk4THp3NlJlQnB5VHVJby9JS041dkRJSGRZMmo2Z3hEQmc9IiwibmJmIjoxNTg1ODEyMTUyLCJleHAiOjE1ODU4MTIyMTIsImlhdCI6MTU4NTgxMjE1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7Z8U8ql2RLTqjK9JBp7U4YX_cFh9DD1iy7Vn18xurK4'} 
data={"escrowCompanyId": "001", "sellerID": "0ae809d0-465a-488a-9721-86c05ba8e8ff"} 
json=None</msg>
<msg timestamp="20200402 12:52:38.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:37.614" endtime="20200402 12:52:38.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:38.205" level="INFO">{"escrowCompanyId":"001","sellerId":"0ae809d0-465a-488a-9721-86c05ba8e8ff","idNumber":"09230425972005","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8685588307","email":"pavan64387@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:34","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:38.205" endtime="20200402 12:52:38.206"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:38.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:38.206" endtime="20200402 12:52:38.207"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:37.610" endtime="20200402 12:52:38.207"></status>
</kw>
<doc>Invalid: To Verify response if lastNameEn parameter is entered more than size 100 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:28.451" endtime="20200402 12:52:38.208" critical="yes"></status>
</test>
<test id="s1-t56" name="TC_66 Selle_Details_API Valid titleLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:41.212" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:38.211" endtime="20200402 12:52:41.212"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.213" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:41.213" endtime="20200402 12:52:41.214"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:41.214" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:41.214" endtime="20200402 12:52:41.214"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:41.215" endtime="20200402 12:52:41.215"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:41.215" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:41.215" endtime="20200402 12:52:41.215"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:41.216" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:41.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.216" endtime="20200402 12:52:41.414"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:41.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.414" endtime="20200402 12:52:41.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.416" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdHNDNGZytmSHJmUjhpZTBQN3FUc3lqWDV5U1ZkbTBCUDdoUWtKSkdJZTNobVpFRWdBY3V3Y1VjU3NZaWc9IiwibmJmIjoxNTg1ODEyMTU4LCJleHAiOjE1ODU4MTIyMTgsImlhdCI6MTU4NTgxMjE1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.u1bJuMsySZUe6cZbFWKYLaw1VP1bji2yuhI9FwSHiRg</msg>
<status status="PASS" starttime="20200402 12:52:41.416" endtime="20200402 12:52:41.416"></status>
</kw>
<msg timestamp="20200402 12:52:41.417" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdHNDNGZyt...</msg>
<status status="PASS" starttime="20200402 12:52:41.213" endtime="20200402 12:52:41.417"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.419" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:41.418" endtime="20200402 12:52:41.419"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:41.420" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:41.419" endtime="20200402 12:52:41.420"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:41.420" endtime="20200402 12:52:41.421"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:41.421" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:41.421" endtime="20200402 12:52:41.421"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:41.422" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:41.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.421" endtime="20200402 12:52:41.611"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:41.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.611" endtime="20200402 12:52:41.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.612" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeEphcnYvL0IwRTR3b1RIRVhOdnYxeGwwaGRSdGFraGpWL1NEbWNRRmxQL0JpN2FVOVI1OFFIQTlFSXZFQVd0RUlOMEZKQVY5N1E4QVVQb08xLzJISE09IiwibmJmIjoxNTg1ODEyMTU5LCJleHAiOjE1ODU4MTIyMTksImlhdCI6MTU4NTgxMjE1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.WnCivljBYjXDvCziK8BclXAJE17IvD7OWC6-1VLgD7g</msg>
<status status="PASS" starttime="20200402 12:52:41.612" endtime="20200402 12:52:41.612"></status>
</kw>
<msg timestamp="20200402 12:52:41.613" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeEphcnYvL0IwRTR3b1RIRVhOdnYxeGwwaGRSdGFraGp...</msg>
<status status="PASS" starttime="20200402 12:52:41.418" endtime="20200402 12:52:41.613"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:41.614" level="INFO">${Id} = 08588326428798</msg>
<status status="PASS" starttime="20200402 12:52:41.613" endtime="20200402 12:52:41.614"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.614" level="INFO">${IdNumber} = 08588326428798</msg>
<status status="PASS" starttime="20200402 12:52:41.614" endtime="20200402 12:52:41.614"></status>
</kw>
<msg timestamp="20200402 12:52:41.615" level="INFO">${idNum} = 08588326428798</msg>
<status status="PASS" starttime="20200402 12:52:41.613" endtime="20200402 12:52:41.615"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:41.616" level="INFO">${mobile} = 3229026269</msg>
<status status="PASS" starttime="20200402 12:52:41.615" endtime="20200402 12:52:41.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.616" level="INFO">${mobileNo} = 3229026269</msg>
<status status="PASS" starttime="20200402 12:52:41.616" endtime="20200402 12:52:41.616"></status>
</kw>
<msg timestamp="20200402 12:52:41.617" level="INFO">${MobNo} = 3229026269</msg>
<status status="PASS" starttime="20200402 12:52:41.615" endtime="20200402 12:52:41.617"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:41.618" level="INFO">${Emailnum} = 94499</msg>
<status status="PASS" starttime="20200402 12:52:41.617" endtime="20200402 12:52:41.618"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.619" level="INFO">${enum} = 94499</msg>
<status status="PASS" starttime="20200402 12:52:41.618" endtime="20200402 12:52:41.619"></status>
</kw>
<msg timestamp="20200402 12:52:41.620" level="INFO">${num} = 94499</msg>
<status status="PASS" starttime="20200402 12:52:41.617" endtime="20200402 12:52:41.620"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:41.621" level="INFO">${emailid} = pavan94499@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:41.620" endtime="20200402 12:52:41.621"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:41.622" level="INFO">${email} = pavan94499@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:41.621" endtime="20200402 12:52:41.622"></status>
</kw>
<msg timestamp="20200402 12:52:41.622" level="INFO">${emailid} = pavan94499@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:41.617" endtime="20200402 12:52:41.622"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:41.626" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:41.626" endtime="20200402 12:52:41.627"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:41.628" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:41.627" endtime="20200402 12:52:41.628"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:41.629" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:41.628" endtime="20200402 12:52:41.629"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:41.632" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:41.629" endtime="20200402 12:52:41.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:41.635" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:41.633" endtime="20200402 12:52:41.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:41.640" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '08588326428798', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3229026269', 'email': 'pavan94499@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:41.636" endtime="20200402 12:52:41.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:41.640" endtime="20200402 12:52:41.642"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:41.643" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeEphcnYvL0IwRTR3b1RIRVhOdnYxeGwwaGRS...</msg>
<status status="PASS" starttime="20200402 12:52:41.642" endtime="20200402 12:52:41.643"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:41.644" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:41.643" endtime="20200402 12:52:41.644"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:41.645" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeEphcnYvL0IwRTR3b1RIRVhOdnYxeGwwaGRSdGFraGpWL1NEbWNRRmxQL0JpN2FVOVI1OFFIQTlFSXZFQVd0RUlOMEZKQVY5N1E4QVVQb08xLzJISE09IiwibmJmIjoxNTg1ODEyMTU5LCJleHAiOjE1ODU4MTIyMTksImlhdCI6MTU4NTgxMjE1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.WnCivljBYjXDvCziK8BclXAJE17IvD7OWC6-1VLgD7g'} 
data={"escrowCompanyId": "001", "idNumber": "08588326428798", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3229026269", "email": "pavan94499@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:41.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.644" endtime="20200402 12:52:41.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:41.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.924" endtime="20200402 12:52:41.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:41.925" endtime="20200402 12:52:41.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:41.925" endtime="20200402 12:52:41.926"></status>
</kw>
<msg timestamp="20200402 12:52:41.926" level="INFO">${sellerid} = 1906f611-fc34-4293-8d98-94c454dd4f28</msg>
<status status="PASS" starttime="20200402 12:52:41.622" endtime="20200402 12:52:41.927"></status>
</kw>
<msg timestamp="20200402 12:52:41.927" level="INFO">${SellerId} = 1906f611-fc34-4293-8d98-94c454dd4f28</msg>
<msg timestamp="20200402 12:52:41.927" level="INFO">${idnumber} = 08588326428798</msg>
<status status="PASS" starttime="20200402 12:52:41.418" endtime="20200402 12:52:41.927"></status>
</kw>
<kw name="UpdateSellerDetails titleLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>TH</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:41.929" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:41.928" endtime="20200402 12:52:41.929"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:41.929" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:41.929" endtime="20200402 12:52:41.930"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleLocal=${titleLocal }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:41.931" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '1906f611-fc34-4293-8d98-94c454dd4f28', 'titleLocal': 'TH', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:52:41.930" endtime="20200402 12:52:41.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:41.931" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdH...</msg>
<status status="PASS" starttime="20200402 12:52:41.931" endtime="20200402 12:52:41.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:41.932" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:41.931" endtime="20200402 12:52:41.932"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:41.933" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdHNDNGZytmSHJmUjhpZTBQN3FUc3lqWDV5U1ZkbTBCUDdoUWtKSkdJZTNobVpFRWdBY3V3Y1VjU3NZaWc9IiwibmJmIjoxNTg1ODEyMTU4LCJleHAiOjE1ODU4MTIyMTgsImlhdCI6MTU4NTgxMjE1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.u1bJuMsySZUe6cZbFWKYLaw1VP1bji2yuhI9FwSHiRg'} 
data={"escrowCompanyId": "001", "SELLERId": "1906f611-fc34-4293-8d98-94c454dd4f28", "titleLocal": "TH", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:42.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:41.932" endtime="20200402 12:52:42.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:42.476" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:42.476" endtime="20200402 12:52:42.477"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:42.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:42.477" endtime="20200402 12:52:42.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:42.478" endtime="20200402 12:52:42.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:42.479" endtime="20200402 12:52:42.479"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:41.928" endtime="20200402 12:52:42.479"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:42.481" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:42.480" endtime="20200402 12:52:42.481"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:42.483" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '1906f611-fc34-4293-8d98-94c454dd4f28'}</msg>
<status status="PASS" starttime="20200402 12:52:42.482" endtime="20200402 12:52:42.483"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:42.484" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdH...</msg>
<status status="PASS" starttime="20200402 12:52:42.483" endtime="20200402 12:52:42.484"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:42.484" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:42.484" endtime="20200402 12:52:42.485"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:42.485" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMnNqLzAzaUhNWG9YbENybDhUV1hUZXlyVkdHNDNGZytmSHJmUjhpZTBQN3FUc3lqWDV5U1ZkbTBCUDdoUWtKSkdJZTNobVpFRWdBY3V3Y1VjU3NZaWc9IiwibmJmIjoxNTg1ODEyMTU4LCJleHAiOjE1ODU4MTIyMTgsImlhdCI6MTU4NTgxMjE1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.u1bJuMsySZUe6cZbFWKYLaw1VP1bji2yuhI9FwSHiRg'} 
data={"escrowCompanyId": "001", "sellerID": "1906f611-fc34-4293-8d98-94c454dd4f28"} 
json=None</msg>
<msg timestamp="20200402 12:52:43.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:42.485" endtime="20200402 12:52:43.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:43.013" level="INFO">{"escrowCompanyId":"001","sellerId":"1906f611-fc34-4293-8d98-94c454dd4f28","idNumber":"08588326428798","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3229026269","email":"pavan94499@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"TH","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:39","updateDate":"02/04/2020 02:22:39","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:43.012" endtime="20200402 12:52:43.013"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:43.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:43.013" endtime="20200402 12:52:43.014"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:42.480" endtime="20200402 12:52:43.014"></status>
</kw>
<doc>Valid: To Verify response if titleEn is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:38.209" endtime="20200402 12:52:43.015" critical="yes"></status>
</test>
<test id="s1-t57" name="TC_67 Selle_Details_API Empty titleLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:46.020" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:43.019" endtime="20200402 12:52:46.020"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:46.022" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:46.021" endtime="20200402 12:52:46.022"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:46.023" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:46.022" endtime="20200402 12:52:46.023"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:46.023" endtime="20200402 12:52:46.023"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:46.024" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:46.023" endtime="20200402 12:52:46.024"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:46.024" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:46.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:46.024" endtime="20200402 12:52:46.519"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:46.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:46.519" endtime="20200402 12:52:46.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:46.520" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3bW1RS0k2ZE1NcGhjWVhDRVprc3U2T0RtZ2YwR0svdTVMSFpLY0ZoZ0hrRW5yREw4WlZyQ1NSZGk1TWc9IiwibmJmIjoxNTg1ODEyMTY0LCJleHAiOjE1ODU4MTIyMjQsImlhdCI6MTU4NTgxMjE2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.aVc8jOkaU1YVkU1bwzo2go35dvaxDFy06wfZSrHW9LU</msg>
<status status="PASS" starttime="20200402 12:52:46.520" endtime="20200402 12:52:46.520"></status>
</kw>
<msg timestamp="20200402 12:52:46.521" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3bW1RS0k...</msg>
<status status="PASS" starttime="20200402 12:52:46.021" endtime="20200402 12:52:46.521"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:46.523" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:46.522" endtime="20200402 12:52:46.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:46.524" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:46.523" endtime="20200402 12:52:46.524"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:46.524" endtime="20200402 12:52:46.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:46.525" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:46.524" endtime="20200402 12:52:46.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:46.526" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:47.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:46.525" endtime="20200402 12:52:47.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:47.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:47.024" endtime="20200402 12:52:47.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:47.025" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3hsOVBhTG05U1lPTG56akdkeXU3NlZVSXc5dGtKdWxjSG02cUU1Z1dCZHI3ZGQyWldYWHU1cStHb1hCYXk1NVdwUHYrcnF5cUNHdHZUQ3FrbUl2cUE9IiwibmJmIjoxNTg1ODEyMTY0LCJleHAiOjE1ODU4MTIyMjQsImlhdCI6MTU4NTgxMjE2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IMfY1ATfjEFFiB7eo4QmAHWGQF9SFvy3noTqkx3PmNw</msg>
<status status="PASS" starttime="20200402 12:52:47.024" endtime="20200402 12:52:47.025"></status>
</kw>
<msg timestamp="20200402 12:52:47.025" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3hsOVBhTG05U1lPTG56akdkeXU3NlZVSXc5dGtKdWx...</msg>
<status status="PASS" starttime="20200402 12:52:46.522" endtime="20200402 12:52:47.025"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:47.026" level="INFO">${Id} = 23026485591343</msg>
<status status="PASS" starttime="20200402 12:52:47.026" endtime="20200402 12:52:47.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:47.026" level="INFO">${IdNumber} = 23026485591343</msg>
<status status="PASS" starttime="20200402 12:52:47.026" endtime="20200402 12:52:47.027"></status>
</kw>
<msg timestamp="20200402 12:52:47.027" level="INFO">${idNum} = 23026485591343</msg>
<status status="PASS" starttime="20200402 12:52:47.025" endtime="20200402 12:52:47.027"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:47.028" level="INFO">${mobile} = 2071565513</msg>
<status status="PASS" starttime="20200402 12:52:47.027" endtime="20200402 12:52:47.028"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:47.028" level="INFO">${mobileNo} = 2071565513</msg>
<status status="PASS" starttime="20200402 12:52:47.028" endtime="20200402 12:52:47.028"></status>
</kw>
<msg timestamp="20200402 12:52:47.028" level="INFO">${MobNo} = 2071565513</msg>
<status status="PASS" starttime="20200402 12:52:47.027" endtime="20200402 12:52:47.029"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:47.030" level="INFO">${Emailnum} = 20827</msg>
<status status="PASS" starttime="20200402 12:52:47.030" endtime="20200402 12:52:47.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:47.031" level="INFO">${enum} = 20827</msg>
<status status="PASS" starttime="20200402 12:52:47.030" endtime="20200402 12:52:47.031"></status>
</kw>
<msg timestamp="20200402 12:52:47.031" level="INFO">${num} = 20827</msg>
<status status="PASS" starttime="20200402 12:52:47.029" endtime="20200402 12:52:47.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:47.031" level="INFO">${emailid} = pavan20827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:47.031" endtime="20200402 12:52:47.031"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:47.032" level="INFO">${email} = pavan20827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:47.032" endtime="20200402 12:52:47.032"></status>
</kw>
<msg timestamp="20200402 12:52:47.032" level="INFO">${emailid} = pavan20827@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:47.029" endtime="20200402 12:52:47.033"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:47.036" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:47.036" endtime="20200402 12:52:47.036"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:47.037" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:47.036" endtime="20200402 12:52:47.037"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:47.037" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:47.037" endtime="20200402 12:52:47.037"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:47.039" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:47.037" endtime="20200402 12:52:47.039"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:47.041" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:47.039" endtime="20200402 12:52:47.041"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:47.043" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '23026485591343', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2071565513', 'email': 'pavan20827@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:47.041" endtime="20200402 12:52:47.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:47.044" endtime="20200402 12:52:47.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:47.045" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3hsOVBhTG05U1lPTG56akdkeXU3NlZVSXc5...</msg>
<status status="PASS" starttime="20200402 12:52:47.045" endtime="20200402 12:52:47.045"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:47.046" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:47.046" endtime="20200402 12:52:47.046"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:47.047" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3hsOVBhTG05U1lPTG56akdkeXU3NlZVSXc5dGtKdWxjSG02cUU1Z1dCZHI3ZGQyWldYWHU1cStHb1hCYXk1NVdwUHYrcnF5cUNHdHZUQ3FrbUl2cUE9IiwibmJmIjoxNTg1ODEyMTY0LCJleHAiOjE1ODU4MTIyMjQsImlhdCI6MTU4NTgxMjE2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IMfY1ATfjEFFiB7eo4QmAHWGQF9SFvy3noTqkx3PmNw'} 
data={"escrowCompanyId": "001", "idNumber": "23026485591343", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2071565513", "email": "pavan20827@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:47.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:47.046" endtime="20200402 12:52:47.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:47.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:47.328" endtime="20200402 12:52:47.328"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:47.329" endtime="20200402 12:52:47.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:47.329" endtime="20200402 12:52:47.330"></status>
</kw>
<msg timestamp="20200402 12:52:47.330" level="INFO">${sellerid} = c9987e17-d302-48b4-8e3d-0d5df351808c</msg>
<status status="PASS" starttime="20200402 12:52:47.033" endtime="20200402 12:52:47.330"></status>
</kw>
<msg timestamp="20200402 12:52:47.330" level="INFO">${SellerId} = c9987e17-d302-48b4-8e3d-0d5df351808c</msg>
<msg timestamp="20200402 12:52:47.330" level="INFO">${idnumber} = 23026485591343</msg>
<status status="PASS" starttime="20200402 12:52:46.521" endtime="20200402 12:52:47.331"></status>
</kw>
<kw name="UpdateSellerDetails titleLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:47.332" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:47.332" endtime="20200402 12:52:47.333"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:47.333" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:47.333" endtime="20200402 12:52:47.333"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleLocal=${titleLocal }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:47.334" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'c9987e17-d302-48b4-8e3d-0d5df351808c', 'titleLocal': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:52:47.334" endtime="20200402 12:52:47.334"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:47.335" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3...</msg>
<status status="PASS" starttime="20200402 12:52:47.334" endtime="20200402 12:52:47.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:47.335" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:47.335" endtime="20200402 12:52:47.335"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:47.336" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3bW1RS0k2ZE1NcGhjWVhDRVprc3U2T0RtZ2YwR0svdTVMSFpLY0ZoZ0hrRW5yREw4WlZyQ1NSZGk1TWc9IiwibmJmIjoxNTg1ODEyMTY0LCJleHAiOjE1ODU4MTIyMjQsImlhdCI6MTU4NTgxMjE2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.aVc8jOkaU1YVkU1bwzo2go35dvaxDFy06wfZSrHW9LU'} 
data={"escrowCompanyId": "001", "SELLERId": "c9987e17-d302-48b4-8e3d-0d5df351808c", "titleLocal": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:48.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:47.336" endtime="20200402 12:52:48.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:48.165" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:48.164" endtime="20200402 12:52:48.165"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:48.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:48.165" endtime="20200402 12:52:48.166"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:48.166" endtime="20200402 12:52:48.167"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:48.167" endtime="20200402 12:52:48.168"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:47.331" endtime="20200402 12:52:48.168"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:48.170" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:48.170" endtime="20200402 12:52:48.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:48.171" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c9987e17-d302-48b4-8e3d-0d5df351808c'}</msg>
<status status="PASS" starttime="20200402 12:52:48.171" endtime="20200402 12:52:48.171"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:48.171" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3...</msg>
<status status="PASS" starttime="20200402 12:52:48.171" endtime="20200402 12:52:48.172"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:48.172" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:48.172" endtime="20200402 12:52:48.172"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:48.173" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM3Iya0crSWx6b1BmbVBDOHpJR2V5TW5udmZ3bW1RS0k2ZE1NcGhjWVhDRVprc3U2T0RtZ2YwR0svdTVMSFpLY0ZoZ0hrRW5yREw4WlZyQ1NSZGk1TWc9IiwibmJmIjoxNTg1ODEyMTY0LCJleHAiOjE1ODU4MTIyMjQsImlhdCI6MTU4NTgxMjE2NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.aVc8jOkaU1YVkU1bwzo2go35dvaxDFy06wfZSrHW9LU'} 
data={"escrowCompanyId": "001", "sellerID": "c9987e17-d302-48b4-8e3d-0d5df351808c"} 
json=None</msg>
<msg timestamp="20200402 12:52:48.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:48.172" endtime="20200402 12:52:48.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:48.696" level="INFO">{"escrowCompanyId":"001","sellerId":"c9987e17-d302-48b4-8e3d-0d5df351808c","idNumber":"23026485591343","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2071565513","email":"pavan20827@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:44","updateDate":"02/04/2020 02:22:45","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:48.695" endtime="20200402 12:52:48.696"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:48.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:48.697" endtime="20200402 12:52:48.697"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:48.169" endtime="20200402 12:52:48.698"></status>
</kw>
<doc>Empty: To Verify response if titleEn parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:43.017" endtime="20200402 12:52:48.698" critical="yes"></status>
</test>
<test id="s1-t58" name="TC_68 Selle_Details_API Invalid titleLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:51.704" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:48.702" endtime="20200402 12:52:51.704"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:51.706" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:51.705" endtime="20200402 12:52:51.706"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:51.707" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:51.707" endtime="20200402 12:52:51.707"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:51.708" endtime="20200402 12:52:51.708"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:51.709" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:51.709" endtime="20200402 12:52:51.709"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:51.710" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:51.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:51.710" endtime="20200402 12:52:51.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:51.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:51.904" endtime="20200402 12:52:51.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:51.906" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8rNllqakduMlBLd1lDVUdpTmVKeUExZlA4djFIOXBnVHhrR1lEc1BqdXBWNFVXZWhSM29oY0Z3YlVXQXM9IiwibmJmIjoxNTg1ODEyMTY5LCJleHAiOjE1ODU4MTIyMjksImlhdCI6MTU4NTgxMjE2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9ZBQxsw3xyqT1tsFURER1-LGkaa2JwEail7pvtALQbQ</msg>
<status status="PASS" starttime="20200402 12:52:51.905" endtime="20200402 12:52:51.906"></status>
</kw>
<msg timestamp="20200402 12:52:51.906" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8rNllqakd...</msg>
<status status="PASS" starttime="20200402 12:52:51.705" endtime="20200402 12:52:51.906"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:51.908" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:51.907" endtime="20200402 12:52:51.908"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:51.909" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:51.908" endtime="20200402 12:52:51.909"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:51.909" endtime="20200402 12:52:51.909"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:51.910" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:51.910" endtime="20200402 12:52:51.910"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:51.910" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:52:53.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:51.910" endtime="20200402 12:52:53.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:53.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:53.495" endtime="20200402 12:52:53.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:52:53.496" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzQxS0RWVGVzK2VOMFdmV3ZaRTZLdFJjTjJrbThXc3hRWWZXUmc3eC9Zc0xwSVRsZFp1cSszdTBsdVI1VkNDMTJWSFJuY1R2TmdMTkVKKzkrV0VzQ2M9IiwibmJmIjoxNTg1ODEyMTcwLCJleHAiOjE1ODU4MTIyMzAsImlhdCI6MTU4NTgxMjE3MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.YfM3iYp2KBzebCVP-AGDS6wwwo2N9fgBHVEn7IpXatE</msg>
<status status="PASS" starttime="20200402 12:52:53.496" endtime="20200402 12:52:53.496"></status>
</kw>
<msg timestamp="20200402 12:52:53.497" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzQxS0RWVGVzK2VOMFdmV3ZaRTZLdFJjTjJrbThXc3h...</msg>
<status status="PASS" starttime="20200402 12:52:51.907" endtime="20200402 12:52:53.497"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:52:53.498" level="INFO">${Id} = 67452961791208</msg>
<status status="PASS" starttime="20200402 12:52:53.497" endtime="20200402 12:52:53.498"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:52:53.498" level="INFO">${IdNumber} = 67452961791208</msg>
<status status="PASS" starttime="20200402 12:52:53.498" endtime="20200402 12:52:53.498"></status>
</kw>
<msg timestamp="20200402 12:52:53.499" level="INFO">${idNum} = 67452961791208</msg>
<status status="PASS" starttime="20200402 12:52:53.497" endtime="20200402 12:52:53.499"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:52:53.500" level="INFO">${mobile} = 2571431140</msg>
<status status="PASS" starttime="20200402 12:52:53.499" endtime="20200402 12:52:53.500"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:52:53.500" level="INFO">${mobileNo} = 2571431140</msg>
<status status="PASS" starttime="20200402 12:52:53.500" endtime="20200402 12:52:53.500"></status>
</kw>
<msg timestamp="20200402 12:52:53.500" level="INFO">${MobNo} = 2571431140</msg>
<status status="PASS" starttime="20200402 12:52:53.499" endtime="20200402 12:52:53.500"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:52:53.502" level="INFO">${Emailnum} = 06665</msg>
<status status="PASS" starttime="20200402 12:52:53.501" endtime="20200402 12:52:53.502"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:52:53.502" level="INFO">${enum} = 06665</msg>
<status status="PASS" starttime="20200402 12:52:53.502" endtime="20200402 12:52:53.502"></status>
</kw>
<msg timestamp="20200402 12:52:53.502" level="INFO">${num} = 06665</msg>
<status status="PASS" starttime="20200402 12:52:53.501" endtime="20200402 12:52:53.503"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:52:53.503" level="INFO">${emailid} = pavan06665@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:53.503" endtime="20200402 12:52:53.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:52:53.504" level="INFO">${email} = pavan06665@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:53.503" endtime="20200402 12:52:53.504"></status>
</kw>
<msg timestamp="20200402 12:52:53.504" level="INFO">${emailid} = pavan06665@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:52:53.501" endtime="20200402 12:52:53.504"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:53.506" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:53.506" endtime="20200402 12:52:53.507"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:52:53.507" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:52:53.507" endtime="20200402 12:52:53.507"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:53.508" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:53.507" endtime="20200402 12:52:53.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:52:53.509" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:53.508" endtime="20200402 12:52:53.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:52:53.511" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:52:53.509" endtime="20200402 12:52:53.511"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:53.513" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '67452961791208', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2571431140', 'email': 'pavan06665@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:52:53.511" endtime="20200402 12:52:53.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:53.513" endtime="20200402 12:52:53.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:53.515" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzQxS0RWVGVzK2VOMFdmV3ZaRTZLdFJjTjJr...</msg>
<status status="PASS" starttime="20200402 12:52:53.515" endtime="20200402 12:52:53.515"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:53.516" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:53.516" endtime="20200402 12:52:53.516"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:53.518" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzQxS0RWVGVzK2VOMFdmV3ZaRTZLdFJjTjJrbThXc3hRWWZXUmc3eC9Zc0xwSVRsZFp1cSszdTBsdVI1VkNDMTJWSFJuY1R2TmdMTkVKKzkrV0VzQ2M9IiwibmJmIjoxNTg1ODEyMTcwLCJleHAiOjE1ODU4MTIyMzAsImlhdCI6MTU4NTgxMjE3MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.YfM3iYp2KBzebCVP-AGDS6wwwo2N9fgBHVEn7IpXatE'} 
data={"escrowCompanyId": "001", "idNumber": "67452961791208", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2571431140", "email": "pavan06665@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:52:53.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:53.517" endtime="20200402 12:52:53.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:53.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:53.811" endtime="20200402 12:52:53.811"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:53.811" endtime="20200402 12:52:53.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:53.812" endtime="20200402 12:52:53.812"></status>
</kw>
<msg timestamp="20200402 12:52:53.813" level="INFO">${sellerid} = 87ad56ab-89fb-4a53-980e-f29669839610</msg>
<status status="PASS" starttime="20200402 12:52:53.504" endtime="20200402 12:52:53.813"></status>
</kw>
<msg timestamp="20200402 12:52:53.813" level="INFO">${SellerId} = 87ad56ab-89fb-4a53-980e-f29669839610</msg>
<msg timestamp="20200402 12:52:53.813" level="INFO">${idnumber} = 67452961791208</msg>
<status status="PASS" starttime="20200402 12:52:51.907" endtime="20200402 12:52:53.813"></status>
</kw>
<kw name="UpdateSellerDetails titleLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{titleLocal_more_50}</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:53.815" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:53.814" endtime="20200402 12:52:53.815"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:52:53.816" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:52:53.815" endtime="20200402 12:52:53.816"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>titleLocal=${titleLocal }</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:53.817" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '87ad56ab-89fb-4a53-980e-f29669839610', 'titleLocal': 'THdghdgdgdgdgdgdgdgdgdgdgdgdgdgddggggggggggggggggggggggssssssssssssssssfffffffffffffccccccccccccccccccvvvv...</msg>
<status status="PASS" starttime="20200402 12:52:53.816" endtime="20200402 12:52:53.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:53.817" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8r...</msg>
<status status="PASS" starttime="20200402 12:52:53.817" endtime="20200402 12:52:53.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:53.818" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:53.817" endtime="20200402 12:52:53.818"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:53.818" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8rNllqakduMlBLd1lDVUdpTmVKeUExZlA4djFIOXBnVHhrR1lEc1BqdXBWNFVXZWhSM29oY0Z3YlVXQXM9IiwibmJmIjoxNTg1ODEyMTY5LCJleHAiOjE1ODU4MTIyMjksImlhdCI6MTU4NTgxMjE2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9ZBQxsw3xyqT1tsFURER1-LGkaa2JwEail7pvtALQbQ'} 
data={"escrowCompanyId": "001", "SELLERId": "87ad56ab-89fb-4a53-980e-f29669839610", "titleLocal": "THdghdgdgdgdgdgdgdgdgdgdgdgdgdgddggggggggggggggggggggggssssssssssssssssfffffffffffffccccccccccccccccccvvvvvvvvv", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:52:54.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:53.818" endtime="20200402 12:52:54.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:54.327" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:52:54.326" endtime="20200402 12:52:54.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:54.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:54.328" endtime="20200402 12:52:54.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:54.329" endtime="20200402 12:52:54.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:54.330" endtime="20200402 12:52:54.330"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:53.814" endtime="20200402 12:52:54.331"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:52:54.332" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:54.332" endtime="20200402 12:52:54.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:52:54.333" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '87ad56ab-89fb-4a53-980e-f29669839610'}</msg>
<status status="PASS" starttime="20200402 12:52:54.333" endtime="20200402 12:52:54.333"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:52:54.334" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8r...</msg>
<status status="PASS" starttime="20200402 12:52:54.333" endtime="20200402 12:52:54.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:54.334" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:52:54.334" endtime="20200402 12:52:54.334"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:54.335" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0c5MmNpRTlTWHlueG5rckd2QldudnhwYk8rNllqakduMlBLd1lDVUdpTmVKeUExZlA4djFIOXBnVHhrR1lEc1BqdXBWNFVXZWhSM29oY0Z3YlVXQXM9IiwibmJmIjoxNTg1ODEyMTY5LCJleHAiOjE1ODU4MTIyMjksImlhdCI6MTU4NTgxMjE2OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9ZBQxsw3xyqT1tsFURER1-LGkaa2JwEail7pvtALQbQ'} 
data={"escrowCompanyId": "001", "sellerID": "87ad56ab-89fb-4a53-980e-f29669839610"} 
json=None</msg>
<msg timestamp="20200402 12:52:55.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:54.335" endtime="20200402 12:52:55.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:52:55.974" level="INFO">{"escrowCompanyId":"001","sellerId":"87ad56ab-89fb-4a53-980e-f29669839610","idNumber":"67452961791208","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2571431140","email":"pavan06665@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:51","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:52:55.973" endtime="20200402 12:52:55.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:52:55.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:52:55.975" endtime="20200402 12:52:55.975"></status>
</kw>
<status status="PASS" starttime="20200402 12:52:54.331" endtime="20200402 12:52:55.975"></status>
</kw>
<doc>Invalid: To Verify response if titleEn parameter is entered more than size 5 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:48.700" endtime="20200402 12:52:55.976" critical="yes"></status>
</test>
<test id="s1-t59" name="TC_70 Selle_Details_API Valid firstNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:52:58.979" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:52:55.979" endtime="20200402 12:52:58.979"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:52:58.981" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:52:58.980" endtime="20200402 12:52:58.981"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:52:58.982" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:52:58.981" endtime="20200402 12:52:58.982"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:52:58.982" endtime="20200402 12:52:58.983"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:52:58.983" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:52:58.983" endtime="20200402 12:52:58.983"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:52:58.984" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:00.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:52:58.983" endtime="20200402 12:53:00.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:00.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:00.658" endtime="20200402 12:53:00.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.660" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBCOVZtOHRVbTMwZ3BCMnViQWRlOW1jejRQeEN1cFZGOUNaNFdBb3NrR0lwNnZjMDNjdkV1aUxQU0NkU0k9IiwibmJmIjoxNTg1ODEyMTc4LCJleHAiOjE1ODU4MTIyMzgsImlhdCI6MTU4NTgxMjE3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vjmJjHLW_Y7vlOUfvzZT7z2uUzjbZOiEZY5LXmRX6Uk</msg>
<status status="PASS" starttime="20200402 12:53:00.659" endtime="20200402 12:53:00.660"></status>
</kw>
<msg timestamp="20200402 12:53:00.661" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBCOVZtOHR...</msg>
<status status="PASS" starttime="20200402 12:52:58.980" endtime="20200402 12:53:00.661"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.664" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:00.663" endtime="20200402 12:53:00.664"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:00.665" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:00.665" endtime="20200402 12:53:00.665"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:00.666" endtime="20200402 12:53:00.666"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:00.667" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:00.667" endtime="20200402 12:53:00.667"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:00.669" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:00.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:00.668" endtime="20200402 12:53:00.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:00.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:00.906" endtime="20200402 12:53:00.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.907" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemtuM2ZZN0tCa1EvRGZGL2JSZ2R1TWZBU3pYMFlZc2JqQ2NYa2dtaC91bXJZWmxmdUx2ek04eWhGWXJVN0JhbzAyZjZreEdUeXhqUjV0M3l3Qm10ekE9IiwibmJmIjoxNTg1ODEyMTc4LCJleHAiOjE1ODU4MTIyMzgsImlhdCI6MTU4NTgxMjE3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eJz6NrcYFHLd4_rGD6AeSuTYyGxIyfNLFpSWyxTlye8</msg>
<status status="PASS" starttime="20200402 12:53:00.907" endtime="20200402 12:53:00.907"></status>
</kw>
<msg timestamp="20200402 12:53:00.908" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemtuM2ZZN0tCa1EvRGZGL2JSZ2R1TWZBU3pYMFlZc2J...</msg>
<status status="PASS" starttime="20200402 12:53:00.662" endtime="20200402 12:53:00.908"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:00.909" level="INFO">${Id} = 76629970217934</msg>
<status status="PASS" starttime="20200402 12:53:00.909" endtime="20200402 12:53:00.909"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.910" level="INFO">${IdNumber} = 76629970217934</msg>
<status status="PASS" starttime="20200402 12:53:00.909" endtime="20200402 12:53:00.910"></status>
</kw>
<msg timestamp="20200402 12:53:00.910" level="INFO">${idNum} = 76629970217934</msg>
<status status="PASS" starttime="20200402 12:53:00.908" endtime="20200402 12:53:00.910"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:00.911" level="INFO">${mobile} = 8052160954</msg>
<status status="PASS" starttime="20200402 12:53:00.911" endtime="20200402 12:53:00.912"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.912" level="INFO">${mobileNo} = 8052160954</msg>
<status status="PASS" starttime="20200402 12:53:00.912" endtime="20200402 12:53:00.913"></status>
</kw>
<msg timestamp="20200402 12:53:00.913" level="INFO">${MobNo} = 8052160954</msg>
<status status="PASS" starttime="20200402 12:53:00.910" endtime="20200402 12:53:00.913"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:00.915" level="INFO">${Emailnum} = 15446</msg>
<status status="PASS" starttime="20200402 12:53:00.915" endtime="20200402 12:53:00.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.916" level="INFO">${enum} = 15446</msg>
<status status="PASS" starttime="20200402 12:53:00.916" endtime="20200402 12:53:00.916"></status>
</kw>
<msg timestamp="20200402 12:53:00.917" level="INFO">${num} = 15446</msg>
<status status="PASS" starttime="20200402 12:53:00.914" endtime="20200402 12:53:00.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:00.918" level="INFO">${emailid} = pavan15446@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:00.917" endtime="20200402 12:53:00.918"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:00.919" level="INFO">${email} = pavan15446@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:00.918" endtime="20200402 12:53:00.919"></status>
</kw>
<msg timestamp="20200402 12:53:00.919" level="INFO">${emailid} = pavan15446@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:00.913" endtime="20200402 12:53:00.919"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:00.924" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:00.923" endtime="20200402 12:53:00.924"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:00.925" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:00.925" endtime="20200402 12:53:00.925"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:00.926" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:00.925" endtime="20200402 12:53:00.926"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:00.928" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:00.926" endtime="20200402 12:53:00.928"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:00.930" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:00.928" endtime="20200402 12:53:00.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:00.934" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '76629970217934', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8052160954', 'email': 'pavan15446@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:00.931" endtime="20200402 12:53:00.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:00.934" endtime="20200402 12:53:00.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:00.936" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemtuM2ZZN0tCa1EvRGZGL2JSZ2R1TWZBU3pY...</msg>
<status status="PASS" starttime="20200402 12:53:00.935" endtime="20200402 12:53:00.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:00.937" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:00.936" endtime="20200402 12:53:00.937"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:00.939" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemtuM2ZZN0tCa1EvRGZGL2JSZ2R1TWZBU3pYMFlZc2JqQ2NYa2dtaC91bXJZWmxmdUx2ek04eWhGWXJVN0JhbzAyZjZreEdUeXhqUjV0M3l3Qm10ekE9IiwibmJmIjoxNTg1ODEyMTc4LCJleHAiOjE1ODU4MTIyMzgsImlhdCI6MTU4NTgxMjE3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eJz6NrcYFHLd4_rGD6AeSuTYyGxIyfNLFpSWyxTlye8'} 
data={"escrowCompanyId": "001", "idNumber": "76629970217934", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8052160954", "email": "pavan15446@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:01.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:00.938" endtime="20200402 12:53:01.243"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:01.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:01.243" endtime="20200402 12:53:01.244"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:01.244" endtime="20200402 12:53:01.245"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:01.245" endtime="20200402 12:53:01.246"></status>
</kw>
<msg timestamp="20200402 12:53:01.246" level="INFO">${sellerid} = 62645c4d-77ec-4ff9-91cb-3a240620e15f</msg>
<status status="PASS" starttime="20200402 12:53:00.920" endtime="20200402 12:53:01.246"></status>
</kw>
<msg timestamp="20200402 12:53:01.246" level="INFO">${SellerId} = 62645c4d-77ec-4ff9-91cb-3a240620e15f</msg>
<msg timestamp="20200402 12:53:01.246" level="INFO">${idnumber} = 76629970217934</msg>
<status status="PASS" starttime="20200402 12:53:00.662" endtime="20200402 12:53:01.246"></status>
</kw>
<kw name="UpdateSellerDetails firstNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameLocal}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:01.248" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:01.248" endtime="20200402 12:53:01.248"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:01.249" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:01.248" endtime="20200402 12:53:01.249"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:01.250" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '62645c4d-77ec-4ff9-91cb-3a240620e15f', 'firstNameLocal': 'pavan', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:53:01.249" endtime="20200402 12:53:01.250"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:01.250" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBC...</msg>
<status status="PASS" starttime="20200402 12:53:01.250" endtime="20200402 12:53:01.250"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:01.251" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:01.250" endtime="20200402 12:53:01.251"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:01.251" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBCOVZtOHRVbTMwZ3BCMnViQWRlOW1jejRQeEN1cFZGOUNaNFdBb3NrR0lwNnZjMDNjdkV1aUxQU0NkU0k9IiwibmJmIjoxNTg1ODEyMTc4LCJleHAiOjE1ODU4MTIyMzgsImlhdCI6MTU4NTgxMjE3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vjmJjHLW_Y7vlOUfvzZT7z2uUzjbZOiEZY5LXmRX6Uk'} 
data={"escrowCompanyId": "001", "SELLERId": "62645c4d-77ec-4ff9-91cb-3a240620e15f", "firstNameLocal": "pavan", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:53:01.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:01.251" endtime="20200402 12:53:01.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:01.795" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:01.794" endtime="20200402 12:53:01.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:01.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:01.796" endtime="20200402 12:53:01.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:01.796" endtime="20200402 12:53:01.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:01.797" endtime="20200402 12:53:01.798"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:01.247" endtime="20200402 12:53:01.798"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:01.799" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:01.799" endtime="20200402 12:53:01.800"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:01.801" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '62645c4d-77ec-4ff9-91cb-3a240620e15f'}</msg>
<status status="PASS" starttime="20200402 12:53:01.800" endtime="20200402 12:53:01.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:01.801" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBC...</msg>
<status status="PASS" starttime="20200402 12:53:01.801" endtime="20200402 12:53:01.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:01.802" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:01.802" endtime="20200402 12:53:01.802"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:01.803" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmZBMTRLV3VjWHNhUUpkM0s4WktYZThqeHBCOVZtOHRVbTMwZ3BCMnViQWRlOW1jejRQeEN1cFZGOUNaNFdBb3NrR0lwNnZjMDNjdkV1aUxQU0NkU0k9IiwibmJmIjoxNTg1ODEyMTc4LCJleHAiOjE1ODU4MTIyMzgsImlhdCI6MTU4NTgxMjE3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vjmJjHLW_Y7vlOUfvzZT7z2uUzjbZOiEZY5LXmRX6Uk'} 
data={"escrowCompanyId": "001", "sellerID": "62645c4d-77ec-4ff9-91cb-3a240620e15f"} 
json=None</msg>
<msg timestamp="20200402 12:53:02.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:01.802" endtime="20200402 12:53:02.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:02.424" level="INFO">{"escrowCompanyId":"001","sellerId":"62645c4d-77ec-4ff9-91cb-3a240620e15f","idNumber":"76629970217934","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8052160954","email":"pavan15446@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"pavan","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:22:58","updateDate":"02/04/2020 02:22:59","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:02.424" endtime="20200402 12:53:02.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:02.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:02.425" endtime="20200402 12:53:02.425"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:01.798" endtime="20200402 12:53:02.426"></status>
</kw>
<doc>Valid : To Verify response if we enter valid firstNameLocal and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:52:55.977" endtime="20200402 12:53:02.426" critical="yes"></status>
</test>
<test id="s1-t60" name="TC_71 Selle_Details_API valid firstNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:53:05.430" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:02.429" endtime="20200402 12:53:05.430"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:05.431" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:05.431" endtime="20200402 12:53:05.432"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:05.432" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:05.432" endtime="20200402 12:53:05.432"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:05.433" endtime="20200402 12:53:05.433"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:05.433" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:05.433" endtime="20200402 12:53:05.433"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:05.434" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:05.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:05.434" endtime="20200402 12:53:05.653"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:05.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:05.654" endtime="20200402 12:53:05.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:05.656" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6bFBTd3JEa1I0MTc0MjhHZzZOZGEwUEpRa1FQT2xpTjhLSUswdEIwZ1V3bW1RWWZoTEJSN25DSHR3dGM9IiwibmJmIjoxNTg1ODEyMTgzLCJleHAiOjE1ODU4MTIyNDMsImlhdCI6MTU4NTgxMjE4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Cxki26MQkdGQNJq9o069wO_5afQGDP374rC-TepJU30</msg>
<status status="PASS" starttime="20200402 12:53:05.655" endtime="20200402 12:53:05.656"></status>
</kw>
<msg timestamp="20200402 12:53:05.656" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6bFBTd3J...</msg>
<status status="PASS" starttime="20200402 12:53:05.431" endtime="20200402 12:53:05.656"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:05.658" level="INFO">${Id} = 06085756927685</msg>
<status status="PASS" starttime="20200402 12:53:05.658" endtime="20200402 12:53:05.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:05.660" level="INFO">${IdNumber} = 06085756927685</msg>
<status status="PASS" starttime="20200402 12:53:05.659" endtime="20200402 12:53:05.660"></status>
</kw>
<msg timestamp="20200402 12:53:05.660" level="INFO">${idNum} = 06085756927685</msg>
<status status="PASS" starttime="20200402 12:53:05.657" endtime="20200402 12:53:05.660"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:05.662" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:05.662" endtime="20200402 12:53:05.663"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:05.664" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:05.663" endtime="20200402 12:53:05.664"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:05.664" endtime="20200402 12:53:05.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:05.666" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:05.665" endtime="20200402 12:53:05.666"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:05.667" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:06.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:05.666" endtime="20200402 12:53:06.286"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:06.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:06.287" endtime="20200402 12:53:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:06.288" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhRWU5xM0hIMTJyMEcyaGU2U3FBUjFqTjBSZ1I1MmJ0d00wZDVHZnFmOE1OdStZcDNUNUFzc2pZKy9jMjNVNjhXSjdwTTJ5WkV0VHJtMjQ4UFFyZWc9IiwibmJmIjoxNTg1ODEyMTgzLCJleHAiOjE1ODU4MTIyNDMsImlhdCI6MTU4NTgxMjE4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ieTWkkmXZsCsRbnN5_60h9WYfEgwJrobhuKcOt3zzmI</msg>
<status status="PASS" starttime="20200402 12:53:06.287" endtime="20200402 12:53:06.288"></status>
</kw>
<msg timestamp="20200402 12:53:06.288" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhRWU5xM0hIMTJyMEcyaGU2U3FBUjFqTjBSZ1I1MmJ...</msg>
<status status="PASS" starttime="20200402 12:53:05.661" endtime="20200402 12:53:06.288"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:06.289" level="INFO">${Id} = 10974541837541</msg>
<status status="PASS" starttime="20200402 12:53:06.289" endtime="20200402 12:53:06.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:06.290" level="INFO">${IdNumber} = 10974541837541</msg>
<status status="PASS" starttime="20200402 12:53:06.290" endtime="20200402 12:53:06.290"></status>
</kw>
<msg timestamp="20200402 12:53:06.291" level="INFO">${idNum} = 10974541837541</msg>
<status status="PASS" starttime="20200402 12:53:06.288" endtime="20200402 12:53:06.291"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:06.292" level="INFO">${mobile} = 5212662984</msg>
<status status="PASS" starttime="20200402 12:53:06.291" endtime="20200402 12:53:06.292"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:06.292" level="INFO">${mobileNo} = 5212662984</msg>
<status status="PASS" starttime="20200402 12:53:06.292" endtime="20200402 12:53:06.292"></status>
</kw>
<msg timestamp="20200402 12:53:06.293" level="INFO">${MobNo} = 5212662984</msg>
<status status="PASS" starttime="20200402 12:53:06.291" endtime="20200402 12:53:06.293"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:06.294" level="INFO">${Emailnum} = 12220</msg>
<status status="PASS" starttime="20200402 12:53:06.294" endtime="20200402 12:53:06.295"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:06.295" level="INFO">${enum} = 12220</msg>
<status status="PASS" starttime="20200402 12:53:06.295" endtime="20200402 12:53:06.295"></status>
</kw>
<msg timestamp="20200402 12:53:06.296" level="INFO">${num} = 12220</msg>
<status status="PASS" starttime="20200402 12:53:06.293" endtime="20200402 12:53:06.296"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:06.296" level="INFO">${emailid} = pavan12220@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:06.296" endtime="20200402 12:53:06.296"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:06.297" level="INFO">${email} = pavan12220@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:06.296" endtime="20200402 12:53:06.297"></status>
</kw>
<msg timestamp="20200402 12:53:06.297" level="INFO">${emailid} = pavan12220@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:06.293" endtime="20200402 12:53:06.297"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:06.300" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:06.300" endtime="20200402 12:53:06.300"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:06.301" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:06.301" endtime="20200402 12:53:06.301"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:06.302" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:06.301" endtime="20200402 12:53:06.302"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:06.304" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:06.302" endtime="20200402 12:53:06.304"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:06.305" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:06.304" endtime="20200402 12:53:06.305"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:06.308" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '10974541837541', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5212662984', 'email': 'pavan12220@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:06.305" endtime="20200402 12:53:06.308"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:06.308" endtime="20200402 12:53:06.309"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:06.309" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhRWU5xM0hIMTJyMEcyaGU2U3FBUjFqTjBS...</msg>
<status status="PASS" starttime="20200402 12:53:06.309" endtime="20200402 12:53:06.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:06.310" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:06.310" endtime="20200402 12:53:06.310"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:06.311" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNVhRWU5xM0hIMTJyMEcyaGU2U3FBUjFqTjBSZ1I1MmJ0d00wZDVHZnFmOE1OdStZcDNUNUFzc2pZKy9jMjNVNjhXSjdwTTJ5WkV0VHJtMjQ4UFFyZWc9IiwibmJmIjoxNTg1ODEyMTgzLCJleHAiOjE1ODU4MTIyNDMsImlhdCI6MTU4NTgxMjE4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ieTWkkmXZsCsRbnN5_60h9WYfEgwJrobhuKcOt3zzmI'} 
data={"escrowCompanyId": "001", "idNumber": "10974541837541", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5212662984", "email": "pavan12220@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:27.315" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x04D14550&gt;: Failed to establish a new connection: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond')': /escrow_core/api/v1/seller/register</msg>
<msg timestamp="20200402 12:53:27.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:06.311" endtime="20200402 12:53:27.549"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:27.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:27.549" endtime="20200402 12:53:27.550"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:27.550" endtime="20200402 12:53:27.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:27.551" endtime="20200402 12:53:27.551"></status>
</kw>
<msg timestamp="20200402 12:53:27.552" level="INFO">${sellerid} = 8c0803a8-b1c2-4538-976f-66920a5d71c0</msg>
<status status="PASS" starttime="20200402 12:53:06.297" endtime="20200402 12:53:27.552"></status>
</kw>
<msg timestamp="20200402 12:53:27.552" level="INFO">${SellerId} = 8c0803a8-b1c2-4538-976f-66920a5d71c0</msg>
<msg timestamp="20200402 12:53:27.552" level="INFO">${idnumber} = 10974541837541</msg>
<status status="PASS" starttime="20200402 12:53:05.661" endtime="20200402 12:53:27.552"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:27.554" level="INFO">${Emailnum} = 62559</msg>
<status status="PASS" starttime="20200402 12:53:27.553" endtime="20200402 12:53:27.554"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:27.554" level="INFO">${enum} = 62559</msg>
<status status="PASS" starttime="20200402 12:53:27.554" endtime="20200402 12:53:27.554"></status>
</kw>
<msg timestamp="20200402 12:53:27.555" level="INFO">${num} = 62559</msg>
<status status="PASS" starttime="20200402 12:53:27.553" endtime="20200402 12:53:27.555"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:27.555" level="INFO">${emailid} = pavan62559@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:27.555" endtime="20200402 12:53:27.555"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:27.556" level="INFO">${email} = pavan62559@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:27.555" endtime="20200402 12:53:27.556"></status>
</kw>
<msg timestamp="20200402 12:53:27.556" level="INFO">${emailid} = pavan62559@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:27.553" endtime="20200402 12:53:27.556"></status>
</kw>
<kw name="UpdateSellerDetails Valid data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>${EMPTY}</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${1}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:27.558" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:27.558" endtime="20200402 12:53:27.558"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:27.559" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:53:27.558" endtime="20200402 12:53:27.559"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:27.559" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:53:27.559" endtime="20200402 12:53:27.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:27.561" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '8c0803a8-b1c2-4538-976f-66920a5d71c0', 'idNumber': '06085756927685', 'firstNameLocal': '', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '08/03/1992', 'otherVerific...</msg>
<status status="PASS" starttime="20200402 12:53:27.560" endtime="20200402 12:53:27.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:27.561" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6...</msg>
<status status="PASS" starttime="20200402 12:53:27.561" endtime="20200402 12:53:27.561"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:27.562" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:27.561" endtime="20200402 12:53:27.562"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:27.563" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6bFBTd3JEa1I0MTc0MjhHZzZOZGEwUEpRa1FQT2xpTjhLSUswdEIwZ1V3bW1RWWZoTEJSN25DSHR3dGM9IiwibmJmIjoxNTg1ODEyMTgzLCJleHAiOjE1ODU4MTIyNDMsImlhdCI6MTU4NTgxMjE4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Cxki26MQkdGQNJq9o069wO_5afQGDP374rC-TepJU30'} 
data={"escrowCompanyId": "001", "SELLERId": "8c0803a8-b1c2-4538-976f-66920a5d71c0", "idNumber": "06085756927685", "firstNameLocal": "", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "08/03/1992", "otherVerification": "AB12311678919", "typeOfID": 1, "kycRequest": 1, "email": "pavan62559@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:53:28.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:27.562" endtime="20200402 12:53:28.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:28.059" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:53:28.059" endtime="20200402 12:53:28.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:28.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:28.060" endtime="20200402 12:53:28.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:28.061" endtime="20200402 12:53:28.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:28.061" endtime="20200402 12:53:28.062"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:27.556" endtime="20200402 12:53:28.062"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:28.063" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:28.063" endtime="20200402 12:53:28.064"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:28.064" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '8c0803a8-b1c2-4538-976f-66920a5d71c0'}</msg>
<status status="PASS" starttime="20200402 12:53:28.064" endtime="20200402 12:53:28.064"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:28.065" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6...</msg>
<status status="PASS" starttime="20200402 12:53:28.065" endtime="20200402 12:53:28.065"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:28.066" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:28.065" endtime="20200402 12:53:28.066"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:28.066" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM29RcnlOeGtmWDJibU90SldRUzQ2UEIwcTV6bFBTd3JEa1I0MTc0MjhHZzZOZGEwUEpRa1FQT2xpTjhLSUswdEIwZ1V3bW1RWWZoTEJSN25DSHR3dGM9IiwibmJmIjoxNTg1ODEyMTgzLCJleHAiOjE1ODU4MTIyNDMsImlhdCI6MTU4NTgxMjE4MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Cxki26MQkdGQNJq9o069wO_5afQGDP374rC-TepJU30'} 
data={"escrowCompanyId": "001", "sellerID": "8c0803a8-b1c2-4538-976f-66920a5d71c0"} 
json=None</msg>
<msg timestamp="20200402 12:53:29.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:28.066" endtime="20200402 12:53:29.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:29.230" level="INFO">{"escrowCompanyId":"001","sellerId":"8c0803a8-b1c2-4538-976f-66920a5d71c0","idNumber":"10974541837541","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5212662984","email":"pavan12220@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:23:25","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:29.229" endtime="20200402 12:53:29.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:29.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:29.231" endtime="20200402 12:53:29.232"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:28.062" endtime="20200402 12:53:29.232"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter firstNameLocal and request is sent with all mandatory fields with KYCRequest=1</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:02.428" endtime="20200402 12:53:29.233" critical="yes"></status>
</test>
<test id="s1-t61" name="TC_72 Selle_Details_API EMPTY firstNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:53:32.237" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:29.235" endtime="20200402 12:53:32.237"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:32.239" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:32.238" endtime="20200402 12:53:32.239"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:32.239" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:32.239" endtime="20200402 12:53:32.240"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:32.240" endtime="20200402 12:53:32.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:32.241" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:32.240" endtime="20200402 12:53:32.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:32.241" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:32.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:32.241" endtime="20200402 12:53:32.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:32.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:32.736" endtime="20200402 12:53:32.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:32.737" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdmU254ZmRWNGdIWmVxNHBNVVg3SWhabmw2clcxZmNuYStKaFhBWWswRkx5eTdpaDZVM25OM3VVWitxL1U9IiwibmJmIjoxNTg1ODEyMjEwLCJleHAiOjE1ODU4MTIyNzAsImlhdCI6MTU4NTgxMjIxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J8Dj1zYNwlgtgDdVnmpnbwi1Up7L6rIVm6b7fKXvIaM</msg>
<status status="PASS" starttime="20200402 12:53:32.736" endtime="20200402 12:53:32.737"></status>
</kw>
<msg timestamp="20200402 12:53:32.737" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdmU254ZmR...</msg>
<status status="PASS" starttime="20200402 12:53:32.238" endtime="20200402 12:53:32.737"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:32.739" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:32.738" endtime="20200402 12:53:32.739"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:32.740" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:32.739" endtime="20200402 12:53:32.740"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:32.740" endtime="20200402 12:53:32.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:32.741" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:32.741" endtime="20200402 12:53:32.741"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:32.742" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:36.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:32.741" endtime="20200402 12:53:36.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:36.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:36.273" endtime="20200402 12:53:36.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:36.274" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOG9kcFdiOGRuMlY3NFpHMElUcWFEK2JmbTNzbnNMMHQyMGxPNGtwYVYzNjlhaXBrZ3hZNVh2NHNKazlobG9wUFRkT1o0VkJaYlhYclIxRkM1YndqaHc9IiwibmJmIjoxNTg1ODEyMjEzLCJleHAiOjE1ODU4MTIyNzMsImlhdCI6MTU4NTgxMjIxMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xko_-dfPoo3zU5Ki29FOkiEoY-qWyfdkGm7smPCqXlA</msg>
<status status="PASS" starttime="20200402 12:53:36.274" endtime="20200402 12:53:36.274"></status>
</kw>
<msg timestamp="20200402 12:53:36.274" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOG9kcFdiOGRuMlY3NFpHMElUcWFEK2JmbTNzbnNMMHQ...</msg>
<status status="PASS" starttime="20200402 12:53:32.738" endtime="20200402 12:53:36.274"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:36.275" level="INFO">${Id} = 65839853279497</msg>
<status status="PASS" starttime="20200402 12:53:36.275" endtime="20200402 12:53:36.275"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:36.276" level="INFO">${IdNumber} = 65839853279497</msg>
<status status="PASS" starttime="20200402 12:53:36.276" endtime="20200402 12:53:36.276"></status>
</kw>
<msg timestamp="20200402 12:53:36.276" level="INFO">${idNum} = 65839853279497</msg>
<status status="PASS" starttime="20200402 12:53:36.275" endtime="20200402 12:53:36.276"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:36.277" level="INFO">${mobile} = 7385628306</msg>
<status status="PASS" starttime="20200402 12:53:36.277" endtime="20200402 12:53:36.277"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:36.278" level="INFO">${mobileNo} = 7385628306</msg>
<status status="PASS" starttime="20200402 12:53:36.277" endtime="20200402 12:53:36.278"></status>
</kw>
<msg timestamp="20200402 12:53:36.278" level="INFO">${MobNo} = 7385628306</msg>
<status status="PASS" starttime="20200402 12:53:36.276" endtime="20200402 12:53:36.278"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:36.280" level="INFO">${Emailnum} = 92171</msg>
<status status="PASS" starttime="20200402 12:53:36.280" endtime="20200402 12:53:36.280"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:36.281" level="INFO">${enum} = 92171</msg>
<status status="PASS" starttime="20200402 12:53:36.280" endtime="20200402 12:53:36.281"></status>
</kw>
<msg timestamp="20200402 12:53:36.281" level="INFO">${num} = 92171</msg>
<status status="PASS" starttime="20200402 12:53:36.279" endtime="20200402 12:53:36.281"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:36.281" level="INFO">${emailid} = pavan92171@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:36.281" endtime="20200402 12:53:36.281"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:36.282" level="INFO">${email} = pavan92171@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:36.282" endtime="20200402 12:53:36.282"></status>
</kw>
<msg timestamp="20200402 12:53:36.282" level="INFO">${emailid} = pavan92171@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:36.279" endtime="20200402 12:53:36.283"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:36.285" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:36.285" endtime="20200402 12:53:36.285"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:36.286" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:36.286" endtime="20200402 12:53:36.286"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:36.287" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:36.286" endtime="20200402 12:53:36.287"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:36.288" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:36.287" endtime="20200402 12:53:36.288"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:36.290" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:36.289" endtime="20200402 12:53:36.290"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:36.292" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '65839853279497', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7385628306', 'email': 'pavan92171@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:36.290" endtime="20200402 12:53:36.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:36.293" endtime="20200402 12:53:36.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:36.294" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOG9kcFdiOGRuMlY3NFpHMElUcWFEK2JmbTNz...</msg>
<status status="PASS" starttime="20200402 12:53:36.294" endtime="20200402 12:53:36.294"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:36.295" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:36.294" endtime="20200402 12:53:36.295"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:36.296" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOG9kcFdiOGRuMlY3NFpHMElUcWFEK2JmbTNzbnNMMHQyMGxPNGtwYVYzNjlhaXBrZ3hZNVh2NHNKazlobG9wUFRkT1o0VkJaYlhYclIxRkM1YndqaHc9IiwibmJmIjoxNTg1ODEyMjEzLCJleHAiOjE1ODU4MTIyNzMsImlhdCI6MTU4NTgxMjIxMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.xko_-dfPoo3zU5Ki29FOkiEoY-qWyfdkGm7smPCqXlA'} 
data={"escrowCompanyId": "001", "idNumber": "65839853279497", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7385628306", "email": "pavan92171@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:36.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:36.295" endtime="20200402 12:53:36.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:36.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:36.566" endtime="20200402 12:53:36.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:36.567" endtime="20200402 12:53:36.568"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:36.568" endtime="20200402 12:53:36.569"></status>
</kw>
<msg timestamp="20200402 12:53:36.569" level="INFO">${sellerid} = ad660b56-f9e0-4032-ad7a-4bd975a0912c</msg>
<status status="PASS" starttime="20200402 12:53:36.283" endtime="20200402 12:53:36.570"></status>
</kw>
<msg timestamp="20200402 12:53:36.570" level="INFO">${SellerId} = ad660b56-f9e0-4032-ad7a-4bd975a0912c</msg>
<msg timestamp="20200402 12:53:36.570" level="INFO">${idnumber} = 65839853279497</msg>
<status status="PASS" starttime="20200402 12:53:32.738" endtime="20200402 12:53:36.570"></status>
</kw>
<kw name="UpdateSellerDetails firstNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:36.573" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:36.572" endtime="20200402 12:53:36.574"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:36.575" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:36.574" endtime="20200402 12:53:36.575"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:36.576" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'ad660b56-f9e0-4032-ad7a-4bd975a0912c', 'firstNameLocal': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:53:36.575" endtime="20200402 12:53:36.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:36.576" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdm...</msg>
<status status="PASS" starttime="20200402 12:53:36.576" endtime="20200402 12:53:36.576"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:36.577" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:36.577" endtime="20200402 12:53:36.577"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:36.578" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdmU254ZmRWNGdIWmVxNHBNVVg3SWhabmw2clcxZmNuYStKaFhBWWswRkx5eTdpaDZVM25OM3VVWitxL1U9IiwibmJmIjoxNTg1ODEyMjEwLCJleHAiOjE1ODU4MTIyNzAsImlhdCI6MTU4NTgxMjIxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J8Dj1zYNwlgtgDdVnmpnbwi1Up7L6rIVm6b7fKXvIaM'} 
data={"escrowCompanyId": "001", "SELLERId": "ad660b56-f9e0-4032-ad7a-4bd975a0912c", "firstNameLocal": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:53:37.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:36.578" endtime="20200402 12:53:37.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:37.090" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:37.089" endtime="20200402 12:53:37.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:37.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:37.090" endtime="20200402 12:53:37.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:37.091" endtime="20200402 12:53:37.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:37.092" endtime="20200402 12:53:37.092"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:36.571" endtime="20200402 12:53:37.092"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:37.094" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:37.094" endtime="20200402 12:53:37.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:37.095" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'ad660b56-f9e0-4032-ad7a-4bd975a0912c'}</msg>
<status status="PASS" starttime="20200402 12:53:37.094" endtime="20200402 12:53:37.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:37.095" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdm...</msg>
<status status="PASS" starttime="20200402 12:53:37.095" endtime="20200402 12:53:37.095"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:37.096" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:37.096" endtime="20200402 12:53:37.097"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:37.098" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL0Vpdk5HVjJBemdKNXRMSFM1TVV0VytRTGdmU254ZmRWNGdIWmVxNHBNVVg3SWhabmw2clcxZmNuYStKaFhBWWswRkx5eTdpaDZVM25OM3VVWitxL1U9IiwibmJmIjoxNTg1ODEyMjEwLCJleHAiOjE1ODU4MTIyNzAsImlhdCI6MTU4NTgxMjIxMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J8Dj1zYNwlgtgDdVnmpnbwi1Up7L6rIVm6b7fKXvIaM'} 
data={"escrowCompanyId": "001", "sellerID": "ad660b56-f9e0-4032-ad7a-4bd975a0912c"} 
json=None</msg>
<msg timestamp="20200402 12:53:37.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:37.097" endtime="20200402 12:53:37.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:37.571" level="INFO">{"escrowCompanyId":"001","sellerId":"ad660b56-f9e0-4032-ad7a-4bd975a0912c","idNumber":"65839853279497","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7385628306","email":"pavan92171@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:23:34","updateDate":"02/04/2020 02:23:34","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:37.571" endtime="20200402 12:53:37.572"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:37.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:37.572" endtime="20200402 12:53:37.573"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:37.093" endtime="20200402 12:53:37.573"></status>
</kw>
<doc>Valid : To Verify response if we enter valid firstNameLocal and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:29.234" endtime="20200402 12:53:37.574" critical="yes"></status>
</test>
<test id="s1-t62" name="TC_73 Selle_Details_API Invalid firstNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:53:40.578" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:37.577" endtime="20200402 12:53:40.578"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:40.579" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:40.579" endtime="20200402 12:53:40.580"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:40.581" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:40.581" endtime="20200402 12:53:40.581"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:40.581" endtime="20200402 12:53:40.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:40.582" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:40.582" endtime="20200402 12:53:40.582"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:40.583" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:44.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:40.582" endtime="20200402 12:53:44.071"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:44.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.072" endtime="20200402 12:53:44.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.073" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZYWlDYzVTM051b2Npa2RySzUzaVg3WmRGaXBFMUcwVXZtN1pMc3FzVmN0TzZKVzNYR09OWkl4S2JlWGM9IiwibmJmIjoxNTg1ODEyMjIxLCJleHAiOjE1ODU4MTIyODEsImlhdCI6MTU4NTgxMjIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8Elkxzm5bCZoHiXJrSfBFT5E-_E98a__DPg3uG7E0JQ</msg>
<status status="PASS" starttime="20200402 12:53:44.073" endtime="20200402 12:53:44.073"></status>
</kw>
<msg timestamp="20200402 12:53:44.074" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZYWlDYzV...</msg>
<status status="PASS" starttime="20200402 12:53:40.579" endtime="20200402 12:53:44.074"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.075" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:44.075" endtime="20200402 12:53:44.076"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:44.076" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:44.076" endtime="20200402 12:53:44.076"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:44.076" endtime="20200402 12:53:44.077"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:44.077" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:44.077" endtime="20200402 12:53:44.077"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:44.078" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:44.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.078" endtime="20200402 12:53:44.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:44.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.295" endtime="20200402 12:53:44.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.296" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qekw0MEs1cG5CZVg5WVdMTjRsVWhHcGpPSTQ0NVhKT2VFYnNMVnViUVpDZGdHeXFScGRwYmR2akt6T29EQURxQm1qcTR0TWhPK0FuaDhBR3J6Q3BzalE9IiwibmJmIjoxNTg1ODEyMjIxLCJleHAiOjE1ODU4MTIyODEsImlhdCI6MTU4NTgxMjIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6Srkr5CGql6Lr6MNEIkLXMgWhQwPGwmphFl8ozgMQH8</msg>
<status status="PASS" starttime="20200402 12:53:44.296" endtime="20200402 12:53:44.296"></status>
</kw>
<msg timestamp="20200402 12:53:44.297" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qekw0MEs1cG5CZVg5WVdMTjRsVWhHcGpPSTQ0NVhKT2V...</msg>
<status status="PASS" starttime="20200402 12:53:44.075" endtime="20200402 12:53:44.297"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:44.298" level="INFO">${Id} = 43796632825288</msg>
<status status="PASS" starttime="20200402 12:53:44.297" endtime="20200402 12:53:44.298"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.298" level="INFO">${IdNumber} = 43796632825288</msg>
<status status="PASS" starttime="20200402 12:53:44.298" endtime="20200402 12:53:44.298"></status>
</kw>
<msg timestamp="20200402 12:53:44.299" level="INFO">${idNum} = 43796632825288</msg>
<status status="PASS" starttime="20200402 12:53:44.297" endtime="20200402 12:53:44.299"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:44.300" level="INFO">${mobile} = 5452332261</msg>
<status status="PASS" starttime="20200402 12:53:44.299" endtime="20200402 12:53:44.300"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.300" level="INFO">${mobileNo} = 5452332261</msg>
<status status="PASS" starttime="20200402 12:53:44.300" endtime="20200402 12:53:44.300"></status>
</kw>
<msg timestamp="20200402 12:53:44.301" level="INFO">${MobNo} = 5452332261</msg>
<status status="PASS" starttime="20200402 12:53:44.299" endtime="20200402 12:53:44.301"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:44.302" level="INFO">${Emailnum} = 61207</msg>
<status status="PASS" starttime="20200402 12:53:44.302" endtime="20200402 12:53:44.302"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.302" level="INFO">${enum} = 61207</msg>
<status status="PASS" starttime="20200402 12:53:44.302" endtime="20200402 12:53:44.302"></status>
</kw>
<msg timestamp="20200402 12:53:44.303" level="INFO">${num} = 61207</msg>
<status status="PASS" starttime="20200402 12:53:44.301" endtime="20200402 12:53:44.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:44.303" level="INFO">${emailid} = pavan61207@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:44.303" endtime="20200402 12:53:44.303"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:44.304" level="INFO">${email} = pavan61207@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:44.303" endtime="20200402 12:53:44.304"></status>
</kw>
<msg timestamp="20200402 12:53:44.304" level="INFO">${emailid} = pavan61207@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:44.301" endtime="20200402 12:53:44.304"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:44.306" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:44.306" endtime="20200402 12:53:44.307"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:44.307" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:44.307" endtime="20200402 12:53:44.307"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:44.308" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:44.307" endtime="20200402 12:53:44.308"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:44.309" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:44.308" endtime="20200402 12:53:44.309"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:44.311" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:44.309" endtime="20200402 12:53:44.311"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:44.313" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '43796632825288', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5452332261', 'email': 'pavan61207@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:44.311" endtime="20200402 12:53:44.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:44.314" endtime="20200402 12:53:44.315"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:44.316" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qekw0MEs1cG5CZVg5WVdMTjRsVWhHcGpPSTQ0...</msg>
<status status="PASS" starttime="20200402 12:53:44.315" endtime="20200402 12:53:44.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:44.317" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:44.316" endtime="20200402 12:53:44.317"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:44.317" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qekw0MEs1cG5CZVg5WVdMTjRsVWhHcGpPSTQ0NVhKT2VFYnNMVnViUVpDZGdHeXFScGRwYmR2akt6T29EQURxQm1qcTR0TWhPK0FuaDhBR3J6Q3BzalE9IiwibmJmIjoxNTg1ODEyMjIxLCJleHAiOjE1ODU4MTIyODEsImlhdCI6MTU4NTgxMjIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6Srkr5CGql6Lr6MNEIkLXMgWhQwPGwmphFl8ozgMQH8'} 
data={"escrowCompanyId": "001", "idNumber": "43796632825288", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5452332261", "email": "pavan61207@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:44.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.317" endtime="20200402 12:53:44.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:44.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.570" endtime="20200402 12:53:44.571"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:44.571" endtime="20200402 12:53:44.571"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:44.572" endtime="20200402 12:53:44.572"></status>
</kw>
<msg timestamp="20200402 12:53:44.573" level="INFO">${sellerid} = fbf2ba58-0530-4d82-a378-eaab87217a09</msg>
<status status="PASS" starttime="20200402 12:53:44.304" endtime="20200402 12:53:44.573"></status>
</kw>
<msg timestamp="20200402 12:53:44.573" level="INFO">${SellerId} = fbf2ba58-0530-4d82-a378-eaab87217a09</msg>
<msg timestamp="20200402 12:53:44.573" level="INFO">${idnumber} = 43796632825288</msg>
<status status="PASS" starttime="20200402 12:53:44.074" endtime="20200402 12:53:44.573"></status>
</kw>
<kw name="UpdateSellerDetails firstNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn1_lastnm}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:44.575" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:44.574" endtime="20200402 12:53:44.575"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:44.576" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:44.575" endtime="20200402 12:53:44.576"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:44.577" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'fbf2ba58-0530-4d82-a378-eaab87217a09', 'firstNameLocal': '123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012...</msg>
<status status="PASS" starttime="20200402 12:53:44.576" endtime="20200402 12:53:44.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:44.577" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZ...</msg>
<status status="PASS" starttime="20200402 12:53:44.577" endtime="20200402 12:53:44.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:44.578" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:44.577" endtime="20200402 12:53:44.578"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:44.579" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZYWlDYzVTM051b2Npa2RySzUzaVg3WmRGaXBFMUcwVXZtN1pMc3FzVmN0TzZKVzNYR09OWkl4S2JlWGM9IiwibmJmIjoxNTg1ODEyMjIxLCJleHAiOjE1ODU4MTIyODEsImlhdCI6MTU4NTgxMjIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8Elkxzm5bCZoHiXJrSfBFT5E-_E98a__DPg3uG7E0JQ'} 
data={"escrowCompanyId": "001", "SELLERId": "fbf2ba58-0530-4d82-a378-eaab87217a09", "firstNameLocal": "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:53:46.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:44.578" endtime="20200402 12:53:46.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:46.094" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:53:46.093" endtime="20200402 12:53:46.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:46.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:46.094" endtime="20200402 12:53:46.095"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:46.095" endtime="20200402 12:53:46.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:46.096" endtime="20200402 12:53:46.096"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:44.574" endtime="20200402 12:53:46.097"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:46.098" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:46.098" endtime="20200402 12:53:46.099"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:46.099" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'fbf2ba58-0530-4d82-a378-eaab87217a09'}</msg>
<status status="PASS" starttime="20200402 12:53:46.099" endtime="20200402 12:53:46.099"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:46.100" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZ...</msg>
<status status="PASS" starttime="20200402 12:53:46.100" endtime="20200402 12:53:46.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:46.100" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:46.100" endtime="20200402 12:53:46.101"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:46.101" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd09zcDJEeXBWZzNYRWM5UkJEUW5mQjVaTEZZYWlDYzVTM051b2Npa2RySzUzaVg3WmRGaXBFMUcwVXZtN1pMc3FzVmN0TzZKVzNYR09OWkl4S2JlWGM9IiwibmJmIjoxNTg1ODEyMjIxLCJleHAiOjE1ODU4MTIyODEsImlhdCI6MTU4NTgxMjIyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8Elkxzm5bCZoHiXJrSfBFT5E-_E98a__DPg3uG7E0JQ'} 
data={"escrowCompanyId": "001", "sellerID": "fbf2ba58-0530-4d82-a378-eaab87217a09"} 
json=None</msg>
<msg timestamp="20200402 12:53:46.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:46.101" endtime="20200402 12:53:46.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:46.739" level="INFO">{"escrowCompanyId":"001","sellerId":"fbf2ba58-0530-4d82-a378-eaab87217a09","idNumber":"43796632825288","typeOfId":3,"mobileCountryCode":"67","mobileNo":"5452332261","email":"pavan61207@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:23:42","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:46.738" endtime="20200402 12:53:46.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:46.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:46.740" endtime="20200402 12:53:46.740"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:46.097" endtime="20200402 12:53:46.740"></status>
</kw>
<doc>Invalid: To Verify response if firstNameLocal parameter is entered more than size 100 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:37.575" endtime="20200402 12:53:46.742" critical="yes"></status>
</test>
<test id="s1-t63" name="TC_75 Selle_Details_API Valid lastNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:53:49.746" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:46.744" endtime="20200402 12:53:49.746"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:49.748" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:49.747" endtime="20200402 12:53:49.748"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:49.749" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:49.748" endtime="20200402 12:53:49.749"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:49.749" endtime="20200402 12:53:49.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:49.750" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:49.750" endtime="20200402 12:53:49.750"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:49.751" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:50.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:49.751" endtime="20200402 12:53:50.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:50.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:50.327" endtime="20200402 12:53:50.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.329" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0wb1hXcldQMy9ZM01QV2JETjNDTEtVUWVyZUF6VWJDVnNab1NYbWhFWUtaalJ3N1ByQXNrYXA3RExoRXM9IiwibmJmIjoxNTg1ODEyMjI3LCJleHAiOjE1ODU4MTIyODcsImlhdCI6MTU4NTgxMjIyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.3S95oGKrZDj3nbBPmUo_4RkJdYohc8-1za2bUMrkWF8</msg>
<status status="PASS" starttime="20200402 12:53:50.328" endtime="20200402 12:53:50.329"></status>
</kw>
<msg timestamp="20200402 12:53:50.329" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0wb1hXcld...</msg>
<status status="PASS" starttime="20200402 12:53:49.747" endtime="20200402 12:53:50.329"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.331" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:50.331" endtime="20200402 12:53:50.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:50.332" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:50.332" endtime="20200402 12:53:50.332"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:50.333" endtime="20200402 12:53:50.333"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:50.333" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:50.333" endtime="20200402 12:53:50.333"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:50.334" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:50.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:50.334" endtime="20200402 12:53:50.961"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:50.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:50.961" endtime="20200402 12:53:50.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.963" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHpzeEQ5SFRMRFhkbFdDM3R6cDV4T1U2QjRiTHVicm9TdmdtMFo5OWM0Q3hiU0Ewd2hxcXVRSzF3ZkhFVHBHQnFVZVN5eWp3bTFKOVRCTHFwaURSWWM9IiwibmJmIjoxNTg1ODEyMjI4LCJleHAiOjE1ODU4MTIyODgsImlhdCI6MTU4NTgxMjIyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zn_93em1hIJDihl1aAAx0xjD1bpBIzbEhIlKiyoYztM</msg>
<status status="PASS" starttime="20200402 12:53:50.962" endtime="20200402 12:53:50.963"></status>
</kw>
<msg timestamp="20200402 12:53:50.964" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHpzeEQ5SFRMRFhkbFdDM3R6cDV4T1U2QjRiTHVicm9...</msg>
<status status="PASS" starttime="20200402 12:53:50.330" endtime="20200402 12:53:50.964"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:50.965" level="INFO">${Id} = 42763389064162</msg>
<status status="PASS" starttime="20200402 12:53:50.964" endtime="20200402 12:53:50.965"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.966" level="INFO">${IdNumber} = 42763389064162</msg>
<status status="PASS" starttime="20200402 12:53:50.965" endtime="20200402 12:53:50.966"></status>
</kw>
<msg timestamp="20200402 12:53:50.966" level="INFO">${idNum} = 42763389064162</msg>
<status status="PASS" starttime="20200402 12:53:50.964" endtime="20200402 12:53:50.966"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:50.967" level="INFO">${mobile} = 9006370869</msg>
<status status="PASS" starttime="20200402 12:53:50.967" endtime="20200402 12:53:50.967"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.968" level="INFO">${mobileNo} = 9006370869</msg>
<status status="PASS" starttime="20200402 12:53:50.968" endtime="20200402 12:53:50.968"></status>
</kw>
<msg timestamp="20200402 12:53:50.969" level="INFO">${MobNo} = 9006370869</msg>
<status status="PASS" starttime="20200402 12:53:50.967" endtime="20200402 12:53:50.969"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:50.970" level="INFO">${Emailnum} = 41968</msg>
<status status="PASS" starttime="20200402 12:53:50.970" endtime="20200402 12:53:50.970"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.971" level="INFO">${enum} = 41968</msg>
<status status="PASS" starttime="20200402 12:53:50.971" endtime="20200402 12:53:50.971"></status>
</kw>
<msg timestamp="20200402 12:53:50.971" level="INFO">${num} = 41968</msg>
<status status="PASS" starttime="20200402 12:53:50.969" endtime="20200402 12:53:50.972"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:50.972" level="INFO">${emailid} = pavan41968@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:50.972" endtime="20200402 12:53:50.972"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:50.973" level="INFO">${email} = pavan41968@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:50.972" endtime="20200402 12:53:50.973"></status>
</kw>
<msg timestamp="20200402 12:53:50.973" level="INFO">${emailid} = pavan41968@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:50.969" endtime="20200402 12:53:50.973"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:50.976" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:50.976" endtime="20200402 12:53:50.977"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:50.978" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:50.977" endtime="20200402 12:53:50.978"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:50.979" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:50.978" endtime="20200402 12:53:50.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:50.981" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:50.979" endtime="20200402 12:53:50.981"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:50.984" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:50.982" endtime="20200402 12:53:50.984"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:50.987" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '42763389064162', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9006370869', 'email': 'pavan41968@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:50.984" endtime="20200402 12:53:50.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:50.987" endtime="20200402 12:53:50.989"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:50.990" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHpzeEQ5SFRMRFhkbFdDM3R6cDV4T1U2QjRi...</msg>
<status status="PASS" starttime="20200402 12:53:50.989" endtime="20200402 12:53:50.990"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:50.991" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:50.990" endtime="20200402 12:53:50.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:50.992" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHpzeEQ5SFRMRFhkbFdDM3R6cDV4T1U2QjRiTHVicm9TdmdtMFo5OWM0Q3hiU0Ewd2hxcXVRSzF3ZkhFVHBHQnFVZVN5eWp3bTFKOVRCTHFwaURSWWM9IiwibmJmIjoxNTg1ODEyMjI4LCJleHAiOjE1ODU4MTIyODgsImlhdCI6MTU4NTgxMjIyOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zn_93em1hIJDihl1aAAx0xjD1bpBIzbEhIlKiyoYztM'} 
data={"escrowCompanyId": "001", "idNumber": "42763389064162", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9006370869", "email": "pavan41968@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:51.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:50.991" endtime="20200402 12:53:51.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:51.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:51.329" endtime="20200402 12:53:51.330"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:51.330" endtime="20200402 12:53:51.330"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:51.331" endtime="20200402 12:53:51.331"></status>
</kw>
<msg timestamp="20200402 12:53:51.331" level="INFO">${sellerid} = 5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1</msg>
<status status="PASS" starttime="20200402 12:53:50.973" endtime="20200402 12:53:51.331"></status>
</kw>
<msg timestamp="20200402 12:53:51.332" level="INFO">${SellerId} = 5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1</msg>
<msg timestamp="20200402 12:53:51.332" level="INFO">${idnumber} = 42763389064162</msg>
<status status="PASS" starttime="20200402 12:53:50.330" endtime="20200402 12:53:51.332"></status>
</kw>
<kw name="UpdateSellerDetails lastNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{LastNameLocal}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:51.333" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:51.333" endtime="20200402 12:53:51.334"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:51.334" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:51.334" endtime="20200402 12:53:51.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:51.335" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1', 'lastNameLocal': 'pavor', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:53:51.335" endtime="20200402 12:53:51.335"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:51.336" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0w...</msg>
<status status="PASS" starttime="20200402 12:53:51.336" endtime="20200402 12:53:51.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:51.337" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:51.336" endtime="20200402 12:53:51.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:51.337" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0wb1hXcldQMy9ZM01QV2JETjNDTEtVUWVyZUF6VWJDVnNab1NYbWhFWUtaalJ3N1ByQXNrYXA3RExoRXM9IiwibmJmIjoxNTg1ODEyMjI3LCJleHAiOjE1ODU4MTIyODcsImlhdCI6MTU4NTgxMjIyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.3S95oGKrZDj3nbBPmUo_4RkJdYohc8-1za2bUMrkWF8'} 
data={"escrowCompanyId": "001", "SELLERId": "5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1", "lastNameLocal": "pavor", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:53:51.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:51.337" endtime="20200402 12:53:51.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:51.931" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:51.931" endtime="20200402 12:53:51.931"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:51.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:51.932" endtime="20200402 12:53:51.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:51.933" endtime="20200402 12:53:51.933"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:51.933" endtime="20200402 12:53:51.934"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:51.332" endtime="20200402 12:53:51.934"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:51.936" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:51.935" endtime="20200402 12:53:51.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:51.937" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1'}</msg>
<status status="PASS" starttime="20200402 12:53:51.936" endtime="20200402 12:53:51.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:51.937" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0w...</msg>
<status status="PASS" starttime="20200402 12:53:51.937" endtime="20200402 12:53:51.937"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:51.938" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:51.938" endtime="20200402 12:53:51.938"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:51.939" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL3VpNE14OVA2UUZ1U01wTHhCUWM2b3llQU0wb1hXcldQMy9ZM01QV2JETjNDTEtVUWVyZUF6VWJDVnNab1NYbWhFWUtaalJ3N1ByQXNrYXA3RExoRXM9IiwibmJmIjoxNTg1ODEyMjI3LCJleHAiOjE1ODU4MTIyODcsImlhdCI6MTU4NTgxMjIyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.3S95oGKrZDj3nbBPmUo_4RkJdYohc8-1za2bUMrkWF8'} 
data={"escrowCompanyId": "001", "sellerID": "5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1"} 
json=None</msg>
<msg timestamp="20200402 12:53:53.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:51.938" endtime="20200402 12:53:53.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:53.455" level="INFO">{"escrowCompanyId":"001","sellerId":"5bbc3b35-6ca8-41f5-874f-f7709bb8ecd1","idNumber":"42763389064162","typeOfId":3,"mobileCountryCode":"67","mobileNo":"9006370869","email":"pavan41968@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"pavor","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:23:48","updateDate":"02/04/2020 02:23:49","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:53.455" endtime="20200402 12:53:53.456"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:53.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:53.456" endtime="20200402 12:53:53.457"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:51.935" endtime="20200402 12:53:53.457"></status>
</kw>
<doc>Valid : To Verify response if we enter valid lastNameLocal and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:46.742" endtime="20200402 12:53:53.457" critical="yes"></status>
</test>
<test id="s1-t64" name="TC_76 Selle_Details_API EMPTY lastNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:53:56.462" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:53.460" endtime="20200402 12:53:56.462"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:56.464" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:56.463" endtime="20200402 12:53:56.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:56.465" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:56.465" endtime="20200402 12:53:56.465"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:56.466" endtime="20200402 12:53:56.466"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:56.467" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:56.466" endtime="20200402 12:53:56.467"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:56.468" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:56.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:56.467" endtime="20200402 12:53:56.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:56.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:56.984" endtime="20200402 12:53:56.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:56.985" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRSRVdqTkRHM05BQ21jeUY3VVVRY1BQZ1JvRjI1K2IxeXA5RjdnQTdrVkpWclN6WUxTWStJZGlXSlhyZDQ9IiwibmJmIjoxNTg1ODEyMjM0LCJleHAiOjE1ODU4MTIyOTQsImlhdCI6MTU4NTgxMjIzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NtDglBIPv24jkfvf8JFmjgb83W4vsxmGrqixTOhGBIY</msg>
<status status="PASS" starttime="20200402 12:53:56.985" endtime="20200402 12:53:56.985"></status>
</kw>
<msg timestamp="20200402 12:53:56.985" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRSRVdqTkR...</msg>
<status status="PASS" starttime="20200402 12:53:56.463" endtime="20200402 12:53:56.985"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:56.987" level="INFO">${Id} = 14550865713035</msg>
<status status="PASS" starttime="20200402 12:53:56.986" endtime="20200402 12:53:56.987"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:56.987" level="INFO">${IdNumber} = 14550865713035</msg>
<status status="PASS" starttime="20200402 12:53:56.987" endtime="20200402 12:53:56.987"></status>
</kw>
<msg timestamp="20200402 12:53:56.988" level="INFO">${idNum} = 14550865713035</msg>
<status status="PASS" starttime="20200402 12:53:56.986" endtime="20200402 12:53:56.988"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:53:56.989" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:56.989" endtime="20200402 12:53:56.990"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:56.990" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:53:56.990" endtime="20200402 12:53:56.990"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:56.990" endtime="20200402 12:53:56.991"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:53:56.991" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:53:56.991" endtime="20200402 12:53:56.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:56.992" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:53:57.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:56.991" endtime="20200402 12:53:57.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:57.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:57.174" endtime="20200402 12:53:57.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.176" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0kwemJIQmd6MGNmVHpscU94dnRFanM0Q01DV0diSVgzVXJRQktJWDRCck14YlE0MjBRMkFVNzNqNTZidW9LSTlVcWQwUnliQW91N2hZLzJaNVpubHc9IiwibmJmIjoxNTg1ODEyMjM0LCJleHAiOjE1ODU4MTIyOTQsImlhdCI6MTU4NTgxMjIzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qCvYIyoDpqIog9JP0dm65MZfs9jKn3stGOxRRljkA5s</msg>
<status status="PASS" starttime="20200402 12:53:57.175" endtime="20200402 12:53:57.176"></status>
</kw>
<msg timestamp="20200402 12:53:57.176" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0kwemJIQmd6MGNmVHpscU94dnRFanM0Q01DV0diSVg...</msg>
<status status="PASS" starttime="20200402 12:53:56.988" endtime="20200402 12:53:57.177"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:53:57.178" level="INFO">${Id} = 99396983314773</msg>
<status status="PASS" starttime="20200402 12:53:57.177" endtime="20200402 12:53:57.178"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.179" level="INFO">${IdNumber} = 99396983314773</msg>
<status status="PASS" starttime="20200402 12:53:57.178" endtime="20200402 12:53:57.179"></status>
</kw>
<msg timestamp="20200402 12:53:57.180" level="INFO">${idNum} = 99396983314773</msg>
<status status="PASS" starttime="20200402 12:53:57.177" endtime="20200402 12:53:57.180"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:53:57.181" level="INFO">${mobile} = 3741060642</msg>
<status status="PASS" starttime="20200402 12:53:57.181" endtime="20200402 12:53:57.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.182" level="INFO">${mobileNo} = 3741060642</msg>
<status status="PASS" starttime="20200402 12:53:57.182" endtime="20200402 12:53:57.183"></status>
</kw>
<msg timestamp="20200402 12:53:57.183" level="INFO">${MobNo} = 3741060642</msg>
<status status="PASS" starttime="20200402 12:53:57.180" endtime="20200402 12:53:57.183"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:57.185" level="INFO">${Emailnum} = 59025</msg>
<status status="PASS" starttime="20200402 12:53:57.184" endtime="20200402 12:53:57.185"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.186" level="INFO">${enum} = 59025</msg>
<status status="PASS" starttime="20200402 12:53:57.185" endtime="20200402 12:53:57.186"></status>
</kw>
<msg timestamp="20200402 12:53:57.186" level="INFO">${num} = 59025</msg>
<status status="PASS" starttime="20200402 12:53:57.184" endtime="20200402 12:53:57.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:57.187" level="INFO">${emailid} = pavan59025@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.187" endtime="20200402 12:53:57.187"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.188" level="INFO">${email} = pavan59025@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.188" endtime="20200402 12:53:57.188"></status>
</kw>
<msg timestamp="20200402 12:53:57.189" level="INFO">${emailid} = pavan59025@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.183" endtime="20200402 12:53:57.189"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:57.192" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:57.192" endtime="20200402 12:53:57.192"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:57.193" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:53:57.193" endtime="20200402 12:53:57.193"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:57.194" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:53:57.194" endtime="20200402 12:53:57.194"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:53:57.196" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:57.194" endtime="20200402 12:53:57.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:53:57.199" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:53:57.197" endtime="20200402 12:53:57.199"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:57.204" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '99396983314773', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3741060642', 'email': 'pavan59025@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:53:57.200" endtime="20200402 12:53:57.204"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:57.204" endtime="20200402 12:53:57.205"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:57.206" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0kwemJIQmd6MGNmVHpscU94dnRFanM0Q01D...</msg>
<status status="PASS" starttime="20200402 12:53:57.206" endtime="20200402 12:53:57.206"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:57.207" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:57.207" endtime="20200402 12:53:57.207"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:57.209" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0kwemJIQmd6MGNmVHpscU94dnRFanM0Q01DV0diSVgzVXJRQktJWDRCck14YlE0MjBRMkFVNzNqNTZidW9LSTlVcWQwUnliQW91N2hZLzJaNVpubHc9IiwibmJmIjoxNTg1ODEyMjM0LCJleHAiOjE1ODU4MTIyOTQsImlhdCI6MTU4NTgxMjIzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qCvYIyoDpqIog9JP0dm65MZfs9jKn3stGOxRRljkA5s'} 
data={"escrowCompanyId": "001", "idNumber": "99396983314773", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3741060642", "email": "pavan59025@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:53:57.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:57.208" endtime="20200402 12:53:57.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:57.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:57.481" endtime="20200402 12:53:57.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:57.482" endtime="20200402 12:53:57.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:57.484" endtime="20200402 12:53:57.484"></status>
</kw>
<msg timestamp="20200402 12:53:57.485" level="INFO">${sellerid} = f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf</msg>
<status status="PASS" starttime="20200402 12:53:57.189" endtime="20200402 12:53:57.485"></status>
</kw>
<msg timestamp="20200402 12:53:57.485" level="INFO">${SellerId} = f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf</msg>
<msg timestamp="20200402 12:53:57.485" level="INFO">${idnumber} = 99396983314773</msg>
<status status="PASS" starttime="20200402 12:53:56.988" endtime="20200402 12:53:57.486"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:53:57.487" level="INFO">${Emailnum} = 45738</msg>
<status status="PASS" starttime="20200402 12:53:57.487" endtime="20200402 12:53:57.487"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.488" level="INFO">${enum} = 45738</msg>
<status status="PASS" starttime="20200402 12:53:57.488" endtime="20200402 12:53:57.488"></status>
</kw>
<msg timestamp="20200402 12:53:57.488" level="INFO">${num} = 45738</msg>
<status status="PASS" starttime="20200402 12:53:57.487" endtime="20200402 12:53:57.488"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:53:57.489" level="INFO">${emailid} = pavan45738@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.489" endtime="20200402 12:53:57.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:53:57.489" level="INFO">${email} = pavan45738@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.489" endtime="20200402 12:53:57.489"></status>
</kw>
<msg timestamp="20200402 12:53:57.490" level="INFO">${emailid} = pavan45738@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:53:57.486" endtime="20200402 12:53:57.490"></status>
</kw>
<kw name="UpdateSellerDetails Valid data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>${EMPTY}</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${1}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:57.492" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:57.491" endtime="20200402 12:53:57.492"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:53:57.492" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:53:57.492" endtime="20200402 12:53:57.493"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:53:57.493" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:53:57.493" endtime="20200402 12:53:57.493"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:57.495" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf', 'idNumber': '14550865713035', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': '', 'dateOfBirth': '08/03/1992', 'otherVerif...</msg>
<status status="PASS" starttime="20200402 12:53:57.493" endtime="20200402 12:53:57.495"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:57.496" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRS...</msg>
<status status="PASS" starttime="20200402 12:53:57.495" endtime="20200402 12:53:57.496"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:57.498" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:57.496" endtime="20200402 12:53:57.498"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:57.499" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRSRVdqTkRHM05BQ21jeUY3VVVRY1BQZ1JvRjI1K2IxeXA5RjdnQTdrVkpWclN6WUxTWStJZGlXSlhyZDQ9IiwibmJmIjoxNTg1ODEyMjM0LCJleHAiOjE1ODU4MTIyOTQsImlhdCI6MTU4NTgxMjIzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NtDglBIPv24jkfvf8JFmjgb83W4vsxmGrqixTOhGBIY'} 
data={"escrowCompanyId": "001", "SELLERId": "f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf", "idNumber": "14550865713035", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "", "dateOfBirth": "08/03/1992", "otherVerification": "AB12311678919", "typeOfID": 1, "kycRequest": 1, "email": "pavan45738@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:53:58.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:57.498" endtime="20200402 12:53:58.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:58.161" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:53:58.161" endtime="20200402 12:53:58.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:58.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:58.162" endtime="20200402 12:53:58.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:58.163" endtime="20200402 12:53:58.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:53:58.163" endtime="20200402 12:53:58.164"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:57.490" endtime="20200402 12:53:58.164"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:53:58.166" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:53:58.165" endtime="20200402 12:53:58.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:53:58.167" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf'}</msg>
<status status="PASS" starttime="20200402 12:53:58.166" endtime="20200402 12:53:58.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:53:58.167" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRS...</msg>
<status status="PASS" starttime="20200402 12:53:58.167" endtime="20200402 12:53:58.167"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:53:58.168" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:53:58.167" endtime="20200402 12:53:58.168"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:53:58.169" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNm0wM0FsZ3FacWFlKyt3elN0VTE3VURSMFRSRVdqTkRHM05BQ21jeUY3VVVRY1BQZ1JvRjI1K2IxeXA5RjdnQTdrVkpWclN6WUxTWStJZGlXSlhyZDQ9IiwibmJmIjoxNTg1ODEyMjM0LCJleHAiOjE1ODU4MTIyOTQsImlhdCI6MTU4NTgxMjIzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NtDglBIPv24jkfvf8JFmjgb83W4vsxmGrqixTOhGBIY'} 
data={"escrowCompanyId": "001", "sellerID": "f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf"} 
json=None</msg>
<msg timestamp="20200402 12:53:58.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:53:58.168" endtime="20200402 12:53:58.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:53:58.694" level="INFO">{"escrowCompanyId":"001","sellerId":"f1cc5fa0-f0dd-43cb-991e-9bfe369b86cf","idNumber":"99396983314773","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3741060642","email":"pavan59025@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:23:54","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:53:58.694" endtime="20200402 12:53:58.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:53:58.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:53:58.695" endtime="20200402 12:53:58.696"></status>
</kw>
<status status="PASS" starttime="20200402 12:53:58.164" endtime="20200402 12:53:58.697"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter lastNameLocal and request is sent with all mandatory fields with KYCRequest=1</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:53.459" endtime="20200402 12:53:58.697" critical="yes"></status>
</test>
<test id="s1-t65" name="TC_77 Selle_Details_API Empty lastNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:01.703" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:53:58.702" endtime="20200402 12:54:01.703"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:01.705" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:01.704" endtime="20200402 12:54:01.705"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:01.706" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:01.705" endtime="20200402 12:54:01.706"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:01.706" endtime="20200402 12:54:01.706"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:01.707" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:01.706" endtime="20200402 12:54:01.707"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:01.708" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:01.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:01.707" endtime="20200402 12:54:01.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:01.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:01.993" endtime="20200402 12:54:01.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:01.995" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdFbmgwd2RPTVZUd1Ivb2cvRzZnYU5mRnV2UlJkZmEzK09JQWF4S1c1UGpFZ01CV1pQbWRjS0VqYUovdnc9IiwibmJmIjoxNTg1ODEyMjM5LCJleHAiOjE1ODU4MTIyOTksImlhdCI6MTU4NTgxMjIzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LsCtHYjFQxIFfcdw7LB9-bQpKDkaUguDQNV4RL1FcVA</msg>
<status status="PASS" starttime="20200402 12:54:01.994" endtime="20200402 12:54:01.995"></status>
</kw>
<msg timestamp="20200402 12:54:01.996" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdFbmgwd2R...</msg>
<status status="PASS" starttime="20200402 12:54:01.704" endtime="20200402 12:54:01.996"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:01.997" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:01.997" endtime="20200402 12:54:01.998"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:01.998" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:01.998" endtime="20200402 12:54:01.998"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:01.998" endtime="20200402 12:54:01.999"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:01.999" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:01.999" endtime="20200402 12:54:01.999"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:02.000" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:02.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:02.000" endtime="20200402 12:54:02.518"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:02.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:02.519" endtime="20200402 12:54:02.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:02.520" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0lsTFIrQk1qS0o5ZkoxMXBDY2E1bWV0YUdqd29PRCtvMzkxK0ljcVZlYkJiczB5N2I1T2x1SExObEM2UkJ3YmJaaHZEdmxYK01EeW40amR2UHVuZlk9IiwibmJmIjoxNTg1ODEyMjQwLCJleHAiOjE1ODU4MTIzMDAsImlhdCI6MTU4NTgxMjI0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._IqhM4r2vrRWL84Mvbz_gaD88HG6Wf5jYI3FudCmFbE</msg>
<status status="PASS" starttime="20200402 12:54:02.519" endtime="20200402 12:54:02.520"></status>
</kw>
<msg timestamp="20200402 12:54:02.520" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0lsTFIrQk1qS0o5ZkoxMXBDY2E1bWV0YUdqd29PRCt...</msg>
<status status="PASS" starttime="20200402 12:54:01.997" endtime="20200402 12:54:02.521"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:02.523" level="INFO">${Id} = 70831243178319</msg>
<status status="PASS" starttime="20200402 12:54:02.522" endtime="20200402 12:54:02.523"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:02.524" level="INFO">${IdNumber} = 70831243178319</msg>
<status status="PASS" starttime="20200402 12:54:02.523" endtime="20200402 12:54:02.524"></status>
</kw>
<msg timestamp="20200402 12:54:02.524" level="INFO">${idNum} = 70831243178319</msg>
<status status="PASS" starttime="20200402 12:54:02.521" endtime="20200402 12:54:02.524"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:02.525" level="INFO">${mobile} = 9395570297</msg>
<status status="PASS" starttime="20200402 12:54:02.525" endtime="20200402 12:54:02.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:02.526" level="INFO">${mobileNo} = 9395570297</msg>
<status status="PASS" starttime="20200402 12:54:02.525" endtime="20200402 12:54:02.526"></status>
</kw>
<msg timestamp="20200402 12:54:02.526" level="INFO">${MobNo} = 9395570297</msg>
<status status="PASS" starttime="20200402 12:54:02.524" endtime="20200402 12:54:02.526"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:02.527" level="INFO">${Emailnum} = 92038</msg>
<status status="PASS" starttime="20200402 12:54:02.527" endtime="20200402 12:54:02.527"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:02.527" level="INFO">${enum} = 92038</msg>
<status status="PASS" starttime="20200402 12:54:02.527" endtime="20200402 12:54:02.528"></status>
</kw>
<msg timestamp="20200402 12:54:02.528" level="INFO">${num} = 92038</msg>
<status status="PASS" starttime="20200402 12:54:02.526" endtime="20200402 12:54:02.528"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:02.529" level="INFO">${emailid} = pavan92038@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:02.528" endtime="20200402 12:54:02.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:02.529" level="INFO">${email} = pavan92038@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:02.529" endtime="20200402 12:54:02.529"></status>
</kw>
<msg timestamp="20200402 12:54:02.530" level="INFO">${emailid} = pavan92038@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:02.526" endtime="20200402 12:54:02.530"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:02.532" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:02.532" endtime="20200402 12:54:02.532"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:02.533" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:02.533" endtime="20200402 12:54:02.533"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:02.534" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:02.533" endtime="20200402 12:54:02.534"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:02.535" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:02.534" endtime="20200402 12:54:02.535"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:02.536" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:02.535" endtime="20200402 12:54:02.536"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:02.539" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '70831243178319', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9395570297', 'email': 'pavan92038@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:02.537" endtime="20200402 12:54:02.539"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:02.539" endtime="20200402 12:54:02.540"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:02.541" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0lsTFIrQk1qS0o5ZkoxMXBDY2E1bWV0YUdq...</msg>
<status status="PASS" starttime="20200402 12:54:02.540" endtime="20200402 12:54:02.541"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:02.542" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:02.541" endtime="20200402 12:54:02.542"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:02.543" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0lsTFIrQk1qS0o5ZkoxMXBDY2E1bWV0YUdqd29PRCtvMzkxK0ljcVZlYkJiczB5N2I1T2x1SExObEM2UkJ3YmJaaHZEdmxYK01EeW40amR2UHVuZlk9IiwibmJmIjoxNTg1ODEyMjQwLCJleHAiOjE1ODU4MTIzMDAsImlhdCI6MTU4NTgxMjI0MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0._IqhM4r2vrRWL84Mvbz_gaD88HG6Wf5jYI3FudCmFbE'} 
data={"escrowCompanyId": "001", "idNumber": "70831243178319", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9395570297", "email": "pavan92038@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:02.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:02.542" endtime="20200402 12:54:02.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:02.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:02.812" endtime="20200402 12:54:02.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:02.813" endtime="20200402 12:54:02.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:02.813" endtime="20200402 12:54:02.814"></status>
</kw>
<msg timestamp="20200402 12:54:02.814" level="INFO">${sellerid} = 6a4ab040-0416-4d0d-a407-c23a4e461d22</msg>
<status status="PASS" starttime="20200402 12:54:02.530" endtime="20200402 12:54:02.814"></status>
</kw>
<msg timestamp="20200402 12:54:02.815" level="INFO">${SellerId} = 6a4ab040-0416-4d0d-a407-c23a4e461d22</msg>
<msg timestamp="20200402 12:54:02.815" level="INFO">${idnumber} = 70831243178319</msg>
<status status="PASS" starttime="20200402 12:54:01.996" endtime="20200402 12:54:02.815"></status>
</kw>
<kw name="UpdateSellerDetails lastNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:02.816" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:02.816" endtime="20200402 12:54:02.817"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:02.817" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:02.817" endtime="20200402 12:54:02.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:02.818" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '6a4ab040-0416-4d0d-a407-c23a4e461d22', 'lastNameLocal': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:02.818" endtime="20200402 12:54:02.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:02.819" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdF...</msg>
<status status="PASS" starttime="20200402 12:54:02.819" endtime="20200402 12:54:02.819"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:02.819" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:02.819" endtime="20200402 12:54:02.819"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:02.820" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdFbmgwd2RPTVZUd1Ivb2cvRzZnYU5mRnV2UlJkZmEzK09JQWF4S1c1UGpFZ01CV1pQbWRjS0VqYUovdnc9IiwibmJmIjoxNTg1ODEyMjM5LCJleHAiOjE1ODU4MTIyOTksImlhdCI6MTU4NTgxMjIzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LsCtHYjFQxIFfcdw7LB9-bQpKDkaUguDQNV4RL1FcVA'} 
data={"escrowCompanyId": "001", "SELLERId": "6a4ab040-0416-4d0d-a407-c23a4e461d22", "lastNameLocal": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:03.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:02.820" endtime="20200402 12:54:03.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:03.434" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:03.433" endtime="20200402 12:54:03.434"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:03.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:03.434" endtime="20200402 12:54:03.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:03.435" endtime="20200402 12:54:03.436"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:03.436" endtime="20200402 12:54:03.436"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:02.815" endtime="20200402 12:54:03.436"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:03.438" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:03.438" endtime="20200402 12:54:03.438"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:03.439" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6a4ab040-0416-4d0d-a407-c23a4e461d22'}</msg>
<status status="PASS" starttime="20200402 12:54:03.438" endtime="20200402 12:54:03.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:03.440" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdF...</msg>
<status status="PASS" starttime="20200402 12:54:03.439" endtime="20200402 12:54:03.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:03.440" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:03.440" endtime="20200402 12:54:03.440"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:03.441" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUI3TWlwRGEveUkvLzBZdUx6c01ra0grZDdFbmgwd2RPTVZUd1Ivb2cvRzZnYU5mRnV2UlJkZmEzK09JQWF4S1c1UGpFZ01CV1pQbWRjS0VqYUovdnc9IiwibmJmIjoxNTg1ODEyMjM5LCJleHAiOjE1ODU4MTIyOTksImlhdCI6MTU4NTgxMjIzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LsCtHYjFQxIFfcdw7LB9-bQpKDkaUguDQNV4RL1FcVA'} 
data={"escrowCompanyId": "001", "sellerID": "6a4ab040-0416-4d0d-a407-c23a4e461d22"} 
json=None</msg>
<msg timestamp="20200402 12:54:04.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:03.441" endtime="20200402 12:54:04.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:04.167" level="INFO">{"escrowCompanyId":"001","sellerId":"6a4ab040-0416-4d0d-a407-c23a4e461d22","idNumber":"70831243178319","typeOfId":3,"mobileCountryCode":"67","mobileNo":"9395570297","email":"pavan92038@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:00","updateDate":"02/04/2020 02:24:00","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:04.166" endtime="20200402 12:54:04.167"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:04.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:04.167" endtime="20200402 12:54:04.168"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:03.437" endtime="20200402 12:54:04.168"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter lastNameLocal and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:53:58.700" endtime="20200402 12:54:04.169" critical="yes"></status>
</test>
<test id="s1-t66" name="TC_78 Selle_Details_API InValid lastNameLocal">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:07.175" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:04.172" endtime="20200402 12:54:07.175"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.177" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:07.177" endtime="20200402 12:54:07.178"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:07.179" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:07.178" endtime="20200402 12:54:07.179"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:07.179" endtime="20200402 12:54:07.179"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:07.180" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:07.180" endtime="20200402 12:54:07.181"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:07.182" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:07.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:07.181" endtime="20200402 12:54:07.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:07.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:07.370" endtime="20200402 12:54:07.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.372" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50Vkk2b3B1czFhTlU5bHB0TnhnTlMvMDlWT0NOUVRNbWE0aXdNNDAyOUx2SVo4WHN5N1hTeTE5aFdkZ0E9IiwibmJmIjoxNTg1ODEyMjQ0LCJleHAiOjE1ODU4MTIzMDQsImlhdCI6MTU4NTgxMjI0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cmgQXl6BeiIH06WQVQH7376LenLMoJ_wFMkfjXH0r0E</msg>
<status status="PASS" starttime="20200402 12:54:07.371" endtime="20200402 12:54:07.372"></status>
</kw>
<msg timestamp="20200402 12:54:07.372" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50Vkk2b3B...</msg>
<status status="PASS" starttime="20200402 12:54:07.176" endtime="20200402 12:54:07.372"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.374" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:07.373" endtime="20200402 12:54:07.374"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:07.375" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:07.374" endtime="20200402 12:54:07.375"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:07.375" endtime="20200402 12:54:07.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:07.376" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:07.375" endtime="20200402 12:54:07.376"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:07.377" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:07.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:07.376" endtime="20200402 12:54:07.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:07.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:07.565" endtime="20200402 12:54:07.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.566" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOWxxOCtUR1QySkxIQUtsL2tkTDhaS1ppdGY5dlRCRGpBUlo1d2xEdEJ6ODl0eUJPK1RsWE5yL0g3OWF4R1l2NU8ycUxGdkcrMlVkZTZOcm9wQWZYdE09IiwibmJmIjoxNTg1ODEyMjQ1LCJleHAiOjE1ODU4MTIzMDUsImlhdCI6MTU4NTgxMjI0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.z77PB5lAV-NOkauhRspGNsjPUvArQGJ18fGYcuNQJlk</msg>
<status status="PASS" starttime="20200402 12:54:07.566" endtime="20200402 12:54:07.566"></status>
</kw>
<msg timestamp="20200402 12:54:07.567" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOWxxOCtUR1QySkxIQUtsL2tkTDhaS1ppdGY5dlRCRGp...</msg>
<status status="PASS" starttime="20200402 12:54:07.373" endtime="20200402 12:54:07.567"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:07.568" level="INFO">${Id} = 73965526650613</msg>
<status status="PASS" starttime="20200402 12:54:07.568" endtime="20200402 12:54:07.568"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.569" level="INFO">${IdNumber} = 73965526650613</msg>
<status status="PASS" starttime="20200402 12:54:07.569" endtime="20200402 12:54:07.569"></status>
</kw>
<msg timestamp="20200402 12:54:07.570" level="INFO">${idNum} = 73965526650613</msg>
<status status="PASS" starttime="20200402 12:54:07.567" endtime="20200402 12:54:07.570"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:07.571" level="INFO">${mobile} = 1881463471</msg>
<status status="PASS" starttime="20200402 12:54:07.570" endtime="20200402 12:54:07.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.571" level="INFO">${mobileNo} = 1881463471</msg>
<status status="PASS" starttime="20200402 12:54:07.571" endtime="20200402 12:54:07.571"></status>
</kw>
<msg timestamp="20200402 12:54:07.571" level="INFO">${MobNo} = 1881463471</msg>
<status status="PASS" starttime="20200402 12:54:07.570" endtime="20200402 12:54:07.572"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:07.573" level="INFO">${Emailnum} = 50438</msg>
<status status="PASS" starttime="20200402 12:54:07.572" endtime="20200402 12:54:07.573"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.573" level="INFO">${enum} = 50438</msg>
<status status="PASS" starttime="20200402 12:54:07.573" endtime="20200402 12:54:07.573"></status>
</kw>
<msg timestamp="20200402 12:54:07.574" level="INFO">${num} = 50438</msg>
<status status="PASS" starttime="20200402 12:54:07.572" endtime="20200402 12:54:07.574"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:07.574" level="INFO">${emailid} = pavan50438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:07.574" endtime="20200402 12:54:07.574"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:07.575" level="INFO">${email} = pavan50438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:07.574" endtime="20200402 12:54:07.575"></status>
</kw>
<msg timestamp="20200402 12:54:07.575" level="INFO">${emailid} = pavan50438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:07.572" endtime="20200402 12:54:07.575"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:07.578" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:07.577" endtime="20200402 12:54:07.578"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:07.579" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:07.579" endtime="20200402 12:54:07.579"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:07.580" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:07.580" endtime="20200402 12:54:07.580"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:07.582" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:07.580" endtime="20200402 12:54:07.583"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:07.584" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:07.583" endtime="20200402 12:54:07.584"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:07.587" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '73965526650613', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1881463471', 'email': 'pavan50438@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:07.584" endtime="20200402 12:54:07.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:07.587" endtime="20200402 12:54:07.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:07.589" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOWxxOCtUR1QySkxIQUtsL2tkTDhaS1ppdGY5...</msg>
<status status="PASS" starttime="20200402 12:54:07.588" endtime="20200402 12:54:07.589"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:07.589" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:07.589" endtime="20200402 12:54:07.589"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:07.590" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOWxxOCtUR1QySkxIQUtsL2tkTDhaS1ppdGY5dlRCRGpBUlo1d2xEdEJ6ODl0eUJPK1RsWE5yL0g3OWF4R1l2NU8ycUxGdkcrMlVkZTZOcm9wQWZYdE09IiwibmJmIjoxNTg1ODEyMjQ1LCJleHAiOjE1ODU4MTIzMDUsImlhdCI6MTU4NTgxMjI0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.z77PB5lAV-NOkauhRspGNsjPUvArQGJ18fGYcuNQJlk'} 
data={"escrowCompanyId": "001", "idNumber": "73965526650613", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1881463471", "email": "pavan50438@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:09.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:07.590" endtime="20200402 12:54:09.459"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:09.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:09.459" endtime="20200402 12:54:09.460"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:09.460" endtime="20200402 12:54:09.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:09.461" endtime="20200402 12:54:09.461"></status>
</kw>
<msg timestamp="20200402 12:54:09.462" level="INFO">${sellerid} = cab42b31-915e-4459-acb1-261ed126a427</msg>
<status status="PASS" starttime="20200402 12:54:07.575" endtime="20200402 12:54:09.462"></status>
</kw>
<msg timestamp="20200402 12:54:09.462" level="INFO">${SellerId} = cab42b31-915e-4459-acb1-261ed126a427</msg>
<msg timestamp="20200402 12:54:09.462" level="INFO">${idnumber} = 73965526650613</msg>
<status status="PASS" starttime="20200402 12:54:07.372" endtime="20200402 12:54:09.462"></status>
</kw>
<kw name="UpdateSellerDetails lastNameLocal" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{firstNameEn1_lastnm}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:09.464" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:09.464" endtime="20200402 12:54:09.464"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:09.465" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:09.464" endtime="20200402 12:54:09.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:09.492" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'cab42b31-915e-4459-acb1-261ed126a427', 'lastNameLocal': '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123...</msg>
<status status="PASS" starttime="20200402 12:54:09.465" endtime="20200402 12:54:09.492"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:09.493" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50...</msg>
<status status="PASS" starttime="20200402 12:54:09.492" endtime="20200402 12:54:09.493"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:09.493" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:09.493" endtime="20200402 12:54:09.493"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:09.494" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50Vkk2b3B1czFhTlU5bHB0TnhnTlMvMDlWT0NOUVRNbWE0aXdNNDAyOUx2SVo4WHN5N1hTeTE5aFdkZ0E9IiwibmJmIjoxNTg1ODEyMjQ0LCJleHAiOjE1ODU4MTIzMDQsImlhdCI6MTU4NTgxMjI0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cmgQXl6BeiIH06WQVQH7376LenLMoJ_wFMkfjXH0r0E'} 
data={"escrowCompanyId": "001", "SELLERId": "cab42b31-915e-4459-acb1-261ed126a427", "lastNameLocal": "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:10.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:09.494" endtime="20200402 12:54:10.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:10.023" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:54:10.023" endtime="20200402 12:54:10.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:10.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:10.024" endtime="20200402 12:54:10.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:10.025" endtime="20200402 12:54:10.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:10.026" endtime="20200402 12:54:10.026"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:09.463" endtime="20200402 12:54:10.026"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:10.027" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:10.027" endtime="20200402 12:54:10.028"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:10.028" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'cab42b31-915e-4459-acb1-261ed126a427'}</msg>
<status status="PASS" starttime="20200402 12:54:10.028" endtime="20200402 12:54:10.028"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:10.029" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50...</msg>
<status status="PASS" starttime="20200402 12:54:10.029" endtime="20200402 12:54:10.029"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:10.030" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:10.029" endtime="20200402 12:54:10.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:10.030" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHZ0THcxVER1VUhyMnp1ZTg2c1NVdnA1WG50Vkk2b3B1czFhTlU5bHB0TnhnTlMvMDlWT0NOUVRNbWE0aXdNNDAyOUx2SVo4WHN5N1hTeTE5aFdkZ0E9IiwibmJmIjoxNTg1ODEyMjQ0LCJleHAiOjE1ODU4MTIzMDQsImlhdCI6MTU4NTgxMjI0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cmgQXl6BeiIH06WQVQH7376LenLMoJ_wFMkfjXH0r0E'} 
data={"escrowCompanyId": "001", "sellerID": "cab42b31-915e-4459-acb1-261ed126a427"} 
json=None</msg>
<msg timestamp="20200402 12:54:10.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:10.030" endtime="20200402 12:54:10.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:10.588" level="INFO">{"escrowCompanyId":"001","sellerId":"cab42b31-915e-4459-acb1-261ed126a427","idNumber":"73965526650613","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1881463471","email":"pavan50438@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:06","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:10.588" endtime="20200402 12:54:10.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:10.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:10.589" endtime="20200402 12:54:10.590"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:10.027" endtime="20200402 12:54:10.590"></status>
</kw>
<doc>Invalid: To Verify response if lastNameLocal parameter is entered more than size 150 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:04.170" endtime="20200402 12:54:10.590" critical="yes"></status>
</test>
<test id="s1-t67" name="TC_80 Selle_Details_API Valid Dateofbirth">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:13.595" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:10.593" endtime="20200402 12:54:13.595"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:13.597" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:13.596" endtime="20200402 12:54:13.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:13.598" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:13.597" endtime="20200402 12:54:13.598"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:13.598" endtime="20200402 12:54:13.599"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:13.599" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:13.599" endtime="20200402 12:54:13.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:13.601" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:14.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:13.600" endtime="20200402 12:54:14.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:14.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.106" endtime="20200402 12:54:14.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.107" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRYUFRHQUY3QmxaUG9EK25vckxRYmorMzZPcWc2SnVLRDdlYWM5K2k3eklQQlU5cmlnbU5ZU1BLVmlQQnc9IiwibmJmIjoxNTg1ODEyMjUxLCJleHAiOjE1ODU4MTIzMTEsImlhdCI6MTU4NTgxMjI1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Okv5hZMMbcZz3MWQZuYZ_1WHuNOlCVHzxH4UvL8TO0I</msg>
<status status="PASS" starttime="20200402 12:54:14.107" endtime="20200402 12:54:14.108"></status>
</kw>
<msg timestamp="20200402 12:54:14.108" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRYUFRHQUY...</msg>
<status status="PASS" starttime="20200402 12:54:13.595" endtime="20200402 12:54:14.108"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.110" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:14.110" endtime="20200402 12:54:14.110"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:14.111" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:14.111" endtime="20200402 12:54:14.111"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:14.111" endtime="20200402 12:54:14.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:14.112" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:14.112" endtime="20200402 12:54:14.112"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:14.113" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:14.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.112" endtime="20200402 12:54:14.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:14.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.599" endtime="20200402 12:54:14.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.600" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2lxR2ZvOC9aeEgzeURuUkNJWmVrY3N2K3o2aFd3UER6MXBMRDZuMzNoZjFsdVBtdU1LK3Bhd1pDY29QdTRYejViNklnSmZJZjlaTDZUakpHRmh2QkE9IiwibmJmIjoxNTg1ODEyMjUyLCJleHAiOjE1ODU4MTIzMTIsImlhdCI6MTU4NTgxMjI1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IX8VgdXBpsyG2oLjZdxQQ0HAVjYdNHAKi6xIxxZ1188</msg>
<status status="PASS" starttime="20200402 12:54:14.599" endtime="20200402 12:54:14.600"></status>
</kw>
<msg timestamp="20200402 12:54:14.600" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2lxR2ZvOC9aeEgzeURuUkNJWmVrY3N2K3o2aFd3UER...</msg>
<status status="PASS" starttime="20200402 12:54:14.109" endtime="20200402 12:54:14.600"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:14.601" level="INFO">${Id} = 96763281557346</msg>
<status status="PASS" starttime="20200402 12:54:14.601" endtime="20200402 12:54:14.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.602" level="INFO">${IdNumber} = 96763281557346</msg>
<status status="PASS" starttime="20200402 12:54:14.602" endtime="20200402 12:54:14.602"></status>
</kw>
<msg timestamp="20200402 12:54:14.602" level="INFO">${idNum} = 96763281557346</msg>
<status status="PASS" starttime="20200402 12:54:14.601" endtime="20200402 12:54:14.602"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:14.603" level="INFO">${mobile} = 7601400436</msg>
<status status="PASS" starttime="20200402 12:54:14.603" endtime="20200402 12:54:14.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.604" level="INFO">${mobileNo} = 7601400436</msg>
<status status="PASS" starttime="20200402 12:54:14.604" endtime="20200402 12:54:14.604"></status>
</kw>
<msg timestamp="20200402 12:54:14.604" level="INFO">${MobNo} = 7601400436</msg>
<status status="PASS" starttime="20200402 12:54:14.603" endtime="20200402 12:54:14.604"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:14.605" level="INFO">${Emailnum} = 55232</msg>
<status status="PASS" starttime="20200402 12:54:14.605" endtime="20200402 12:54:14.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.606" level="INFO">${enum} = 55232</msg>
<status status="PASS" starttime="20200402 12:54:14.606" endtime="20200402 12:54:14.606"></status>
</kw>
<msg timestamp="20200402 12:54:14.606" level="INFO">${num} = 55232</msg>
<status status="PASS" starttime="20200402 12:54:14.605" endtime="20200402 12:54:14.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:14.607" level="INFO">${emailid} = pavan55232@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:14.607" endtime="20200402 12:54:14.607"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:14.608" level="INFO">${email} = pavan55232@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:14.607" endtime="20200402 12:54:14.608"></status>
</kw>
<msg timestamp="20200402 12:54:14.608" level="INFO">${emailid} = pavan55232@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:14.604" endtime="20200402 12:54:14.608"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:14.611" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:14.610" endtime="20200402 12:54:14.611"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:14.611" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:14.611" endtime="20200402 12:54:14.611"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:14.612" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:14.612" endtime="20200402 12:54:14.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:14.613" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:14.612" endtime="20200402 12:54:14.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:14.615" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:14.614" endtime="20200402 12:54:14.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:14.617" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '96763281557346', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7601400436', 'email': 'pavan55232@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:14.615" endtime="20200402 12:54:14.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:14.618" endtime="20200402 12:54:14.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:14.619" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2lxR2ZvOC9aeEgzeURuUkNJWmVrY3N2K3o2...</msg>
<status status="PASS" starttime="20200402 12:54:14.619" endtime="20200402 12:54:14.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:14.620" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:14.619" endtime="20200402 12:54:14.620"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:14.621" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2lxR2ZvOC9aeEgzeURuUkNJWmVrY3N2K3o2aFd3UER6MXBMRDZuMzNoZjFsdVBtdU1LK3Bhd1pDY29QdTRYejViNklnSmZJZjlaTDZUakpHRmh2QkE9IiwibmJmIjoxNTg1ODEyMjUyLCJleHAiOjE1ODU4MTIzMTIsImlhdCI6MTU4NTgxMjI1MiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.IX8VgdXBpsyG2oLjZdxQQ0HAVjYdNHAKi6xIxxZ1188'} 
data={"escrowCompanyId": "001", "idNumber": "96763281557346", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7601400436", "email": "pavan55232@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:14.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.620" endtime="20200402 12:54:14.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:14.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.909" endtime="20200402 12:54:14.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:14.910" endtime="20200402 12:54:14.911"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:14.911" endtime="20200402 12:54:14.912"></status>
</kw>
<msg timestamp="20200402 12:54:14.913" level="INFO">${sellerid} = a27a90fe-0e6e-4bf2-b184-e4445ed55b69</msg>
<status status="PASS" starttime="20200402 12:54:14.608" endtime="20200402 12:54:14.913"></status>
</kw>
<msg timestamp="20200402 12:54:14.913" level="INFO">${SellerId} = a27a90fe-0e6e-4bf2-b184-e4445ed55b69</msg>
<msg timestamp="20200402 12:54:14.913" level="INFO">${idnumber} = 96763281557346</msg>
<status status="PASS" starttime="20200402 12:54:14.109" endtime="20200402 12:54:14.913"></status>
</kw>
<kw name="UpdateSellerDetails DateofBirth" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{dateOfBirth}[0]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:14.916" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:14.915" endtime="20200402 12:54:14.917"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:14.918" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:14.917" endtime="20200402 12:54:14.918"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:14.920" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'a27a90fe-0e6e-4bf2-b184-e4445ed55b69', 'dateOfBirth': '20/02/1987', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:14.918" endtime="20200402 12:54:14.920"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:14.921" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRY...</msg>
<status status="PASS" starttime="20200402 12:54:14.920" endtime="20200402 12:54:14.921"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:14.922" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:14.922" endtime="20200402 12:54:14.922"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:14.924" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRYUFRHQUY3QmxaUG9EK25vckxRYmorMzZPcWc2SnVLRDdlYWM5K2k3eklQQlU5cmlnbU5ZU1BLVmlQQnc9IiwibmJmIjoxNTg1ODEyMjUxLCJleHAiOjE1ODU4MTIzMTEsImlhdCI6MTU4NTgxMjI1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Okv5hZMMbcZz3MWQZuYZ_1WHuNOlCVHzxH4UvL8TO0I'} 
data={"escrowCompanyId": "001", "SELLERId": "a27a90fe-0e6e-4bf2-b184-e4445ed55b69", "dateOfBirth": "20/02/1987", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:16.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:14.923" endtime="20200402 12:54:16.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:16.492" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:16.491" endtime="20200402 12:54:16.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:16.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:16.493" endtime="20200402 12:54:16.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:16.494" endtime="20200402 12:54:16.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:16.495" endtime="20200402 12:54:16.495"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:14.914" endtime="20200402 12:54:16.495"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:16.497" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:16.497" endtime="20200402 12:54:16.497"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:16.498" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'a27a90fe-0e6e-4bf2-b184-e4445ed55b69'}</msg>
<status status="PASS" starttime="20200402 12:54:16.497" endtime="20200402 12:54:16.498"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:16.498" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRY...</msg>
<status status="PASS" starttime="20200402 12:54:16.498" endtime="20200402 12:54:16.498"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:16.499" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:16.499" endtime="20200402 12:54:16.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:16.500" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenUxUXE2L1BieVNwTWRyODc4WFZONk5mVlRYUFRHQUY3QmxaUG9EK25vckxRYmorMzZPcWc2SnVLRDdlYWM5K2k3eklQQlU5cmlnbU5ZU1BLVmlQQnc9IiwibmJmIjoxNTg1ODEyMjUxLCJleHAiOjE1ODU4MTIzMTEsImlhdCI6MTU4NTgxMjI1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Okv5hZMMbcZz3MWQZuYZ_1WHuNOlCVHzxH4UvL8TO0I'} 
data={"escrowCompanyId": "001", "sellerID": "a27a90fe-0e6e-4bf2-b184-e4445ed55b69"} 
json=None</msg>
<msg timestamp="20200402 12:54:17.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:16.499" endtime="20200402 12:54:17.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:17.339" level="INFO">{"escrowCompanyId":"001","sellerId":"a27a90fe-0e6e-4bf2-b184-e4445ed55b69","idNumber":"96763281557346","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7601400436","email":"pavan55232@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1987","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:12","updateDate":"02/04/2020 02:24:13","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:17.338" endtime="20200402 12:54:17.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:17.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:17.340" endtime="20200402 12:54:17.340"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:16.496" endtime="20200402 12:54:17.340"></status>
</kw>
<doc>Valid : To Verify response if we enter valid dateOfBirth and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:10.592" endtime="20200402 12:54:17.341" critical="yes"></status>
</test>
<test id="s1-t68" name="TC_81 Selle_Details_API Empty Dateofbirth kyc 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:20.346" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:17.344" endtime="20200402 12:54:20.346"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:20.347" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:20.347" endtime="20200402 12:54:20.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:20.349" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:20.348" endtime="20200402 12:54:20.349"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:20.349" endtime="20200402 12:54:20.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:20.350" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:20.349" endtime="20200402 12:54:20.350"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:20.350" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:21.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:20.350" endtime="20200402 12:54:21.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:21.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:21.472" endtime="20200402 12:54:21.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:21.473" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5QjhST3lxYWpRMDNFYk9wZloyZFJWNTRyVFlsc1JScnI1RUREZjZNMHhnQ0Z1d2NITkk1Ty9meTRMN2c9IiwibmJmIjoxNTg1ODEyMjU4LCJleHAiOjE1ODU4MTIzMTgsImlhdCI6MTU4NTgxMjI1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9JOtYfq3MidyrJOIzwh6VhmqlxLtt9Bqq46wdR7u4xY</msg>
<status status="PASS" starttime="20200402 12:54:21.473" endtime="20200402 12:54:21.473"></status>
</kw>
<msg timestamp="20200402 12:54:21.474" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5QjhST3l...</msg>
<status status="PASS" starttime="20200402 12:54:20.346" endtime="20200402 12:54:21.474"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:21.476" level="INFO">${Id} = 79063089634300</msg>
<status status="PASS" starttime="20200402 12:54:21.475" endtime="20200402 12:54:21.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:21.477" level="INFO">${IdNumber} = 79063089634300</msg>
<status status="PASS" starttime="20200402 12:54:21.476" endtime="20200402 12:54:21.477"></status>
</kw>
<msg timestamp="20200402 12:54:21.477" level="INFO">${idNum} = 79063089634300</msg>
<status status="PASS" starttime="20200402 12:54:21.475" endtime="20200402 12:54:21.477"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:21.480" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:21.479" endtime="20200402 12:54:21.480"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:21.482" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:21.481" endtime="20200402 12:54:21.482"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:21.482" endtime="20200402 12:54:21.483"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:21.484" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:21.483" endtime="20200402 12:54:21.484"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:21.485" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:22.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:21.484" endtime="20200402 12:54:22.190"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:22.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.190" endtime="20200402 12:54:22.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.191" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGlDYjFmQUZFVllvbkhCWm5EQXZpcDVodjlTOEd1NWpIMHFTTDhkNW9UT2ZSS0RiOXo0WnNsUzBRS1pTcEdjNnp4Ujl3MWJ4cHdIakYraHpsRnMvbGM9IiwibmJmIjoxNTg1ODEyMjU5LCJleHAiOjE1ODU4MTIzMTksImlhdCI6MTU4NTgxMjI1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.A1pyGk8kIrMphHzb0CJpvoY4FxlRtT_8Xbgcl6szPJ4</msg>
<status status="PASS" starttime="20200402 12:54:22.191" endtime="20200402 12:54:22.191"></status>
</kw>
<msg timestamp="20200402 12:54:22.192" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGlDYjFmQUZFVllvbkhCWm5EQXZpcDVodjlTOEd1NWp...</msg>
<status status="PASS" starttime="20200402 12:54:21.479" endtime="20200402 12:54:22.192"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:22.193" level="INFO">${Id} = 53609946029923</msg>
<status status="PASS" starttime="20200402 12:54:22.192" endtime="20200402 12:54:22.193"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.193" level="INFO">${IdNumber} = 53609946029923</msg>
<status status="PASS" starttime="20200402 12:54:22.193" endtime="20200402 12:54:22.193"></status>
</kw>
<msg timestamp="20200402 12:54:22.194" level="INFO">${idNum} = 53609946029923</msg>
<status status="PASS" starttime="20200402 12:54:22.192" endtime="20200402 12:54:22.194"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:22.194" level="INFO">${mobile} = 4875507662</msg>
<status status="PASS" starttime="20200402 12:54:22.194" endtime="20200402 12:54:22.194"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.195" level="INFO">${mobileNo} = 4875507662</msg>
<status status="PASS" starttime="20200402 12:54:22.195" endtime="20200402 12:54:22.195"></status>
</kw>
<msg timestamp="20200402 12:54:22.195" level="INFO">${MobNo} = 4875507662</msg>
<status status="PASS" starttime="20200402 12:54:22.194" endtime="20200402 12:54:22.195"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:22.196" level="INFO">${Emailnum} = 80153</msg>
<status status="PASS" starttime="20200402 12:54:22.196" endtime="20200402 12:54:22.197"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.197" level="INFO">${enum} = 80153</msg>
<status status="PASS" starttime="20200402 12:54:22.197" endtime="20200402 12:54:22.197"></status>
</kw>
<msg timestamp="20200402 12:54:22.198" level="INFO">${num} = 80153</msg>
<status status="PASS" starttime="20200402 12:54:22.196" endtime="20200402 12:54:22.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:22.198" level="INFO">${emailid} = pavan80153@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.198" endtime="20200402 12:54:22.198"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.199" level="INFO">${email} = pavan80153@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.198" endtime="20200402 12:54:22.199"></status>
</kw>
<msg timestamp="20200402 12:54:22.199" level="INFO">${emailid} = pavan80153@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.195" endtime="20200402 12:54:22.199"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:22.202" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:22.201" endtime="20200402 12:54:22.202"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:22.203" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:22.202" endtime="20200402 12:54:22.203"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:22.203" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:22.203" endtime="20200402 12:54:22.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:22.205" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:22.203" endtime="20200402 12:54:22.205"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:22.206" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:22.205" endtime="20200402 12:54:22.206"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:22.209" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '53609946029923', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4875507662', 'email': 'pavan80153@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:22.207" endtime="20200402 12:54:22.209"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:22.209" endtime="20200402 12:54:22.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:22.211" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGlDYjFmQUZFVllvbkhCWm5EQXZpcDVodjlT...</msg>
<status status="PASS" starttime="20200402 12:54:22.210" endtime="20200402 12:54:22.211"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:22.212" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:22.211" endtime="20200402 12:54:22.212"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:22.212" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGlDYjFmQUZFVllvbkhCWm5EQXZpcDVodjlTOEd1NWpIMHFTTDhkNW9UT2ZSS0RiOXo0WnNsUzBRS1pTcEdjNnp4Ujl3MWJ4cHdIakYraHpsRnMvbGM9IiwibmJmIjoxNTg1ODEyMjU5LCJleHAiOjE1ODU4MTIzMTksImlhdCI6MTU4NTgxMjI1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.A1pyGk8kIrMphHzb0CJpvoY4FxlRtT_8Xbgcl6szPJ4'} 
data={"escrowCompanyId": "001", "idNumber": "53609946029923", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4875507662", "email": "pavan80153@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:22.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.212" endtime="20200402 12:54:22.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:22.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.445" endtime="20200402 12:54:22.446"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:22.446" endtime="20200402 12:54:22.446"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:22.446" endtime="20200402 12:54:22.447"></status>
</kw>
<msg timestamp="20200402 12:54:22.447" level="INFO">${sellerid} = 2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b</msg>
<status status="PASS" starttime="20200402 12:54:22.199" endtime="20200402 12:54:22.447"></status>
</kw>
<msg timestamp="20200402 12:54:22.448" level="INFO">${SellerId} = 2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b</msg>
<msg timestamp="20200402 12:54:22.448" level="INFO">${idnumber} = 53609946029923</msg>
<status status="PASS" starttime="20200402 12:54:21.478" endtime="20200402 12:54:22.448"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:22.449" level="INFO">${Emailnum} = 84628</msg>
<status status="PASS" starttime="20200402 12:54:22.449" endtime="20200402 12:54:22.449"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.450" level="INFO">${enum} = 84628</msg>
<status status="PASS" starttime="20200402 12:54:22.450" endtime="20200402 12:54:22.450"></status>
</kw>
<msg timestamp="20200402 12:54:22.450" level="INFO">${num} = 84628</msg>
<status status="PASS" starttime="20200402 12:54:22.449" endtime="20200402 12:54:22.450"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:22.451" level="INFO">${emailid} = pavan84628@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.451" endtime="20200402 12:54:22.451"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:22.451" level="INFO">${email} = pavan84628@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.451" endtime="20200402 12:54:22.451"></status>
</kw>
<msg timestamp="20200402 12:54:22.452" level="INFO">${emailid} = pavan84628@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:22.448" endtime="20200402 12:54:22.452"></status>
</kw>
<kw name="UpdateSellerDetails Valid data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>${EMPTY}</arg>
<arg>${IDno_enter_kyc_1}[4]</arg>
<arg>${1}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:22.453" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:22.453" endtime="20200402 12:54:22.453"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:22.454" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:54:22.454" endtime="20200402 12:54:22.454"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:22.454" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:54:22.454" endtime="20200402 12:54:22.454"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:22.456" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b', 'idNumber': '79063089634300', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '', 'otherVerificat...</msg>
<status status="PASS" starttime="20200402 12:54:22.455" endtime="20200402 12:54:22.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:22.456" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5...</msg>
<status status="PASS" starttime="20200402 12:54:22.456" endtime="20200402 12:54:22.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:22.457" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:22.457" endtime="20200402 12:54:22.457"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:22.458" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5QjhST3lxYWpRMDNFYk9wZloyZFJWNTRyVFlsc1JScnI1RUREZjZNMHhnQ0Z1d2NITkk1Ty9meTRMN2c9IiwibmJmIjoxNTg1ODEyMjU4LCJleHAiOjE1ODU4MTIzMTgsImlhdCI6MTU4NTgxMjI1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9JOtYfq3MidyrJOIzwh6VhmqlxLtt9Bqq46wdR7u4xY'} 
data={"escrowCompanyId": "001", "SELLERId": "2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b", "idNumber": "79063089634300", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "", "otherVerification": "AB12311678919", "typeOfID": 1, "kycRequest": 1, "email": "pavan84628@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:54:22.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.457" endtime="20200402 12:54:22.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:22.952" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:54:22.951" endtime="20200402 12:54:22.952"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:22.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.952" endtime="20200402 12:54:22.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:22.953" endtime="20200402 12:54:22.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:22.954" endtime="20200402 12:54:22.954"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:22.452" endtime="20200402 12:54:22.954"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:22.955" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:22.955" endtime="20200402 12:54:22.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:22.956" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b'}</msg>
<status status="PASS" starttime="20200402 12:54:22.956" endtime="20200402 12:54:22.956"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:22.957" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5...</msg>
<status status="PASS" starttime="20200402 12:54:22.957" endtime="20200402 12:54:22.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:22.958" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:22.957" endtime="20200402 12:54:22.958"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:22.958" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGdZdUVOaTl2cTg1ME1sZzYrVzlzTWt6RHF5QjhST3lxYWpRMDNFYk9wZloyZFJWNTRyVFlsc1JScnI1RUREZjZNMHhnQ0Z1d2NITkk1Ty9meTRMN2c9IiwibmJmIjoxNTg1ODEyMjU4LCJleHAiOjE1ODU4MTIzMTgsImlhdCI6MTU4NTgxMjI1OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.9JOtYfq3MidyrJOIzwh6VhmqlxLtt9Bqq46wdR7u4xY'} 
data={"escrowCompanyId": "001", "sellerID": "2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b"} 
json=None</msg>
<msg timestamp="20200402 12:54:24.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:22.958" endtime="20200402 12:54:24.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:24.493" level="INFO">{"escrowCompanyId":"001","sellerId":"2cbafcb7-8f6b-4c35-800b-7e7d7d6a0c0b","idNumber":"53609946029923","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4875507662","email":"pavan80153@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:19","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:24.493" endtime="20200402 12:54:24.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:24.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:24.494" endtime="20200402 12:54:24.495"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:22.955" endtime="20200402 12:54:24.495"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter dateOfBirth and request is sent with all mandatory fields with KYCRequest=1</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:17.343" endtime="20200402 12:54:24.496" critical="yes"></status>
</test>
<test id="s1-t69" name="TC_82 Selle_Details_API Valid Dateofbirth">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:27.500" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:24.498" endtime="20200402 12:54:27.500"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:27.501" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:27.501" endtime="20200402 12:54:27.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:27.502" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:27.502" endtime="20200402 12:54:27.502"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:27.502" endtime="20200402 12:54:27.503"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:27.503" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:27.503" endtime="20200402 12:54:27.503"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:27.504" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:28.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:27.503" endtime="20200402 12:54:28.406"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:28.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:28.407" endtime="20200402 12:54:28.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:28.408" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0ZGVNZ1creVhxUm4xMENSVUhuR0JKbnNZT0ZSbXBOSjB3TjRkenF3bWxZK1NlVTdMN0dlREE4ZVBDdmM9IiwibmJmIjoxNTg1ODEyMjY1LCJleHAiOjE1ODU4MTIzMjUsImlhdCI6MTU4NTgxMjI2NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bKyip5s5tVTbqw6C6Iu0h1FljBjh43jgjT0Rmvgp9Kw</msg>
<status status="PASS" starttime="20200402 12:54:28.407" endtime="20200402 12:54:28.408"></status>
</kw>
<msg timestamp="20200402 12:54:28.408" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0ZGVNZ1c...</msg>
<status status="PASS" starttime="20200402 12:54:27.500" endtime="20200402 12:54:28.408"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:28.410" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:28.410" endtime="20200402 12:54:28.410"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:28.411" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:28.410" endtime="20200402 12:54:28.411"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:28.411" endtime="20200402 12:54:28.411"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:28.412" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:28.411" endtime="20200402 12:54:28.412"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:28.412" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:29.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:28.412" endtime="20200402 12:54:29.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:29.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:29.908" endtime="20200402 12:54:29.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:29.910" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN01LcTY4RW83dG5KVEx2ZjJVRWhwNGNYRHdBRUNmaUlnMW1GSUlEUlFRSU1rejJwc0J6M0V6M0JvOUwxd1RQVmM0cGg0Q09ITmZkd2dzdXhiVU9yNTA9IiwibmJmIjoxNTg1ODEyMjY3LCJleHAiOjE1ODU4MTIzMjcsImlhdCI6MTU4NTgxMjI2NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qDJxuGGhYhiTve73x9rj9FCWvENMiPts7xK4NkhR8aM</msg>
<status status="PASS" starttime="20200402 12:54:29.909" endtime="20200402 12:54:29.910"></status>
</kw>
<msg timestamp="20200402 12:54:29.910" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN01LcTY4RW83dG5KVEx2ZjJVRWhwNGNYRHdBRUNmaUl...</msg>
<status status="PASS" starttime="20200402 12:54:28.409" endtime="20200402 12:54:29.910"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:29.911" level="INFO">${Id} = 40392097249386</msg>
<status status="PASS" starttime="20200402 12:54:29.911" endtime="20200402 12:54:29.911"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:29.912" level="INFO">${IdNumber} = 40392097249386</msg>
<status status="PASS" starttime="20200402 12:54:29.911" endtime="20200402 12:54:29.912"></status>
</kw>
<msg timestamp="20200402 12:54:29.912" level="INFO">${idNum} = 40392097249386</msg>
<status status="PASS" starttime="20200402 12:54:29.910" endtime="20200402 12:54:29.912"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:29.913" level="INFO">${mobile} = 6662987887</msg>
<status status="PASS" starttime="20200402 12:54:29.912" endtime="20200402 12:54:29.913"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:29.913" level="INFO">${mobileNo} = 6662987887</msg>
<status status="PASS" starttime="20200402 12:54:29.913" endtime="20200402 12:54:29.913"></status>
</kw>
<msg timestamp="20200402 12:54:29.914" level="INFO">${MobNo} = 6662987887</msg>
<status status="PASS" starttime="20200402 12:54:29.912" endtime="20200402 12:54:29.914"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:29.915" level="INFO">${Emailnum} = 80923</msg>
<status status="PASS" starttime="20200402 12:54:29.915" endtime="20200402 12:54:29.915"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:29.915" level="INFO">${enum} = 80923</msg>
<status status="PASS" starttime="20200402 12:54:29.915" endtime="20200402 12:54:29.915"></status>
</kw>
<msg timestamp="20200402 12:54:29.916" level="INFO">${num} = 80923</msg>
<status status="PASS" starttime="20200402 12:54:29.914" endtime="20200402 12:54:29.916"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:29.916" level="INFO">${emailid} = pavan80923@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:29.916" endtime="20200402 12:54:29.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:29.917" level="INFO">${email} = pavan80923@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:29.916" endtime="20200402 12:54:29.917"></status>
</kw>
<msg timestamp="20200402 12:54:29.918" level="INFO">${emailid} = pavan80923@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:29.914" endtime="20200402 12:54:29.918"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:29.921" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:29.920" endtime="20200402 12:54:29.921"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:29.922" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:29.921" endtime="20200402 12:54:29.922"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:29.922" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:29.922" endtime="20200402 12:54:29.922"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:29.924" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:29.923" endtime="20200402 12:54:29.924"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:29.925" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:29.924" endtime="20200402 12:54:29.926"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:29.928" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '40392097249386', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6662987887', 'email': 'pavan80923@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:29.926" endtime="20200402 12:54:29.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:29.929" endtime="20200402 12:54:29.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:29.930" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN01LcTY4RW83dG5KVEx2ZjJVRWhwNGNYRHdB...</msg>
<status status="PASS" starttime="20200402 12:54:29.930" endtime="20200402 12:54:29.930"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:29.931" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:29.930" endtime="20200402 12:54:29.931"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:29.932" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN01LcTY4RW83dG5KVEx2ZjJVRWhwNGNYRHdBRUNmaUlnMW1GSUlEUlFRSU1rejJwc0J6M0V6M0JvOUwxd1RQVmM0cGg0Q09ITmZkd2dzdXhiVU9yNTA9IiwibmJmIjoxNTg1ODEyMjY3LCJleHAiOjE1ODU4MTIzMjcsImlhdCI6MTU4NTgxMjI2NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qDJxuGGhYhiTve73x9rj9FCWvENMiPts7xK4NkhR8aM'} 
data={"escrowCompanyId": "001", "idNumber": "40392097249386", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6662987887", "email": "pavan80923@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:30.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:29.931" endtime="20200402 12:54:30.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:30.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:30.176" endtime="20200402 12:54:30.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:30.177" endtime="20200402 12:54:30.177"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:30.177" endtime="20200402 12:54:30.178"></status>
</kw>
<msg timestamp="20200402 12:54:30.178" level="INFO">${sellerid} = c33d5a7e-5ea9-4e58-8d29-182505ace655</msg>
<status status="PASS" starttime="20200402 12:54:29.918" endtime="20200402 12:54:30.178"></status>
</kw>
<msg timestamp="20200402 12:54:30.178" level="INFO">${SellerId} = c33d5a7e-5ea9-4e58-8d29-182505ace655</msg>
<msg timestamp="20200402 12:54:30.178" level="INFO">${idnumber} = 40392097249386</msg>
<status status="PASS" starttime="20200402 12:54:28.409" endtime="20200402 12:54:30.178"></status>
</kw>
<kw name="UpdateSellerDetails DateofBirth" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:30.180" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:30.180" endtime="20200402 12:54:30.181"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:30.181" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:30.181" endtime="20200402 12:54:30.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:30.182" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'c33d5a7e-5ea9-4e58-8d29-182505ace655', 'dateOfBirth': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:30.181" endtime="20200402 12:54:30.182"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:30.183" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0...</msg>
<status status="PASS" starttime="20200402 12:54:30.182" endtime="20200402 12:54:30.183"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:30.183" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:30.183" endtime="20200402 12:54:30.183"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:30.184" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0ZGVNZ1creVhxUm4xMENSVUhuR0JKbnNZT0ZSbXBOSjB3TjRkenF3bWxZK1NlVTdMN0dlREE4ZVBDdmM9IiwibmJmIjoxNTg1ODEyMjY1LCJleHAiOjE1ODU4MTIzMjUsImlhdCI6MTU4NTgxMjI2NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bKyip5s5tVTbqw6C6Iu0h1FljBjh43jgjT0Rmvgp9Kw'} 
data={"escrowCompanyId": "001", "SELLERId": "c33d5a7e-5ea9-4e58-8d29-182505ace655", "dateOfBirth": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:30.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:30.184" endtime="20200402 12:54:30.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:30.835" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:30.834" endtime="20200402 12:54:30.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:30.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:30.836" endtime="20200402 12:54:30.836"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:30.837" endtime="20200402 12:54:30.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:30.837" endtime="20200402 12:54:30.838"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:30.179" endtime="20200402 12:54:30.838"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:30.839" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:30.839" endtime="20200402 12:54:30.840"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:30.841" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'c33d5a7e-5ea9-4e58-8d29-182505ace655'}</msg>
<status status="PASS" starttime="20200402 12:54:30.840" endtime="20200402 12:54:30.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:30.841" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0...</msg>
<status status="PASS" starttime="20200402 12:54:30.841" endtime="20200402 12:54:30.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:30.842" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:30.842" endtime="20200402 12:54:30.842"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:30.843" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTVkSnJ1Vk5GR2NaNnVPWUJQVUxFbEFSbnM0ZGVNZ1creVhxUm4xMENSVUhuR0JKbnNZT0ZSbXBOSjB3TjRkenF3bWxZK1NlVTdMN0dlREE4ZVBDdmM9IiwibmJmIjoxNTg1ODEyMjY1LCJleHAiOjE1ODU4MTIzMjUsImlhdCI6MTU4NTgxMjI2NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.bKyip5s5tVTbqw6C6Iu0h1FljBjh43jgjT0Rmvgp9Kw'} 
data={"escrowCompanyId": "001", "sellerID": "c33d5a7e-5ea9-4e58-8d29-182505ace655"} 
json=None</msg>
<msg timestamp="20200402 12:54:32.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:30.842" endtime="20200402 12:54:32.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:32.240" level="INFO">{"escrowCompanyId":"001","sellerId":"c33d5a7e-5ea9-4e58-8d29-182505ace655","idNumber":"40392097249386","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6662987887","email":"pavan80923@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":null,"nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:27","updateDate":"02/04/2020 02:24:28","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:32.239" endtime="20200402 12:54:32.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:32.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:32.241" endtime="20200402 12:54:32.241"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:30.839" endtime="20200402 12:54:32.241"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter dateOfBirth and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:24.497" endtime="20200402 12:54:32.242" critical="yes"></status>
</test>
<test id="s1-t70" name="TC_83 Selle_Details_API InValid Dateofbirth">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:35.247" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:32.244" endtime="20200402 12:54:35.247"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:35.249" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:35.248" endtime="20200402 12:54:35.249"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:35.250" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:35.250" endtime="20200402 12:54:35.250"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:35.250" endtime="20200402 12:54:35.251"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:35.252" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:35.251" endtime="20200402 12:54:35.252"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:35.253" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:35.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:35.252" endtime="20200402 12:54:35.870"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:35.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:35.870" endtime="20200402 12:54:35.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:35.871" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktlaTNwZnBXSi9DWUEyWW40N3RXNTVJRG81SXk4S3pwRHk4VlRFaEpKWTM0aGY3azRxM0tkUEg1MG9TZUU9IiwibmJmIjoxNTg1ODEyMjczLCJleHAiOjE1ODU4MTIzMzMsImlhdCI6MTU4NTgxMjI3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Yyy_KCXQUzNS9pUHF7_Urkx24dkKvbTOg1DS26FQydM</msg>
<status status="PASS" starttime="20200402 12:54:35.871" endtime="20200402 12:54:35.871"></status>
</kw>
<msg timestamp="20200402 12:54:35.872" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktlaTNwZnB...</msg>
<status status="PASS" starttime="20200402 12:54:35.248" endtime="20200402 12:54:35.872"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:35.873" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:35.873" endtime="20200402 12:54:35.873"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:35.874" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:35.874" endtime="20200402 12:54:35.874"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:35.874" endtime="20200402 12:54:35.875"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:35.876" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:35.875" endtime="20200402 12:54:35.876"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:35.876" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:36.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:35.876" endtime="20200402 12:54:36.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:36.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:36.383" endtime="20200402 12:54:36.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:36.384" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemlPeTNJZUx2TTZ0SUNpclowZjRid2lxWEJmVC80eitWZWJFTm9DbmJQQkM2ZU5CT1d5NHNUZkxMWC9GUmJqQzhURENLaW03ZjZnQWZycG9ITEFRb289IiwibmJmIjoxNTg1ODEyMjczLCJleHAiOjE1ODU4MTIzMzMsImlhdCI6MTU4NTgxMjI3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.RgsT8C5IadBqzf2Fg10XSKMh8saroXqEsXYF58Jc1qE</msg>
<status status="PASS" starttime="20200402 12:54:36.384" endtime="20200402 12:54:36.384"></status>
</kw>
<msg timestamp="20200402 12:54:36.385" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemlPeTNJZUx2TTZ0SUNpclowZjRid2lxWEJmVC80eit...</msg>
<status status="PASS" starttime="20200402 12:54:35.872" endtime="20200402 12:54:36.385"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:36.386" level="INFO">${Id} = 63308156658463</msg>
<status status="PASS" starttime="20200402 12:54:36.386" endtime="20200402 12:54:36.387"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:36.388" level="INFO">${IdNumber} = 63308156658463</msg>
<status status="PASS" starttime="20200402 12:54:36.387" endtime="20200402 12:54:36.388"></status>
</kw>
<msg timestamp="20200402 12:54:36.388" level="INFO">${idNum} = 63308156658463</msg>
<status status="PASS" starttime="20200402 12:54:36.385" endtime="20200402 12:54:36.388"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:36.390" level="INFO">${mobile} = 2152463995</msg>
<status status="PASS" starttime="20200402 12:54:36.389" endtime="20200402 12:54:36.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:36.391" level="INFO">${mobileNo} = 2152463995</msg>
<status status="PASS" starttime="20200402 12:54:36.390" endtime="20200402 12:54:36.391"></status>
</kw>
<msg timestamp="20200402 12:54:36.391" level="INFO">${MobNo} = 2152463995</msg>
<status status="PASS" starttime="20200402 12:54:36.389" endtime="20200402 12:54:36.391"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:36.393" level="INFO">${Emailnum} = 83707</msg>
<status status="PASS" starttime="20200402 12:54:36.392" endtime="20200402 12:54:36.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:36.394" level="INFO">${enum} = 83707</msg>
<status status="PASS" starttime="20200402 12:54:36.393" endtime="20200402 12:54:36.394"></status>
</kw>
<msg timestamp="20200402 12:54:36.394" level="INFO">${num} = 83707</msg>
<status status="PASS" starttime="20200402 12:54:36.392" endtime="20200402 12:54:36.394"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:36.395" level="INFO">${emailid} = pavan83707@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:36.395" endtime="20200402 12:54:36.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:36.396" level="INFO">${email} = pavan83707@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:36.395" endtime="20200402 12:54:36.396"></status>
</kw>
<msg timestamp="20200402 12:54:36.396" level="INFO">${emailid} = pavan83707@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:36.391" endtime="20200402 12:54:36.396"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:36.400" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:36.399" endtime="20200402 12:54:36.400"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:36.401" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:36.401" endtime="20200402 12:54:36.401"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:36.402" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:36.401" endtime="20200402 12:54:36.402"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:36.404" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:36.403" endtime="20200402 12:54:36.405"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:36.407" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:36.405" endtime="20200402 12:54:36.408"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:36.411" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '63308156658463', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2152463995', 'email': 'pavan83707@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:36.408" endtime="20200402 12:54:36.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:36.412" endtime="20200402 12:54:36.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:36.414" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemlPeTNJZUx2TTZ0SUNpclowZjRid2lxWEJm...</msg>
<status status="PASS" starttime="20200402 12:54:36.413" endtime="20200402 12:54:36.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:36.415" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:36.414" endtime="20200402 12:54:36.415"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:36.416" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QemlPeTNJZUx2TTZ0SUNpclowZjRid2lxWEJmVC80eitWZWJFTm9DbmJQQkM2ZU5CT1d5NHNUZkxMWC9GUmJqQzhURENLaW03ZjZnQWZycG9ITEFRb289IiwibmJmIjoxNTg1ODEyMjczLCJleHAiOjE1ODU4MTIzMzMsImlhdCI6MTU4NTgxMjI3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.RgsT8C5IadBqzf2Fg10XSKMh8saroXqEsXYF58Jc1qE'} 
data={"escrowCompanyId": "001", "idNumber": "63308156658463", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2152463995", "email": "pavan83707@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:36.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:36.415" endtime="20200402 12:54:36.742"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:36.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:36.742" endtime="20200402 12:54:36.743"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:36.743" endtime="20200402 12:54:36.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:36.744" endtime="20200402 12:54:36.745"></status>
</kw>
<msg timestamp="20200402 12:54:36.745" level="INFO">${sellerid} = 6d5a0382-01d3-4f69-bd77-978b54ed207c</msg>
<status status="PASS" starttime="20200402 12:54:36.396" endtime="20200402 12:54:36.745"></status>
</kw>
<msg timestamp="20200402 12:54:36.745" level="INFO">${SellerId} = 6d5a0382-01d3-4f69-bd77-978b54ed207c</msg>
<msg timestamp="20200402 12:54:36.746" level="INFO">${idnumber} = 63308156658463</msg>
<status status="PASS" starttime="20200402 12:54:35.872" endtime="20200402 12:54:36.746"></status>
</kw>
<kw name="UpdateSellerDetails DateofBirth" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{IN_dateOfBirth}[0]</arg>
<arg>${0}</arg>
<arg>E04</arg>
<arg>Invalid date/time format</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:36.748" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:36.748" endtime="20200402 12:54:36.749"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:36.750" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:36.749" endtime="20200402 12:54:36.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:36.751" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '6d5a0382-01d3-4f69-bd77-978b54ed207c', 'dateOfBirth': '35/33/2001', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:36.750" endtime="20200402 12:54:36.751"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:36.752" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktl...</msg>
<status status="PASS" starttime="20200402 12:54:36.752" endtime="20200402 12:54:36.752"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:36.753" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:36.753" endtime="20200402 12:54:36.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:36.755" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktlaTNwZnBXSi9DWUEyWW40N3RXNTVJRG81SXk4S3pwRHk4VlRFaEpKWTM0aGY3azRxM0tkUEg1MG9TZUU9IiwibmJmIjoxNTg1ODEyMjczLCJleHAiOjE1ODU4MTIzMzMsImlhdCI6MTU4NTgxMjI3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Yyy_KCXQUzNS9pUHF7_Urkx24dkKvbTOg1DS26FQydM'} 
data={"escrowCompanyId": "001", "SELLERId": "6d5a0382-01d3-4f69-bd77-978b54ed207c", "dateOfBirth": "35/33/2001", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:37.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:36.754" endtime="20200402 12:54:37.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:37.246" level="INFO">{"responseCode":"E04","resDescription":"Invalid date/time format"}</msg>
<status status="PASS" starttime="20200402 12:54:37.245" endtime="20200402 12:54:37.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:37.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:37.247" endtime="20200402 12:54:37.247"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:37.248" endtime="20200402 12:54:37.248"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:37.249" endtime="20200402 12:54:37.249"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:36.746" endtime="20200402 12:54:37.250"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:37.251" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:37.251" endtime="20200402 12:54:37.252"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:37.253" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '6d5a0382-01d3-4f69-bd77-978b54ed207c'}</msg>
<status status="PASS" starttime="20200402 12:54:37.252" endtime="20200402 12:54:37.253"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:37.254" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktl...</msg>
<status status="PASS" starttime="20200402 12:54:37.253" endtime="20200402 12:54:37.254"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:37.255" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:37.254" endtime="20200402 12:54:37.255"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:37.256" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL2tmcnowY1BMN3hVdENjQmFWNG5KdTRSWktlaTNwZnBXSi9DWUEyWW40N3RXNTVJRG81SXk4S3pwRHk4VlRFaEpKWTM0aGY3azRxM0tkUEg1MG9TZUU9IiwibmJmIjoxNTg1ODEyMjczLCJleHAiOjE1ODU4MTIzMzMsImlhdCI6MTU4NTgxMjI3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Yyy_KCXQUzNS9pUHF7_Urkx24dkKvbTOg1DS26FQydM'} 
data={"escrowCompanyId": "001", "sellerID": "6d5a0382-01d3-4f69-bd77-978b54ed207c"} 
json=None</msg>
<msg timestamp="20200402 12:54:37.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:37.255" endtime="20200402 12:54:37.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:37.784" level="INFO">{"escrowCompanyId":"001","sellerId":"6d5a0382-01d3-4f69-bd77-978b54ed207c","idNumber":"63308156658463","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2152463995","email":"pavan83707@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:34","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:37.783" endtime="20200402 12:54:37.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:37.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:37.785" endtime="20200402 12:54:37.786"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:37.250" endtime="20200402 12:54:37.786"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter dateOfBirth and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>E04</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:32.243" endtime="20200402 12:54:37.787" critical="yes"></status>
</test>
<test id="s1-t71" name="TC_84 Selle_Details_API Empty nationalityId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:40.792" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:37.790" endtime="20200402 12:54:40.792"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:40.794" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:40.793" endtime="20200402 12:54:40.794"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:40.795" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:40.794" endtime="20200402 12:54:40.795"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:40.795" endtime="20200402 12:54:40.795"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:40.796" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:40.795" endtime="20200402 12:54:40.796"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:40.797" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:40.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:40.796" endtime="20200402 12:54:40.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:40.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:40.986" endtime="20200402 12:54:40.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:40.987" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5vQTNBbGxRNldjbjY2eUpwK1RZaHltdE9hbW5TUmhhaWp0K2hwNjNmYUVEZEtrNHNpdmRPRVZnZUZDU2M9IiwibmJmIjoxNTg1ODEyMjc4LCJleHAiOjE1ODU4MTIzMzgsImlhdCI6MTU4NTgxMjI3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J60R9oxe7jrpkCSL-XbDlLkocvSw_OgFRBFyEharpq8</msg>
<status status="PASS" starttime="20200402 12:54:40.987" endtime="20200402 12:54:40.987"></status>
</kw>
<msg timestamp="20200402 12:54:40.988" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5vQTNBbGx...</msg>
<status status="PASS" starttime="20200402 12:54:40.793" endtime="20200402 12:54:40.988"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:40.989" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:40.989" endtime="20200402 12:54:40.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:40.990" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:40.990" endtime="20200402 12:54:40.990"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:40.990" endtime="20200402 12:54:40.991"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:40.991" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:40.991" endtime="20200402 12:54:40.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:40.992" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:47.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:40.992" endtime="20200402 12:54:47.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:47.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.023" endtime="20200402 12:54:47.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:47.024" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTl5bUxXK3NxNmhJNUpaZUtjS3VCNElLZFhFdXdVNWlTZVNHUEJlbGlOMUVDM28xblpNVHNGQUlGVC9xSmZEZmFqd1lsRFAxUTJmUkRCaXR5UVpDZ3M9IiwibmJmIjoxNTg1ODEyMjg0LCJleHAiOjE1ODU4MTIzNDQsImlhdCI6MTU4NTgxMjI4NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cwnuPuMHiljByZxX32zupy267lQGuyGAAAEJCrM9X4A</msg>
<status status="PASS" starttime="20200402 12:54:47.024" endtime="20200402 12:54:47.024"></status>
</kw>
<msg timestamp="20200402 12:54:47.025" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTl5bUxXK3NxNmhJNUpaZUtjS3VCNElLZFhFdXdVNWl...</msg>
<status status="PASS" starttime="20200402 12:54:40.989" endtime="20200402 12:54:47.025"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:47.025" level="INFO">${Id} = 35354910499068</msg>
<status status="PASS" starttime="20200402 12:54:47.025" endtime="20200402 12:54:47.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:47.026" level="INFO">${IdNumber} = 35354910499068</msg>
<status status="PASS" starttime="20200402 12:54:47.026" endtime="20200402 12:54:47.026"></status>
</kw>
<msg timestamp="20200402 12:54:47.026" level="INFO">${idNum} = 35354910499068</msg>
<status status="PASS" starttime="20200402 12:54:47.025" endtime="20200402 12:54:47.026"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:47.027" level="INFO">${mobile} = 6486482559</msg>
<status status="PASS" starttime="20200402 12:54:47.027" endtime="20200402 12:54:47.027"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:47.028" level="INFO">${mobileNo} = 6486482559</msg>
<status status="PASS" starttime="20200402 12:54:47.027" endtime="20200402 12:54:47.028"></status>
</kw>
<msg timestamp="20200402 12:54:47.028" level="INFO">${MobNo} = 6486482559</msg>
<status status="PASS" starttime="20200402 12:54:47.026" endtime="20200402 12:54:47.028"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:47.030" level="INFO">${Emailnum} = 47644</msg>
<status status="PASS" starttime="20200402 12:54:47.029" endtime="20200402 12:54:47.030"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:47.031" level="INFO">${enum} = 47644</msg>
<status status="PASS" starttime="20200402 12:54:47.030" endtime="20200402 12:54:47.031"></status>
</kw>
<msg timestamp="20200402 12:54:47.031" level="INFO">${num} = 47644</msg>
<status status="PASS" starttime="20200402 12:54:47.029" endtime="20200402 12:54:47.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:47.032" level="INFO">${emailid} = pavan47644@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:47.032" endtime="20200402 12:54:47.032"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:47.032" level="INFO">${email} = pavan47644@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:47.032" endtime="20200402 12:54:47.032"></status>
</kw>
<msg timestamp="20200402 12:54:47.033" level="INFO">${emailid} = pavan47644@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:47.029" endtime="20200402 12:54:47.033"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:47.036" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:47.035" endtime="20200402 12:54:47.036"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:47.036" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:47.036" endtime="20200402 12:54:47.037"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:47.037" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:47.037" endtime="20200402 12:54:47.037"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:47.038" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:47.037" endtime="20200402 12:54:47.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:47.040" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:47.039" endtime="20200402 12:54:47.040"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:47.042" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '35354910499068', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6486482559', 'email': 'pavan47644@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:47.040" endtime="20200402 12:54:47.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:47.043" endtime="20200402 12:54:47.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:47.044" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTl5bUxXK3NxNmhJNUpaZUtjS3VCNElLZFhF...</msg>
<status status="PASS" starttime="20200402 12:54:47.044" endtime="20200402 12:54:47.044"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:47.045" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:47.044" endtime="20200402 12:54:47.045"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:47.046" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeTl5bUxXK3NxNmhJNUpaZUtjS3VCNElLZFhFdXdVNWlTZVNHUEJlbGlOMUVDM28xblpNVHNGQUlGVC9xSmZEZmFqd1lsRFAxUTJmUkRCaXR5UVpDZ3M9IiwibmJmIjoxNTg1ODEyMjg0LCJleHAiOjE1ODU4MTIzNDQsImlhdCI6MTU4NTgxMjI4NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cwnuPuMHiljByZxX32zupy267lQGuyGAAAEJCrM9X4A'} 
data={"escrowCompanyId": "001", "idNumber": "35354910499068", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6486482559", "email": "pavan47644@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:47.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.045" endtime="20200402 12:54:47.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:47.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.295" endtime="20200402 12:54:47.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:47.296" endtime="20200402 12:54:47.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:47.296" endtime="20200402 12:54:47.297"></status>
</kw>
<msg timestamp="20200402 12:54:47.297" level="INFO">${sellerid} = fdb7ea77-57ff-4fa0-a549-55674e7fb00c</msg>
<status status="PASS" starttime="20200402 12:54:47.033" endtime="20200402 12:54:47.297"></status>
</kw>
<msg timestamp="20200402 12:54:47.298" level="INFO">${SellerId} = fdb7ea77-57ff-4fa0-a549-55674e7fb00c</msg>
<msg timestamp="20200402 12:54:47.298" level="INFO">${idnumber} = 35354910499068</msg>
<status status="PASS" starttime="20200402 12:54:40.988" endtime="20200402 12:54:47.298"></status>
</kw>
<kw name="UpdateSellerDetails nationalityId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:47.300" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:47.300" endtime="20200402 12:54:47.300"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:47.301" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:47.300" endtime="20200402 12:54:47.301"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>nationalityId=${nationalityId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:47.302" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'fdb7ea77-57ff-4fa0-a549-55674e7fb00c', 'nationalityId': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:47.301" endtime="20200402 12:54:47.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:47.303" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5v...</msg>
<status status="PASS" starttime="20200402 12:54:47.303" endtime="20200402 12:54:47.303"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:47.304" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:47.303" endtime="20200402 12:54:47.304"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:47.305" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5vQTNBbGxRNldjbjY2eUpwK1RZaHltdE9hbW5TUmhhaWp0K2hwNjNmYUVEZEtrNHNpdmRPRVZnZUZDU2M9IiwibmJmIjoxNTg1ODEyMjc4LCJleHAiOjE1ODU4MTIzMzgsImlhdCI6MTU4NTgxMjI3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J60R9oxe7jrpkCSL-XbDlLkocvSw_OgFRBFyEharpq8'} 
data={"escrowCompanyId": "001", "SELLERId": "fdb7ea77-57ff-4fa0-a549-55674e7fb00c", "nationalityId": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:47.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.304" endtime="20200402 12:54:47.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:47.816" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:47.815" endtime="20200402 12:54:47.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:47.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.816" endtime="20200402 12:54:47.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:47.817" endtime="20200402 12:54:47.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:47.819" endtime="20200402 12:54:47.819"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:47.299" endtime="20200402 12:54:47.820"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:47.821" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:47.821" endtime="20200402 12:54:47.822"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:47.823" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'fdb7ea77-57ff-4fa0-a549-55674e7fb00c'}</msg>
<status status="PASS" starttime="20200402 12:54:47.822" endtime="20200402 12:54:47.823"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:47.823" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5v...</msg>
<status status="PASS" starttime="20200402 12:54:47.823" endtime="20200402 12:54:47.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:47.824" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:47.824" endtime="20200402 12:54:47.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:47.825" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2NYRjRzVVVCK1BVemYveUN3NFBBNGRmYU5vQTNBbGxRNldjbjY2eUpwK1RZaHltdE9hbW5TUmhhaWp0K2hwNjNmYUVEZEtrNHNpdmRPRVZnZUZDU2M9IiwibmJmIjoxNTg1ODEyMjc4LCJleHAiOjE1ODU4MTIzMzgsImlhdCI6MTU4NTgxMjI3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J60R9oxe7jrpkCSL-XbDlLkocvSw_OgFRBFyEharpq8'} 
data={"escrowCompanyId": "001", "sellerID": "fdb7ea77-57ff-4fa0-a549-55674e7fb00c"} 
json=None</msg>
<msg timestamp="20200402 12:54:48.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:47.825" endtime="20200402 12:54:48.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:48.313" level="INFO">{"escrowCompanyId":"001","sellerId":"fdb7ea77-57ff-4fa0-a549-55674e7fb00c","idNumber":"35354910499068","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6486482559","email":"pavan47644@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:44","updateDate":"02/04/2020 02:24:45","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:48.313" endtime="20200402 12:54:48.314"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:48.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:48.314" endtime="20200402 12:54:48.315"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:47.820" endtime="20200402 12:54:48.315"></status>
</kw>
<doc>Empty: To Verify response if nationalityId parameter is not entered and request sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:37.788" endtime="20200402 12:54:48.315" critical="yes"></status>
</test>
<test id="s1-t72" name="TC_85 Selle_Details_API InValid nationalityId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:51.319" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:48.318" endtime="20200402 12:54:51.319"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:51.320" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:51.320" endtime="20200402 12:54:51.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:51.321" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:51.321" endtime="20200402 12:54:51.321"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:51.321" endtime="20200402 12:54:51.322"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:51.322" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:51.322" endtime="20200402 12:54:51.322"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:51.323" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:51.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:51.322" endtime="20200402 12:54:51.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:51.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:51.522" endtime="20200402 12:54:51.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:51.523" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lDZllYTHBUUVNIb3ljbTlWU0wrazUxNVExaCtJamhId0VKbFRleFJQaVZ0dXJJVWtQSVR2Yy9lQ050QVE9IiwibmJmIjoxNTg1ODEyMjg5LCJleHAiOjE1ODU4MTIzNDksImlhdCI6MTU4NTgxMjI4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cNnFQEgVZB0_xXO7vvmpY57HayLR9AQ-FxYqV2Ufdi8</msg>
<status status="PASS" starttime="20200402 12:54:51.523" endtime="20200402 12:54:51.523"></status>
</kw>
<msg timestamp="20200402 12:54:51.524" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lDZllYTHB...</msg>
<status status="PASS" starttime="20200402 12:54:51.320" endtime="20200402 12:54:51.524"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:51.525" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:51.525" endtime="20200402 12:54:51.526"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:51.526" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:51.526" endtime="20200402 12:54:51.526"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:51.526" endtime="20200402 12:54:51.527"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:51.528" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:51.527" endtime="20200402 12:54:51.528"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:51.528" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:52.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:51.528" endtime="20200402 12:54:52.124"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:52.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.125" endtime="20200402 12:54:52.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:52.126" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem1MVXp5YUxINk1zaVBZYWc4TUF6NVd2a2dXZDljeStiekxkdlFlY1U4QWV6U2NSeGp3eURpNnI2OXI4NnpNUHNLWUNrN0JFYWQ5QmZjTHJMWWpJQmc9IiwibmJmIjoxNTg1ODEyMjg5LCJleHAiOjE1ODU4MTIzNDksImlhdCI6MTU4NTgxMjI4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.i6pABIs8oZZceXR9r4nLvqS3G7JMokW7dB-wHjiKQ0c</msg>
<status status="PASS" starttime="20200402 12:54:52.126" endtime="20200402 12:54:52.126"></status>
</kw>
<msg timestamp="20200402 12:54:52.127" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem1MVXp5YUxINk1zaVBZYWc4TUF6NVd2a2dXZDljeSt...</msg>
<status status="PASS" starttime="20200402 12:54:51.525" endtime="20200402 12:54:52.127"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:52.127" level="INFO">${Id} = 74327300540548</msg>
<status status="PASS" starttime="20200402 12:54:52.127" endtime="20200402 12:54:52.127"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:52.128" level="INFO">${IdNumber} = 74327300540548</msg>
<status status="PASS" starttime="20200402 12:54:52.128" endtime="20200402 12:54:52.128"></status>
</kw>
<msg timestamp="20200402 12:54:52.128" level="INFO">${idNum} = 74327300540548</msg>
<status status="PASS" starttime="20200402 12:54:52.127" endtime="20200402 12:54:52.128"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:52.129" level="INFO">${mobile} = 2716304878</msg>
<status status="PASS" starttime="20200402 12:54:52.129" endtime="20200402 12:54:52.129"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:52.130" level="INFO">${mobileNo} = 2716304878</msg>
<status status="PASS" starttime="20200402 12:54:52.129" endtime="20200402 12:54:52.130"></status>
</kw>
<msg timestamp="20200402 12:54:52.130" level="INFO">${MobNo} = 2716304878</msg>
<status status="PASS" starttime="20200402 12:54:52.129" endtime="20200402 12:54:52.130"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:52.131" level="INFO">${Emailnum} = 43741</msg>
<status status="PASS" starttime="20200402 12:54:52.131" endtime="20200402 12:54:52.131"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:52.132" level="INFO">${enum} = 43741</msg>
<status status="PASS" starttime="20200402 12:54:52.131" endtime="20200402 12:54:52.132"></status>
</kw>
<msg timestamp="20200402 12:54:52.132" level="INFO">${num} = 43741</msg>
<status status="PASS" starttime="20200402 12:54:52.131" endtime="20200402 12:54:52.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:52.133" level="INFO">${emailid} = pavan43741@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:52.132" endtime="20200402 12:54:52.133"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:52.133" level="INFO">${email} = pavan43741@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:52.133" endtime="20200402 12:54:52.133"></status>
</kw>
<msg timestamp="20200402 12:54:52.133" level="INFO">${emailid} = pavan43741@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:52.130" endtime="20200402 12:54:52.133"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:52.136" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:52.136" endtime="20200402 12:54:52.136"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:52.137" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:52.137" endtime="20200402 12:54:52.137"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:52.138" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:52.137" endtime="20200402 12:54:52.138"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:52.140" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:52.138" endtime="20200402 12:54:52.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:52.141" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:52.140" endtime="20200402 12:54:52.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:52.144" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '74327300540548', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '2716304878', 'email': 'pavan43741@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:52.141" endtime="20200402 12:54:52.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:52.144" endtime="20200402 12:54:52.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:52.145" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem1MVXp5YUxINk1zaVBZYWc4TUF6NVd2a2dX...</msg>
<status status="PASS" starttime="20200402 12:54:52.145" endtime="20200402 12:54:52.145"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:52.146" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:52.145" endtime="20200402 12:54:52.146"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:52.147" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qem1MVXp5YUxINk1zaVBZYWc4TUF6NVd2a2dXZDljeStiekxkdlFlY1U4QWV6U2NSeGp3eURpNnI2OXI4NnpNUHNLWUNrN0JFYWQ5QmZjTHJMWWpJQmc9IiwibmJmIjoxNTg1ODEyMjg5LCJleHAiOjE1ODU4MTIzNDksImlhdCI6MTU4NTgxMjI4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.i6pABIs8oZZceXR9r4nLvqS3G7JMokW7dB-wHjiKQ0c'} 
data={"escrowCompanyId": "001", "idNumber": "74327300540548", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "2716304878", "email": "pavan43741@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:52.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.146" endtime="20200402 12:54:52.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:52.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.366" endtime="20200402 12:54:52.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:52.367" endtime="20200402 12:54:52.367"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:52.368" endtime="20200402 12:54:52.368"></status>
</kw>
<msg timestamp="20200402 12:54:52.368" level="INFO">${sellerid} = 8910f3a3-9db1-41e6-8a44-6d8277ea7a4f</msg>
<status status="PASS" starttime="20200402 12:54:52.133" endtime="20200402 12:54:52.368"></status>
</kw>
<msg timestamp="20200402 12:54:52.369" level="INFO">${SellerId} = 8910f3a3-9db1-41e6-8a44-6d8277ea7a4f</msg>
<msg timestamp="20200402 12:54:52.369" level="INFO">${idnumber} = 74327300540548</msg>
<status status="PASS" starttime="20200402 12:54:51.524" endtime="20200402 12:54:52.369"></status>
</kw>
<kw name="UpdateSellerDetails nationalityId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>aaa</arg>
<arg>${0}</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:52.371" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:52.371" endtime="20200402 12:54:52.371"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:52.372" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:52.371" endtime="20200402 12:54:52.372"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>nationalityId=${nationalityId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:52.373" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '8910f3a3-9db1-41e6-8a44-6d8277ea7a4f', 'nationalityId': 'aaa', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:52.372" endtime="20200402 12:54:52.373"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:52.373" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lD...</msg>
<status status="PASS" starttime="20200402 12:54:52.373" endtime="20200402 12:54:52.373"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:52.374" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:52.374" endtime="20200402 12:54:52.374"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:52.375" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lDZllYTHBUUVNIb3ljbTlWU0wrazUxNVExaCtJamhId0VKbFRleFJQaVZ0dXJJVWtQSVR2Yy9lQ050QVE9IiwibmJmIjoxNTg1ODEyMjg5LCJleHAiOjE1ODU4MTIzNDksImlhdCI6MTU4NTgxMjI4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cNnFQEgVZB0_xXO7vvmpY57HayLR9AQ-FxYqV2Ufdi8'} 
data={"escrowCompanyId": "001", "SELLERId": "8910f3a3-9db1-41e6-8a44-6d8277ea7a4f", "nationalityId": "aaa", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:54:52.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.374" endtime="20200402 12:54:52.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:52.868" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:54:52.868" endtime="20200402 12:54:52.868"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:52.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.869" endtime="20200402 12:54:52.870"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:52.870" endtime="20200402 12:54:52.871"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:52.871" endtime="20200402 12:54:52.872"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:52.370" endtime="20200402 12:54:52.872"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:52.874" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:52.874" endtime="20200402 12:54:52.875"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:52.876" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '8910f3a3-9db1-41e6-8a44-6d8277ea7a4f'}</msg>
<status status="PASS" starttime="20200402 12:54:52.875" endtime="20200402 12:54:52.876"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:52.877" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lD...</msg>
<status status="PASS" starttime="20200402 12:54:52.876" endtime="20200402 12:54:52.877"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:52.878" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:52.877" endtime="20200402 12:54:52.878"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:52.879" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN0taQlByTEUzY0lqa2xPTVZtNVNyT010K2lDZllYTHBUUVNIb3ljbTlWU0wrazUxNVExaCtJamhId0VKbFRleFJQaVZ0dXJJVWtQSVR2Yy9lQ050QVE9IiwibmJmIjoxNTg1ODEyMjg5LCJleHAiOjE1ODU4MTIzNDksImlhdCI6MTU4NTgxMjI4OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cNnFQEgVZB0_xXO7vvmpY57HayLR9AQ-FxYqV2Ufdi8'} 
data={"escrowCompanyId": "001", "sellerID": "8910f3a3-9db1-41e6-8a44-6d8277ea7a4f"} 
json=None</msg>
<msg timestamp="20200402 12:54:53.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:52.878" endtime="20200402 12:54:53.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:54:53.719" level="INFO">{"escrowCompanyId":"001","sellerId":"8910f3a3-9db1-41e6-8a44-6d8277ea7a4f","idNumber":"74327300540548","typeOfId":3,"mobileCountryCode":"67","mobileNo":"2716304878","email":"pavan43741@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:49","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:54:53.719" endtime="20200402 12:54:53.720"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:53.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:53.721" endtime="20200402 12:54:53.721"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:52.873" endtime="20200402 12:54:53.721"></status>
</kw>
<doc>Invalid: To Verify response if nationalityId parameter is entered invalid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:48.317" endtime="20200402 12:54:53.722" critical="yes"></status>
</test>
<test id="s1-t73" name="TC_86 Selle_Details_API Valid nationalityId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:54:56.726" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:54:53.725" endtime="20200402 12:54:56.726"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:56.728" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:56.728" endtime="20200402 12:54:56.729"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:56.730" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:56.729" endtime="20200402 12:54:56.730"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:56.730" endtime="20200402 12:54:56.730"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:56.731" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:56.731" endtime="20200402 12:54:56.731"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:56.732" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:57.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:56.731" endtime="20200402 12:54:57.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:57.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:57.230" endtime="20200402 12:54:57.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.232" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042Rk1GUTR1dGp4eGFLNnYyRWd6NzdYL09LNGpIb0p1QmtiZWxNbGI2Mk9iYWN5VW5wZmdNS2xJUkwreVU9IiwibmJmIjoxNTg1ODEyMjk0LCJleHAiOjE1ODU4MTIzNTQsImlhdCI6MTU4NTgxMjI5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cjyklEWoI7LwivDyjBC8RaWPPlKHCURmhWqoNoYxkkA</msg>
<status status="PASS" starttime="20200402 12:54:57.231" endtime="20200402 12:54:57.232"></status>
</kw>
<msg timestamp="20200402 12:54:57.232" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042Rk1GUTR...</msg>
<status status="PASS" starttime="20200402 12:54:56.727" endtime="20200402 12:54:57.232"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.234" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:57.234" endtime="20200402 12:54:57.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:57.236" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:54:57.235" endtime="20200402 12:54:57.236"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:57.236" endtime="20200402 12:54:57.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:54:57.237" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:54:57.237" endtime="20200402 12:54:57.237"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:57.238" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:54:57.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:57.237" endtime="20200402 12:54:57.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:57.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:57.750" endtime="20200402 12:54:57.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.751" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekNmUlUwT2F2MVdLcWhObmgxMUhvcU5WWS9wMzhXd2g0czNmTjJqdUUyVUdCQ3FTekcxL0MzcDdyT1Z4amZxaXBWTmpJSFE1dTVZZWhnKzc1OHJRdmc9IiwibmJmIjoxNTg1ODEyMjk1LCJleHAiOjE1ODU4MTIzNTUsImlhdCI6MTU4NTgxMjI5NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.90VK2ElC6r17IPWuaDddyqPd-VmYeGNhc00l5qBd46w</msg>
<status status="PASS" starttime="20200402 12:54:57.751" endtime="20200402 12:54:57.751"></status>
</kw>
<msg timestamp="20200402 12:54:57.752" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekNmUlUwT2F2MVdLcWhObmgxMUhvcU5WWS9wMzhXd2g...</msg>
<status status="PASS" starttime="20200402 12:54:57.233" endtime="20200402 12:54:57.752"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:54:57.753" level="INFO">${Id} = 32827616507907</msg>
<status status="PASS" starttime="20200402 12:54:57.753" endtime="20200402 12:54:57.753"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.754" level="INFO">${IdNumber} = 32827616507907</msg>
<status status="PASS" starttime="20200402 12:54:57.753" endtime="20200402 12:54:57.754"></status>
</kw>
<msg timestamp="20200402 12:54:57.754" level="INFO">${idNum} = 32827616507907</msg>
<status status="PASS" starttime="20200402 12:54:57.752" endtime="20200402 12:54:57.754"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:54:57.755" level="INFO">${mobile} = 0410990199</msg>
<status status="PASS" starttime="20200402 12:54:57.755" endtime="20200402 12:54:57.755"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.756" level="INFO">${mobileNo} = 0410990199</msg>
<status status="PASS" starttime="20200402 12:54:57.755" endtime="20200402 12:54:57.756"></status>
</kw>
<msg timestamp="20200402 12:54:57.756" level="INFO">${MobNo} = 0410990199</msg>
<status status="PASS" starttime="20200402 12:54:57.754" endtime="20200402 12:54:57.756"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:54:57.757" level="INFO">${Emailnum} = 26553</msg>
<status status="PASS" starttime="20200402 12:54:57.757" endtime="20200402 12:54:57.757"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.758" level="INFO">${enum} = 26553</msg>
<status status="PASS" starttime="20200402 12:54:57.757" endtime="20200402 12:54:57.758"></status>
</kw>
<msg timestamp="20200402 12:54:57.758" level="INFO">${num} = 26553</msg>
<status status="PASS" starttime="20200402 12:54:57.756" endtime="20200402 12:54:57.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:54:57.759" level="INFO">${emailid} = pavan26553@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:57.758" endtime="20200402 12:54:57.759"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:54:57.759" level="INFO">${email} = pavan26553@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:57.759" endtime="20200402 12:54:57.759"></status>
</kw>
<msg timestamp="20200402 12:54:57.759" level="INFO">${emailid} = pavan26553@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:54:57.756" endtime="20200402 12:54:57.759"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:57.763" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:57.762" endtime="20200402 12:54:57.763"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:54:57.764" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:54:57.763" endtime="20200402 12:54:57.764"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:57.764" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:57.764" endtime="20200402 12:54:57.764"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:54:57.766" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:57.764" endtime="20200402 12:54:57.766"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:54:57.767" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:54:57.766" endtime="20200402 12:54:57.767"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:57.770" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '32827616507907', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0410990199', 'email': 'pavan26553@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:54:57.767" endtime="20200402 12:54:57.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:57.770" endtime="20200402 12:54:57.771"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:57.771" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekNmUlUwT2F2MVdLcWhObmgxMUhvcU5WWS9w...</msg>
<status status="PASS" starttime="20200402 12:54:57.771" endtime="20200402 12:54:57.771"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:57.772" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:57.772" endtime="20200402 12:54:57.772"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:57.773" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekNmUlUwT2F2MVdLcWhObmgxMUhvcU5WWS9wMzhXd2g0czNmTjJqdUUyVUdCQ3FTekcxL0MzcDdyT1Z4amZxaXBWTmpJSFE1dTVZZWhnKzc1OHJRdmc9IiwibmJmIjoxNTg1ODEyMjk1LCJleHAiOjE1ODU4MTIzNTUsImlhdCI6MTU4NTgxMjI5NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.90VK2ElC6r17IPWuaDddyqPd-VmYeGNhc00l5qBd46w'} 
data={"escrowCompanyId": "001", "idNumber": "32827616507907", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0410990199", "email": "pavan26553@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:54:59.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:57.772" endtime="20200402 12:54:59.002"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:54:59.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:54:59.002" endtime="20200402 12:54:59.003"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:59.003" endtime="20200402 12:54:59.003"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:54:59.004" endtime="20200402 12:54:59.004"></status>
</kw>
<msg timestamp="20200402 12:54:59.004" level="INFO">${sellerid} = 10e73a1a-7775-422c-bea8-d69fce3d91d4</msg>
<status status="PASS" starttime="20200402 12:54:57.760" endtime="20200402 12:54:59.005"></status>
</kw>
<msg timestamp="20200402 12:54:59.005" level="INFO">${SellerId} = 10e73a1a-7775-422c-bea8-d69fce3d91d4</msg>
<msg timestamp="20200402 12:54:59.005" level="INFO">${idnumber} = 32827616507907</msg>
<status status="PASS" starttime="20200402 12:54:57.233" endtime="20200402 12:54:59.005"></status>
</kw>
<kw name="UpdateSellerDetails nationalityId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{v_nationalityId}[0]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:54:59.007" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:54:59.007" endtime="20200402 12:54:59.008"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:54:59.008" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:54:59.008" endtime="20200402 12:54:59.008"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>nationalityId=${nationalityId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:54:59.009" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '10e73a1a-7775-422c-bea8-d69fce3d91d4', 'nationalityId': '764', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:54:59.008" endtime="20200402 12:54:59.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:54:59.009" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042...</msg>
<status status="PASS" starttime="20200402 12:54:59.009" endtime="20200402 12:54:59.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:54:59.010" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:54:59.010" endtime="20200402 12:54:59.010"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:54:59.011" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042Rk1GUTR1dGp4eGFLNnYyRWd6NzdYL09LNGpIb0p1QmtiZWxNbGI2Mk9iYWN5VW5wZmdNS2xJUkwreVU9IiwibmJmIjoxNTg1ODEyMjk0LCJleHAiOjE1ODU4MTIzNTQsImlhdCI6MTU4NTgxMjI5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cjyklEWoI7LwivDyjBC8RaWPPlKHCURmhWqoNoYxkkA'} 
data={"escrowCompanyId": "001", "SELLERId": "10e73a1a-7775-422c-bea8-d69fce3d91d4", "nationalityId": "764", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:00.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:54:59.010" endtime="20200402 12:55:00.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:00.533" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:00.532" endtime="20200402 12:55:00.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:00.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:00.534" endtime="20200402 12:55:00.535"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:00.535" endtime="20200402 12:55:00.536"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:00.537" endtime="20200402 12:55:00.538"></status>
</kw>
<status status="PASS" starttime="20200402 12:54:59.006" endtime="20200402 12:55:00.538"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:00.541" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:00.540" endtime="20200402 12:55:00.542"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:00.543" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '10e73a1a-7775-422c-bea8-d69fce3d91d4'}</msg>
<status status="PASS" starttime="20200402 12:55:00.542" endtime="20200402 12:55:00.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:00.544" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042...</msg>
<status status="PASS" starttime="20200402 12:55:00.544" endtime="20200402 12:55:00.544"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:00.545" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:00.544" endtime="20200402 12:55:00.545"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:00.546" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGNHTUx2c2NpUHBkQTZ1RWo3bExqeVl1N042Rk1GUTR1dGp4eGFLNnYyRWd6NzdYL09LNGpIb0p1QmtiZWxNbGI2Mk9iYWN5VW5wZmdNS2xJUkwreVU9IiwibmJmIjoxNTg1ODEyMjk0LCJleHAiOjE1ODU4MTIzNTQsImlhdCI6MTU4NTgxMjI5NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.cjyklEWoI7LwivDyjBC8RaWPPlKHCURmhWqoNoYxkkA'} 
data={"escrowCompanyId": "001", "sellerID": "10e73a1a-7775-422c-bea8-d69fce3d91d4"} 
json=None</msg>
<msg timestamp="20200402 12:55:01.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:00.545" endtime="20200402 12:55:01.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:01.029" level="INFO">{"escrowCompanyId":"001","sellerId":"10e73a1a-7775-422c-bea8-d69fce3d91d4","idNumber":"32827616507907","typeOfId":3,"mobileCountryCode":"67","mobileNo":"0410990199","email":"pavan26553@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:24:56","updateDate":"02/04/2020 02:24:58","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:01.028" endtime="20200402 12:55:01.029"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:01.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:01.030" endtime="20200402 12:55:01.030"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:00.539" endtime="20200402 12:55:01.030"></status>
</kw>
<doc>Valid: To Verify response if nationalityId parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:54:53.723" endtime="20200402 12:55:01.031" critical="yes"></status>
</test>
<test id="s1-t74" name="TC_87 Selle_Details_API InValid nationalityId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:04.035" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:01.033" endtime="20200402 12:55:04.035"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:04.037" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:04.036" endtime="20200402 12:55:04.037"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:04.038" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:04.037" endtime="20200402 12:55:04.038"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:04.038" endtime="20200402 12:55:04.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:04.039" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:04.039" endtime="20200402 12:55:04.039"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:04.040" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:04.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:04.039" endtime="20200402 12:55:04.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:04.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:04.508" endtime="20200402 12:55:04.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:04.510" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1NGxPM2krZXEvM1dab2lxUEwvVGJ2L3h0bUx1QTlXbXF2OFlQNEdpR2dYM1NvL0dWa1NrL3c5UlhOSDQ9IiwibmJmIjoxNTg1ODEyMzAyLCJleHAiOjE1ODU4MTIzNjIsImlhdCI6MTU4NTgxMjMwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Tg9btxySP-DDCqSWFo15dR7SYNvcOdqSzXxGwoES7v0</msg>
<status status="PASS" starttime="20200402 12:55:04.509" endtime="20200402 12:55:04.510"></status>
</kw>
<msg timestamp="20200402 12:55:04.510" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1NGxPM2k...</msg>
<status status="PASS" starttime="20200402 12:55:04.036" endtime="20200402 12:55:04.510"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:04.512" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:04.512" endtime="20200402 12:55:04.512"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:04.513" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:04.513" endtime="20200402 12:55:04.513"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:04.513" endtime="20200402 12:55:04.514"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:04.514" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:04.514" endtime="20200402 12:55:04.514"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:04.515" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:05.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:04.514" endtime="20200402 12:55:05.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:05.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:05.528" endtime="20200402 12:55:05.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:05.530" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzEyRzU5Wjk3K1FncGJYTXlUb3AwdDFkeFJjY2Zyak5IdVM1UU9NbXpvNDM4dU5VaU9YRFBpYTdhVzBWNzZzQzFXTEhkRlBwTWJSd3Azckt4ZWZveU09IiwibmJmIjoxNTg1ODEyMzAyLCJleHAiOjE1ODU4MTIzNjIsImlhdCI6MTU4NTgxMjMwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QQfTjJSXeBQi7QGkbWJslhrA830mmEC2viDWSK1QxFg</msg>
<status status="PASS" starttime="20200402 12:55:05.529" endtime="20200402 12:55:05.530"></status>
</kw>
<msg timestamp="20200402 12:55:05.530" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzEyRzU5Wjk3K1FncGJYTXlUb3AwdDFkeFJjY2Zyak5...</msg>
<status status="PASS" starttime="20200402 12:55:04.511" endtime="20200402 12:55:05.530"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:05.531" level="INFO">${Id} = 67569231573091</msg>
<status status="PASS" starttime="20200402 12:55:05.531" endtime="20200402 12:55:05.531"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:05.532" level="INFO">${IdNumber} = 67569231573091</msg>
<status status="PASS" starttime="20200402 12:55:05.531" endtime="20200402 12:55:05.532"></status>
</kw>
<msg timestamp="20200402 12:55:05.532" level="INFO">${idNum} = 67569231573091</msg>
<status status="PASS" starttime="20200402 12:55:05.530" endtime="20200402 12:55:05.532"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:05.534" level="INFO">${mobile} = 4801026199</msg>
<status status="PASS" starttime="20200402 12:55:05.533" endtime="20200402 12:55:05.534"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:05.534" level="INFO">${mobileNo} = 4801026199</msg>
<status status="PASS" starttime="20200402 12:55:05.534" endtime="20200402 12:55:05.535"></status>
</kw>
<msg timestamp="20200402 12:55:05.535" level="INFO">${MobNo} = 4801026199</msg>
<status status="PASS" starttime="20200402 12:55:05.532" endtime="20200402 12:55:05.535"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:05.536" level="INFO">${Emailnum} = 32831</msg>
<status status="PASS" starttime="20200402 12:55:05.536" endtime="20200402 12:55:05.536"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:05.537" level="INFO">${enum} = 32831</msg>
<status status="PASS" starttime="20200402 12:55:05.537" endtime="20200402 12:55:05.537"></status>
</kw>
<msg timestamp="20200402 12:55:05.538" level="INFO">${num} = 32831</msg>
<status status="PASS" starttime="20200402 12:55:05.536" endtime="20200402 12:55:05.538"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:05.539" level="INFO">${emailid} = pavan32831@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:05.538" endtime="20200402 12:55:05.539"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:05.540" level="INFO">${email} = pavan32831@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:05.539" endtime="20200402 12:55:05.540"></status>
</kw>
<msg timestamp="20200402 12:55:05.540" level="INFO">${emailid} = pavan32831@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:05.535" endtime="20200402 12:55:05.540"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:05.545" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:05.544" endtime="20200402 12:55:05.545"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:05.546" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:05.545" endtime="20200402 12:55:05.546"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:05.547" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:05.546" endtime="20200402 12:55:05.547"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:05.549" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:05.547" endtime="20200402 12:55:05.549"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:05.551" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:05.549" endtime="20200402 12:55:05.551"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:05.554" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '67569231573091', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4801026199', 'email': 'pavan32831@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:05.551" endtime="20200402 12:55:05.555"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:05.555" endtime="20200402 12:55:05.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:05.557" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzEyRzU5Wjk3K1FncGJYTXlUb3AwdDFkeFJj...</msg>
<status status="PASS" starttime="20200402 12:55:05.556" endtime="20200402 12:55:05.557"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:05.558" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:05.557" endtime="20200402 12:55:05.558"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:05.560" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzEyRzU5Wjk3K1FncGJYTXlUb3AwdDFkeFJjY2Zyak5IdVM1UU9NbXpvNDM4dU5VaU9YRFBpYTdhVzBWNzZzQzFXTEhkRlBwTWJSd3Azckt4ZWZveU09IiwibmJmIjoxNTg1ODEyMzAyLCJleHAiOjE1ODU4MTIzNjIsImlhdCI6MTU4NTgxMjMwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.QQfTjJSXeBQi7QGkbWJslhrA830mmEC2viDWSK1QxFg'} 
data={"escrowCompanyId": "001", "idNumber": "67569231573091", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4801026199", "email": "pavan32831@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:05.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:05.558" endtime="20200402 12:55:05.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:05.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:05.919" endtime="20200402 12:55:05.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:05.920" endtime="20200402 12:55:05.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:05.921" endtime="20200402 12:55:05.922"></status>
</kw>
<msg timestamp="20200402 12:55:05.923" level="INFO">${sellerid} = 373bd9f2-6ceb-4d4a-9781-f4c572bb73d4</msg>
<status status="PASS" starttime="20200402 12:55:05.541" endtime="20200402 12:55:05.923"></status>
</kw>
<msg timestamp="20200402 12:55:05.923" level="INFO">${SellerId} = 373bd9f2-6ceb-4d4a-9781-f4c572bb73d4</msg>
<msg timestamp="20200402 12:55:05.923" level="INFO">${idnumber} = 67569231573091</msg>
<status status="PASS" starttime="20200402 12:55:04.511" endtime="20200402 12:55:05.923"></status>
</kw>
<kw name="UpdateSellerDetails nationalityId" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{nationalityId_more_3}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:05.926" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:05.925" endtime="20200402 12:55:05.926"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:05.927" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:05.926" endtime="20200402 12:55:05.927"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>nationalityId=${nationalityId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:05.928" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '373bd9f2-6ceb-4d4a-9781-f4c572bb73d4', 'nationalityId': '764455', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:05.927" endtime="20200402 12:55:05.928"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:05.929" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1...</msg>
<status status="PASS" starttime="20200402 12:55:05.928" endtime="20200402 12:55:05.929"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:05.930" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:05.929" endtime="20200402 12:55:05.930"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:05.931" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1NGxPM2krZXEvM1dab2lxUEwvVGJ2L3h0bUx1QTlXbXF2OFlQNEdpR2dYM1NvL0dWa1NrL3c5UlhOSDQ9IiwibmJmIjoxNTg1ODEyMzAyLCJleHAiOjE1ODU4MTIzNjIsImlhdCI6MTU4NTgxMjMwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Tg9btxySP-DDCqSWFo15dR7SYNvcOdqSzXxGwoES7v0'} 
data={"escrowCompanyId": "001", "SELLERId": "373bd9f2-6ceb-4d4a-9781-f4c572bb73d4", "nationalityId": "764455", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:06.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:05.930" endtime="20200402 12:55:06.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:06.426" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:55:06.425" endtime="20200402 12:55:06.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:06.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:06.426" endtime="20200402 12:55:06.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:06.427" endtime="20200402 12:55:06.428"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:06.428" endtime="20200402 12:55:06.429"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:05.924" endtime="20200402 12:55:06.429"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:06.431" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:06.431" endtime="20200402 12:55:06.432"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:06.432" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '373bd9f2-6ceb-4d4a-9781-f4c572bb73d4'}</msg>
<status status="PASS" starttime="20200402 12:55:06.432" endtime="20200402 12:55:06.432"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:06.433" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1...</msg>
<status status="PASS" starttime="20200402 12:55:06.433" endtime="20200402 12:55:06.433"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:06.434" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:06.433" endtime="20200402 12:55:06.434"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:06.435" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzJYWURwbVpPYXBmUE9DQUh4Nk5nQkpwVDk1NGxPM2krZXEvM1dab2lxUEwvVGJ2L3h0bUx1QTlXbXF2OFlQNEdpR2dYM1NvL0dWa1NrL3c5UlhOSDQ9IiwibmJmIjoxNTg1ODEyMzAyLCJleHAiOjE1ODU4MTIzNjIsImlhdCI6MTU4NTgxMjMwMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Tg9btxySP-DDCqSWFo15dR7SYNvcOdqSzXxGwoES7v0'} 
data={"escrowCompanyId": "001", "sellerID": "373bd9f2-6ceb-4d4a-9781-f4c572bb73d4"} 
json=None</msg>
<msg timestamp="20200402 12:55:07.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:06.434" endtime="20200402 12:55:07.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:07.033" level="INFO">{"escrowCompanyId":"001","sellerId":"373bd9f2-6ceb-4d4a-9781-f4c572bb73d4","idNumber":"67569231573091","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4801026199","email":"pavan32831@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:03","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:07.032" endtime="20200402 12:55:07.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:07.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:07.034" endtime="20200402 12:55:07.035"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:06.430" endtime="20200402 12:55:07.035"></status>
</kw>
<doc>Invalid: To Verify response if nationalityId parameter is entered more than size 3 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:01.032" endtime="20200402 12:55:07.035" critical="yes"></status>
</test>
<test id="s1-t75" name="TC_89 Selle_Details_API Valid otherVerification">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:10.040" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:07.038" endtime="20200402 12:55:10.040"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:10.041" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:10.041" endtime="20200402 12:55:10.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:10.042" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:10.042" endtime="20200402 12:55:10.042"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:10.042" endtime="20200402 12:55:10.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:10.044" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:10.043" endtime="20200402 12:55:10.044"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:10.044" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:10.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:10.044" endtime="20200402 12:55:10.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:10.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:10.521" endtime="20200402 12:55:10.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:10.522" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4bEtJSXpGNzZxV3p3bG5sdkc1MVpHQXJjNzVVL0gvbEJ0TkJKVXFIZG9DdW95ei9OdklmbFNFNmtiWGM9IiwibmJmIjoxNTg1ODEyMzA4LCJleHAiOjE1ODU4MTIzNjgsImlhdCI6MTU4NTgxMjMwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.btZsnjnblERgveOjMKkpatulwPqF_vWdAtBDYF5OvyQ</msg>
<status status="PASS" starttime="20200402 12:55:10.522" endtime="20200402 12:55:10.522"></status>
</kw>
<msg timestamp="20200402 12:55:10.523" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4bEtJSXp...</msg>
<status status="PASS" starttime="20200402 12:55:10.041" endtime="20200402 12:55:10.523"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:10.524" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:10.524" endtime="20200402 12:55:10.525"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:10.525" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:10.525" endtime="20200402 12:55:10.525"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:10.526" endtime="20200402 12:55:10.526"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:10.526" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:10.526" endtime="20200402 12:55:10.527"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:10.527" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:11.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:10.527" endtime="20200402 12:55:11.032"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:11.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:11.033" endtime="20200402 12:55:11.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:11.034" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXd2K0xhbXNBaHVFNG5YMnpJTTZ0WnpnMjQyU3VlMjNZVWw0OThMdjNPOFlaUzJXMWNwRm5zZnZlcDFyZDdsam84UWxkblUybWZYcnFMK2tuK3J4OTg9IiwibmJmIjoxNTg1ODEyMzA4LCJleHAiOjE1ODU4MTIzNjgsImlhdCI6MTU4NTgxMjMwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.oLdDme1j1xlLS7d7wlOARMmEWTMuFJ7_MSedOm_f9Z8</msg>
<status status="PASS" starttime="20200402 12:55:11.033" endtime="20200402 12:55:11.034"></status>
</kw>
<msg timestamp="20200402 12:55:11.034" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXd2K0xhbXNBaHVFNG5YMnpJTTZ0WnpnMjQyU3VlMjN...</msg>
<status status="PASS" starttime="20200402 12:55:10.524" endtime="20200402 12:55:11.034"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:11.035" level="INFO">${Id} = 82317832920345</msg>
<status status="PASS" starttime="20200402 12:55:11.035" endtime="20200402 12:55:11.035"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:11.036" level="INFO">${IdNumber} = 82317832920345</msg>
<status status="PASS" starttime="20200402 12:55:11.035" endtime="20200402 12:55:11.036"></status>
</kw>
<msg timestamp="20200402 12:55:11.036" level="INFO">${idNum} = 82317832920345</msg>
<status status="PASS" starttime="20200402 12:55:11.034" endtime="20200402 12:55:11.036"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:11.037" level="INFO">${mobile} = 7549110727</msg>
<status status="PASS" starttime="20200402 12:55:11.037" endtime="20200402 12:55:11.037"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:11.037" level="INFO">${mobileNo} = 7549110727</msg>
<status status="PASS" starttime="20200402 12:55:11.037" endtime="20200402 12:55:11.038"></status>
</kw>
<msg timestamp="20200402 12:55:11.038" level="INFO">${MobNo} = 7549110727</msg>
<status status="PASS" starttime="20200402 12:55:11.036" endtime="20200402 12:55:11.038"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:11.039" level="INFO">${Emailnum} = 32541</msg>
<status status="PASS" starttime="20200402 12:55:11.039" endtime="20200402 12:55:11.039"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:11.040" level="INFO">${enum} = 32541</msg>
<status status="PASS" starttime="20200402 12:55:11.039" endtime="20200402 12:55:11.040"></status>
</kw>
<msg timestamp="20200402 12:55:11.040" level="INFO">${num} = 32541</msg>
<status status="PASS" starttime="20200402 12:55:11.038" endtime="20200402 12:55:11.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:11.040" level="INFO">${emailid} = pavan32541@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:11.040" endtime="20200402 12:55:11.040"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:11.041" level="INFO">${email} = pavan32541@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:11.041" endtime="20200402 12:55:11.041"></status>
</kw>
<msg timestamp="20200402 12:55:11.041" level="INFO">${emailid} = pavan32541@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:11.038" endtime="20200402 12:55:11.041"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:11.044" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:11.044" endtime="20200402 12:55:11.044"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:11.045" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:11.044" endtime="20200402 12:55:11.045"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:11.046" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:11.045" endtime="20200402 12:55:11.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:11.047" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:11.046" endtime="20200402 12:55:11.047"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:11.048" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:11.047" endtime="20200402 12:55:11.049"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:11.051" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '82317832920345', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7549110727', 'email': 'pavan32541@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:11.049" endtime="20200402 12:55:11.051"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:11.051" endtime="20200402 12:55:11.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:11.053" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXd2K0xhbXNBaHVFNG5YMnpJTTZ0WnpnMjQy...</msg>
<status status="PASS" starttime="20200402 12:55:11.052" endtime="20200402 12:55:11.053"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:11.054" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:11.053" endtime="20200402 12:55:11.054"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:11.055" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXd2K0xhbXNBaHVFNG5YMnpJTTZ0WnpnMjQyU3VlMjNZVWw0OThMdjNPOFlaUzJXMWNwRm5zZnZlcDFyZDdsam84UWxkblUybWZYcnFMK2tuK3J4OTg9IiwibmJmIjoxNTg1ODEyMzA4LCJleHAiOjE1ODU4MTIzNjgsImlhdCI6MTU4NTgxMjMwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.oLdDme1j1xlLS7d7wlOARMmEWTMuFJ7_MSedOm_f9Z8'} 
data={"escrowCompanyId": "001", "idNumber": "82317832920345", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7549110727", "email": "pavan32541@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:12.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:11.054" endtime="20200402 12:55:12.302"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:12.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:12.303" endtime="20200402 12:55:12.303"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:12.304" endtime="20200402 12:55:12.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:12.305" endtime="20200402 12:55:12.305"></status>
</kw>
<msg timestamp="20200402 12:55:12.305" level="INFO">${sellerid} = e958cc45-a028-4da5-bcfd-01405a49d34a</msg>
<status status="PASS" starttime="20200402 12:55:11.041" endtime="20200402 12:55:12.305"></status>
</kw>
<msg timestamp="20200402 12:55:12.306" level="INFO">${SellerId} = e958cc45-a028-4da5-bcfd-01405a49d34a</msg>
<msg timestamp="20200402 12:55:12.306" level="INFO">${idnumber} = 82317832920345</msg>
<status status="PASS" starttime="20200402 12:55:10.523" endtime="20200402 12:55:12.306"></status>
</kw>
<kw name="UpdateSellerDetails otherVerification" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{type_id_others}[4]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:12.307" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:12.307" endtime="20200402 12:55:12.308"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:12.308" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:12.308" endtime="20200402 12:55:12.308"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:12.310" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'e958cc45-a028-4da5-bcfd-01405a49d34a', 'otherVerification': 'AB00345121919', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:12.309" endtime="20200402 12:55:12.310"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:12.310" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4...</msg>
<status status="PASS" starttime="20200402 12:55:12.310" endtime="20200402 12:55:12.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:12.311" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:12.311" endtime="20200402 12:55:12.311"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:12.312" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4bEtJSXpGNzZxV3p3bG5sdkc1MVpHQXJjNzVVL0gvbEJ0TkJKVXFIZG9DdW95ei9OdklmbFNFNmtiWGM9IiwibmJmIjoxNTg1ODEyMzA4LCJleHAiOjE1ODU4MTIzNjgsImlhdCI6MTU4NTgxMjMwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.btZsnjnblERgveOjMKkpatulwPqF_vWdAtBDYF5OvyQ'} 
data={"escrowCompanyId": "001", "SELLERId": "e958cc45-a028-4da5-bcfd-01405a49d34a", "otherVerification": "AB00345121919", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:12.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:12.311" endtime="20200402 12:55:12.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:12.857" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:12.857" endtime="20200402 12:55:12.858"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:12.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:12.858" endtime="20200402 12:55:12.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:12.859" endtime="20200402 12:55:12.860"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:12.860" endtime="20200402 12:55:12.860"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:12.306" endtime="20200402 12:55:12.860"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:12.862" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:12.862" endtime="20200402 12:55:12.862"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:12.863" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'e958cc45-a028-4da5-bcfd-01405a49d34a'}</msg>
<status status="PASS" starttime="20200402 12:55:12.862" endtime="20200402 12:55:12.863"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:12.863" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4...</msg>
<status status="PASS" starttime="20200402 12:55:12.863" endtime="20200402 12:55:12.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:12.864" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:12.864" endtime="20200402 12:55:12.864"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:12.865" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMTlvcnYyakZtUHVSdVNyL0o2T2E4ODZRTmd4bEtJSXpGNzZxV3p3bG5sdkc1MVpHQXJjNzVVL0gvbEJ0TkJKVXFIZG9DdW95ei9OdklmbFNFNmtiWGM9IiwibmJmIjoxNTg1ODEyMzA4LCJleHAiOjE1ODU4MTIzNjgsImlhdCI6MTU4NTgxMjMwOCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.btZsnjnblERgveOjMKkpatulwPqF_vWdAtBDYF5OvyQ'} 
data={"escrowCompanyId": "001", "sellerID": "e958cc45-a028-4da5-bcfd-01405a49d34a"} 
json=None</msg>
<msg timestamp="20200402 12:55:13.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:12.864" endtime="20200402 12:55:13.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:13.386" level="INFO">{"escrowCompanyId":"001","sellerId":"e958cc45-a028-4da5-bcfd-01405a49d34a","idNumber":"82317832920345","typeOfId":3,"mobileCountryCode":"67","mobileNo":"7549110727","email":"pavan32541@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"AB00345121919","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:09","updateDate":"02/04/2020 02:25:10","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:13.385" endtime="20200402 12:55:13.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:13.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:13.387" endtime="20200402 12:55:13.388"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:12.861" endtime="20200402 12:55:13.388"></status>
</kw>
<doc>Valid : To Verify response if we enter valid otherVerification and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:07.037" endtime="20200402 12:55:13.388" critical="yes"></status>
</test>
<test id="s1-t76" name="TC_90 Selle_Details_API Empty otherverification kyc 1">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:16.392" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:13.391" endtime="20200402 12:55:16.392"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:16.393" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:16.393" endtime="20200402 12:55:16.394"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:16.394" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:16.394" endtime="20200402 12:55:16.394"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:16.394" endtime="20200402 12:55:16.395"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:16.395" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:16.395" endtime="20200402 12:55:16.395"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:16.396" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:17.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:16.395" endtime="20200402 12:55:17.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:17.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:17.926" endtime="20200402 12:55:17.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:17.927" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4bXFLdzBVbThhbjd6TlJ1Tk85SXFOWmU2aGVOeW1hVXJwdEgzbEJ3VmpJbnVzbEc5SHh5NlNDVDVCeXc9IiwibmJmIjoxNTg1ODEyMzE1LCJleHAiOjE1ODU4MTIzNzUsImlhdCI6MTU4NTgxMjMxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VCHd9b_zYWoKzqiR1n15YoimlSdOGPTrPhep3NpfbNc</msg>
<status status="PASS" starttime="20200402 12:55:17.927" endtime="20200402 12:55:17.927"></status>
</kw>
<msg timestamp="20200402 12:55:17.928" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4bXFLdzB...</msg>
<status status="PASS" starttime="20200402 12:55:16.393" endtime="20200402 12:55:17.928"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:17.929" level="INFO">${Id} = 95661023455226</msg>
<status status="PASS" starttime="20200402 12:55:17.929" endtime="20200402 12:55:17.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:17.930" level="INFO">${IdNumber} = 95661023455226</msg>
<status status="PASS" starttime="20200402 12:55:17.929" endtime="20200402 12:55:17.930"></status>
</kw>
<msg timestamp="20200402 12:55:17.930" level="INFO">${idNum} = 95661023455226</msg>
<status status="PASS" starttime="20200402 12:55:17.929" endtime="20200402 12:55:17.930"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:17.932" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:17.931" endtime="20200402 12:55:17.932"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:17.933" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:17.932" endtime="20200402 12:55:17.933"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:17.933" endtime="20200402 12:55:17.933"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:17.934" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:17.933" endtime="20200402 12:55:17.934"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:17.934" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:18.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:17.934" endtime="20200402 12:55:18.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:18.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:18.425" endtime="20200402 12:55:18.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.426" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOC9ZQ2xhOW5DVmo2NlpRSENNNmYwME9ob1FmYkZvb1BoWFYzQnVzZ1BhcC9iUlNWK0ttMW1VZkF4K3RETld6eExVNXVIZm51NzVRYVQ1bkpJSGRQYWs9IiwibmJmIjoxNTg1ODEyMzE1LCJleHAiOjE1ODU4MTIzNzUsImlhdCI6MTU4NTgxMjMxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.c_sNuPGuVV5x4nLfqPoSxbrYJdXu2ktVKlJIDJ_Djc4</msg>
<status status="PASS" starttime="20200402 12:55:18.426" endtime="20200402 12:55:18.426"></status>
</kw>
<msg timestamp="20200402 12:55:18.427" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOC9ZQ2xhOW5DVmo2NlpRSENNNmYwME9ob1FmYkZvb1B...</msg>
<status status="PASS" starttime="20200402 12:55:17.931" endtime="20200402 12:55:18.427"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:18.427" level="INFO">${Id} = 50360322239314</msg>
<status status="PASS" starttime="20200402 12:55:18.427" endtime="20200402 12:55:18.427"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.428" level="INFO">${IdNumber} = 50360322239314</msg>
<status status="PASS" starttime="20200402 12:55:18.428" endtime="20200402 12:55:18.428"></status>
</kw>
<msg timestamp="20200402 12:55:18.428" level="INFO">${idNum} = 50360322239314</msg>
<status status="PASS" starttime="20200402 12:55:18.427" endtime="20200402 12:55:18.428"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:18.429" level="INFO">${mobile} = 3081726342</msg>
<status status="PASS" starttime="20200402 12:55:18.429" endtime="20200402 12:55:18.429"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.430" level="INFO">${mobileNo} = 3081726342</msg>
<status status="PASS" starttime="20200402 12:55:18.429" endtime="20200402 12:55:18.430"></status>
</kw>
<msg timestamp="20200402 12:55:18.430" level="INFO">${MobNo} = 3081726342</msg>
<status status="PASS" starttime="20200402 12:55:18.429" endtime="20200402 12:55:18.430"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:18.432" level="INFO">${Emailnum} = 12669</msg>
<status status="PASS" starttime="20200402 12:55:18.431" endtime="20200402 12:55:18.432"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.432" level="INFO">${enum} = 12669</msg>
<status status="PASS" starttime="20200402 12:55:18.432" endtime="20200402 12:55:18.432"></status>
</kw>
<msg timestamp="20200402 12:55:18.433" level="INFO">${num} = 12669</msg>
<status status="PASS" starttime="20200402 12:55:18.431" endtime="20200402 12:55:18.433"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:18.433" level="INFO">${emailid} = pavan12669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.433" endtime="20200402 12:55:18.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.434" level="INFO">${email} = pavan12669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.433" endtime="20200402 12:55:18.434"></status>
</kw>
<msg timestamp="20200402 12:55:18.434" level="INFO">${emailid} = pavan12669@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.430" endtime="20200402 12:55:18.434"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:18.437" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:18.436" endtime="20200402 12:55:18.437"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:18.438" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:18.437" endtime="20200402 12:55:18.438"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:18.438" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:18.438" endtime="20200402 12:55:18.438"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:18.440" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:18.438" endtime="20200402 12:55:18.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:18.441" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:18.440" endtime="20200402 12:55:18.441"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:18.444" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '50360322239314', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3081726342', 'email': 'pavan12669@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:18.442" endtime="20200402 12:55:18.444"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:18.444" endtime="20200402 12:55:18.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:18.445" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOC9ZQ2xhOW5DVmo2NlpRSENNNmYwME9ob1Fm...</msg>
<status status="PASS" starttime="20200402 12:55:18.445" endtime="20200402 12:55:18.446"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:18.446" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:18.446" endtime="20200402 12:55:18.446"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:18.447" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOC9ZQ2xhOW5DVmo2NlpRSENNNmYwME9ob1FmYkZvb1BoWFYzQnVzZ1BhcC9iUlNWK0ttMW1VZkF4K3RETld6eExVNXVIZm51NzVRYVQ1bkpJSGRQYWs9IiwibmJmIjoxNTg1ODEyMzE1LCJleHAiOjE1ODU4MTIzNzUsImlhdCI6MTU4NTgxMjMxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.c_sNuPGuVV5x4nLfqPoSxbrYJdXu2ktVKlJIDJ_Djc4'} 
data={"escrowCompanyId": "001", "idNumber": "50360322239314", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3081726342", "email": "pavan12669@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:18.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:18.446" endtime="20200402 12:55:18.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:18.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:18.660" endtime="20200402 12:55:18.661"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:18.661" endtime="20200402 12:55:18.662"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:18.662" endtime="20200402 12:55:18.662"></status>
</kw>
<msg timestamp="20200402 12:55:18.663" level="INFO">${sellerid} = 18de144e-2019-432e-b399-60e9c045a905</msg>
<status status="PASS" starttime="20200402 12:55:18.434" endtime="20200402 12:55:18.663"></status>
</kw>
<msg timestamp="20200402 12:55:18.663" level="INFO">${SellerId} = 18de144e-2019-432e-b399-60e9c045a905</msg>
<msg timestamp="20200402 12:55:18.663" level="INFO">${idnumber} = 50360322239314</msg>
<status status="PASS" starttime="20200402 12:55:17.931" endtime="20200402 12:55:18.663"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:18.665" level="INFO">${Emailnum} = 72529</msg>
<status status="PASS" starttime="20200402 12:55:18.665" endtime="20200402 12:55:18.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.665" level="INFO">${enum} = 72529</msg>
<status status="PASS" starttime="20200402 12:55:18.665" endtime="20200402 12:55:18.665"></status>
</kw>
<msg timestamp="20200402 12:55:18.666" level="INFO">${num} = 72529</msg>
<status status="PASS" starttime="20200402 12:55:18.664" endtime="20200402 12:55:18.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:18.666" level="INFO">${emailid} = pavan72529@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.666" endtime="20200402 12:55:18.666"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:18.667" level="INFO">${email} = pavan72529@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.666" endtime="20200402 12:55:18.667"></status>
</kw>
<msg timestamp="20200402 12:55:18.667" level="INFO">${emailid} = pavan72529@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:18.664" endtime="20200402 12:55:18.667"></status>
</kw>
<kw name="UpdateSellerDetails Valid data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idNum}</arg>
<arg>@{IDno_enter_kyc_1}[1]</arg>
<arg>@{IDno_enter_kyc_1}[2]</arg>
<arg>@{IDno_enter_kyc_1}[3]</arg>
<arg>${EMPTY}</arg>
<arg>${1}</arg>
<arg>${1}</arg>
<arg>${emailid}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:18.670" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:18.669" endtime="20200402 12:55:18.671"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:18.671" level="INFO">${typeID} = 1</msg>
<status status="PASS" starttime="20200402 12:55:18.671" endtime="20200402 12:55:18.671"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:18.672" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:55:18.672" endtime="20200402 12:55:18.672"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>firstNameLocal=${firstNameLocal}</arg>
<arg>lastNameLocal=${lastNameLocal}</arg>
<arg>dateOfBirth=${dateOfBirth}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>typeOfID=${typeID}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>email=${email}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:18.673" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '18de144e-2019-432e-b399-60e9c045a905', 'idNumber': '95661023455226', 'firstNameLocal': 'ปฏิทัศน์', 'lastNameLocal': 'กิจการ', 'dateOfBirth': '08/03/1992', 'othe...</msg>
<status status="PASS" starttime="20200402 12:55:18.672" endtime="20200402 12:55:18.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:18.674" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4...</msg>
<status status="PASS" starttime="20200402 12:55:18.673" endtime="20200402 12:55:18.674"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:18.674" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:18.674" endtime="20200402 12:55:18.674"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:18.675" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4bXFLdzBVbThhbjd6TlJ1Tk85SXFOWmU2aGVOeW1hVXJwdEgzbEJ3VmpJbnVzbEc5SHh5NlNDVDVCeXc9IiwibmJmIjoxNTg1ODEyMzE1LCJleHAiOjE1ODU4MTIzNzUsImlhdCI6MTU4NTgxMjMxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VCHd9b_zYWoKzqiR1n15YoimlSdOGPTrPhep3NpfbNc'} 
data={"escrowCompanyId": "001", "SELLERId": "18de144e-2019-432e-b399-60e9c045a905", "idNumber": "95661023455226", "firstNameLocal": "\u0e1b\u0e0f\u0e34\u0e17\u0e31\u0e28\u0e19\u0e4c", "lastNameLocal": "\u0e01\u0e34\u0e08\u0e01\u0e32\u0e23", "dateOfBirth": "08/03/1992", "otherVerification": "", "typeOfID": 1, "kycRequest": 1, "email": "pavan72529@2c2p.com"} 
json=None</msg>
<msg timestamp="20200402 12:55:19.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:18.675" endtime="20200402 12:55:19.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:19.141" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:55:19.140" endtime="20200402 12:55:19.141"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:19.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:19.141" endtime="20200402 12:55:19.142"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:19.142" endtime="20200402 12:55:19.143"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:19.143" endtime="20200402 12:55:19.143"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:18.668" endtime="20200402 12:55:19.143"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:19.146" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:19.145" endtime="20200402 12:55:19.146"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:19.147" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '18de144e-2019-432e-b399-60e9c045a905'}</msg>
<status status="PASS" starttime="20200402 12:55:19.146" endtime="20200402 12:55:19.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:19.148" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4...</msg>
<status status="PASS" starttime="20200402 12:55:19.147" endtime="20200402 12:55:19.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:19.149" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:19.148" endtime="20200402 12:55:19.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:19.150" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeSs4T203bUFhaHkyUUJLaTMvKzRqSFJwZER4bXFLdzBVbThhbjd6TlJ1Tk85SXFOWmU2aGVOeW1hVXJwdEgzbEJ3VmpJbnVzbEc5SHh5NlNDVDVCeXc9IiwibmJmIjoxNTg1ODEyMzE1LCJleHAiOjE1ODU4MTIzNzUsImlhdCI6MTU4NTgxMjMxNSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VCHd9b_zYWoKzqiR1n15YoimlSdOGPTrPhep3NpfbNc'} 
data={"escrowCompanyId": "001", "sellerID": "18de144e-2019-432e-b399-60e9c045a905"} 
json=None</msg>
<msg timestamp="20200402 12:55:19.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:19.150" endtime="20200402 12:55:19.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:19.626" level="INFO">{"escrowCompanyId":"001","sellerId":"18de144e-2019-432e-b399-60e9c045a905","idNumber":"50360322239314","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3081726342","email":"pavan12669@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:16","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:19.625" endtime="20200402 12:55:19.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:19.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:19.627" endtime="20200402 12:55:19.627"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:19.144" endtime="20200402 12:55:19.627"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter otherVerification and request is sent with all mandatory fields with KYCRequest=1</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:13.390" endtime="20200402 12:55:19.628" critical="yes"></status>
</test>
<test id="s1-t77" name="TC_91 Selle_Details_API Empty otherVerification">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:22.632" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:19.630" endtime="20200402 12:55:22.632"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:22.634" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:22.633" endtime="20200402 12:55:22.634"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:22.635" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:22.634" endtime="20200402 12:55:22.635"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:22.635" endtime="20200402 12:55:22.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:22.636" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:22.636" endtime="20200402 12:55:22.636"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:22.637" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:22.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:22.636" endtime="20200402 12:55:22.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:22.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:22.797" endtime="20200402 12:55:22.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:22.799" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2SmdCWmFpUWh2aWc3bmVSNmtPTkVxTm1BdUxXSWFKUU9qWFN6YU9EWjQ0b1NsbnVySTF3UHd5aktXVGc9IiwibmJmIjoxNTg1ODEyMzIwLCJleHAiOjE1ODU4MTIzODAsImlhdCI6MTU4NTgxMjMyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2hkyKk-hCZQvxrLOSug75xafJFiw66Lze95rbsNKdsI</msg>
<status status="PASS" starttime="20200402 12:55:22.798" endtime="20200402 12:55:22.799"></status>
</kw>
<msg timestamp="20200402 12:55:22.800" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2SmdCWmF...</msg>
<status status="PASS" starttime="20200402 12:55:22.633" endtime="20200402 12:55:22.800"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:22.802" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:22.802" endtime="20200402 12:55:22.803"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:22.804" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:22.803" endtime="20200402 12:55:22.804"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:22.804" endtime="20200402 12:55:22.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:22.805" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:22.805" endtime="20200402 12:55:22.805"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:22.806" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:23.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:22.806" endtime="20200402 12:55:23.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:23.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:23.307" endtime="20200402 12:55:23.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:23.309" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0JOcS9VWmtUTTlHV2JLYllIRWhCWUw0Z3ppRmkvMnB6UTE3SUI5SkVVK0R0OHl1dTBXS3l1YnVlS0ZFUlQvTklDRDdWWHYxL3phSnRlK3RncGkvYUU9IiwibmJmIjoxNTg1ODEyMzIwLCJleHAiOjE1ODU4MTIzODAsImlhdCI6MTU4NTgxMjMyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2oh7FSJV7yyXojdA4k2LvooImTQkY2BFkRHfFZ-VITg</msg>
<status status="PASS" starttime="20200402 12:55:23.308" endtime="20200402 12:55:23.309"></status>
</kw>
<msg timestamp="20200402 12:55:23.309" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0JOcS9VWmtUTTlHV2JLYllIRWhCWUw0Z3ppRmkvMnB...</msg>
<status status="PASS" starttime="20200402 12:55:22.801" endtime="20200402 12:55:23.309"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:23.310" level="INFO">${Id} = 12227676958689</msg>
<status status="PASS" starttime="20200402 12:55:23.310" endtime="20200402 12:55:23.310"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:23.311" level="INFO">${IdNumber} = 12227676958689</msg>
<status status="PASS" starttime="20200402 12:55:23.310" endtime="20200402 12:55:23.311"></status>
</kw>
<msg timestamp="20200402 12:55:23.311" level="INFO">${idNum} = 12227676958689</msg>
<status status="PASS" starttime="20200402 12:55:23.309" endtime="20200402 12:55:23.311"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:23.313" level="INFO">${mobile} = 9991479400</msg>
<status status="PASS" starttime="20200402 12:55:23.312" endtime="20200402 12:55:23.313"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:23.313" level="INFO">${mobileNo} = 9991479400</msg>
<status status="PASS" starttime="20200402 12:55:23.313" endtime="20200402 12:55:23.313"></status>
</kw>
<msg timestamp="20200402 12:55:23.313" level="INFO">${MobNo} = 9991479400</msg>
<status status="PASS" starttime="20200402 12:55:23.311" endtime="20200402 12:55:23.314"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:23.315" level="INFO">${Emailnum} = 32783</msg>
<status status="PASS" starttime="20200402 12:55:23.314" endtime="20200402 12:55:23.315"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:23.315" level="INFO">${enum} = 32783</msg>
<status status="PASS" starttime="20200402 12:55:23.315" endtime="20200402 12:55:23.315"></status>
</kw>
<msg timestamp="20200402 12:55:23.316" level="INFO">${num} = 32783</msg>
<status status="PASS" starttime="20200402 12:55:23.314" endtime="20200402 12:55:23.316"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:23.316" level="INFO">${emailid} = pavan32783@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:23.316" endtime="20200402 12:55:23.316"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:23.317" level="INFO">${email} = pavan32783@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:23.316" endtime="20200402 12:55:23.317"></status>
</kw>
<msg timestamp="20200402 12:55:23.317" level="INFO">${emailid} = pavan32783@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:23.314" endtime="20200402 12:55:23.317"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:23.320" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:23.319" endtime="20200402 12:55:23.320"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:23.320" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:23.320" endtime="20200402 12:55:23.320"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:23.321" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:23.321" endtime="20200402 12:55:23.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:23.323" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:23.321" endtime="20200402 12:55:23.323"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:23.328" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:23.324" endtime="20200402 12:55:23.329"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:23.332" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '12227676958689', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9991479400', 'email': 'pavan32783@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:23.329" endtime="20200402 12:55:23.332"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:23.333" endtime="20200402 12:55:23.336"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:23.338" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0JOcS9VWmtUTTlHV2JLYllIRWhCWUw0Z3pp...</msg>
<status status="PASS" starttime="20200402 12:55:23.337" endtime="20200402 12:55:23.338"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:23.339" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:23.339" endtime="20200402 12:55:23.339"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:23.340" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0JOcS9VWmtUTTlHV2JLYllIRWhCWUw0Z3ppRmkvMnB6UTE3SUI5SkVVK0R0OHl1dTBXS3l1YnVlS0ZFUlQvTklDRDdWWHYxL3phSnRlK3RncGkvYUU9IiwibmJmIjoxNTg1ODEyMzIwLCJleHAiOjE1ODU4MTIzODAsImlhdCI6MTU4NTgxMjMyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2oh7FSJV7yyXojdA4k2LvooImTQkY2BFkRHfFZ-VITg'} 
data={"escrowCompanyId": "001", "idNumber": "12227676958689", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9991479400", "email": "pavan32783@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:23.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:23.340" endtime="20200402 12:55:23.618"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:23.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:23.618" endtime="20200402 12:55:23.619"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:23.620" endtime="20200402 12:55:23.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:23.621" endtime="20200402 12:55:23.622"></status>
</kw>
<msg timestamp="20200402 12:55:23.622" level="INFO">${sellerid} = 5dceeabc-0003-420f-996a-7b0bb1016993</msg>
<status status="PASS" starttime="20200402 12:55:23.317" endtime="20200402 12:55:23.622"></status>
</kw>
<msg timestamp="20200402 12:55:23.623" level="INFO">${SellerId} = 5dceeabc-0003-420f-996a-7b0bb1016993</msg>
<msg timestamp="20200402 12:55:23.623" level="INFO">${idnumber} = 12227676958689</msg>
<status status="PASS" starttime="20200402 12:55:22.800" endtime="20200402 12:55:23.623"></status>
</kw>
<kw name="UpdateSellerDetails otherVerification" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:23.625" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:23.625" endtime="20200402 12:55:23.626"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:23.627" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:23.626" endtime="20200402 12:55:23.627"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:23.628" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '5dceeabc-0003-420f-996a-7b0bb1016993', 'otherVerification': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:23.628" endtime="20200402 12:55:23.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:23.629" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2...</msg>
<status status="PASS" starttime="20200402 12:55:23.629" endtime="20200402 12:55:23.629"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:23.630" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:23.630" endtime="20200402 12:55:23.630"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:23.631" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2SmdCWmFpUWh2aWc3bmVSNmtPTkVxTm1BdUxXSWFKUU9qWFN6YU9EWjQ0b1NsbnVySTF3UHd5aktXVGc9IiwibmJmIjoxNTg1ODEyMzIwLCJleHAiOjE1ODU4MTIzODAsImlhdCI6MTU4NTgxMjMyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2hkyKk-hCZQvxrLOSug75xafJFiw66Lze95rbsNKdsI'} 
data={"escrowCompanyId": "001", "SELLERId": "5dceeabc-0003-420f-996a-7b0bb1016993", "otherVerification": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:24.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:23.630" endtime="20200402 12:55:24.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:24.450" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:24.450" endtime="20200402 12:55:24.451"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:24.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:24.451" endtime="20200402 12:55:24.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:24.452" endtime="20200402 12:55:24.453"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:24.453" endtime="20200402 12:55:24.454"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:23.624" endtime="20200402 12:55:24.454"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:24.456" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:24.455" endtime="20200402 12:55:24.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:24.457" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '5dceeabc-0003-420f-996a-7b0bb1016993'}</msg>
<status status="PASS" starttime="20200402 12:55:24.457" endtime="20200402 12:55:24.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:24.458" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2...</msg>
<status status="PASS" starttime="20200402 12:55:24.457" endtime="20200402 12:55:24.458"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:24.459" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:24.458" endtime="20200402 12:55:24.459"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:24.460" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNHJUbituNzE3clJ4VWtneXI3bzVtMU9Qcjc2SmdCWmFpUWh2aWc3bmVSNmtPTkVxTm1BdUxXSWFKUU9qWFN6YU9EWjQ0b1NsbnVySTF3UHd5aktXVGc9IiwibmJmIjoxNTg1ODEyMzIwLCJleHAiOjE1ODU4MTIzODAsImlhdCI6MTU4NTgxMjMyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.2hkyKk-hCZQvxrLOSug75xafJFiw66Lze95rbsNKdsI'} 
data={"escrowCompanyId": "001", "sellerID": "5dceeabc-0003-420f-996a-7b0bb1016993"} 
json=None</msg>
<msg timestamp="20200402 12:55:25.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:24.460" endtime="20200402 12:55:25.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:25.956" level="INFO">{"escrowCompanyId":"001","sellerId":"5dceeabc-0003-420f-996a-7b0bb1016993","idNumber":"12227676958689","typeOfId":3,"mobileCountryCode":"67","mobileNo":"9991479400","email":"pavan32783@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:21","updateDate":"02/04/2020 02:25:21","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:25.955" endtime="20200402 12:55:25.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:25.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:25.957" endtime="20200402 12:55:25.958"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:24.455" endtime="20200402 12:55:25.958"></status>
</kw>
<doc>Empty: To Verify response if we NOT enter otherVerification and request is sent with all mandatory fields with KYCRequest=0</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:19.629" endtime="20200402 12:55:25.959" critical="yes"></status>
</test>
<test id="s1-t78" name="TC_92 Selle_Details_API InValid otherVerification">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:28.963" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:25.962" endtime="20200402 12:55:28.963"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:28.965" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:28.964" endtime="20200402 12:55:28.965"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:28.965" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:28.965" endtime="20200402 12:55:28.965"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:28.966" endtime="20200402 12:55:28.966"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:28.966" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:28.966" endtime="20200402 12:55:28.966"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:28.967" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:29.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:28.967" endtime="20200402 12:55:29.475"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:29.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:29.475" endtime="20200402 12:55:29.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:29.476" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01qZkFPNTYwOHJ1S2ZxSWZiS3Y0eUdLSDM5Z1NZMmlNdkhoc3BLWE0vaVE5QUYvMmdTcFNyZCtLZlE0bGc9IiwibmJmIjoxNTg1ODEyMzI2LCJleHAiOjE1ODU4MTIzODYsImlhdCI6MTU4NTgxMjMyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jYIm4ew2fZPapszvE4cSQ9jb_vd1VmhkbnDbx_a3c3g</msg>
<status status="PASS" starttime="20200402 12:55:29.476" endtime="20200402 12:55:29.476"></status>
</kw>
<msg timestamp="20200402 12:55:29.477" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01qZkFPNTY...</msg>
<status status="PASS" starttime="20200402 12:55:28.964" endtime="20200402 12:55:29.477"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:29.479" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:29.478" endtime="20200402 12:55:29.479"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:29.480" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:29.479" endtime="20200402 12:55:29.480"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:29.480" endtime="20200402 12:55:29.480"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:29.481" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:29.481" endtime="20200402 12:55:29.481"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:29.482" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:30.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:29.481" endtime="20200402 12:55:30.001"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:30.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.002" endtime="20200402 12:55:30.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:30.003" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0VHVGtqckhiNzhDYm5LWm1uRGxvbTFzQkpUajhtdHFRK0gwekdpRHNHZ0grbmF6WHF0c0NFbzNCNnJLWXRBejVTbWlhQVNOYlAxVjVNMitVM0FERnc9IiwibmJmIjoxNTg1ODEyMzI3LCJleHAiOjE1ODU4MTIzODcsImlhdCI6MTU4NTgxMjMyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.MC3S060pLZ0M7AvbWpbTJssejuMImo_cI5sGXDxoAF8</msg>
<status status="PASS" starttime="20200402 12:55:30.002" endtime="20200402 12:55:30.003"></status>
</kw>
<msg timestamp="20200402 12:55:30.003" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0VHVGtqckhiNzhDYm5LWm1uRGxvbTFzQkpUajhtdHF...</msg>
<status status="PASS" starttime="20200402 12:55:29.478" endtime="20200402 12:55:30.003"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:30.004" level="INFO">${Id} = 39240596890393</msg>
<status status="PASS" starttime="20200402 12:55:30.004" endtime="20200402 12:55:30.004"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:30.005" level="INFO">${IdNumber} = 39240596890393</msg>
<status status="PASS" starttime="20200402 12:55:30.004" endtime="20200402 12:55:30.005"></status>
</kw>
<msg timestamp="20200402 12:55:30.005" level="INFO">${idNum} = 39240596890393</msg>
<status status="PASS" starttime="20200402 12:55:30.003" endtime="20200402 12:55:30.005"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:30.006" level="INFO">${mobile} = 8526793139</msg>
<status status="PASS" starttime="20200402 12:55:30.005" endtime="20200402 12:55:30.006"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:30.006" level="INFO">${mobileNo} = 8526793139</msg>
<status status="PASS" starttime="20200402 12:55:30.006" endtime="20200402 12:55:30.006"></status>
</kw>
<msg timestamp="20200402 12:55:30.006" level="INFO">${MobNo} = 8526793139</msg>
<status status="PASS" starttime="20200402 12:55:30.005" endtime="20200402 12:55:30.006"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:30.008" level="INFO">${Emailnum} = 61773</msg>
<status status="PASS" starttime="20200402 12:55:30.007" endtime="20200402 12:55:30.008"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:30.008" level="INFO">${enum} = 61773</msg>
<status status="PASS" starttime="20200402 12:55:30.008" endtime="20200402 12:55:30.008"></status>
</kw>
<msg timestamp="20200402 12:55:30.009" level="INFO">${num} = 61773</msg>
<status status="PASS" starttime="20200402 12:55:30.007" endtime="20200402 12:55:30.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:30.009" level="INFO">${emailid} = pavan61773@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:30.009" endtime="20200402 12:55:30.009"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:30.010" level="INFO">${email} = pavan61773@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:30.009" endtime="20200402 12:55:30.010"></status>
</kw>
<msg timestamp="20200402 12:55:30.010" level="INFO">${emailid} = pavan61773@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:30.007" endtime="20200402 12:55:30.010"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:30.013" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:30.013" endtime="20200402 12:55:30.013"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:30.014" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:30.013" endtime="20200402 12:55:30.014"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:30.014" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:30.014" endtime="20200402 12:55:30.014"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:30.016" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:30.014" endtime="20200402 12:55:30.016"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:30.018" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:30.016" endtime="20200402 12:55:30.018"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:30.020" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '39240596890393', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8526793139', 'email': 'pavan61773@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:30.018" endtime="20200402 12:55:30.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:30.020" endtime="20200402 12:55:30.021"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:30.022" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0VHVGtqckhiNzhDYm5LWm1uRGxvbTFzQkpU...</msg>
<status status="PASS" starttime="20200402 12:55:30.021" endtime="20200402 12:55:30.022"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:30.022" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:30.022" endtime="20200402 12:55:30.023"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:30.023" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0VHVGtqckhiNzhDYm5LWm1uRGxvbTFzQkpUajhtdHFRK0gwekdpRHNHZ0grbmF6WHF0c0NFbzNCNnJLWXRBejVTbWlhQVNOYlAxVjVNMitVM0FERnc9IiwibmJmIjoxNTg1ODEyMzI3LCJleHAiOjE1ODU4MTIzODcsImlhdCI6MTU4NTgxMjMyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.MC3S060pLZ0M7AvbWpbTJssejuMImo_cI5sGXDxoAF8'} 
data={"escrowCompanyId": "001", "idNumber": "39240596890393", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8526793139", "email": "pavan61773@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:30.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.023" endtime="20200402 12:55:30.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:30.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.272" endtime="20200402 12:55:30.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:30.273" endtime="20200402 12:55:30.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:30.273" endtime="20200402 12:55:30.274"></status>
</kw>
<msg timestamp="20200402 12:55:30.274" level="INFO">${sellerid} = b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7</msg>
<status status="PASS" starttime="20200402 12:55:30.010" endtime="20200402 12:55:30.274"></status>
</kw>
<msg timestamp="20200402 12:55:30.275" level="INFO">${SellerId} = b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7</msg>
<msg timestamp="20200402 12:55:30.275" level="INFO">${idnumber} = 39240596890393</msg>
<status status="PASS" starttime="20200402 12:55:29.477" endtime="20200402 12:55:30.275"></status>
</kw>
<kw name="UpdateSellerDetails otherVerification" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{type_id_others}[5]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:30.277" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:30.276" endtime="20200402 12:55:30.277"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:30.277" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:30.277" endtime="20200402 12:55:30.277"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>otherVerification=${otherVerification}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:30.278" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7', 'otherVerification': 'AB003451219196789988776555667', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:30.278" endtime="20200402 12:55:30.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:30.279" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01q...</msg>
<status status="PASS" starttime="20200402 12:55:30.279" endtime="20200402 12:55:30.279"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:30.280" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:30.280" endtime="20200402 12:55:30.280"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:30.281" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01qZkFPNTYwOHJ1S2ZxSWZiS3Y0eUdLSDM5Z1NZMmlNdkhoc3BLWE0vaVE5QUYvMmdTcFNyZCtLZlE0bGc9IiwibmJmIjoxNTg1ODEyMzI2LCJleHAiOjE1ODU4MTIzODYsImlhdCI6MTU4NTgxMjMyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jYIm4ew2fZPapszvE4cSQ9jb_vd1VmhkbnDbx_a3c3g'} 
data={"escrowCompanyId": "001", "SELLERId": "b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7", "otherVerification": "AB003451219196789988776555667", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:30.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.280" endtime="20200402 12:55:30.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:30.469" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:55:30.469" endtime="20200402 12:55:30.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:30.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.470" endtime="20200402 12:55:30.470"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:30.470" endtime="20200402 12:55:30.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:30.471" endtime="20200402 12:55:30.472"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:30.275" endtime="20200402 12:55:30.472"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:30.473" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:30.473" endtime="20200402 12:55:30.474"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:30.474" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7'}</msg>
<status status="PASS" starttime="20200402 12:55:30.474" endtime="20200402 12:55:30.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:30.475" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01q...</msg>
<status status="PASS" starttime="20200402 12:55:30.475" endtime="20200402 12:55:30.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:30.475" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:30.475" endtime="20200402 12:55:30.476"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:30.476" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMDV6OEVXYVpNNklqQ2NhSUJRbS9iUXlQL01qZkFPNTYwOHJ1S2ZxSWZiS3Y0eUdLSDM5Z1NZMmlNdkhoc3BLWE0vaVE5QUYvMmdTcFNyZCtLZlE0bGc9IiwibmJmIjoxNTg1ODEyMzI2LCJleHAiOjE1ODU4MTIzODYsImlhdCI6MTU4NTgxMjMyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.jYIm4ew2fZPapszvE4cSQ9jb_vd1VmhkbnDbx_a3c3g'} 
data={"escrowCompanyId": "001", "sellerID": "b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7"} 
json=None</msg>
<msg timestamp="20200402 12:55:30.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.476" endtime="20200402 12:55:30.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:30.663" level="INFO">{"escrowCompanyId":"001","sellerId":"b4649df7-4e0b-4aa1-8526-a62c2dbd9fc7","idNumber":"39240596890393","typeOfId":3,"mobileCountryCode":"67","mobileNo":"8526793139","email":"pavan61773@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:27","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:30.662" endtime="20200402 12:55:30.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:30.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:30.664" endtime="20200402 12:55:30.664"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:30.473" endtime="20200402 12:55:30.664"></status>
</kw>
<doc>Invalid: To Verify response if otherVerification parameter is entered more than size 15 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:25.960" endtime="20200402 12:55:30.665" critical="yes"></status>
</test>
<test id="s1-t79" name="TC_93 Seller_Details_API Valid workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:33.670" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:30.669" endtime="20200402 12:55:33.670"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:33.671" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:33.671" endtime="20200402 12:55:33.672"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:33.672" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:33.672" endtime="20200402 12:55:33.672"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:33.673" endtime="20200402 12:55:33.673"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:33.674" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:33.673" endtime="20200402 12:55:33.674"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:33.674" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:35.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:33.674" endtime="20200402 12:55:35.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:35.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:35.149" endtime="20200402 12:55:35.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:35.150" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oyTnh0NGcySkpmYXZEd1ZPUG1PV0UzelpnK3A0RlZGRVZHS1FNM3BYNWRKaGJ5T3pjQWErOGsrMVVDSkE9IiwibmJmIjoxNTg1ODEyMzMyLCJleHAiOjE1ODU4MTIzOTIsImlhdCI6MTU4NTgxMjMzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5fJwd7DYiAixTjRa6JtXx1LNgizCvyXyNkvQy4W7Boo</msg>
<status status="PASS" starttime="20200402 12:55:35.150" endtime="20200402 12:55:35.150"></status>
</kw>
<msg timestamp="20200402 12:55:35.151" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oyTnh0NGc...</msg>
<status status="PASS" starttime="20200402 12:55:33.671" endtime="20200402 12:55:35.151"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:35.153" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:35.153" endtime="20200402 12:55:35.154"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:35.154" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:35.154" endtime="20200402 12:55:35.154"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:35.154" endtime="20200402 12:55:35.155"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:35.155" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:35.155" endtime="20200402 12:55:35.155"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:35.156" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:36.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:35.155" endtime="20200402 12:55:36.631"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:36.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:36.631" endtime="20200402 12:55:36.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:36.633" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QKzFFYUJZU05qc21CcXR2d2Qza2MwZy90MHJqb0VrZ0Y4SEJrK2loUWVRelFHSHA3bXlJUzVSQ2ZiZlQ4VkhZZFhiazdBalVSK1NvaHhGSTJlV1E1R3M9IiwibmJmIjoxNTg1ODEyMzM0LCJleHAiOjE1ODU4MTIzOTQsImlhdCI6MTU4NTgxMjMzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yWsQFCAgzdq3gtZiWnXiR8rFzDGlEPWpbnTbleXPsJ8</msg>
<status status="PASS" starttime="20200402 12:55:36.632" endtime="20200402 12:55:36.633"></status>
</kw>
<msg timestamp="20200402 12:55:36.634" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QKzFFYUJZU05qc21CcXR2d2Qza2MwZy90MHJqb0VrZ0Y...</msg>
<status status="PASS" starttime="20200402 12:55:35.152" endtime="20200402 12:55:36.634"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:36.635" level="INFO">${Id} = 44149784122237</msg>
<status status="PASS" starttime="20200402 12:55:36.635" endtime="20200402 12:55:36.635"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:36.636" level="INFO">${IdNumber} = 44149784122237</msg>
<status status="PASS" starttime="20200402 12:55:36.636" endtime="20200402 12:55:36.637"></status>
</kw>
<msg timestamp="20200402 12:55:36.637" level="INFO">${idNum} = 44149784122237</msg>
<status status="PASS" starttime="20200402 12:55:36.634" endtime="20200402 12:55:36.637"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:36.638" level="INFO">${mobile} = 4949606283</msg>
<status status="PASS" starttime="20200402 12:55:36.638" endtime="20200402 12:55:36.638"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:36.639" level="INFO">${mobileNo} = 4949606283</msg>
<status status="PASS" starttime="20200402 12:55:36.639" endtime="20200402 12:55:36.639"></status>
</kw>
<msg timestamp="20200402 12:55:36.640" level="INFO">${MobNo} = 4949606283</msg>
<status status="PASS" starttime="20200402 12:55:36.637" endtime="20200402 12:55:36.640"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:36.641" level="INFO">${Emailnum} = 34047</msg>
<status status="PASS" starttime="20200402 12:55:36.641" endtime="20200402 12:55:36.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:36.642" level="INFO">${enum} = 34047</msg>
<status status="PASS" starttime="20200402 12:55:36.642" endtime="20200402 12:55:36.643"></status>
</kw>
<msg timestamp="20200402 12:55:36.643" level="INFO">${num} = 34047</msg>
<status status="PASS" starttime="20200402 12:55:36.640" endtime="20200402 12:55:36.643"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:36.643" level="INFO">${emailid} = pavan34047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:36.643" endtime="20200402 12:55:36.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:36.644" level="INFO">${email} = pavan34047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:36.644" endtime="20200402 12:55:36.644"></status>
</kw>
<msg timestamp="20200402 12:55:36.645" level="INFO">${emailid} = pavan34047@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:36.640" endtime="20200402 12:55:36.645"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:36.648" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:36.648" endtime="20200402 12:55:36.648"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:36.649" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:36.649" endtime="20200402 12:55:36.650"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:36.651" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:36.650" endtime="20200402 12:55:36.651"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:36.654" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:36.651" endtime="20200402 12:55:36.654"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:36.657" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:36.654" endtime="20200402 12:55:36.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:36.662" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '44149784122237', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4949606283', 'email': 'pavan34047@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:36.658" endtime="20200402 12:55:36.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:36.662" endtime="20200402 12:55:36.664"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:36.665" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QKzFFYUJZU05qc21CcXR2d2Qza2MwZy90MHJq...</msg>
<status status="PASS" starttime="20200402 12:55:36.664" endtime="20200402 12:55:36.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:36.666" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:36.665" endtime="20200402 12:55:36.666"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:36.668" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QKzFFYUJZU05qc21CcXR2d2Qza2MwZy90MHJqb0VrZ0Y4SEJrK2loUWVRelFHSHA3bXlJUzVSQ2ZiZlQ4VkhZZFhiazdBalVSK1NvaHhGSTJlV1E1R3M9IiwibmJmIjoxNTg1ODEyMzM0LCJleHAiOjE1ODU4MTIzOTQsImlhdCI6MTU4NTgxMjMzNCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.yWsQFCAgzdq3gtZiWnXiR8rFzDGlEPWpbnTbleXPsJ8'} 
data={"escrowCompanyId": "001", "idNumber": "44149784122237", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4949606283", "email": "pavan34047@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:36.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:36.667" endtime="20200402 12:55:36.923"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:36.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:36.923" endtime="20200402 12:55:36.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:36.924" endtime="20200402 12:55:36.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:36.925" endtime="20200402 12:55:36.926"></status>
</kw>
<msg timestamp="20200402 12:55:36.926" level="INFO">${sellerid} = 4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1</msg>
<status status="PASS" starttime="20200402 12:55:36.645" endtime="20200402 12:55:36.926"></status>
</kw>
<msg timestamp="20200402 12:55:36.926" level="INFO">${SellerId} = 4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1</msg>
<msg timestamp="20200402 12:55:36.926" level="INFO">${idnumber} = 44149784122237</msg>
<status status="PASS" starttime="20200402 12:55:35.152" endtime="20200402 12:55:36.926"></status>
</kw>
<kw name="UpdateSellerDetails workPlace" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${workPlace}[0]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:36.929" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:36.929" endtime="20200402 12:55:36.929"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:36.930" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:36.929" endtime="20200402 12:55:36.930"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>workPlace=${workPlace}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:36.931" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1', 'workPlace': 'test', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:36.930" endtime="20200402 12:55:36.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:36.931" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oy...</msg>
<status status="PASS" starttime="20200402 12:55:36.931" endtime="20200402 12:55:36.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:36.932" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:36.931" endtime="20200402 12:55:36.932"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:36.933" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oyTnh0NGcySkpmYXZEd1ZPUG1PV0UzelpnK3A0RlZGRVZHS1FNM3BYNWRKaGJ5T3pjQWErOGsrMVVDSkE9IiwibmJmIjoxNTg1ODEyMzMyLCJleHAiOjE1ODU4MTIzOTIsImlhdCI6MTU4NTgxMjMzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5fJwd7DYiAixTjRa6JtXx1LNgizCvyXyNkvQy4W7Boo'} 
data={"escrowCompanyId": "001", "SELLERId": "4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1", "workPlace": "test", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:37.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:36.932" endtime="20200402 12:55:37.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:37.750" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:37.749" endtime="20200402 12:55:37.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:37.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:37.751" endtime="20200402 12:55:37.751"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:37.752" endtime="20200402 12:55:37.752"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:37.753" endtime="20200402 12:55:37.753"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:36.927" endtime="20200402 12:55:37.753"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:37.755" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:37.754" endtime="20200402 12:55:37.755"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:37.757" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1'}</msg>
<status status="PASS" starttime="20200402 12:55:37.756" endtime="20200402 12:55:37.757"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:37.758" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oy...</msg>
<status status="PASS" starttime="20200402 12:55:37.757" endtime="20200402 12:55:37.758"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:37.758" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:37.758" endtime="20200402 12:55:37.759"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:37.759" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QM0d1T1h5M0l5YjhOUWt4cFdKYzUvR2s4T0oyTnh0NGcySkpmYXZEd1ZPUG1PV0UzelpnK3A0RlZGRVZHS1FNM3BYNWRKaGJ5T3pjQWErOGsrMVVDSkE9IiwibmJmIjoxNTg1ODEyMzMyLCJleHAiOjE1ODU4MTIzOTIsImlhdCI6MTU4NTgxMjMzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5fJwd7DYiAixTjRa6JtXx1LNgizCvyXyNkvQy4W7Boo'} 
data={"escrowCompanyId": "001", "sellerID": "4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1"} 
json=None</msg>
<msg timestamp="20200402 12:55:38.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:37.759" endtime="20200402 12:55:38.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:38.550" level="INFO">{"escrowCompanyId":"001","sellerId":"4bd3ff3e-3851-43c0-9120-d26c8bf9ceb1","idNumber":"44149784122237","typeOfId":3,"mobileCountryCode":"67","mobileNo":"4949606283","email":"pavan34047@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"test","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:34","updateDate":"02/04/2020 02:25:35","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:38.550" endtime="20200402 12:55:38.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:38.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:38.551" endtime="20200402 12:55:38.552"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:37.754" endtime="20200402 12:55:38.552"></status>
</kw>
<doc>Valid: To Verify response if workPlace is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:30.667" endtime="20200402 12:55:38.552" critical="yes"></status>
</test>
<test id="s1-t80" name="TC_94 Seller_Details_API Empty workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:41.558" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:38.555" endtime="20200402 12:55:41.558"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.560" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:41.559" endtime="20200402 12:55:41.560"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:41.561" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:41.561" endtime="20200402 12:55:41.562"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:41.562" endtime="20200402 12:55:41.563"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:41.563" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:41.563" endtime="20200402 12:55:41.563"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:41.564" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:41.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:41.564" endtime="20200402 12:55:41.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:41.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:41.780" endtime="20200402 12:55:41.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.782" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1yL3hjWE1jYTRWVmpaNjkxNUgzNDlzMlNid0JHWlVNeWlZcWJrb3hmSXhsTVVROFdFL2xxWC9RaGk4SnM9IiwibmJmIjoxNTg1ODEyMzM5LCJleHAiOjE1ODU4MTIzOTksImlhdCI6MTU4NTgxMjMzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EbNlYyJXpLLrUTgIGu3MDJe82YD0h-iGc5ACTX-xvbg</msg>
<status status="PASS" starttime="20200402 12:55:41.781" endtime="20200402 12:55:41.782"></status>
</kw>
<msg timestamp="20200402 12:55:41.782" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1yL3hjWE1...</msg>
<status status="PASS" starttime="20200402 12:55:41.559" endtime="20200402 12:55:41.782"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.784" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:41.784" endtime="20200402 12:55:41.785"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:41.786" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:41.785" endtime="20200402 12:55:41.786"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:41.786" endtime="20200402 12:55:41.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:41.787" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:41.786" endtime="20200402 12:55:41.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:41.787" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:41.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:41.787" endtime="20200402 12:55:41.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:41.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:41.966" endtime="20200402 12:55:41.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.967" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeElvc1RzNmNQa0svZ0E4ZncySmZsb1lnbU5mTnhiNytOSVNHQ2hkcEt5L0w0SWRIdDdEMVhjWHM2enpuejFIOVlJQmd4MTV3UUUwR1ZNZUFHZUF5bTQ9IiwibmJmIjoxNTg1ODEyMzM5LCJleHAiOjE1ODU4MTIzOTksImlhdCI6MTU4NTgxMjMzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JoEcAjsep5_9UiYk4O6NoQIBMAtvm8WalSKdhlxViXU</msg>
<status status="PASS" starttime="20200402 12:55:41.967" endtime="20200402 12:55:41.967"></status>
</kw>
<msg timestamp="20200402 12:55:41.967" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeElvc1RzNmNQa0svZ0E4ZncySmZsb1lnbU5mTnhiNyt...</msg>
<status status="PASS" starttime="20200402 12:55:41.783" endtime="20200402 12:55:41.968"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:41.969" level="INFO">${Id} = 30760316937175</msg>
<status status="PASS" starttime="20200402 12:55:41.968" endtime="20200402 12:55:41.969"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.970" level="INFO">${IdNumber} = 30760316937175</msg>
<status status="PASS" starttime="20200402 12:55:41.969" endtime="20200402 12:55:41.970"></status>
</kw>
<msg timestamp="20200402 12:55:41.970" level="INFO">${idNum} = 30760316937175</msg>
<status status="PASS" starttime="20200402 12:55:41.968" endtime="20200402 12:55:41.970"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:41.971" level="INFO">${mobile} = 6769145512</msg>
<status status="PASS" starttime="20200402 12:55:41.971" endtime="20200402 12:55:41.971"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.971" level="INFO">${mobileNo} = 6769145512</msg>
<status status="PASS" starttime="20200402 12:55:41.971" endtime="20200402 12:55:41.971"></status>
</kw>
<msg timestamp="20200402 12:55:41.972" level="INFO">${MobNo} = 6769145512</msg>
<status status="PASS" starttime="20200402 12:55:41.970" endtime="20200402 12:55:41.972"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:41.973" level="INFO">${Emailnum} = 40416</msg>
<status status="PASS" starttime="20200402 12:55:41.972" endtime="20200402 12:55:41.973"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.973" level="INFO">${enum} = 40416</msg>
<status status="PASS" starttime="20200402 12:55:41.973" endtime="20200402 12:55:41.973"></status>
</kw>
<msg timestamp="20200402 12:55:41.974" level="INFO">${num} = 40416</msg>
<status status="PASS" starttime="20200402 12:55:41.972" endtime="20200402 12:55:41.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:41.974" level="INFO">${emailid} = pavan40416@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:41.974" endtime="20200402 12:55:41.974"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:41.975" level="INFO">${email} = pavan40416@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:41.974" endtime="20200402 12:55:41.975"></status>
</kw>
<msg timestamp="20200402 12:55:41.975" level="INFO">${emailid} = pavan40416@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:41.972" endtime="20200402 12:55:41.975"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:41.978" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:41.977" endtime="20200402 12:55:41.978"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:41.979" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:41.978" endtime="20200402 12:55:41.979"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:41.979" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:41.979" endtime="20200402 12:55:41.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:41.981" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:41.979" endtime="20200402 12:55:41.981"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:41.983" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:41.981" endtime="20200402 12:55:41.983"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:41.986" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '30760316937175', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6769145512', 'email': 'pavan40416@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:41.983" endtime="20200402 12:55:41.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:41.986" endtime="20200402 12:55:41.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:41.988" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeElvc1RzNmNQa0svZ0E4ZncySmZsb1lnbU5m...</msg>
<status status="PASS" starttime="20200402 12:55:41.988" endtime="20200402 12:55:41.989"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:41.989" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:41.989" endtime="20200402 12:55:41.989"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:41.990" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeElvc1RzNmNQa0svZ0E4ZncySmZsb1lnbU5mTnhiNytOSVNHQ2hkcEt5L0w0SWRIdDdEMVhjWHM2enpuejFIOVlJQmd4MTV3UUUwR1ZNZUFHZUF5bTQ9IiwibmJmIjoxNTg1ODEyMzM5LCJleHAiOjE1ODU4MTIzOTksImlhdCI6MTU4NTgxMjMzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JoEcAjsep5_9UiYk4O6NoQIBMAtvm8WalSKdhlxViXU'} 
data={"escrowCompanyId": "001", "idNumber": "30760316937175", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6769145512", "email": "pavan40416@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:42.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:41.990" endtime="20200402 12:55:42.244"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:42.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:42.244" endtime="20200402 12:55:42.245"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:42.246" endtime="20200402 12:55:42.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:42.247" endtime="20200402 12:55:42.247"></status>
</kw>
<msg timestamp="20200402 12:55:42.248" level="INFO">${sellerid} = db6ca2ed-f311-428f-a3fe-1b5da6f1e8df</msg>
<status status="PASS" starttime="20200402 12:55:41.975" endtime="20200402 12:55:42.248"></status>
</kw>
<msg timestamp="20200402 12:55:42.248" level="INFO">${SellerId} = db6ca2ed-f311-428f-a3fe-1b5da6f1e8df</msg>
<msg timestamp="20200402 12:55:42.248" level="INFO">${idnumber} = 30760316937175</msg>
<status status="PASS" starttime="20200402 12:55:41.783" endtime="20200402 12:55:42.248"></status>
</kw>
<kw name="UpdateSellerDetails workPlace" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:42.250" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:42.249" endtime="20200402 12:55:42.250"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:42.250" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:42.250" endtime="20200402 12:55:42.251"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>workPlace=${workPlace}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:42.252" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'db6ca2ed-f311-428f-a3fe-1b5da6f1e8df', 'workPlace': '', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:55:42.251" endtime="20200402 12:55:42.252"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:42.252" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1y...</msg>
<status status="PASS" starttime="20200402 12:55:42.252" endtime="20200402 12:55:42.252"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:42.253" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:42.252" endtime="20200402 12:55:42.253"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:42.253" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1yL3hjWE1jYTRWVmpaNjkxNUgzNDlzMlNid0JHWlVNeWlZcWJrb3hmSXhsTVVROFdFL2xxWC9RaGk4SnM9IiwibmJmIjoxNTg1ODEyMzM5LCJleHAiOjE1ODU4MTIzOTksImlhdCI6MTU4NTgxMjMzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EbNlYyJXpLLrUTgIGu3MDJe82YD0h-iGc5ACTX-xvbg'} 
data={"escrowCompanyId": "001", "SELLERId": "db6ca2ed-f311-428f-a3fe-1b5da6f1e8df", "workPlace": "", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:42.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:42.253" endtime="20200402 12:55:42.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:42.787" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:42.786" endtime="20200402 12:55:42.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:42.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:42.787" endtime="20200402 12:55:42.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:42.788" endtime="20200402 12:55:42.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:42.789" endtime="20200402 12:55:42.790"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:42.249" endtime="20200402 12:55:42.790"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:42.791" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:42.791" endtime="20200402 12:55:42.791"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:42.792" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'db6ca2ed-f311-428f-a3fe-1b5da6f1e8df'}</msg>
<status status="PASS" starttime="20200402 12:55:42.791" endtime="20200402 12:55:42.792"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:42.792" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1y...</msg>
<status status="PASS" starttime="20200402 12:55:42.792" endtime="20200402 12:55:42.792"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:42.793" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:42.793" endtime="20200402 12:55:42.793"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:42.794" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2l1RTJ1Wm42QkJEYyt6ZXFJZXpOMU9iOU1yL3hjWE1jYTRWVmpaNjkxNUgzNDlzMlNid0JHWlVNeWlZcWJrb3hmSXhsTVVROFdFL2xxWC9RaGk4SnM9IiwibmJmIjoxNTg1ODEyMzM5LCJleHAiOjE1ODU4MTIzOTksImlhdCI6MTU4NTgxMjMzOSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.EbNlYyJXpLLrUTgIGu3MDJe82YD0h-iGc5ACTX-xvbg'} 
data={"escrowCompanyId": "001", "sellerID": "db6ca2ed-f311-428f-a3fe-1b5da6f1e8df"} 
json=None</msg>
<msg timestamp="20200402 12:55:43.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:42.793" endtime="20200402 12:55:43.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:43.289" level="INFO">{"escrowCompanyId":"001","sellerId":"db6ca2ed-f311-428f-a3fe-1b5da6f1e8df","idNumber":"30760316937175","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6769145512","email":"pavan40416@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:39","updateDate":"02/04/2020 02:25:40","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:43.288" endtime="20200402 12:55:43.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:43.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:43.290" endtime="20200402 12:55:43.291"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:42.790" endtime="20200402 12:55:43.291"></status>
</kw>
<doc>Empty: To Verify response if workPlace parameter is not entered and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:38.554" endtime="20200402 12:55:43.292" critical="yes"></status>
</test>
<test id="s1-t81" name="TC_95 Seller_Details_API InValid workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:46.297" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:43.295" endtime="20200402 12:55:46.297"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:46.298" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:46.298" endtime="20200402 12:55:46.299"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:46.300" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:46.299" endtime="20200402 12:55:46.300"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:46.300" endtime="20200402 12:55:46.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:46.301" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:46.301" endtime="20200402 12:55:46.301"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:46.302" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:46.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:46.301" endtime="20200402 12:55:46.798"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:46.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:46.798" endtime="20200402 12:55:46.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:46.799" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcxViswNnBqRlpXWkkzdzQyOU01NDRtUnJQZ3dlVWtHN0ZBZjMycDcwRmlCY3p0MzNmaUlyaEZaRTdGRjQ9IiwibmJmIjoxNTg1ODEyMzQ0LCJleHAiOjE1ODU4MTI0MDQsImlhdCI6MTU4NTgxMjM0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.htptvy3oK4y_oINY7dDZBRoWeNu8MSvg5A447X9a-Wk</msg>
<status status="PASS" starttime="20200402 12:55:46.799" endtime="20200402 12:55:46.799"></status>
</kw>
<msg timestamp="20200402 12:55:46.800" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcxViswNnB...</msg>
<status status="PASS" starttime="20200402 12:55:46.298" endtime="20200402 12:55:46.800"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:46.801" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:46.801" endtime="20200402 12:55:46.802"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:46.802" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:46.802" endtime="20200402 12:55:46.802"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:46.802" endtime="20200402 12:55:46.803"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:46.803" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:46.803" endtime="20200402 12:55:46.803"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:46.804" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:47.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:46.803" endtime="20200402 12:55:47.587"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:47.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:47.587" endtime="20200402 12:55:47.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:47.590" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenhXRjV6czkvSkFDcm1oZzFhYUVnR2p6OEFidU12UHFSM0RJcnFtYlJCZWhPaWxkd1kyS2dsMnkyMHNiWFFmalU4Z0poOVVRVEdGSGloSmVyRjhNems9IiwibmJmIjoxNTg1ODEyMzQ1LCJleHAiOjE1ODU4MTI0MDUsImlhdCI6MTU4NTgxMjM0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eFgo7BlWB94x71On1WunJ0jxZ9Mz8oZ6LAsqhDt-bmQ</msg>
<status status="PASS" starttime="20200402 12:55:47.589" endtime="20200402 12:55:47.590"></status>
</kw>
<msg timestamp="20200402 12:55:47.591" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenhXRjV6czkvSkFDcm1oZzFhYUVnR2p6OEFidU12UHF...</msg>
<status status="PASS" starttime="20200402 12:55:46.801" endtime="20200402 12:55:47.591"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:47.593" level="INFO">${Id} = 90924849129161</msg>
<status status="PASS" starttime="20200402 12:55:47.592" endtime="20200402 12:55:47.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:47.594" level="INFO">${IdNumber} = 90924849129161</msg>
<status status="PASS" starttime="20200402 12:55:47.593" endtime="20200402 12:55:47.594"></status>
</kw>
<msg timestamp="20200402 12:55:47.595" level="INFO">${idNum} = 90924849129161</msg>
<status status="PASS" starttime="20200402 12:55:47.591" endtime="20200402 12:55:47.595"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:47.597" level="INFO">${mobile} = 3172783926</msg>
<status status="PASS" starttime="20200402 12:55:47.596" endtime="20200402 12:55:47.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:47.597" level="INFO">${mobileNo} = 3172783926</msg>
<status status="PASS" starttime="20200402 12:55:47.597" endtime="20200402 12:55:47.598"></status>
</kw>
<msg timestamp="20200402 12:55:47.598" level="INFO">${MobNo} = 3172783926</msg>
<status status="PASS" starttime="20200402 12:55:47.595" endtime="20200402 12:55:47.598"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:47.600" level="INFO">${Emailnum} = 35574</msg>
<status status="PASS" starttime="20200402 12:55:47.600" endtime="20200402 12:55:47.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:47.602" level="INFO">${enum} = 35574</msg>
<status status="PASS" starttime="20200402 12:55:47.601" endtime="20200402 12:55:47.602"></status>
</kw>
<msg timestamp="20200402 12:55:47.602" level="INFO">${num} = 35574</msg>
<status status="PASS" starttime="20200402 12:55:47.599" endtime="20200402 12:55:47.603"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:47.603" level="INFO">${emailid} = pavan35574@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:47.603" endtime="20200402 12:55:47.604"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:47.605" level="INFO">${email} = pavan35574@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:47.604" endtime="20200402 12:55:47.605"></status>
</kw>
<msg timestamp="20200402 12:55:47.605" level="INFO">${emailid} = pavan35574@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:47.598" endtime="20200402 12:55:47.605"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:47.610" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:47.610" endtime="20200402 12:55:47.611"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:47.612" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:47.611" endtime="20200402 12:55:47.612"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:47.613" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:47.612" endtime="20200402 12:55:47.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:47.616" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:47.613" endtime="20200402 12:55:47.616"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:47.619" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:47.617" endtime="20200402 12:55:47.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:47.625" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '90924849129161', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3172783926', 'email': 'pavan35574@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:47.620" endtime="20200402 12:55:47.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:47.625" endtime="20200402 12:55:47.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:47.628" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenhXRjV6czkvSkFDcm1oZzFhYUVnR2p6OEFi...</msg>
<status status="PASS" starttime="20200402 12:55:47.627" endtime="20200402 12:55:47.628"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:47.629" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:47.629" endtime="20200402 12:55:47.629"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:47.630" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QenhXRjV6czkvSkFDcm1oZzFhYUVnR2p6OEFidU12UHFSM0RJcnFtYlJCZWhPaWxkd1kyS2dsMnkyMHNiWFFmalU4Z0poOVVRVEdGSGloSmVyRjhNems9IiwibmJmIjoxNTg1ODEyMzQ1LCJleHAiOjE1ODU4MTI0MDUsImlhdCI6MTU4NTgxMjM0NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.eFgo7BlWB94x71On1WunJ0jxZ9Mz8oZ6LAsqhDt-bmQ'} 
data={"escrowCompanyId": "001", "idNumber": "90924849129161", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3172783926", "email": "pavan35574@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:48.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:47.630" endtime="20200402 12:55:48.913"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:48.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:48.914" endtime="20200402 12:55:48.915"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:48.915" endtime="20200402 12:55:48.916"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:48.916" endtime="20200402 12:55:48.917"></status>
</kw>
<msg timestamp="20200402 12:55:48.918" level="INFO">${sellerid} = 29207833-67f9-4a28-99fe-eb876df1a84c</msg>
<status status="PASS" starttime="20200402 12:55:47.606" endtime="20200402 12:55:48.918"></status>
</kw>
<msg timestamp="20200402 12:55:48.919" level="INFO">${SellerId} = 29207833-67f9-4a28-99fe-eb876df1a84c</msg>
<msg timestamp="20200402 12:55:48.919" level="INFO">${idnumber} = 90924849129161</msg>
<status status="PASS" starttime="20200402 12:55:46.800" endtime="20200402 12:55:48.919"></status>
</kw>
<kw name="UpdateSellerDetails workPlace" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${work_space}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:48.931" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:48.930" endtime="20200402 12:55:48.931"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:48.932" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:48.932" endtime="20200402 12:55:48.933"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>workPlace=${workPlace}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:48.934" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '29207833-67f9-4a28-99fe-eb876df1a84c', 'workPlace': 'fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfd...</msg>
<status status="PASS" starttime="20200402 12:55:48.933" endtime="20200402 12:55:48.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:48.935" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcx...</msg>
<status status="PASS" starttime="20200402 12:55:48.935" endtime="20200402 12:55:48.935"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:48.937" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:48.936" endtime="20200402 12:55:48.937"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:48.938" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcxViswNnBqRlpXWkkzdzQyOU01NDRtUnJQZ3dlVWtHN0ZBZjMycDcwRmlCY3p0MzNmaUlyaEZaRTdGRjQ9IiwibmJmIjoxNTg1ODEyMzQ0LCJleHAiOjE1ODU4MTI0MDQsImlhdCI6MTU4NTgxMjM0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.htptvy3oK4y_oINY7dDZBRoWeNu8MSvg5A447X9a-Wk'} 
data={"escrowCompanyId": "001", "SELLERId": "29207833-67f9-4a28-99fe-eb876df1a84c", "workPlace": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:49.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:48.937" endtime="20200402 12:55:49.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:49.447" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:55:49.446" endtime="20200402 12:55:49.447"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:49.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:49.448" endtime="20200402 12:55:49.449"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:49.449" endtime="20200402 12:55:49.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:49.450" endtime="20200402 12:55:49.451"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:48.929" endtime="20200402 12:55:49.452"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:49.454" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:49.453" endtime="20200402 12:55:49.455"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:49.456" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': '29207833-67f9-4a28-99fe-eb876df1a84c'}</msg>
<status status="PASS" starttime="20200402 12:55:49.455" endtime="20200402 12:55:49.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:49.456" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcx...</msg>
<status status="PASS" starttime="20200402 12:55:49.456" endtime="20200402 12:55:49.456"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:49.457" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:49.456" endtime="20200402 12:55:49.457"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:49.458" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd3R3cXNyekdqT2l6MTMwQUpaaFU1czZtMlcxViswNnBqRlpXWkkzdzQyOU01NDRtUnJQZ3dlVWtHN0ZBZjMycDcwRmlCY3p0MzNmaUlyaEZaRTdGRjQ9IiwibmJmIjoxNTg1ODEyMzQ0LCJleHAiOjE1ODU4MTI0MDQsImlhdCI6MTU4NTgxMjM0NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.htptvy3oK4y_oINY7dDZBRoWeNu8MSvg5A447X9a-Wk'} 
data={"escrowCompanyId": "001", "sellerID": "29207833-67f9-4a28-99fe-eb876df1a84c"} 
json=None</msg>
<msg timestamp="20200402 12:55:50.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:49.457" endtime="20200402 12:55:50.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:50.018" level="INFO">{"escrowCompanyId":"001","sellerId":"29207833-67f9-4a28-99fe-eb876df1a84c","idNumber":"90924849129161","typeOfId":3,"mobileCountryCode":"67","mobileNo":"3172783926","email":"pavan35574@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:25:46","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:50.017" endtime="20200402 12:55:50.019"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:50.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:50.019" endtime="20200402 12:55:50.020"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:49.452" endtime="20200402 12:55:50.020"></status>
</kw>
<doc>Invalid: To Verify response if workPlace parameter is entered more than size 100 and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:43.293" endtime="20200402 12:55:50.021" critical="yes"></status>
</test>
<test id="s1-t82" name="TC_96 Seller_Details_API Valid workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:53.026" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:50.024" endtime="20200402 12:55:53.026"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.027" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:53.027" endtime="20200402 12:55:53.028"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:53.028" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:53.028" endtime="20200402 12:55:53.028"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:53.028" endtime="20200402 12:55:53.029"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:53.029" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:53.029" endtime="20200402 12:55:53.029"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:53.030" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:53.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:53.030" endtime="20200402 12:55:53.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:53.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:53.231" endtime="20200402 12:55:53.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.232" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BDbm1aZksrTWZmcTRyMFNjVFkyTXZoUWRyRGl6NHRKR3lHOTNrbUtvZTZiMCtSY3QvTWpRVjQwQjVkaFk9IiwibmJmIjoxNTg1ODEyMzUwLCJleHAiOjE1ODU4MTI0MTAsImlhdCI6MTU4NTgxMjM1MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.r_bDh6ew1GFYtbShMIZbs31ncAKt3ZpSVPPGNb4ek14</msg>
<status status="PASS" starttime="20200402 12:55:53.232" endtime="20200402 12:55:53.232"></status>
</kw>
<msg timestamp="20200402 12:55:53.232" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BDbm1aZks...</msg>
<status status="PASS" starttime="20200402 12:55:53.027" endtime="20200402 12:55:53.233"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.234" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:53.233" endtime="20200402 12:55:53.234"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:53.235" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:53.234" endtime="20200402 12:55:53.235"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:53.235" endtime="20200402 12:55:53.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:53.236" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:53.235" endtime="20200402 12:55:53.236"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:53.236" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:53.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:53.236" endtime="20200402 12:55:53.728"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:53.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:53.728" endtime="20200402 12:55:53.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.729" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEtnaEowRVFDbmtDdDNiRHZzM1VRdWk2QU9SSnVTc3hNdWdiWHFDd290N1ZjWWhFMnM0eGpVMTNTS0dSQjRDdXFLSThSLzBFSVZHR0hjR1I3c3hTUlE9IiwibmJmIjoxNTg1ODEyMzUxLCJleHAiOjE1ODU4MTI0MTEsImlhdCI6MTU4NTgxMjM1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6YfdXiY2YTs4ieHuF8W5OOrsZmqg7CXzUH0haIRK2CQ</msg>
<status status="PASS" starttime="20200402 12:55:53.729" endtime="20200402 12:55:53.729"></status>
</kw>
<msg timestamp="20200402 12:55:53.730" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEtnaEowRVFDbmtDdDNiRHZzM1VRdWk2QU9SSnVTc3h...</msg>
<status status="PASS" starttime="20200402 12:55:53.233" endtime="20200402 12:55:53.730"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:53.731" level="INFO">${Id} = 48782379123852</msg>
<status status="PASS" starttime="20200402 12:55:53.730" endtime="20200402 12:55:53.731"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.731" level="INFO">${IdNumber} = 48782379123852</msg>
<status status="PASS" starttime="20200402 12:55:53.731" endtime="20200402 12:55:53.731"></status>
</kw>
<msg timestamp="20200402 12:55:53.732" level="INFO">${idNum} = 48782379123852</msg>
<status status="PASS" starttime="20200402 12:55:53.730" endtime="20200402 12:55:53.732"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:53.732" level="INFO">${mobile} = 1787195769</msg>
<status status="PASS" starttime="20200402 12:55:53.732" endtime="20200402 12:55:53.732"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.733" level="INFO">${mobileNo} = 1787195769</msg>
<status status="PASS" starttime="20200402 12:55:53.733" endtime="20200402 12:55:53.733"></status>
</kw>
<msg timestamp="20200402 12:55:53.733" level="INFO">${MobNo} = 1787195769</msg>
<status status="PASS" starttime="20200402 12:55:53.732" endtime="20200402 12:55:53.733"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:53.734" level="INFO">${Emailnum} = 74717</msg>
<status status="PASS" starttime="20200402 12:55:53.734" endtime="20200402 12:55:53.734"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.735" level="INFO">${enum} = 74717</msg>
<status status="PASS" starttime="20200402 12:55:53.735" endtime="20200402 12:55:53.735"></status>
</kw>
<msg timestamp="20200402 12:55:53.735" level="INFO">${num} = 74717</msg>
<status status="PASS" starttime="20200402 12:55:53.734" endtime="20200402 12:55:53.735"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:53.736" level="INFO">${emailid} = pavan74717@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:53.735" endtime="20200402 12:55:53.736"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:53.736" level="INFO">${email} = pavan74717@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:53.736" endtime="20200402 12:55:53.736"></status>
</kw>
<msg timestamp="20200402 12:55:53.737" level="INFO">${emailid} = pavan74717@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:53.733" endtime="20200402 12:55:53.737"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:53.739" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:53.739" endtime="20200402 12:55:53.739"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:53.740" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:53.739" endtime="20200402 12:55:53.740"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:53.740" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:53.740" endtime="20200402 12:55:53.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:53.742" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:53.741" endtime="20200402 12:55:53.742"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:53.744" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:53.742" endtime="20200402 12:55:53.744"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:53.746" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '48782379123852', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1787195769', 'email': 'pavan74717@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:53.744" endtime="20200402 12:55:53.746"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:53.747" endtime="20200402 12:55:53.748"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:53.749" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEtnaEowRVFDbmtDdDNiRHZzM1VRdWk2QU9S...</msg>
<status status="PASS" starttime="20200402 12:55:53.748" endtime="20200402 12:55:53.749"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:53.750" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:53.749" endtime="20200402 12:55:53.750"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:53.751" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMEtnaEowRVFDbmtDdDNiRHZzM1VRdWk2QU9SSnVTc3hNdWdiWHFDd290N1ZjWWhFMnM0eGpVMTNTS0dSQjRDdXFLSThSLzBFSVZHR0hjR1I3c3hTUlE9IiwibmJmIjoxNTg1ODEyMzUxLCJleHAiOjE1ODU4MTI0MTEsImlhdCI6MTU4NTgxMjM1MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.6YfdXiY2YTs4ieHuF8W5OOrsZmqg7CXzUH0haIRK2CQ'} 
data={"escrowCompanyId": "001", "idNumber": "48782379123852", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1787195769", "email": "pavan74717@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:54.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:53.750" endtime="20200402 12:55:54.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:54.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:54.988" endtime="20200402 12:55:54.989"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:54.989" endtime="20200402 12:55:54.990"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:54.990" endtime="20200402 12:55:54.990"></status>
</kw>
<msg timestamp="20200402 12:55:54.991" level="INFO">${sellerid} = d0337734-0d59-4523-b8af-9778af136611</msg>
<status status="PASS" starttime="20200402 12:55:53.737" endtime="20200402 12:55:54.991"></status>
</kw>
<msg timestamp="20200402 12:55:54.991" level="INFO">${SellerId} = d0337734-0d59-4523-b8af-9778af136611</msg>
<msg timestamp="20200402 12:55:54.991" level="INFO">${idnumber} = 48782379123852</msg>
<status status="PASS" starttime="20200402 12:55:53.233" endtime="20200402 12:55:54.991"></status>
</kw>
<kw name="UpdateSellerDetails userDefine" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{userDefine}[0]</arg>
<arg>@{userDefine}[1]</arg>
<arg>@{userDefine}[2]</arg>
<arg>@{userDefine}[3]</arg>
<arg>@{userDefine}[4]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:54.993" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:54.993" endtime="20200402 12:55:54.993"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:54.994" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:54.994" endtime="20200402 12:55:54.994"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>userDefine1=${userDefine1}</arg>
<arg>userDefine2=${userDefine2}</arg>
<arg>userDefine3=${userDefine3}</arg>
<arg>userDefine4=${userDefine4}</arg>
<arg>userDefine5=${userDefine5}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:54.995" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'd0337734-0d59-4523-b8af-9778af136611', 'userDefine1': 'UserDefine011', 'userDefine2': 'UserDefine922', 'userDefine3': 'UserDefine233', 'userDefine4': 'UserDefin...</msg>
<status status="PASS" starttime="20200402 12:55:54.994" endtime="20200402 12:55:54.996"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:54.996" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BD...</msg>
<status status="PASS" starttime="20200402 12:55:54.996" endtime="20200402 12:55:54.997"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:54.997" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:54.997" endtime="20200402 12:55:54.997"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:54.998" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BDbm1aZksrTWZmcTRyMFNjVFkyTXZoUWRyRGl6NHRKR3lHOTNrbUtvZTZiMCtSY3QvTWpRVjQwQjVkaFk9IiwibmJmIjoxNTg1ODEyMzUwLCJleHAiOjE1ODU4MTI0MTAsImlhdCI6MTU4NTgxMjM1MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.r_bDh6ew1GFYtbShMIZbs31ncAKt3ZpSVPPGNb4ek14'} 
data={"escrowCompanyId": "001", "SELLERId": "d0337734-0d59-4523-b8af-9778af136611", "userDefine1": "UserDefine011", "userDefine2": "UserDefine922", "userDefine3": "UserDefine233", "userDefine4": "UserDefine4444", "userDefine5": "UserDefine155", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:55:55.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:54.998" endtime="20200402 12:55:55.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:55.531" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:55.531" endtime="20200402 12:55:55.532"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:55.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:55.532" endtime="20200402 12:55:55.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:55.533" endtime="20200402 12:55:55.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:55.533" endtime="20200402 12:55:55.534"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:54.992" endtime="20200402 12:55:55.534"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:55.536" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:55.535" endtime="20200402 12:55:55.536"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:55.537" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'd0337734-0d59-4523-b8af-9778af136611'}</msg>
<status status="PASS" starttime="20200402 12:55:55.536" endtime="20200402 12:55:55.537"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:55.537" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BD...</msg>
<status status="PASS" starttime="20200402 12:55:55.537" endtime="20200402 12:55:55.537"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:55.538" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:55.537" endtime="20200402 12:55:55.538"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:55.539" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNk5ickl0dTdOSlYxYTQ4TmtZSFZoZ0tMU1BDbm1aZksrTWZmcTRyMFNjVFkyTXZoUWRyRGl6NHRKR3lHOTNrbUtvZTZiMCtSY3QvTWpRVjQwQjVkaFk9IiwibmJmIjoxNTg1ODEyMzUwLCJleHAiOjE1ODU4MTI0MTAsImlhdCI6MTU4NTgxMjM1MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.r_bDh6ew1GFYtbShMIZbs31ncAKt3ZpSVPPGNb4ek14'} 
data={"escrowCompanyId": "001", "sellerID": "d0337734-0d59-4523-b8af-9778af136611"} 
json=None</msg>
<msg timestamp="20200402 12:55:55.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:55.538" endtime="20200402 12:55:55.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:55:55.728" level="INFO">{"escrowCompanyId":"001","sellerId":"d0337734-0d59-4523-b8af-9778af136611","idNumber":"48782379123852","typeOfId":3,"mobileCountryCode":"67","mobileNo":"1787195769","email":"pavan74717@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDefine011","userDefine2":"UserDefine922","userDefine3":"UserDefine233","userDefine4":"UserDefine4444","userDefine5":"UserDefine155","kycFlag":0,"createDate":"02/04/2020 02:25:52","updateDate":"02/04/2020 02:25:53","address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:55:55.727" endtime="20200402 12:55:55.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:55.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:55.729" endtime="20200402 12:55:55.730"></status>
</kw>
<status status="PASS" starttime="20200402 12:55:55.535" endtime="20200402 12:55:55.730"></status>
</kw>
<doc>Valid: To Verify response if userDefine1-5 parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:50.022" endtime="20200402 12:55:55.731" critical="yes"></status>
</test>
<test id="s1-t83" name="TC_97 Seller_Details_API Empty workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:55:58.737" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:55.734" endtime="20200402 12:55:58.737"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:58.739" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:58.738" endtime="20200402 12:55:58.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:58.740" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:58.740" endtime="20200402 12:55:58.741"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:58.741" endtime="20200402 12:55:58.741"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:58.742" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:58.741" endtime="20200402 12:55:58.742"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:58.743" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:58.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:58.742" endtime="20200402 12:55:58.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:58.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:58.955" endtime="20200402 12:55:58.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:58.956" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL25GbXZSa3RVVmt5WWF1NUpVMkt3SGkxZnc5KzFBWUNzTzNLKzlDM2JQWDJ1SDVMbktBMS9KdHNWUGx1aDRnanJFdml0UVhOM0VQcHBiK1hHcm1BMVk9IiwibmJmIjoxNTg1ODEyMzU2LCJleHAiOjE1ODU4MTI0MTYsImlhdCI6MTU4NTgxMjM1NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qd4hv8dGreMoP8s-atV8YyyBb_z1aH9HW21-GZLL-oc</msg>
<status status="PASS" starttime="20200402 12:55:58.956" endtime="20200402 12:55:58.956"></status>
</kw>
<msg timestamp="20200402 12:55:58.957" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QL25GbXZSa3RVVmt5WWF1NUpVMkt3SGkxZnc5KzFBWUN...</msg>
<status status="PASS" starttime="20200402 12:55:58.738" endtime="20200402 12:55:58.957"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:55:58.958" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:58.958" endtime="20200402 12:55:58.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:58.959" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:55:58.959" endtime="20200402 12:55:58.959"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:58.960" endtime="20200402 12:55:58.960"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:55:58.961" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:55:58.960" endtime="20200402 12:55:58.961"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:58.962" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:55:59.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:58.961" endtime="20200402 12:55:59.467"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:59.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:59.468" endtime="20200402 12:55:59.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.469" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXphTUgyN2dtNVkza0VjZm9hVzNHNlNLbnhuVUZRNVQzYUtFajJLdzhoNU5JZitsSDJ4QStyb21WL3VkWkN1anBra2NsaUFpWHZ2MHBFdUUvTVdYM2c9IiwibmJmIjoxNTg1ODEyMzU2LCJleHAiOjE1ODU4MTI0MTYsImlhdCI6MTU4NTgxMjM1NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gXFiES9Mi-qc3tsicd16385ZUSdqzeVEDkNPEQnIgBs</msg>
<status status="PASS" starttime="20200402 12:55:59.469" endtime="20200402 12:55:59.469"></status>
</kw>
<msg timestamp="20200402 12:55:59.469" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXphTUgyN2dtNVkza0VjZm9hVzNHNlNLbnhuVUZRNVQ...</msg>
<status status="PASS" starttime="20200402 12:55:58.958" endtime="20200402 12:55:59.470"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:55:59.470" level="INFO">${Id} = 30010493291054</msg>
<status status="PASS" starttime="20200402 12:55:59.470" endtime="20200402 12:55:59.471"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.471" level="INFO">${IdNumber} = 30010493291054</msg>
<status status="PASS" starttime="20200402 12:55:59.471" endtime="20200402 12:55:59.471"></status>
</kw>
<msg timestamp="20200402 12:55:59.471" level="INFO">${idNum} = 30010493291054</msg>
<status status="PASS" starttime="20200402 12:55:59.470" endtime="20200402 12:55:59.471"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:55:59.473" level="INFO">${mobile} = 1485429532</msg>
<status status="PASS" starttime="20200402 12:55:59.472" endtime="20200402 12:55:59.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.474" level="INFO">${mobileNo} = 1485429532</msg>
<status status="PASS" starttime="20200402 12:55:59.473" endtime="20200402 12:55:59.474"></status>
</kw>
<msg timestamp="20200402 12:55:59.474" level="INFO">${MobNo} = 1485429532</msg>
<status status="PASS" starttime="20200402 12:55:59.472" endtime="20200402 12:55:59.474"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:55:59.477" level="INFO">${Emailnum} = 33599</msg>
<status status="PASS" starttime="20200402 12:55:59.476" endtime="20200402 12:55:59.477"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.477" level="INFO">${enum} = 33599</msg>
<status status="PASS" starttime="20200402 12:55:59.477" endtime="20200402 12:55:59.478"></status>
</kw>
<msg timestamp="20200402 12:55:59.478" level="INFO">${num} = 33599</msg>
<status status="PASS" starttime="20200402 12:55:59.476" endtime="20200402 12:55:59.478"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:55:59.478" level="INFO">${emailid} = pavan33599@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:59.478" endtime="20200402 12:55:59.478"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.479" level="INFO">${email} = pavan33599@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:59.479" endtime="20200402 12:55:59.479"></status>
</kw>
<msg timestamp="20200402 12:55:59.479" level="INFO">${emailid} = pavan33599@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:55:59.475" endtime="20200402 12:55:59.479"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:55:59.483" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:55:59.483" endtime="20200402 12:55:59.484"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:55:59.485" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:55:59.484" endtime="20200402 12:55:59.485"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:55:59.486" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:55:59.485" endtime="20200402 12:55:59.486"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:55:59.489" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:59.487" endtime="20200402 12:55:59.489"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:55:59.491" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:55:59.489" endtime="20200402 12:55:59.491"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:55:59.496" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '30010493291054', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1485429532', 'email': 'pavan33599@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:55:59.492" endtime="20200402 12:55:59.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:55:59.497" endtime="20200402 12:55:59.498"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:55:59.499" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXphTUgyN2dtNVkza0VjZm9hVzNHNlNLbnhu...</msg>
<status status="PASS" starttime="20200402 12:55:59.498" endtime="20200402 12:55:59.499"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:55:59.499" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:55:59.499" endtime="20200402 12:55:59.499"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:55:59.501" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXphTUgyN2dtNVkza0VjZm9hVzNHNlNLbnhuVUZRNVQzYUtFajJLdzhoNU5JZitsSDJ4QStyb21WL3VkWkN1anBra2NsaUFpWHZ2MHBFdUUvTVdYM2c9IiwibmJmIjoxNTg1ODEyMzU2LCJleHAiOjE1ODU4MTI0MTYsImlhdCI6MTU4NTgxMjM1NiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gXFiES9Mi-qc3tsicd16385ZUSdqzeVEDkNPEQnIgBs'} 
data={"escrowCompanyId": "001", "idNumber": "30010493291054", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1485429532", "email": "pavan33599@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:55:59.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:55:59.500" endtime="20200402 12:55:59.777"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:55:59.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:55:59.777" endtime="20200402 12:55:59.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<msg timestamp="20200402 12:55:59.779" level="FAIL">R03 != 000</msg>
<status status="FAIL" starttime="20200402 12:55:59.778" endtime="20200402 12:55:59.779"></status>
</kw>
<status status="FAIL" starttime="20200402 12:55:59.479" endtime="20200402 12:55:59.779"></status>
</kw>
<status status="FAIL" starttime="20200402 12:55:58.957" endtime="20200402 12:55:59.779"></status>
</kw>
<doc>Empty: To Verify response if userDefine1-5 parameter is entered empty and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="FAIL" starttime="20200402 12:55:55.733" endtime="20200402 12:55:59.780" critical="yes">R03 != 000</status>
</test>
<test id="s1-t84" name="TC_98 Seller_Details_API InValid workPlace">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:02.786" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:55:59.784" endtime="20200402 12:56:02.786"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:02.788" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:02.787" endtime="20200402 12:56:02.788"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:02.789" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:02.788" endtime="20200402 12:56:02.789"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:02.789" endtime="20200402 12:56:02.790"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:02.791" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:02.790" endtime="20200402 12:56:02.791"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:02.792" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:03.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:02.791" endtime="20200402 12:56:03.577"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:03.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:03.578" endtime="20200402 12:56:03.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:03.579" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVUYU9RZmRjaTRjQ253U1ZDbm5RU20yTG5IbGs1VnF6WkhBRndnVzBReDBoOSt2TG9iK0N6VU1wZzF0Z2s9IiwibmJmIjoxNTg1ODEyMzYxLCJleHAiOjE1ODU4MTI0MjEsImlhdCI6MTU4NTgxMjM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sCe5wmzfHqo2pub2hUzE1UUUUYxlpXPP4qwLuyFDm-o</msg>
<status status="PASS" starttime="20200402 12:56:03.578" endtime="20200402 12:56:03.579"></status>
</kw>
<msg timestamp="20200402 12:56:03.579" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVUYU9RZmR...</msg>
<status status="PASS" starttime="20200402 12:56:02.787" endtime="20200402 12:56:03.579"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:03.581" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:03.581" endtime="20200402 12:56:03.581"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:03.582" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:03.582" endtime="20200402 12:56:03.582"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:03.582" endtime="20200402 12:56:03.583"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:03.583" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:03.583" endtime="20200402 12:56:03.583"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:03.584" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:04.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:03.584" endtime="20200402 12:56:04.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:04.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:04.071" endtime="20200402 12:56:04.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:04.072" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJVaTRzTHVhUEVvWHp1bHZaK1kwMWtaM2E3czA0eFVXNWRKcVBDMEZ3d1ZJNUhqamM2TTl1WFU1WmdjeHRhZ29TZkpBZnYyYUtra1MrQ3UvdUorZW89IiwibmJmIjoxNTg1ODEyMzYxLCJleHAiOjE1ODU4MTI0MjEsImlhdCI6MTU4NTgxMjM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qfyipKsqLevE-ediuhSuiQt5uXQRwvQf2ZGsGXMxWRQ</msg>
<status status="PASS" starttime="20200402 12:56:04.072" endtime="20200402 12:56:04.072"></status>
</kw>
<msg timestamp="20200402 12:56:04.072" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJVaTRzTHVhUEVvWHp1bHZaK1kwMWtaM2E3czA0eFV...</msg>
<status status="PASS" starttime="20200402 12:56:03.580" endtime="20200402 12:56:04.072"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:04.073" level="INFO">${Id} = 19081694883941</msg>
<status status="PASS" starttime="20200402 12:56:04.073" endtime="20200402 12:56:04.073"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:04.074" level="INFO">${IdNumber} = 19081694883941</msg>
<status status="PASS" starttime="20200402 12:56:04.074" endtime="20200402 12:56:04.074"></status>
</kw>
<msg timestamp="20200402 12:56:04.074" level="INFO">${idNum} = 19081694883941</msg>
<status status="PASS" starttime="20200402 12:56:04.073" endtime="20200402 12:56:04.074"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:04.075" level="INFO">${mobile} = 6646495286</msg>
<status status="PASS" starttime="20200402 12:56:04.075" endtime="20200402 12:56:04.075"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:04.076" level="INFO">${mobileNo} = 6646495286</msg>
<status status="PASS" starttime="20200402 12:56:04.075" endtime="20200402 12:56:04.076"></status>
</kw>
<msg timestamp="20200402 12:56:04.076" level="INFO">${MobNo} = 6646495286</msg>
<status status="PASS" starttime="20200402 12:56:04.074" endtime="20200402 12:56:04.076"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:04.077" level="INFO">${Emailnum} = 51331</msg>
<status status="PASS" starttime="20200402 12:56:04.077" endtime="20200402 12:56:04.077"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:04.078" level="INFO">${enum} = 51331</msg>
<status status="PASS" starttime="20200402 12:56:04.077" endtime="20200402 12:56:04.078"></status>
</kw>
<msg timestamp="20200402 12:56:04.078" level="INFO">${num} = 51331</msg>
<status status="PASS" starttime="20200402 12:56:04.077" endtime="20200402 12:56:04.078"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:04.079" level="INFO">${emailid} = pavan51331@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:04.078" endtime="20200402 12:56:04.079"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:04.079" level="INFO">${email} = pavan51331@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:04.079" endtime="20200402 12:56:04.079"></status>
</kw>
<msg timestamp="20200402 12:56:04.079" level="INFO">${emailid} = pavan51331@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:04.076" endtime="20200402 12:56:04.079"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:04.082" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:04.082" endtime="20200402 12:56:04.082"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:04.084" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:04.083" endtime="20200402 12:56:04.084"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:04.085" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:04.084" endtime="20200402 12:56:04.085"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:04.088" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:04.085" endtime="20200402 12:56:04.088"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:04.090" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:04.088" endtime="20200402 12:56:04.090"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:04.094" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '19081694883941', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6646495286', 'email': 'pavan51331@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:04.090" endtime="20200402 12:56:04.094"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:04.094" endtime="20200402 12:56:04.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:04.096" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJVaTRzTHVhUEVvWHp1bHZaK1kwMWtaM2E3...</msg>
<status status="PASS" starttime="20200402 12:56:04.095" endtime="20200402 12:56:04.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:04.096" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:04.096" endtime="20200402 12:56:04.096"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:04.097" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNlJVaTRzTHVhUEVvWHp1bHZaK1kwMWtaM2E3czA0eFVXNWRKcVBDMEZ3d1ZJNUhqamM2TTl1WFU1WmdjeHRhZ29TZkpBZnYyYUtra1MrQ3UvdUorZW89IiwibmJmIjoxNTg1ODEyMzYxLCJleHAiOjE1ODU4MTI0MjEsImlhdCI6MTU4NTgxMjM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qfyipKsqLevE-ediuhSuiQt5uXQRwvQf2ZGsGXMxWRQ'} 
data={"escrowCompanyId": "001", "idNumber": "19081694883941", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6646495286", "email": "pavan51331@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:05.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:04.097" endtime="20200402 12:56:05.364"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:05.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:05.364" endtime="20200402 12:56:05.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:05.365" endtime="20200402 12:56:05.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:05.365" endtime="20200402 12:56:05.366"></status>
</kw>
<msg timestamp="20200402 12:56:05.366" level="INFO">${sellerid} = a550df47-e020-4c28-9fe0-cd9132298d8e</msg>
<status status="PASS" starttime="20200402 12:56:04.080" endtime="20200402 12:56:05.366"></status>
</kw>
<msg timestamp="20200402 12:56:05.367" level="INFO">${SellerId} = a550df47-e020-4c28-9fe0-cd9132298d8e</msg>
<msg timestamp="20200402 12:56:05.367" level="INFO">${idnumber} = 19081694883941</msg>
<status status="PASS" starttime="20200402 12:56:03.580" endtime="20200402 12:56:05.367"></status>
</kw>
<kw name="UpdateSellerDetails userDefine" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{In_User_Def}[0]</arg>
<arg>@{In_User_Def}[0]</arg>
<arg>@{In_User_Def}[0]</arg>
<arg>@{In_User_Def}[0]</arg>
<arg>@{In_User_Def}[0]</arg>
<arg>${0}</arg>
<arg>E11</arg>
<arg>Data length is over limit</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:05.370" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:05.370" endtime="20200402 12:56:05.370"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:05.371" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:05.371" endtime="20200402 12:56:05.371"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>userDefine1=${userDefine1}</arg>
<arg>userDefine2=${userDefine2}</arg>
<arg>userDefine3=${userDefine3}</arg>
<arg>userDefine4=${userDefine4}</arg>
<arg>userDefine5=${userDefine5}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:05.372" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'a550df47-e020-4c28-9fe0-cd9132298d8e', 'userDefine1': 'fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfds...</msg>
<status status="PASS" starttime="20200402 12:56:05.371" endtime="20200402 12:56:05.373"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:05.373" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVU...</msg>
<status status="PASS" starttime="20200402 12:56:05.373" endtime="20200402 12:56:05.373"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:05.374" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:05.373" endtime="20200402 12:56:05.374"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:05.374" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVUYU9RZmRjaTRjQ253U1ZDbm5RU20yTG5IbGs1VnF6WkhBRndnVzBReDBoOSt2TG9iK0N6VU1wZzF0Z2s9IiwibmJmIjoxNTg1ODEyMzYxLCJleHAiOjE1ODU4MTI0MjEsImlhdCI6MTU4NTgxMjM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sCe5wmzfHqo2pub2hUzE1UUUUYxlpXPP4qwLuyFDm-o'} 
data={"escrowCompanyId": "001", "SELLERId": "a550df47-e020-4c28-9fe0-cd9132298d8e", "userDefine1": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "userDefine2": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "userDefine3": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "userDefine4": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "userDefine5": "fgsgfhdsgfhdsgfhdsfgbdsfgbhdsgbfhdsghfgdhgfhdgfhdgffggdshgfhdsgfhgdhfgdhsgfhdsgfhdgfgfhdgfgfdfgdhfghdgfdsfdfgdgddg", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:56:06.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:05.374" endtime="20200402 12:56:06.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:06.147" level="INFO">{"responseCode":"E11","resDescription":"Data length is over limit"}</msg>
<status status="PASS" starttime="20200402 12:56:06.146" endtime="20200402 12:56:06.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:06.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:06.148" endtime="20200402 12:56:06.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:06.149" endtime="20200402 12:56:06.150"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:06.151" endtime="20200402 12:56:06.151"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:05.368" endtime="20200402 12:56:06.151"></status>
</kw>
<kw name="VerifySellerDetails" library="GetSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:06.153" level="INFO">Creating Session using : alias=GetUpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:06.152" endtime="20200402 12:56:06.153"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>sellerID=${SELLERId}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:06.155" level="INFO">${body} = {'escrowCompanyId': '001', 'sellerID': 'a550df47-e020-4c28-9fe0-cd9132298d8e'}</msg>
<status status="PASS" starttime="20200402 12:56:06.154" endtime="20200402 12:56:06.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:06.156" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVU...</msg>
<status status="PASS" starttime="20200402 12:56:06.156" endtime="20200402 12:56:06.156"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:06.158" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:06.157" endtime="20200402 12:56:06.158"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>GetUpdateSeller</arg>
<arg>/seller/detail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:06.159" level="INFO">POST Request using : uri=/seller/detail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMHA4bVovQkxGWVVJWXRTUUJMblFXa3YzbHVUYU9RZmRjaTRjQ253U1ZDbm5RU20yTG5IbGs1VnF6WkhBRndnVzBReDBoOSt2TG9iK0N6VU1wZzF0Z2s9IiwibmJmIjoxNTg1ODEyMzYxLCJleHAiOjE1ODU4MTI0MjEsImlhdCI6MTU4NTgxMjM2MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.sCe5wmzfHqo2pub2hUzE1UUUUYxlpXPP4qwLuyFDm-o'} 
data={"escrowCompanyId": "001", "sellerID": "a550df47-e020-4c28-9fe0-cd9132298d8e"} 
json=None</msg>
<msg timestamp="20200402 12:56:06.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:06.158" endtime="20200402 12:56:06.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:06.685" level="INFO">{"escrowCompanyId":"001","sellerId":"a550df47-e020-4c28-9fe0-cd9132298d8e","idNumber":"19081694883941","typeOfId":3,"mobileCountryCode":"67","mobileNo":"6646495286","email":"pavan51331@2c2p.com","gender":"M","titleEn":"MR.","firstNameEn":"Pavan","lastNameEn":"Powar","titleLocal":"นาย","firstNameLocal":"สมชาย","lastNameLocal":"ขายดี","dateOfBirth":"20/02/1991","nationalityId":"764","otherVerification":"SM0928716357","status":1,"statusText":"Active","workPlace":"pavantest","userDefine1":"UserDef1","userDefine2":"UserDef2","userDefine3":"UserDef3","userDefine4":"UserDef4","userDefine5":"UserDef5","kycFlag":0,"createDate":"02/04/2020 02:26:02","updateDate":null,"address":{"homeAddress1":"homeaddr1","homeAddress2":"homeaddr2","countryId":"764","stateId":"001","state":"Bangkok","postalCode":"10100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"mailingAddress":{"mailAddress1":"mailaddr1","mailAddress2":"mailaddr2","countryId":"764","stateId":"002","state":"Bangkok","postalCode":"11100","addressDefine1":"addrdef1","addressDefine2":"addrdef2","addressDefine3":"addrdef3","addressDefine4":"addrdef4"},"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:56:06.684" endtime="20200402 12:56:06.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:06.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:06.686" endtime="20200402 12:56:06.686"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:06.152" endtime="20200402 12:56:06.686"></status>
</kw>
<doc>Invalid: To Verify response if userDefine1-5 parameter is entered invalid (more than size 100) and request sent with all mandatory fields</doc>
<tags>
<tag>E11</tag>
</tags>
<status status="PASS" starttime="20200402 12:55:59.782" endtime="20200402 12:56:06.687" critical="yes"></status>
</test>
<test id="s1-t85" name="TC_99 UpdateSellerDetails with Empty Kyc and Mandetory Data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:09.692" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:06.691" endtime="20200402 12:56:09.692"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:09.694" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:09.694" endtime="20200402 12:56:09.695"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:09.695" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:09.695" endtime="20200402 12:56:09.695"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:09.696" endtime="20200402 12:56:09.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:09.697" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:09.696" endtime="20200402 12:56:09.697"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:09.698" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:10.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:09.697" endtime="20200402 12:56:10.888"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:10.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:10.888" endtime="20200402 12:56:10.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:10.890" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEY5QTVnMkRTdERTYm9INXJtUkVnaFhjbnJ0aDdPUS9wejUydVY1Q09sRUJoTjFqdmN4R3ZNd2poVFBoUVV0akZPUlJsS3MxTUY3OEx5YUpIb1NkbVU9IiwibmJmIjoxNTg1ODEyMzY4LCJleHAiOjE1ODU4MTI0MjgsImlhdCI6MTU4NTgxMjM2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BQsLmu17yB5vtquiRqhe9KUbtYh5wMuUkRRRxoqLBkU</msg>
<status status="PASS" starttime="20200402 12:56:10.889" endtime="20200402 12:56:10.890"></status>
</kw>
<msg timestamp="20200402 12:56:10.890" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEY5QTVnMkRTdERTYm9INXJtUkVnaFhjbnJ0aDdPUS9...</msg>
<status status="PASS" starttime="20200402 12:56:09.693" endtime="20200402 12:56:10.890"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:10.892" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:10.892" endtime="20200402 12:56:10.893"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:10.894" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:10.893" endtime="20200402 12:56:10.894"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:10.894" endtime="20200402 12:56:10.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:10.895" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:10.895" endtime="20200402 12:56:10.895"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:10.896" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:11.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:10.895" endtime="20200402 12:56:11.397"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:11.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:11.397" endtime="20200402 12:56:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:11.399" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEpnQ2tTN1FWQk93SzY3VVFnUVhpQi9KQm5jdm1FZ1VhUC9OeU5JY08zdzJhUWg4N256MksxbklGV3RkM0p4TkpoczhPMXRTcmpxMTBEMHhMajl2SlU9IiwibmJmIjoxNTg1ODEyMzY4LCJleHAiOjE1ODU4MTI0MjgsImlhdCI6MTU4NTgxMjM2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ulvZzQSDmMe_pI7bRoPV-NhcrXY_PSmXLsWXbtvB_OU</msg>
<status status="PASS" starttime="20200402 12:56:11.398" endtime="20200402 12:56:11.399"></status>
</kw>
<msg timestamp="20200402 12:56:11.399" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEpnQ2tTN1FWQk93SzY3VVFnUVhpQi9KQm5jdm1FZ1V...</msg>
<status status="PASS" starttime="20200402 12:56:10.892" endtime="20200402 12:56:11.399"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:11.400" level="INFO">${Id} = 23309701082578</msg>
<status status="PASS" starttime="20200402 12:56:11.400" endtime="20200402 12:56:11.400"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:11.401" level="INFO">${IdNumber} = 23309701082578</msg>
<status status="PASS" starttime="20200402 12:56:11.400" endtime="20200402 12:56:11.401"></status>
</kw>
<msg timestamp="20200402 12:56:11.401" level="INFO">${idNum} = 23309701082578</msg>
<status status="PASS" starttime="20200402 12:56:11.399" endtime="20200402 12:56:11.401"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:11.403" level="INFO">${mobile} = 9273853403</msg>
<status status="PASS" starttime="20200402 12:56:11.402" endtime="20200402 12:56:11.403"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:11.403" level="INFO">${mobileNo} = 9273853403</msg>
<status status="PASS" starttime="20200402 12:56:11.403" endtime="20200402 12:56:11.403"></status>
</kw>
<msg timestamp="20200402 12:56:11.404" level="INFO">${MobNo} = 9273853403</msg>
<status status="PASS" starttime="20200402 12:56:11.402" endtime="20200402 12:56:11.404"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:11.405" level="INFO">${Emailnum} = 90415</msg>
<status status="PASS" starttime="20200402 12:56:11.404" endtime="20200402 12:56:11.405"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:11.405" level="INFO">${enum} = 90415</msg>
<status status="PASS" starttime="20200402 12:56:11.405" endtime="20200402 12:56:11.405"></status>
</kw>
<msg timestamp="20200402 12:56:11.405" level="INFO">${num} = 90415</msg>
<status status="PASS" starttime="20200402 12:56:11.404" endtime="20200402 12:56:11.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:11.406" level="INFO">${emailid} = pavan90415@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:11.406" endtime="20200402 12:56:11.406"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:11.407" level="INFO">${email} = pavan90415@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:11.406" endtime="20200402 12:56:11.407"></status>
</kw>
<msg timestamp="20200402 12:56:11.407" level="INFO">${emailid} = pavan90415@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:11.404" endtime="20200402 12:56:11.407"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:11.410" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:11.409" endtime="20200402 12:56:11.410"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:11.410" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:11.410" endtime="20200402 12:56:11.410"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:11.411" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:11.411" endtime="20200402 12:56:11.411"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:11.412" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:11.411" endtime="20200402 12:56:11.412"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:11.414" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:11.413" endtime="20200402 12:56:11.414"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:11.417" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '23309701082578', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9273853403', 'email': 'pavan90415@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:11.414" endtime="20200402 12:56:11.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:11.418" endtime="20200402 12:56:11.418"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:11.419" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEpnQ2tTN1FWQk93SzY3VVFnUVhpQi9KQm5j...</msg>
<status status="PASS" starttime="20200402 12:56:11.418" endtime="20200402 12:56:11.419"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:11.420" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:11.419" endtime="20200402 12:56:11.420"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:11.421" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEpnQ2tTN1FWQk93SzY3VVFnUVhpQi9KQm5jdm1FZ1VhUC9OeU5JY08zdzJhUWg4N256MksxbklGV3RkM0p4TkpoczhPMXRTcmpxMTBEMHhMajl2SlU9IiwibmJmIjoxNTg1ODEyMzY4LCJleHAiOjE1ODU4MTI0MjgsImlhdCI6MTU4NTgxMjM2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.ulvZzQSDmMe_pI7bRoPV-NhcrXY_PSmXLsWXbtvB_OU'} 
data={"escrowCompanyId": "001", "idNumber": "23309701082578", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9273853403", "email": "pavan90415@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:11.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:11.420" endtime="20200402 12:56:11.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:11.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:11.706" endtime="20200402 12:56:11.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:11.707" endtime="20200402 12:56:11.707"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:11.707" endtime="20200402 12:56:11.708"></status>
</kw>
<msg timestamp="20200402 12:56:11.708" level="INFO">${sellerid} = ecbbadb4-fffe-4ebb-8369-909b28883e7e</msg>
<status status="PASS" starttime="20200402 12:56:11.407" endtime="20200402 12:56:11.708"></status>
</kw>
<msg timestamp="20200402 12:56:11.708" level="INFO">${SellerId} = ecbbadb4-fffe-4ebb-8369-909b28883e7e</msg>
<msg timestamp="20200402 12:56:11.708" level="INFO">${idnumber} = 23309701082578</msg>
<status status="PASS" starttime="20200402 12:56:10.891" endtime="20200402 12:56:11.708"></status>
</kw>
<kw name="UpdateSellerDetails_Empty_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${EMPTY}</arg>
<arg>E05</arg>
<arg>Missing mandatory field</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:11.710" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:11.710" endtime="20200402 12:56:11.711"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${kycRequest}"=="${EMPTY}"</arg>
<arg>${null}</arg>
</arguments>
<assign>
<var>${kycRequest}</var>
</assign>
<msg timestamp="20200402 12:56:11.711" level="INFO">${kycRequest} = None</msg>
<status status="PASS" starttime="20200402 12:56:11.711" endtime="20200402 12:56:11.711"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${kycRequest}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:11.712" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'ecbbadb4-fffe-4ebb-8369-909b28883e7e', 'kycRequest': None}</msg>
<status status="PASS" starttime="20200402 12:56:11.712" endtime="20200402 12:56:11.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:11.713" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEY5QTVnMkRTdERTYm9INXJtUkVnaFhjbnJ0...</msg>
<status status="PASS" starttime="20200402 12:56:11.712" endtime="20200402 12:56:11.713"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:11.713" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:11.713" endtime="20200402 12:56:11.714"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:11.715" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOEY5QTVnMkRTdERTYm9INXJtUkVnaFhjbnJ0aDdPUS9wejUydVY1Q09sRUJoTjFqdmN4R3ZNd2poVFBoUVV0akZPUlJsS3MxTUY3OEx5YUpIb1NkbVU9IiwibmJmIjoxNTg1ODEyMzY4LCJleHAiOjE1ODU4MTI0MjgsImlhdCI6MTU4NTgxMjM2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BQsLmu17yB5vtquiRqhe9KUbtYh5wMuUkRRRxoqLBkU'} 
data={"escrowCompanyId": "001", "SELLERId": "ecbbadb4-fffe-4ebb-8369-909b28883e7e", "kycRequest": null} 
json=None</msg>
<msg timestamp="20200402 12:56:12.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:11.714" endtime="20200402 12:56:12.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:12.190" level="INFO">{"responseCode":"E05","resDescription":"Missing mandatory field"}</msg>
<status status="PASS" starttime="20200402 12:56:12.190" endtime="20200402 12:56:12.190"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:12.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:12.191" endtime="20200402 12:56:12.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:12.191" endtime="20200402 12:56:12.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:12.192" endtime="20200402 12:56:12.193"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:11.709" endtime="20200402 12:56:12.193"></status>
</kw>
<doc>Empty : To verify response when kycRequest parameter is not entered and request is sent with all mandatory fields</doc>
<tags>
<tag>E05</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:06.690" endtime="20200402 12:56:12.193" critical="yes"></status>
</test>
<test id="s1-t86" name="TC_100 UpdateSellerDetails with Invalid Kyc and Mandetory Data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:15.197" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:12.196" endtime="20200402 12:56:15.197"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:15.199" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:15.198" endtime="20200402 12:56:15.199"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:15.200" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:15.199" endtime="20200402 12:56:15.200"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:15.200" endtime="20200402 12:56:15.200"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:15.201" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:15.200" endtime="20200402 12:56:15.201"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:15.202" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:15.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:15.201" endtime="20200402 12:56:15.681"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:15.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:15.682" endtime="20200402 12:56:15.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:15.683" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhUZUdPWnJaVUF4WTJtbFhkNjhUVlhxL3g3SjNmWHBvSVh1MXNDdStBQVNNRHk4b0lZTEZPNUxNd0FGaGVpN1ZIZ2twc2N1SXdoS1c0M2pNTUJ2WTQ9IiwibmJmIjoxNTg1ODEyMzczLCJleHAiOjE1ODU4MTI0MzMsImlhdCI6MTU4NTgxMjM3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8_74ARJRRV1SQaArTqLu_TD4G6FSSzq2BpIvsnxmLX8</msg>
<status status="PASS" starttime="20200402 12:56:15.683" endtime="20200402 12:56:15.683"></status>
</kw>
<msg timestamp="20200402 12:56:15.684" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhUZUdPWnJaVUF4WTJtbFhkNjhUVlhxL3g3SjNmWHB...</msg>
<status status="PASS" starttime="20200402 12:56:15.198" endtime="20200402 12:56:15.684"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:15.686" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:15.685" endtime="20200402 12:56:15.686"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:15.687" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:15.686" endtime="20200402 12:56:15.687"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:15.688" endtime="20200402 12:56:15.688"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:15.689" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:15.688" endtime="20200402 12:56:15.689"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:15.690" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:16.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:15.689" endtime="20200402 12:56:16.179"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:16.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:16.179" endtime="20200402 12:56:16.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:16.181" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeC84b2VPYjkwblpzWkRzaWovV3psR3NmWTZNYlVCSWNCVVhVdHNGcXQ3ZFZlQUFVWTFhUlRvazN1SEF0THh5bVhoZEVoUTJmanY1SDR4SHVQcXo5cEU9IiwibmJmIjoxNTg1ODEyMzczLCJleHAiOjE1ODU4MTI0MzMsImlhdCI6MTU4NTgxMjM3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zQsn6L2irwtAworC9sysZpkwl7mqBTbc0jwBAIYFDmo</msg>
<status status="PASS" starttime="20200402 12:56:16.180" endtime="20200402 12:56:16.181"></status>
</kw>
<msg timestamp="20200402 12:56:16.181" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeC84b2VPYjkwblpzWkRzaWovV3psR3NmWTZNYlVCSWN...</msg>
<status status="PASS" starttime="20200402 12:56:15.685" endtime="20200402 12:56:16.181"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:16.183" level="INFO">${Id} = 55401017856549</msg>
<status status="PASS" starttime="20200402 12:56:16.182" endtime="20200402 12:56:16.184"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:16.185" level="INFO">${IdNumber} = 55401017856549</msg>
<status status="PASS" starttime="20200402 12:56:16.184" endtime="20200402 12:56:16.185"></status>
</kw>
<msg timestamp="20200402 12:56:16.186" level="INFO">${idNum} = 55401017856549</msg>
<status status="PASS" starttime="20200402 12:56:16.182" endtime="20200402 12:56:16.186"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:16.188" level="INFO">${mobile} = 6384333835</msg>
<status status="PASS" starttime="20200402 12:56:16.187" endtime="20200402 12:56:16.188"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:16.189" level="INFO">${mobileNo} = 6384333835</msg>
<status status="PASS" starttime="20200402 12:56:16.188" endtime="20200402 12:56:16.190"></status>
</kw>
<msg timestamp="20200402 12:56:16.190" level="INFO">${MobNo} = 6384333835</msg>
<status status="PASS" starttime="20200402 12:56:16.186" endtime="20200402 12:56:16.190"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:16.192" level="INFO">${Emailnum} = 08165</msg>
<status status="PASS" starttime="20200402 12:56:16.192" endtime="20200402 12:56:16.192"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:16.193" level="INFO">${enum} = 08165</msg>
<status status="PASS" starttime="20200402 12:56:16.192" endtime="20200402 12:56:16.193"></status>
</kw>
<msg timestamp="20200402 12:56:16.193" level="INFO">${num} = 08165</msg>
<status status="PASS" starttime="20200402 12:56:16.191" endtime="20200402 12:56:16.193"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:16.194" level="INFO">${emailid} = pavan08165@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:16.193" endtime="20200402 12:56:16.194"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:16.194" level="INFO">${email} = pavan08165@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:16.194" endtime="20200402 12:56:16.194"></status>
</kw>
<msg timestamp="20200402 12:56:16.195" level="INFO">${emailid} = pavan08165@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:16.190" endtime="20200402 12:56:16.195"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:16.197" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:16.197" endtime="20200402 12:56:16.198"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:16.198" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:16.198" endtime="20200402 12:56:16.198"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:16.199" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:16.199" endtime="20200402 12:56:16.199"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:16.201" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:16.199" endtime="20200402 12:56:16.201"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:16.203" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:16.201" endtime="20200402 12:56:16.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:16.206" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '55401017856549', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6384333835', 'email': 'pavan08165@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:16.204" endtime="20200402 12:56:16.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:16.207" endtime="20200402 12:56:16.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:16.210" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeC84b2VPYjkwblpzWkRzaWovV3psR3NmWTZN...</msg>
<status status="PASS" starttime="20200402 12:56:16.209" endtime="20200402 12:56:16.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:16.211" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:16.210" endtime="20200402 12:56:16.211"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:16.211" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeC84b2VPYjkwblpzWkRzaWovV3psR3NmWTZNYlVCSWNCVVhVdHNGcXQ3ZFZlQUFVWTFhUlRvazN1SEF0THh5bVhoZEVoUTJmanY1SDR4SHVQcXo5cEU9IiwibmJmIjoxNTg1ODEyMzczLCJleHAiOjE1ODU4MTI0MzMsImlhdCI6MTU4NTgxMjM3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zQsn6L2irwtAworC9sysZpkwl7mqBTbc0jwBAIYFDmo'} 
data={"escrowCompanyId": "001", "idNumber": "55401017856549", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6384333835", "email": "pavan08165@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:16.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:16.211" endtime="20200402 12:56:16.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:16.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:16.448" endtime="20200402 12:56:16.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:16.449" endtime="20200402 12:56:16.449"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:16.449" endtime="20200402 12:56:16.450"></status>
</kw>
<msg timestamp="20200402 12:56:16.450" level="INFO">${sellerid} = 0e7eaf17-84bb-47c7-bffe-cd5b14856ed9</msg>
<status status="PASS" starttime="20200402 12:56:16.195" endtime="20200402 12:56:16.450"></status>
</kw>
<msg timestamp="20200402 12:56:16.450" level="INFO">${SellerId} = 0e7eaf17-84bb-47c7-bffe-cd5b14856ed9</msg>
<msg timestamp="20200402 12:56:16.450" level="INFO">${idnumber} = 55401017856549</msg>
<status status="PASS" starttime="20200402 12:56:15.685" endtime="20200402 12:56:16.450"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${3}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:16.452" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:16.452" endtime="20200402 12:56:16.453"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:16.453" level="INFO">${KeyReq} = 3</msg>
<status status="PASS" starttime="20200402 12:56:16.453" endtime="20200402 12:56:16.453"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:16.454" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '0e7eaf17-84bb-47c7-bffe-cd5b14856ed9', 'kycRequest': 3}</msg>
<status status="PASS" starttime="20200402 12:56:16.453" endtime="20200402 12:56:16.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:16.455" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhUZUdPWnJaVUF4WTJtbFhkNjhUVlhxL3g3...</msg>
<status status="PASS" starttime="20200402 12:56:16.455" endtime="20200402 12:56:16.455"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:16.456" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:16.456" endtime="20200402 12:56:16.456"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:16.457" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeWhUZUdPWnJaVUF4WTJtbFhkNjhUVlhxL3g3SjNmWHBvSVh1MXNDdStBQVNNRHk4b0lZTEZPNUxNd0FGaGVpN1ZIZ2twc2N1SXdoS1c0M2pNTUJ2WTQ9IiwibmJmIjoxNTg1ODEyMzczLCJleHAiOjE1ODU4MTI0MzMsImlhdCI6MTU4NTgxMjM3MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.8_74ARJRRV1SQaArTqLu_TD4G6FSSzq2BpIvsnxmLX8'} 
data={"escrowCompanyId": "001", "SELLERId": "0e7eaf17-84bb-47c7-bffe-cd5b14856ed9", "kycRequest": 3} 
json=None</msg>
<msg timestamp="20200402 12:56:16.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:16.457" endtime="20200402 12:56:16.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:16.963" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:56:16.963" endtime="20200402 12:56:16.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:16.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:16.964" endtime="20200402 12:56:16.965"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:16.965" endtime="20200402 12:56:16.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:16.966" endtime="20200402 12:56:16.967"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:16.451" endtime="20200402 12:56:16.967"></status>
</kw>
<doc>Invalid : To verify response when kycRequest parameter is entered invalid and request is sent with all mandatory fields</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:12.195" endtime="20200402 12:56:16.967" critical="yes"></status>
</test>
<test id="s1-t87" name="TC_101 UpdateSellerDetails with Valid Kyc and Mandetory Data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:19.971" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:16.970" endtime="20200402 12:56:19.971"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:19.973" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:19.973" endtime="20200402 12:56:19.974"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:19.975" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:19.974" endtime="20200402 12:56:19.975"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:19.975" endtime="20200402 12:56:19.976"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:19.977" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:19.977" endtime="20200402 12:56:19.977"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:19.979" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:20.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:19.978" endtime="20200402 12:56:20.485"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:20.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.486" endtime="20200402 12:56:20.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.487" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FMc1dGSElidlJzRm9IV1R2WUpWcGJlSDBKS2tMZ1J5T1NsUi9jKzB2dmZsNXlIcWJRLzdEQWgxYytwQTVVSk9UUkE5anphQURKUGIyV1NZWTRTa289IiwibmJmIjoxNTg1ODEyMzc3LCJleHAiOjE1ODU4MTI0MzcsImlhdCI6MTU4NTgxMjM3NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NsgEfgcqCWZgy3WZpChai0Yv6RhL0_r9-5VlWWxcxuw</msg>
<status status="PASS" starttime="20200402 12:56:20.486" endtime="20200402 12:56:20.487"></status>
</kw>
<msg timestamp="20200402 12:56:20.487" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FMc1dGSElidlJzRm9IV1R2WUpWcGJlSDBKS2tMZ1J...</msg>
<status status="PASS" starttime="20200402 12:56:19.972" endtime="20200402 12:56:20.488"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.489" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:20.489" endtime="20200402 12:56:20.490"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:20.490" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:20.490" endtime="20200402 12:56:20.490"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:20.491" endtime="20200402 12:56:20.491"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:20.491" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:20.491" endtime="20200402 12:56:20.491"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:20.493" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:20.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.492" endtime="20200402 12:56:20.668"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:20.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.668" endtime="20200402 12:56:20.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.669" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0hrVEVPS1hsUkhwUGwzcThHUnZOTlJaRzA4MnU1ZXdZbCtZNUx0dlhnbm5WVW15dUptWUFoRlp4dndRbStQd1ZCOERKa1huV3lRc2xiWHF0eTZ6NGs9IiwibmJmIjoxNTg1ODEyMzc4LCJleHAiOjE1ODU4MTI0MzgsImlhdCI6MTU4NTgxMjM3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.iOK8TkAzjQyCcptzBFUh2KIhVZZHhX_snQbkL-0SfSo</msg>
<status status="PASS" starttime="20200402 12:56:20.669" endtime="20200402 12:56:20.669"></status>
</kw>
<msg timestamp="20200402 12:56:20.669" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0hrVEVPS1hsUkhwUGwzcThHUnZOTlJaRzA4MnU1ZXd...</msg>
<status status="PASS" starttime="20200402 12:56:20.489" endtime="20200402 12:56:20.670"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:20.670" level="INFO">${Id} = 39016629700514</msg>
<status status="PASS" starttime="20200402 12:56:20.670" endtime="20200402 12:56:20.670"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.671" level="INFO">${IdNumber} = 39016629700514</msg>
<status status="PASS" starttime="20200402 12:56:20.671" endtime="20200402 12:56:20.671"></status>
</kw>
<msg timestamp="20200402 12:56:20.671" level="INFO">${idNum} = 39016629700514</msg>
<status status="PASS" starttime="20200402 12:56:20.670" endtime="20200402 12:56:20.671"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:20.672" level="INFO">${mobile} = 9188619262</msg>
<status status="PASS" starttime="20200402 12:56:20.672" endtime="20200402 12:56:20.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.673" level="INFO">${mobileNo} = 9188619262</msg>
<status status="PASS" starttime="20200402 12:56:20.673" endtime="20200402 12:56:20.673"></status>
</kw>
<msg timestamp="20200402 12:56:20.673" level="INFO">${MobNo} = 9188619262</msg>
<status status="PASS" starttime="20200402 12:56:20.672" endtime="20200402 12:56:20.673"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:20.675" level="INFO">${Emailnum} = 04248</msg>
<status status="PASS" starttime="20200402 12:56:20.674" endtime="20200402 12:56:20.675"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.675" level="INFO">${enum} = 04248</msg>
<status status="PASS" starttime="20200402 12:56:20.675" endtime="20200402 12:56:20.675"></status>
</kw>
<msg timestamp="20200402 12:56:20.675" level="INFO">${num} = 04248</msg>
<status status="PASS" starttime="20200402 12:56:20.674" endtime="20200402 12:56:20.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:20.676" level="INFO">${emailid} = pavan04248@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:20.676" endtime="20200402 12:56:20.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:20.677" level="INFO">${email} = pavan04248@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:20.676" endtime="20200402 12:56:20.677"></status>
</kw>
<msg timestamp="20200402 12:56:20.677" level="INFO">${emailid} = pavan04248@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:20.674" endtime="20200402 12:56:20.677"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:20.680" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:20.679" endtime="20200402 12:56:20.680"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:20.681" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:20.680" endtime="20200402 12:56:20.681"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:20.681" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:20.681" endtime="20200402 12:56:20.681"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:20.683" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:20.682" endtime="20200402 12:56:20.683"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:20.685" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:20.683" endtime="20200402 12:56:20.685"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:20.689" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '39016629700514', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '9188619262', 'email': 'pavan04248@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:20.685" endtime="20200402 12:56:20.689"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:20.689" endtime="20200402 12:56:20.690"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:20.690" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0hrVEVPS1hsUkhwUGwzcThHUnZOTlJaRzA4...</msg>
<status status="PASS" starttime="20200402 12:56:20.690" endtime="20200402 12:56:20.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:20.691" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:20.691" endtime="20200402 12:56:20.691"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:20.692" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0hrVEVPS1hsUkhwUGwzcThHUnZOTlJaRzA4MnU1ZXdZbCtZNUx0dlhnbm5WVW15dUptWUFoRlp4dndRbStQd1ZCOERKa1huV3lRc2xiWHF0eTZ6NGs9IiwibmJmIjoxNTg1ODEyMzc4LCJleHAiOjE1ODU4MTI0MzgsImlhdCI6MTU4NTgxMjM3OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.iOK8TkAzjQyCcptzBFUh2KIhVZZHhX_snQbkL-0SfSo'} 
data={"escrowCompanyId": "001", "idNumber": "39016629700514", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "9188619262", "email": "pavan04248@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:20.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.691" endtime="20200402 12:56:20.963"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:20.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.964" endtime="20200402 12:56:20.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:20.964" endtime="20200402 12:56:20.965"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:20.965" endtime="20200402 12:56:20.965"></status>
</kw>
<msg timestamp="20200402 12:56:20.966" level="INFO">${sellerid} = 1002de3e-33d6-4286-94b5-f29ba0b0f243</msg>
<status status="PASS" starttime="20200402 12:56:20.677" endtime="20200402 12:56:20.966"></status>
</kw>
<msg timestamp="20200402 12:56:20.966" level="INFO">${SellerId} = 1002de3e-33d6-4286-94b5-f29ba0b0f243</msg>
<msg timestamp="20200402 12:56:20.966" level="INFO">${idnumber} = 39016629700514</msg>
<status status="PASS" starttime="20200402 12:56:20.488" endtime="20200402 12:56:20.966"></status>
</kw>
<kw name="UpdateSellerDetails_kyc" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:20.968" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:20.968" endtime="20200402 12:56:20.968"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:20.969" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:20.969" endtime="20200402 12:56:20.969"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:20.970" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '1002de3e-33d6-4286-94b5-f29ba0b0f243', 'kycRequest': 0}</msg>
<status status="PASS" starttime="20200402 12:56:20.970" endtime="20200402 12:56:20.970"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:20.971" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FMc1dGSElidlJzRm9IV1R2WUpWcGJlSDBK...</msg>
<status status="PASS" starttime="20200402 12:56:20.971" endtime="20200402 12:56:20.971"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:20.971" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:20.971" endtime="20200402 12:56:20.972"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:20.972" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QN2FMc1dGSElidlJzRm9IV1R2WUpWcGJlSDBKS2tMZ1J5T1NsUi9jKzB2dmZsNXlIcWJRLzdEQWgxYytwQTVVSk9UUkE5anphQURKUGIyV1NZWTRTa289IiwibmJmIjoxNTg1ODEyMzc3LCJleHAiOjE1ODU4MTI0MzcsImlhdCI6MTU4NTgxMjM3NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.NsgEfgcqCWZgy3WZpChai0Yv6RhL0_r9-5VlWWxcxuw'} 
data={"escrowCompanyId": "001", "SELLERId": "1002de3e-33d6-4286-94b5-f29ba0b0f243", "kycRequest": 0} 
json=None</msg>
<msg timestamp="20200402 12:56:22.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:20.972" endtime="20200402 12:56:22.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:22.477" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:56:22.476" endtime="20200402 12:56:22.477"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:22.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:22.477" endtime="20200402 12:56:22.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:22.478" endtime="20200402 12:56:22.479"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:22.479" endtime="20200402 12:56:22.480"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:20.967" endtime="20200402 12:56:22.481"></status>
</kw>
<doc>Valid: To verify response when kycRequest parameter is entered valid and request is sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:16.969" endtime="20200402 12:56:22.481" critical="yes"></status>
</test>
<test id="s1-t88" name="TC_102 UpdateSellerDetails with Empty Address">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:25.487" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:22.485" endtime="20200402 12:56:25.487"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:25.489" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:25.488" endtime="20200402 12:56:25.489"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:25.490" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:25.489" endtime="20200402 12:56:25.490"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:25.490" endtime="20200402 12:56:25.491"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:25.492" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:25.491" endtime="20200402 12:56:25.492"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:25.493" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:26.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:25.492" endtime="20200402 12:56:26.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:26.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:26.705" endtime="20200402 12:56:26.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:26.707" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdNclBJWnU0ZWE3Tys4UFR6eGZmdmRuSEtDNVZJSjZYL0tDR2gzY2o0OFpOUWU1WkNHMGpzRmsvdjRoU1FRQTRQY3hBbmR4NnBWNjJjMGNTcmY3V0E9IiwibmJmIjoxNTg1ODEyMzg0LCJleHAiOjE1ODU4MTI0NDQsImlhdCI6MTU4NTgxMjM4NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qa21ktBuW2zmNu3ET2gEyWZdRZi1zDn_OL4uSMS3PbM</msg>
<status status="PASS" starttime="20200402 12:56:26.706" endtime="20200402 12:56:26.707"></status>
</kw>
<msg timestamp="20200402 12:56:26.707" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdNclBJWnU0ZWE3Tys4UFR6eGZmdmRuSEtDNVZJSjZ...</msg>
<status status="PASS" starttime="20200402 12:56:25.487" endtime="20200402 12:56:26.707"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:26.709" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:26.708" endtime="20200402 12:56:26.709"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:26.710" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:26.709" endtime="20200402 12:56:26.710"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:26.710" endtime="20200402 12:56:26.710"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:26.711" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:26.710" endtime="20200402 12:56:26.711"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:26.711" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:27.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:26.711" endtime="20200402 12:56:27.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:27.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:27.917" endtime="20200402 12:56:27.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:27.919" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzRhUHBJTWxKWXR1RXBSTHNZVTIrbWpHeDNVWEErVVFqSmdKN2EwbkJtRDd6MERadG5mZXlqRjFyYnRSeEU2MVZ0QldWSW9XeGt3VEV3TlRYd3dXc0E9IiwibmJmIjoxNTg1ODEyMzg1LCJleHAiOjE1ODU4MTI0NDUsImlhdCI6MTU4NTgxMjM4NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DmgxnpNrPik0kd-m62yrZ0tGbYy8FtFaD5voZ7Epfck</msg>
<status status="PASS" starttime="20200402 12:56:27.919" endtime="20200402 12:56:27.919"></status>
</kw>
<msg timestamp="20200402 12:56:27.920" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzRhUHBJTWxKWXR1RXBSTHNZVTIrbWpHeDNVWEErVVF...</msg>
<status status="PASS" starttime="20200402 12:56:26.708" endtime="20200402 12:56:27.920"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:27.921" level="INFO">${Id} = 82336494306261</msg>
<status status="PASS" starttime="20200402 12:56:27.921" endtime="20200402 12:56:27.921"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:27.922" level="INFO">${IdNumber} = 82336494306261</msg>
<status status="PASS" starttime="20200402 12:56:27.922" endtime="20200402 12:56:27.922"></status>
</kw>
<msg timestamp="20200402 12:56:27.923" level="INFO">${idNum} = 82336494306261</msg>
<status status="PASS" starttime="20200402 12:56:27.920" endtime="20200402 12:56:27.923"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:27.924" level="INFO">${mobile} = 4851728489</msg>
<status status="PASS" starttime="20200402 12:56:27.924" endtime="20200402 12:56:27.924"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:27.926" level="INFO">${mobileNo} = 4851728489</msg>
<status status="PASS" starttime="20200402 12:56:27.925" endtime="20200402 12:56:27.926"></status>
</kw>
<msg timestamp="20200402 12:56:27.926" level="INFO">${MobNo} = 4851728489</msg>
<status status="PASS" starttime="20200402 12:56:27.923" endtime="20200402 12:56:27.926"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:27.928" level="INFO">${Emailnum} = 42069</msg>
<status status="PASS" starttime="20200402 12:56:27.928" endtime="20200402 12:56:27.928"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:27.929" level="INFO">${enum} = 42069</msg>
<status status="PASS" starttime="20200402 12:56:27.929" endtime="20200402 12:56:27.929"></status>
</kw>
<msg timestamp="20200402 12:56:27.930" level="INFO">${num} = 42069</msg>
<status status="PASS" starttime="20200402 12:56:27.927" endtime="20200402 12:56:27.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:27.931" level="INFO">${emailid} = pavan42069@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:27.930" endtime="20200402 12:56:27.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:27.931" level="INFO">${email} = pavan42069@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:27.931" endtime="20200402 12:56:27.932"></status>
</kw>
<msg timestamp="20200402 12:56:27.932" level="INFO">${emailid} = pavan42069@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:27.927" endtime="20200402 12:56:27.932"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:27.936" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:27.935" endtime="20200402 12:56:27.936"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:27.937" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:27.937" endtime="20200402 12:56:27.937"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:27.938" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:27.938" endtime="20200402 12:56:27.938"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:27.941" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:27.939" endtime="20200402 12:56:27.941"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:27.943" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:27.941" endtime="20200402 12:56:27.943"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:27.946" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '82336494306261', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4851728489', 'email': 'pavan42069@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:27.943" endtime="20200402 12:56:27.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:27.947" endtime="20200402 12:56:27.948"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:27.949" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzRhUHBJTWxKWXR1RXBSTHNZVTIrbWpHeDNV...</msg>
<status status="PASS" starttime="20200402 12:56:27.948" endtime="20200402 12:56:27.949"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:27.950" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:27.949" endtime="20200402 12:56:27.950"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:27.951" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QdzRhUHBJTWxKWXR1RXBSTHNZVTIrbWpHeDNVWEErVVFqSmdKN2EwbkJtRDd6MERadG5mZXlqRjFyYnRSeEU2MVZ0QldWSW9XeGt3VEV3TlRYd3dXc0E9IiwibmJmIjoxNTg1ODEyMzg1LCJleHAiOjE1ODU4MTI0NDUsImlhdCI6MTU4NTgxMjM4NSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.DmgxnpNrPik0kd-m62yrZ0tGbYy8FtFaD5voZ7Epfck'} 
data={"escrowCompanyId": "001", "idNumber": "82336494306261", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4851728489", "email": "pavan42069@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:29.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:27.950" endtime="20200402 12:56:29.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:29.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:29.228" endtime="20200402 12:56:29.229"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:29.229" endtime="20200402 12:56:29.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:29.230" endtime="20200402 12:56:29.230"></status>
</kw>
<msg timestamp="20200402 12:56:29.231" level="INFO">${sellerid} = 207c3fc9-097d-4215-9eb7-b3a25c387c2d</msg>
<status status="PASS" starttime="20200402 12:56:27.932" endtime="20200402 12:56:29.231"></status>
</kw>
<msg timestamp="20200402 12:56:29.231" level="INFO">${SellerId} = 207c3fc9-097d-4215-9eb7-b3a25c387c2d</msg>
<msg timestamp="20200402 12:56:29.231" level="INFO">${idnumber} = 82336494306261</msg>
<status status="PASS" starttime="20200402 12:56:26.708" endtime="20200402 12:56:29.231"></status>
</kw>
<kw name="UpdateSellerDetails Address" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:29.235" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:29.235" endtime="20200402 12:56:29.235"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:29.237" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:29.236" endtime="20200402 12:56:29.237"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=${mailAddress1}</arg>
<arg>homeAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:29.239" level="INFO">${UserAddress} = {'homeAddress1': '', 'homeAddress2': '', 'countryId': '', 'stateId': '', 'state': '', 'postalCode': '', 'addressDefine1': '', 'addressDefine2': '', 'addressDefine3': '', 'addressDefine4': ''}</msg>
<status status="PASS" starttime="20200402 12:56:29.237" endtime="20200402 12:56:29.239"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:29.240" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '207c3fc9-097d-4215-9eb7-b3a25c387c2d', 'kycRequest': 0, 'address': {'homeAddress1': '', 'homeAddress2': '', 'countryId': '', 'stateId': '', 'state': '', 'postal...</msg>
<status status="PASS" starttime="20200402 12:56:29.239" endtime="20200402 12:56:29.240"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:29.240" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdNclBJWnU0ZWE3Tys4UFR6eGZmdmRuSEtD...</msg>
<status status="PASS" starttime="20200402 12:56:29.240" endtime="20200402 12:56:29.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:29.241" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:29.240" endtime="20200402 12:56:29.241"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:29.242" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QekdNclBJWnU0ZWE3Tys4UFR6eGZmdmRuSEtDNVZJSjZYL0tDR2gzY2o0OFpOUWU1WkNHMGpzRmsvdjRoU1FRQTRQY3hBbmR4NnBWNjJjMGNTcmY3V0E9IiwibmJmIjoxNTg1ODEyMzg0LCJleHAiOjE1ODU4MTI0NDQsImlhdCI6MTU4NTgxMjM4NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.qa21ktBuW2zmNu3ET2gEyWZdRZi1zDn_OL4uSMS3PbM'} 
data={"escrowCompanyId": "001", "SELLERId": "207c3fc9-097d-4215-9eb7-b3a25c387c2d", "kycRequest": 0, "address": {"homeAddress1": "", "homeAddress2": "", "countryId": "", "stateId": "", "state": "", "postalCode": "", "addressDefine1": "", "addressDefine2": "", "addressDefine3": "", "addressDefine4": ""}} 
json=None</msg>
<msg timestamp="20200402 12:56:29.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:29.241" endtime="20200402 12:56:29.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:29.826" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:56:29.826" endtime="20200402 12:56:29.827"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:29.827" endtime="20200402 12:56:29.828"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:29.828" endtime="20200402 12:56:29.829"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:29.232" endtime="20200402 12:56:29.829"></status>
</kw>
<doc>Empty: To Verify response if All address{} parameter is entered Empty and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:22.483" endtime="20200402 12:56:29.830" critical="yes"></status>
</test>
<test id="s1-t89" name="TC_103 UpdateSellerDetails with Invalid CountryId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:32.835" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:29.834" endtime="20200402 12:56:32.835"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:32.836" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:32.836" endtime="20200402 12:56:32.837"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:32.837" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:32.837" endtime="20200402 12:56:32.837"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:32.838" endtime="20200402 12:56:32.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:32.838" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:32.838" endtime="20200402 12:56:32.838"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:32.839" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:34.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:32.839" endtime="20200402 12:56:34.682"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:34.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:34.682" endtime="20200402 12:56:34.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:34.684" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeG1rT0c0ZnZmeEJHQkVQT1BKTzJMRWhYWnVtaXdlRGpFNVRiRnRQMDF2SVF3YWNBMG5zcWZJOEQ2b2NLSklsenNYZ0dsTVpUZGpEcnhZZkZ1TVVvYWs9IiwibmJmIjoxNTg1ODEyMzkxLCJleHAiOjE1ODU4MTI0NTEsImlhdCI6MTU4NTgxMjM5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Gk-0VBRitNPKig5JuO3XQ_TaU74js9ZYJjH9TnT7cew</msg>
<status status="PASS" starttime="20200402 12:56:34.683" endtime="20200402 12:56:34.684"></status>
</kw>
<msg timestamp="20200402 12:56:34.684" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeG1rT0c0ZnZmeEJHQkVQT1BKTzJMRWhYWnVtaXdlRGp...</msg>
<status status="PASS" starttime="20200402 12:56:32.836" endtime="20200402 12:56:34.684"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:34.686" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:34.686" endtime="20200402 12:56:34.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:34.688" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:34.687" endtime="20200402 12:56:34.688"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:34.688" endtime="20200402 12:56:34.689"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:34.689" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:34.689" endtime="20200402 12:56:34.689"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:34.690" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:36.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:34.689" endtime="20200402 12:56:36.490"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:36.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:36.490" endtime="20200402 12:56:36.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:36.492" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGV0Y1VNdFNvanM0QUp0UjBGcHdzS3RiTWlBMmkzYk1ydkdPNmZzQzMySWJxQnB1UVVmcFJ5dHVwa2R0VnJ1UWs1MVptR2xPYzU4MVlRN3hFN3pKMmc9IiwibmJmIjoxNTg1ODEyMzkzLCJleHAiOjE1ODU4MTI0NTMsImlhdCI6MTU4NTgxMjM5MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1uZCRWLthVTSwwUf--M6S-ujAFVPtiTHZqznioHfD9o</msg>
<status status="PASS" starttime="20200402 12:56:36.491" endtime="20200402 12:56:36.492"></status>
</kw>
<msg timestamp="20200402 12:56:36.492" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGV0Y1VNdFNvanM0QUp0UjBGcHdzS3RiTWlBMmkzYk1...</msg>
<status status="PASS" starttime="20200402 12:56:34.685" endtime="20200402 12:56:36.492"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:36.493" level="INFO">${Id} = 33196419302492</msg>
<status status="PASS" starttime="20200402 12:56:36.493" endtime="20200402 12:56:36.493"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:36.494" level="INFO">${IdNumber} = 33196419302492</msg>
<status status="PASS" starttime="20200402 12:56:36.494" endtime="20200402 12:56:36.494"></status>
</kw>
<msg timestamp="20200402 12:56:36.495" level="INFO">${idNum} = 33196419302492</msg>
<status status="PASS" starttime="20200402 12:56:36.492" endtime="20200402 12:56:36.495"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:36.496" level="INFO">${mobile} = 3599549883</msg>
<status status="PASS" starttime="20200402 12:56:36.496" endtime="20200402 12:56:36.496"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:36.497" level="INFO">${mobileNo} = 3599549883</msg>
<status status="PASS" starttime="20200402 12:56:36.496" endtime="20200402 12:56:36.498"></status>
</kw>
<msg timestamp="20200402 12:56:36.498" level="INFO">${MobNo} = 3599549883</msg>
<status status="PASS" starttime="20200402 12:56:36.495" endtime="20200402 12:56:36.498"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:36.501" level="INFO">${Emailnum} = 37438</msg>
<status status="PASS" starttime="20200402 12:56:36.501" endtime="20200402 12:56:36.501"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:36.502" level="INFO">${enum} = 37438</msg>
<status status="PASS" starttime="20200402 12:56:36.502" endtime="20200402 12:56:36.502"></status>
</kw>
<msg timestamp="20200402 12:56:36.502" level="INFO">${num} = 37438</msg>
<status status="PASS" starttime="20200402 12:56:36.500" endtime="20200402 12:56:36.502"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:36.503" level="INFO">${emailid} = pavan37438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:36.503" endtime="20200402 12:56:36.503"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:36.503" level="INFO">${email} = pavan37438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:36.503" endtime="20200402 12:56:36.504"></status>
</kw>
<msg timestamp="20200402 12:56:36.504" level="INFO">${emailid} = pavan37438@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:36.499" endtime="20200402 12:56:36.504"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:36.506" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:36.506" endtime="20200402 12:56:36.507"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:36.507" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:36.507" endtime="20200402 12:56:36.507"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:36.508" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:36.507" endtime="20200402 12:56:36.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:36.509" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:36.508" endtime="20200402 12:56:36.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:36.511" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:36.510" endtime="20200402 12:56:36.511"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:36.514" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '33196419302492', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3599549883', 'email': 'pavan37438@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:36.512" endtime="20200402 12:56:36.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:36.515" endtime="20200402 12:56:36.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:36.516" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGV0Y1VNdFNvanM0QUp0UjBGcHdzS3RiTWlB...</msg>
<status status="PASS" starttime="20200402 12:56:36.516" endtime="20200402 12:56:36.516"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:36.517" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:36.517" endtime="20200402 12:56:36.517"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:36.518" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOGV0Y1VNdFNvanM0QUp0UjBGcHdzS3RiTWlBMmkzYk1ydkdPNmZzQzMySWJxQnB1UVVmcFJ5dHVwa2R0VnJ1UWs1MVptR2xPYzU4MVlRN3hFN3pKMmc9IiwibmJmIjoxNTg1ODEyMzkzLCJleHAiOjE1ODU4MTI0NTMsImlhdCI6MTU4NTgxMjM5MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.1uZCRWLthVTSwwUf--M6S-ujAFVPtiTHZqznioHfD9o'} 
data={"escrowCompanyId": "001", "idNumber": "33196419302492", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3599549883", "email": "pavan37438@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:37.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:36.517" endtime="20200402 12:56:37.383"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:37.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:37.383" endtime="20200402 12:56:37.384"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:37.384" endtime="20200402 12:56:37.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:37.385" endtime="20200402 12:56:37.385"></status>
</kw>
<msg timestamp="20200402 12:56:37.386" level="INFO">${sellerid} = 2c315fc8-e79b-433a-909b-5424b90b9a3f</msg>
<status status="PASS" starttime="20200402 12:56:36.504" endtime="20200402 12:56:37.386"></status>
</kw>
<msg timestamp="20200402 12:56:37.386" level="INFO">${SellerId} = 2c315fc8-e79b-433a-909b-5424b90b9a3f</msg>
<msg timestamp="20200402 12:56:37.386" level="INFO">${idnumber} = 33196419302492</msg>
<status status="PASS" starttime="20200402 12:56:34.685" endtime="20200402 12:56:37.386"></status>
</kw>
<kw name="UpdateSellerDetails Address" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>@{MailingAddress}[0]</arg>
<arg>@{MailingAddress}[1]</arg>
<arg>999</arg>
<arg>@{MailingAddress}[2]</arg>
<arg>@{Address}[4]</arg>
<arg>@{MailingAddress}[3]</arg>
<arg>@{Address}[6]</arg>
<arg>@{Address}[7]</arg>
<arg>@{Address}[8]</arg>
<arg>@{Address}[9]</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:37.388" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:37.388" endtime="20200402 12:56:37.389"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:37.389" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:37.389" endtime="20200402 12:56:37.389"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=${mailAddress1}</arg>
<arg>homeAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:37.391" level="INFO">${UserAddress} = {'homeAddress1': 'mailaddr1', 'homeAddress2': 'mailaddr2', 'countryId': '999', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:37.390" endtime="20200402 12:56:37.391"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:37.392" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '2c315fc8-e79b-433a-909b-5424b90b9a3f', 'kycRequest': 0, 'address': {'homeAddress1': 'mailaddr1', 'homeAddress2': 'mailaddr2', 'countryId': '999', 'stateId': '00...</msg>
<status status="PASS" starttime="20200402 12:56:37.391" endtime="20200402 12:56:37.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:37.393" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeG1rT0c0ZnZmeEJHQkVQT1BKTzJMRWhYWnVt...</msg>
<status status="PASS" starttime="20200402 12:56:37.392" endtime="20200402 12:56:37.393"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:37.393" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:37.393" endtime="20200402 12:56:37.393"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:37.394" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeG1rT0c0ZnZmeEJHQkVQT1BKTzJMRWhYWnVtaXdlRGpFNVRiRnRQMDF2SVF3YWNBMG5zcWZJOEQ2b2NLSklsenNYZ0dsTVpUZGpEcnhZZkZ1TVVvYWs9IiwibmJmIjoxNTg1ODEyMzkxLCJleHAiOjE1ODU4MTI0NTEsImlhdCI6MTU4NTgxMjM5MSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.Gk-0VBRitNPKig5JuO3XQ_TaU74js9ZYJjH9TnT7cew'} 
data={"escrowCompanyId": "001", "SELLERId": "2c315fc8-e79b-433a-909b-5424b90b9a3f", "kycRequest": 0, "address": {"homeAddress1": "mailaddr1", "homeAddress2": "mailaddr2", "countryId": "999", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:38.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:37.394" endtime="20200402 12:56:38.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:38.497" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:56:38.497" endtime="20200402 12:56:38.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:38.498" endtime="20200402 12:56:38.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:38.499" endtime="20200402 12:56:38.499"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:37.387" endtime="20200402 12:56:38.499"></status>
</kw>
<doc>Empty: To Verify response if address.countryId parameter is entered Invalid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:29.831" endtime="20200402 12:56:38.500" critical="yes"></status>
</test>
<test id="s1-t90" name="TC_104 UpdateSellerDetails with Valid Address">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:41.506" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:38.505" endtime="20200402 12:56:41.506"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:41.507" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:41.507" endtime="20200402 12:56:41.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:41.508" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:41.508" endtime="20200402 12:56:41.508"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:41.508" endtime="20200402 12:56:41.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:41.509" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:41.509" endtime="20200402 12:56:41.509"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:41.510" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:42.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:41.509" endtime="20200402 12:56:42.006"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:42.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.007" endtime="20200402 12:56:42.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.008" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEt3R0ZiUitjSDEyQW9uUmpXOERucVordkI5UlNTN2pHMXo5VlBCc0o2a3pITllYRGR0WFMxeW9ldDc5OHkwMmczUlVkUUFiMTc0bUZuZmpUbHVRQ2s9IiwibmJmIjoxNTg1ODEyMzk5LCJleHAiOjE1ODU4MTI0NTksImlhdCI6MTU4NTgxMjM5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vmxwhLK1gkg3VH370Sz9Kc4jQjv0eC_FYCK9lOfrxxM</msg>
<status status="PASS" starttime="20200402 12:56:42.007" endtime="20200402 12:56:42.008"></status>
</kw>
<msg timestamp="20200402 12:56:42.008" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEt3R0ZiUitjSDEyQW9uUmpXOERucVordkI5UlNTN2p...</msg>
<status status="PASS" starttime="20200402 12:56:41.507" endtime="20200402 12:56:42.008"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.010" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:42.010" endtime="20200402 12:56:42.011"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:42.011" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:42.011" endtime="20200402 12:56:42.011"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:42.011" endtime="20200402 12:56:42.012"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:42.012" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:42.012" endtime="20200402 12:56:42.012"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:42.013" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:42.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.012" endtime="20200402 12:56:42.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:42.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.522" endtime="20200402 12:56:42.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.523" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0RxMytDYlRxdlVxTm02S2hUbVdIZTFQWUNGeURPY2IzTGo5MUNiYW43STcyYzY2UlZyc1VVenFJUlpHVEwwUXdIWEJkWmVlclVqZ010WUwyZWZtT0k9IiwibmJmIjoxNTg1ODEyNDAwLCJleHAiOjE1ODU4MTI0NjAsImlhdCI6MTU4NTgxMjQwMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0rTtgnWRx4vppTv9njNC-y40dNEy5NEbF42Y9wkUvjg</msg>
<status status="PASS" starttime="20200402 12:56:42.523" endtime="20200402 12:56:42.523"></status>
</kw>
<msg timestamp="20200402 12:56:42.524" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0RxMytDYlRxdlVxTm02S2hUbVdIZTFQWUNGeURPY2I...</msg>
<status status="PASS" starttime="20200402 12:56:42.009" endtime="20200402 12:56:42.524"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:42.525" level="INFO">${Id} = 38191594730246</msg>
<status status="PASS" starttime="20200402 12:56:42.524" endtime="20200402 12:56:42.525"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.525" level="INFO">${IdNumber} = 38191594730246</msg>
<status status="PASS" starttime="20200402 12:56:42.525" endtime="20200402 12:56:42.525"></status>
</kw>
<msg timestamp="20200402 12:56:42.525" level="INFO">${idNum} = 38191594730246</msg>
<status status="PASS" starttime="20200402 12:56:42.524" endtime="20200402 12:56:42.526"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:42.526" level="INFO">${mobile} = 5680879232</msg>
<status status="PASS" starttime="20200402 12:56:42.526" endtime="20200402 12:56:42.526"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.527" level="INFO">${mobileNo} = 5680879232</msg>
<status status="PASS" starttime="20200402 12:56:42.527" endtime="20200402 12:56:42.527"></status>
</kw>
<msg timestamp="20200402 12:56:42.527" level="INFO">${MobNo} = 5680879232</msg>
<status status="PASS" starttime="20200402 12:56:42.526" endtime="20200402 12:56:42.527"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:42.529" level="INFO">${Emailnum} = 68091</msg>
<status status="PASS" starttime="20200402 12:56:42.529" endtime="20200402 12:56:42.529"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.530" level="INFO">${enum} = 68091</msg>
<status status="PASS" starttime="20200402 12:56:42.529" endtime="20200402 12:56:42.530"></status>
</kw>
<msg timestamp="20200402 12:56:42.530" level="INFO">${num} = 68091</msg>
<status status="PASS" starttime="20200402 12:56:42.528" endtime="20200402 12:56:42.530"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:42.530" level="INFO">${emailid} = pavan68091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:42.530" endtime="20200402 12:56:42.530"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:42.531" level="INFO">${email} = pavan68091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:42.531" endtime="20200402 12:56:42.531"></status>
</kw>
<msg timestamp="20200402 12:56:42.531" level="INFO">${emailid} = pavan68091@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:42.528" endtime="20200402 12:56:42.531"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:42.534" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:42.534" endtime="20200402 12:56:42.535"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:42.536" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:42.535" endtime="20200402 12:56:42.536"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:42.537" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:42.536" endtime="20200402 12:56:42.537"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:42.539" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:42.537" endtime="20200402 12:56:42.539"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:42.541" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:42.539" endtime="20200402 12:56:42.541"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:42.544" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '38191594730246', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '5680879232', 'email': 'pavan68091@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:42.541" endtime="20200402 12:56:42.544"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:42.544" endtime="20200402 12:56:42.545"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:42.545" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0RxMytDYlRxdlVxTm02S2hUbVdIZTFQWUNG...</msg>
<status status="PASS" starttime="20200402 12:56:42.545" endtime="20200402 12:56:42.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:42.546" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:42.546" endtime="20200402 12:56:42.546"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:42.547" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0RxMytDYlRxdlVxTm02S2hUbVdIZTFQWUNGeURPY2IzTGo5MUNiYW43STcyYzY2UlZyc1VVenFJUlpHVEwwUXdIWEJkWmVlclVqZ010WUwyZWZtT0k9IiwibmJmIjoxNTg1ODEyNDAwLCJleHAiOjE1ODU4MTI0NjAsImlhdCI6MTU4NTgxMjQwMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.0rTtgnWRx4vppTv9njNC-y40dNEy5NEbF42Y9wkUvjg'} 
data={"escrowCompanyId": "001", "idNumber": "38191594730246", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "5680879232", "email": "pavan68091@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:42.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.546" endtime="20200402 12:56:42.798"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:42.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.798" endtime="20200402 12:56:42.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:42.799" endtime="20200402 12:56:42.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:42.799" endtime="20200402 12:56:42.800"></status>
</kw>
<msg timestamp="20200402 12:56:42.800" level="INFO">${sellerid} = 7a0d2cb6-e666-4e52-b8fb-98bcdd894936</msg>
<status status="PASS" starttime="20200402 12:56:42.532" endtime="20200402 12:56:42.800"></status>
</kw>
<msg timestamp="20200402 12:56:42.800" level="INFO">${SellerId} = 7a0d2cb6-e666-4e52-b8fb-98bcdd894936</msg>
<msg timestamp="20200402 12:56:42.800" level="INFO">${idnumber} = 38191594730246</msg>
<status status="PASS" starttime="20200402 12:56:42.009" endtime="20200402 12:56:42.800"></status>
</kw>
<kw name="UpdateSellerDetails Address" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>@{MailingAddress}[0]</arg>
<arg>@{MailingAddress}[1]</arg>
<arg>@{Address}[2]</arg>
<arg>@{MailingAddress}[2]</arg>
<arg>@{Address}[4]</arg>
<arg>@{MailingAddress}[3]</arg>
<arg>@{Address}[6]</arg>
<arg>@{Address}[7]</arg>
<arg>@{Address}[8]</arg>
<arg>@{Address}[9]</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:42.803" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:42.803" endtime="20200402 12:56:42.803"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:42.804" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:42.804" endtime="20200402 12:56:42.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=${mailAddress1}</arg>
<arg>homeAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:42.805" level="INFO">${UserAddress} = {'homeAddress1': 'mailaddr1', 'homeAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:42.804" endtime="20200402 12:56:42.805"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:42.807" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '7a0d2cb6-e666-4e52-b8fb-98bcdd894936', 'kycRequest': 0, 'address': {'homeAddress1': 'mailaddr1', 'homeAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '00...</msg>
<status status="PASS" starttime="20200402 12:56:42.806" endtime="20200402 12:56:42.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:42.807" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEt3R0ZiUitjSDEyQW9uUmpXOERucVordkI5...</msg>
<status status="PASS" starttime="20200402 12:56:42.807" endtime="20200402 12:56:42.807"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:42.808" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:42.807" endtime="20200402 12:56:42.808"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:42.808" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNEt3R0ZiUitjSDEyQW9uUmpXOERucVordkI5UlNTN2pHMXo5VlBCc0o2a3pITllYRGR0WFMxeW9ldDc5OHkwMmczUlVkUUFiMTc0bUZuZmpUbHVRQ2s9IiwibmJmIjoxNTg1ODEyMzk5LCJleHAiOjE1ODU4MTI0NTksImlhdCI6MTU4NTgxMjM5OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.vmxwhLK1gkg3VH370Sz9Kc4jQjv0eC_FYCK9lOfrxxM'} 
data={"escrowCompanyId": "001", "SELLERId": "7a0d2cb6-e666-4e52-b8fb-98bcdd894936", "kycRequest": 0, "address": {"homeAddress1": "mailaddr1", "homeAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:50.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:42.808" endtime="20200402 12:56:50.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:50.358" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:56:50.357" endtime="20200402 12:56:50.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:50.358" endtime="20200402 12:56:50.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:50.359" endtime="20200402 12:56:50.360"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:42.801" endtime="20200402 12:56:50.360"></status>
</kw>
<doc>Valid: To Verify response if All address{} parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:38.504" endtime="20200402 12:56:50.361" critical="yes"></status>
</test>
<test id="s1-t91" name="TC_105 UpdateSellerDetails with Empty MailingAddress">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:53.366" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:50.364" endtime="20200402 12:56:53.366"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:53.367" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:53.367" endtime="20200402 12:56:53.368"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:53.369" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:53.368" endtime="20200402 12:56:53.369"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:53.369" endtime="20200402 12:56:53.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:53.370" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:53.369" endtime="20200402 12:56:53.370"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:53.371" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:53.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:53.370" endtime="20200402 12:56:53.600"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:53.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:53.601" endtime="20200402 12:56:53.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:53.603" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBtcTc3R2hzWGhXY0JiWW1nT21KYVZxbW9BUHFUczFxM3huWVp6T3huamFBSDNNV1NaVVZ3WmpFREZaTFVCNFVOcm0rN2NpWnM4Q1VUQW5laCtjaXc9IiwibmJmIjoxNTg1ODEyNDExLCJleHAiOjE1ODU4MTI0NzEsImlhdCI6MTU4NTgxMjQxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LB0RqKaSCyKN_pT5SQZdF_K7hEPCo9RXNTOllBCOasA</msg>
<status status="PASS" starttime="20200402 12:56:53.602" endtime="20200402 12:56:53.603"></status>
</kw>
<msg timestamp="20200402 12:56:53.603" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBtcTc3R2hzWGhXY0JiWW1nT21KYVZxbW9BUHFUczF...</msg>
<status status="PASS" starttime="20200402 12:56:53.367" endtime="20200402 12:56:53.603"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:53.606" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:53.606" endtime="20200402 12:56:53.607"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:53.608" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:53.607" endtime="20200402 12:56:53.608"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:53.608" endtime="20200402 12:56:53.608"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:53.609" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:53.609" endtime="20200402 12:56:53.609"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:53.610" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:54.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:53.610" endtime="20200402 12:56:54.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:54.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:54.382" endtime="20200402 12:56:54.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:54.383" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0JXWEg3L2M1Z0ZGODNTWFQySG1EbzJYQ1hHOVlSODNaem1md2hrR0ROZ29Tc2xWVWZ0dVkvV0s5L0R6eW1ZQythTHVqSGFERUNxUmNuQUJ6RXZnTVU9IiwibmJmIjoxNTg1ODEyNDExLCJleHAiOjE1ODU4MTI0NzEsImlhdCI6MTU4NTgxMjQxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fcqI2dK3iZ7M2BAHbaLOsopfK7y2YgY0Q_5T1IwtUpo</msg>
<status status="PASS" starttime="20200402 12:56:54.382" endtime="20200402 12:56:54.383"></status>
</kw>
<msg timestamp="20200402 12:56:54.383" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0JXWEg3L2M1Z0ZGODNTWFQySG1EbzJYQ1hHOVlSODN...</msg>
<status status="PASS" starttime="20200402 12:56:53.605" endtime="20200402 12:56:54.383"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:54.385" level="INFO">${Id} = 37840489489067</msg>
<status status="PASS" starttime="20200402 12:56:54.384" endtime="20200402 12:56:54.385"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:54.386" level="INFO">${IdNumber} = 37840489489067</msg>
<status status="PASS" starttime="20200402 12:56:54.385" endtime="20200402 12:56:54.386"></status>
</kw>
<msg timestamp="20200402 12:56:54.386" level="INFO">${idNum} = 37840489489067</msg>
<status status="PASS" starttime="20200402 12:56:54.384" endtime="20200402 12:56:54.386"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:54.388" level="INFO">${mobile} = 0793835546</msg>
<status status="PASS" starttime="20200402 12:56:54.387" endtime="20200402 12:56:54.388"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:54.389" level="INFO">${mobileNo} = 0793835546</msg>
<status status="PASS" starttime="20200402 12:56:54.388" endtime="20200402 12:56:54.389"></status>
</kw>
<msg timestamp="20200402 12:56:54.389" level="INFO">${MobNo} = 0793835546</msg>
<status status="PASS" starttime="20200402 12:56:54.387" endtime="20200402 12:56:54.389"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:54.392" level="INFO">${Emailnum} = 99873</msg>
<status status="PASS" starttime="20200402 12:56:54.391" endtime="20200402 12:56:54.392"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:54.393" level="INFO">${enum} = 99873</msg>
<status status="PASS" starttime="20200402 12:56:54.392" endtime="20200402 12:56:54.393"></status>
</kw>
<msg timestamp="20200402 12:56:54.393" level="INFO">${num} = 99873</msg>
<status status="PASS" starttime="20200402 12:56:54.390" endtime="20200402 12:56:54.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:54.394" level="INFO">${emailid} = pavan99873@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:54.394" endtime="20200402 12:56:54.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:54.395" level="INFO">${email} = pavan99873@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:54.395" endtime="20200402 12:56:54.395"></status>
</kw>
<msg timestamp="20200402 12:56:54.396" level="INFO">${emailid} = pavan99873@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:54.389" endtime="20200402 12:56:54.396"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:54.399" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:54.398" endtime="20200402 12:56:54.400"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:54.401" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:54.400" endtime="20200402 12:56:54.401"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:54.402" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:54.401" endtime="20200402 12:56:54.402"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:54.404" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:54.402" endtime="20200402 12:56:54.404"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:54.406" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:54.405" endtime="20200402 12:56:54.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:54.409" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '37840489489067', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0793835546', 'email': 'pavan99873@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:54.407" endtime="20200402 12:56:54.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:54.409" endtime="20200402 12:56:54.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:54.411" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0JXWEg3L2M1Z0ZGODNTWFQySG1EbzJYQ1hH...</msg>
<status status="PASS" starttime="20200402 12:56:54.410" endtime="20200402 12:56:54.411"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:54.412" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:54.411" endtime="20200402 12:56:54.412"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:54.412" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0JXWEg3L2M1Z0ZGODNTWFQySG1EbzJYQ1hHOVlSODNaem1md2hrR0ROZ29Tc2xWVWZ0dVkvV0s5L0R6eW1ZQythTHVqSGFERUNxUmNuQUJ6RXZnTVU9IiwibmJmIjoxNTg1ODEyNDExLCJleHAiOjE1ODU4MTI0NzEsImlhdCI6MTU4NTgxMjQxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.fcqI2dK3iZ7M2BAHbaLOsopfK7y2YgY0Q_5T1IwtUpo'} 
data={"escrowCompanyId": "001", "idNumber": "37840489489067", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0793835546", "email": "pavan99873@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:54.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:54.412" endtime="20200402 12:56:54.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:54.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:54.653" endtime="20200402 12:56:54.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:54.654" endtime="20200402 12:56:54.655"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:54.655" endtime="20200402 12:56:54.656"></status>
</kw>
<msg timestamp="20200402 12:56:54.657" level="INFO">${sellerid} = 401d4732-7be8-4c45-8271-76afb9b08a93</msg>
<status status="PASS" starttime="20200402 12:56:54.396" endtime="20200402 12:56:54.657"></status>
</kw>
<msg timestamp="20200402 12:56:54.657" level="INFO">${SellerId} = 401d4732-7be8-4c45-8271-76afb9b08a93</msg>
<msg timestamp="20200402 12:56:54.657" level="INFO">${idnumber} = 37840489489067</msg>
<status status="PASS" starttime="20200402 12:56:53.604" endtime="20200402 12:56:54.657"></status>
</kw>
<kw name="UpdateSellerDetails MailingAddress" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:54.663" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:54.662" endtime="20200402 12:56:54.663"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:54.664" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:54.664" endtime="20200402 12:56:54.664"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=${mailAddress1}</arg>
<arg>mailAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:54.665" level="INFO">${MailAddress} = {'mailAddress1': '', 'mailAddress2': '', 'countryId': '', 'stateId': '', 'state': '', 'postalCode': '', 'addressDefine1': '', 'addressDefine2': '', 'addressDefine3': '', 'addressDefine4': ''}</msg>
<status status="PASS" starttime="20200402 12:56:54.664" endtime="20200402 12:56:54.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:54.666" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '401d4732-7be8-4c45-8271-76afb9b08a93', 'kycRequest': 0, 'mailingAddress': {'mailAddress1': '', 'mailAddress2': '', 'countryId': '', 'stateId': '', 'state': '', ...</msg>
<status status="PASS" starttime="20200402 12:56:54.666" endtime="20200402 12:56:54.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:54.667" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBtcTc3R2hzWGhXY0JiWW1nT21KYVZxbW9B...</msg>
<status status="PASS" starttime="20200402 12:56:54.666" endtime="20200402 12:56:54.667"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:54.667" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:54.667" endtime="20200402 12:56:54.667"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:54.668" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNXBtcTc3R2hzWGhXY0JiWW1nT21KYVZxbW9BUHFUczFxM3huWVp6T3huamFBSDNNV1NaVVZ3WmpFREZaTFVCNFVOcm0rN2NpWnM4Q1VUQW5laCtjaXc9IiwibmJmIjoxNTg1ODEyNDExLCJleHAiOjE1ODU4MTI0NzEsImlhdCI6MTU4NTgxMjQxMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.LB0RqKaSCyKN_pT5SQZdF_K7hEPCo9RXNTOllBCOasA'} 
data={"escrowCompanyId": "001", "SELLERId": "401d4732-7be8-4c45-8271-76afb9b08a93", "kycRequest": 0, "mailingAddress": {"mailAddress1": "", "mailAddress2": "", "countryId": "", "stateId": "", "state": "", "postalCode": "", "addressDefine1": "", "addressDefine2": "", "addressDefine3": "", "addressDefine4": ""}} 
json=None</msg>
<msg timestamp="20200402 12:56:55.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:54.668" endtime="20200402 12:56:55.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:55.356" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:56:55.355" endtime="20200402 12:56:55.356"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:55.356" endtime="20200402 12:56:55.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:55.357" endtime="20200402 12:56:55.358"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:54.658" endtime="20200402 12:56:55.358"></status>
</kw>
<doc>Empty: To Verify response if All mailingAddress{} parameter is entered Empty and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:50.362" endtime="20200402 12:56:55.358" critical="yes"></status>
</test>
<test id="s1-t92" name="TC_106 UpdateSellerDetails with Invalid CountryId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:56:58.363" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:55.362" endtime="20200402 12:56:58.363"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:58.364" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:58.364" endtime="20200402 12:56:58.365"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:58.365" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:58.365" endtime="20200402 12:56:58.365"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:58.365" endtime="20200402 12:56:58.366"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:58.366" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:58.366" endtime="20200402 12:56:58.366"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:58.367" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:58.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:58.367" endtime="20200402 12:56:58.527"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:58.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:58.527" endtime="20200402 12:56:58.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:58.529" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxoOEVQdmc1UzZ2ZW1YUzVqaVh4SXVSM2ZHaTZ3VjFCRjRtYVpFVjRyZFlYSkMvMERUSW96SnRUcCtGdmhwemR1SXYrOGdmZ3l0MU16R0VybW5QdU09IiwibmJmIjoxNTg1ODEyNDE2LCJleHAiOjE1ODU4MTI0NzYsImlhdCI6MTU4NTgxMjQxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gsbwUCo1ZGhxwxX9kMmOebjKvqN9wTxl_fPUvcrlWJQ</msg>
<status status="PASS" starttime="20200402 12:56:58.528" endtime="20200402 12:56:58.529"></status>
</kw>
<msg timestamp="20200402 12:56:58.529" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxoOEVQdmc1UzZ2ZW1YUzVqaVh4SXVSM2ZHaTZ3VjF...</msg>
<status status="PASS" starttime="20200402 12:56:58.364" endtime="20200402 12:56:58.529"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:56:58.531" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:58.531" endtime="20200402 12:56:58.531"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:58.532" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:56:58.532" endtime="20200402 12:56:58.532"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:58.532" endtime="20200402 12:56:58.533"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:56:58.533" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:56:58.533" endtime="20200402 12:56:58.533"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:58.534" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:56:59.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:58.533" endtime="20200402 12:56:59.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:59.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:59.007" endtime="20200402 12:56:59.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:56:59.008" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUtvdW9mQjdEc0E3c3RFaXoxcHNHVVNxcXZYSzlYVjFsWG8vQy9CN1BhWjRLakhnYVp4RWdpaDd4SXZJWElONXd2emFJU3lMQjNNc1pBVEVNRkZMTXc9IiwibmJmIjoxNTg1ODEyNDE2LCJleHAiOjE1ODU4MTI0NzYsImlhdCI6MTU4NTgxMjQxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lVXvxtoU9_SUX_NZ0VlTNat15oJhZFReMUI4cewx6es</msg>
<status status="PASS" starttime="20200402 12:56:59.008" endtime="20200402 12:56:59.008"></status>
</kw>
<msg timestamp="20200402 12:56:59.009" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUtvdW9mQjdEc0E3c3RFaXoxcHNHVVNxcXZYSzlYVjF...</msg>
<status status="PASS" starttime="20200402 12:56:58.530" endtime="20200402 12:56:59.009"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:56:59.009" level="INFO">${Id} = 51172810820709</msg>
<status status="PASS" starttime="20200402 12:56:59.009" endtime="20200402 12:56:59.010"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:56:59.010" level="INFO">${IdNumber} = 51172810820709</msg>
<status status="PASS" starttime="20200402 12:56:59.010" endtime="20200402 12:56:59.010"></status>
</kw>
<msg timestamp="20200402 12:56:59.010" level="INFO">${idNum} = 51172810820709</msg>
<status status="PASS" starttime="20200402 12:56:59.009" endtime="20200402 12:56:59.010"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:56:59.011" level="INFO">${mobile} = 8621442387</msg>
<status status="PASS" starttime="20200402 12:56:59.011" endtime="20200402 12:56:59.011"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:56:59.012" level="INFO">${mobileNo} = 8621442387</msg>
<status status="PASS" starttime="20200402 12:56:59.011" endtime="20200402 12:56:59.012"></status>
</kw>
<msg timestamp="20200402 12:56:59.012" level="INFO">${MobNo} = 8621442387</msg>
<status status="PASS" starttime="20200402 12:56:59.011" endtime="20200402 12:56:59.012"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:56:59.014" level="INFO">${Emailnum} = 44804</msg>
<status status="PASS" starttime="20200402 12:56:59.013" endtime="20200402 12:56:59.014"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:56:59.014" level="INFO">${enum} = 44804</msg>
<status status="PASS" starttime="20200402 12:56:59.014" endtime="20200402 12:56:59.014"></status>
</kw>
<msg timestamp="20200402 12:56:59.015" level="INFO">${num} = 44804</msg>
<status status="PASS" starttime="20200402 12:56:59.013" endtime="20200402 12:56:59.015"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:56:59.015" level="INFO">${emailid} = pavan44804@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:59.015" endtime="20200402 12:56:59.015"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:56:59.016" level="INFO">${email} = pavan44804@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:59.016" endtime="20200402 12:56:59.016"></status>
</kw>
<msg timestamp="20200402 12:56:59.016" level="INFO">${emailid} = pavan44804@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:56:59.012" endtime="20200402 12:56:59.017"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:59.020" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:59.020" endtime="20200402 12:56:59.021"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:56:59.022" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:56:59.021" endtime="20200402 12:56:59.022"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:59.023" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:59.022" endtime="20200402 12:56:59.023"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:56:59.025" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:59.023" endtime="20200402 12:56:59.025"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:59.028" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:59.026" endtime="20200402 12:56:59.028"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:59.033" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '51172810820709', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8621442387', 'email': 'pavan44804@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:56:59.028" endtime="20200402 12:56:59.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:59.033" endtime="20200402 12:56:59.034"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:59.035" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUtvdW9mQjdEc0E3c3RFaXoxcHNHVVNxcXZY...</msg>
<status status="PASS" starttime="20200402 12:56:59.035" endtime="20200402 12:56:59.035"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:59.036" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:59.036" endtime="20200402 12:56:59.037"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:59.038" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOUtvdW9mQjdEc0E3c3RFaXoxcHNHVVNxcXZYSzlYVjFsWG8vQy9CN1BhWjRLakhnYVp4RWdpaDd4SXZJWElONXd2emFJU3lMQjNNc1pBVEVNRkZMTXc9IiwibmJmIjoxNTg1ODEyNDE2LCJleHAiOjE1ODU4MTI0NzYsImlhdCI6MTU4NTgxMjQxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.lVXvxtoU9_SUX_NZ0VlTNat15oJhZFReMUI4cewx6es'} 
data={"escrowCompanyId": "001", "idNumber": "51172810820709", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8621442387", "email": "pavan44804@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:59.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:59.037" endtime="20200402 12:56:59.286"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:56:59.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:56:59.286" endtime="20200402 12:56:59.287"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:59.287" endtime="20200402 12:56:59.287"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:59.288" endtime="20200402 12:56:59.288"></status>
</kw>
<msg timestamp="20200402 12:56:59.289" level="INFO">${sellerid} = 0bf97d62-3641-41f9-8ce0-1b7bf4b75b53</msg>
<status status="PASS" starttime="20200402 12:56:59.017" endtime="20200402 12:56:59.289"></status>
</kw>
<msg timestamp="20200402 12:56:59.289" level="INFO">${SellerId} = 0bf97d62-3641-41f9-8ce0-1b7bf4b75b53</msg>
<msg timestamp="20200402 12:56:59.289" level="INFO">${idnumber} = 51172810820709</msg>
<status status="PASS" starttime="20200402 12:56:58.530" endtime="20200402 12:56:59.289"></status>
</kw>
<kw name="UpdateSellerDetails MailingAddress" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>@{MailingAddress}[0]</arg>
<arg>@{MailingAddress}[1]</arg>
<arg>999</arg>
<arg>@{MailingAddress}[2]</arg>
<arg>@{Address}[4]</arg>
<arg>@{MailingAddress}[3]</arg>
<arg>@{Address}[6]</arg>
<arg>@{Address}[7]</arg>
<arg>@{Address}[8]</arg>
<arg>@{Address}[9]</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:56:59.292" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:56:59.292" endtime="20200402 12:56:59.292"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:56:59.293" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:56:59.292" endtime="20200402 12:56:59.293"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=${mailAddress1}</arg>
<arg>mailAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:56:59.294" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '999', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:56:59.293" endtime="20200402 12:56:59.294"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:56:59.295" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '0bf97d62-3641-41f9-8ce0-1b7bf4b75b53', 'kycRequest': 0, 'mailingAddress': {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '999', 'stateI...</msg>
<status status="PASS" starttime="20200402 12:56:59.294" endtime="20200402 12:56:59.295"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:56:59.295" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxoOEVQdmc1UzZ2ZW1YUzVqaVh4SXVSM2ZH...</msg>
<status status="PASS" starttime="20200402 12:56:59.295" endtime="20200402 12:56:59.295"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:56:59.296" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:56:59.296" endtime="20200402 12:56:59.296"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:56:59.297" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNGxoOEVQdmc1UzZ2ZW1YUzVqaVh4SXVSM2ZHaTZ3VjFCRjRtYVpFVjRyZFlYSkMvMERUSW96SnRUcCtGdmhwemR1SXYrOGdmZ3l0MU16R0VybW5QdU09IiwibmJmIjoxNTg1ODEyNDE2LCJleHAiOjE1ODU4MTI0NzYsImlhdCI6MTU4NTgxMjQxNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.gsbwUCo1ZGhxwxX9kMmOebjKvqN9wTxl_fPUvcrlWJQ'} 
data={"escrowCompanyId": "001", "SELLERId": "0bf97d62-3641-41f9-8ce0-1b7bf4b75b53", "kycRequest": 0, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "999", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:56:59.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:56:59.296" endtime="20200402 12:56:59.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:56:59.779" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:56:59.779" endtime="20200402 12:56:59.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:59.780" endtime="20200402 12:56:59.781"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:56:59.781" endtime="20200402 12:56:59.782"></status>
</kw>
<status status="PASS" starttime="20200402 12:56:59.290" endtime="20200402 12:56:59.782"></status>
</kw>
<doc>Empty: To Verify response if mailingAddress.countryId parameter is entered Invalid and request sent with all mandatory fields</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:55.360" endtime="20200402 12:56:59.782" critical="yes"></status>
</test>
<test id="s1-t93" name="TC_107 UpdateSellerDetails with Valid MailingAddress">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:02.787" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:56:59.785" endtime="20200402 12:57:02.787"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:02.788" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:02.788" endtime="20200402 12:57:02.789"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:02.789" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:02.789" endtime="20200402 12:57:02.789"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:02.790" endtime="20200402 12:57:02.790"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:02.791" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:02.791" endtime="20200402 12:57:02.791"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:02.792" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:03.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:02.791" endtime="20200402 12:57:03.277"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:03.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:03.277" endtime="20200402 12:57:03.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:03.279" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0lTbmJxOHllWk1GYmhZL0N0NTlmQndwT2V0SW94aS9NZVJFK0lqZUh1Wm5ZMXRDQW9QdFNiNXc1Vmd5SGFvVWpyei8wS2l1SHU1bFI2T09YSU0wWjA9IiwibmJmIjoxNTg1ODEyNDIwLCJleHAiOjE1ODU4MTI0ODAsImlhdCI6MTU4NTgxMjQyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J2hiURos5bI-xAbpH6zycURbIpmNlBE0eyR2f2Q6bFM</msg>
<status status="PASS" starttime="20200402 12:57:03.278" endtime="20200402 12:57:03.279"></status>
</kw>
<msg timestamp="20200402 12:57:03.279" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0lTbmJxOHllWk1GYmhZL0N0NTlmQndwT2V0SW94aS9...</msg>
<status status="PASS" starttime="20200402 12:57:02.788" endtime="20200402 12:57:03.279"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:03.281" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:03.281" endtime="20200402 12:57:03.282"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:03.282" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:03.282" endtime="20200402 12:57:03.282"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:03.283" endtime="20200402 12:57:03.283"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:03.283" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:03.283" endtime="20200402 12:57:03.283"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:03.284" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:04.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:03.284" endtime="20200402 12:57:04.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:04.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:04.147" endtime="20200402 12:57:04.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:04.148" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBmaDEyT3pHRnM2MXFoSnhNK0F5YVI2L1BDNUQ3UjlHZ3NUNmpPME5ZVnBlRExPVyswWWhJdURMYkoxQUhQaVpIR2NkWTROMVpOSHlBNnV4OThhOWM9IiwibmJmIjoxNTg1ODEyNDIxLCJleHAiOjE1ODU4MTI0ODEsImlhdCI6MTU4NTgxMjQyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5udYSi1UiYM2e_iJnQgoO7fGvkKHhTKnhD3DTdgiiDc</msg>
<status status="PASS" starttime="20200402 12:57:04.148" endtime="20200402 12:57:04.148"></status>
</kw>
<msg timestamp="20200402 12:57:04.149" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBmaDEyT3pHRnM2MXFoSnhNK0F5YVI2L1BDNUQ3Ujl...</msg>
<status status="PASS" starttime="20200402 12:57:03.280" endtime="20200402 12:57:04.149"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:04.150" level="INFO">${Id} = 06181280672830</msg>
<status status="PASS" starttime="20200402 12:57:04.149" endtime="20200402 12:57:04.150"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:04.150" level="INFO">${IdNumber} = 06181280672830</msg>
<status status="PASS" starttime="20200402 12:57:04.150" endtime="20200402 12:57:04.151"></status>
</kw>
<msg timestamp="20200402 12:57:04.151" level="INFO">${idNum} = 06181280672830</msg>
<status status="PASS" starttime="20200402 12:57:04.149" endtime="20200402 12:57:04.151"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:04.152" level="INFO">${mobile} = 4740231978</msg>
<status status="PASS" starttime="20200402 12:57:04.151" endtime="20200402 12:57:04.152"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:04.152" level="INFO">${mobileNo} = 4740231978</msg>
<status status="PASS" starttime="20200402 12:57:04.152" endtime="20200402 12:57:04.152"></status>
</kw>
<msg timestamp="20200402 12:57:04.152" level="INFO">${MobNo} = 4740231978</msg>
<status status="PASS" starttime="20200402 12:57:04.151" endtime="20200402 12:57:04.152"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:04.154" level="INFO">${Emailnum} = 70943</msg>
<status status="PASS" starttime="20200402 12:57:04.153" endtime="20200402 12:57:04.154"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:04.155" level="INFO">${enum} = 70943</msg>
<status status="PASS" starttime="20200402 12:57:04.154" endtime="20200402 12:57:04.155"></status>
</kw>
<msg timestamp="20200402 12:57:04.155" level="INFO">${num} = 70943</msg>
<status status="PASS" starttime="20200402 12:57:04.153" endtime="20200402 12:57:04.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:04.156" level="INFO">${emailid} = pavan70943@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:04.155" endtime="20200402 12:57:04.156"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:04.157" level="INFO">${email} = pavan70943@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:04.156" endtime="20200402 12:57:04.157"></status>
</kw>
<msg timestamp="20200402 12:57:04.157" level="INFO">${emailid} = pavan70943@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:04.153" endtime="20200402 12:57:04.157"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:04.159" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:04.159" endtime="20200402 12:57:04.160"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:04.160" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:04.160" endtime="20200402 12:57:04.160"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:04.161" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:04.161" endtime="20200402 12:57:04.161"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:04.162" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:04.161" endtime="20200402 12:57:04.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:04.164" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:04.163" endtime="20200402 12:57:04.164"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:04.167" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '06181280672830', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4740231978', 'email': 'pavan70943@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:04.164" endtime="20200402 12:57:04.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:04.167" endtime="20200402 12:57:04.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:04.168" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBmaDEyT3pHRnM2MXFoSnhNK0F5YVI2L1BD...</msg>
<status status="PASS" starttime="20200402 12:57:04.168" endtime="20200402 12:57:04.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:04.169" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:04.169" endtime="20200402 12:57:04.169"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:04.170" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeHBmaDEyT3pHRnM2MXFoSnhNK0F5YVI2L1BDNUQ3UjlHZ3NUNmpPME5ZVnBlRExPVyswWWhJdURMYkoxQUhQaVpIR2NkWTROMVpOSHlBNnV4OThhOWM9IiwibmJmIjoxNTg1ODEyNDIxLCJleHAiOjE1ODU4MTI0ODEsImlhdCI6MTU4NTgxMjQyMSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.5udYSi1UiYM2e_iJnQgoO7fGvkKHhTKnhD3DTdgiiDc'} 
data={"escrowCompanyId": "001", "idNumber": "06181280672830", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4740231978", "email": "pavan70943@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:04.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:04.169" endtime="20200402 12:57:04.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:04.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:04.421" endtime="20200402 12:57:04.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:04.422" endtime="20200402 12:57:04.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:04.423" endtime="20200402 12:57:04.423"></status>
</kw>
<msg timestamp="20200402 12:57:04.423" level="INFO">${sellerid} = 40b4e732-4be8-48f0-8a11-a66d5e027ec9</msg>
<status status="PASS" starttime="20200402 12:57:04.157" endtime="20200402 12:57:04.423"></status>
</kw>
<msg timestamp="20200402 12:57:04.424" level="INFO">${SellerId} = 40b4e732-4be8-48f0-8a11-a66d5e027ec9</msg>
<msg timestamp="20200402 12:57:04.424" level="INFO">${idnumber} = 06181280672830</msg>
<status status="PASS" starttime="20200402 12:57:03.280" endtime="20200402 12:57:04.424"></status>
</kw>
<kw name="UpdateSellerDetails MailingAddress" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${0}</arg>
<arg>@{MailingAddress}[0]</arg>
<arg>@{MailingAddress}[1]</arg>
<arg>@{Address}[2]</arg>
<arg>@{MailingAddress}[2]</arg>
<arg>@{Address}[4]</arg>
<arg>@{MailingAddress}[3]</arg>
<arg>@{Address}[6]</arg>
<arg>@{Address}[7]</arg>
<arg>@{Address}[8]</arg>
<arg>@{Address}[9]</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:04.426" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:04.426" endtime="20200402 12:57:04.426"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:04.427" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:04.427" endtime="20200402 12:57:04.427"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=${mailAddress1}</arg>
<arg>mailAddress2=${mailAddress2}</arg>
<arg>countryId=${countryId}</arg>
<arg>stateId=${stateId}</arg>
<arg>state=${state}</arg>
<arg>postalCode=${postalCode}</arg>
<arg>addressDefine1=${addressDefine1}</arg>
<arg>addressDefine2=${addressDefine2}</arg>
<arg>addressDefine3=${addressDefine3}</arg>
<arg>addressDefine4=${addressDefine4}</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:04.428" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:04.427" endtime="20200402 12:57:04.428"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:04.429" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '40b4e732-4be8-48f0-8a11-a66d5e027ec9', 'kycRequest': 0, 'mailingAddress': {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateI...</msg>
<status status="PASS" starttime="20200402 12:57:04.429" endtime="20200402 12:57:04.429"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:04.430" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0lTbmJxOHllWk1GYmhZL0N0NTlmQndwT2V0...</msg>
<status status="PASS" starttime="20200402 12:57:04.429" endtime="20200402 12:57:04.430"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:04.430" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:04.430" endtime="20200402 12:57:04.430"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:04.431" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK0lTbmJxOHllWk1GYmhZL0N0NTlmQndwT2V0SW94aS9NZVJFK0lqZUh1Wm5ZMXRDQW9QdFNiNXc1Vmd5SGFvVWpyei8wS2l1SHU1bFI2T09YSU0wWjA9IiwibmJmIjoxNTg1ODEyNDIwLCJleHAiOjE1ODU4MTI0ODAsImlhdCI6MTU4NTgxMjQyMCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.J2hiURos5bI-xAbpH6zycURbIpmNlBE0eyR2f2Q6bFM'} 
data={"escrowCompanyId": "001", "SELLERId": "40b4e732-4be8-48f0-8a11-a66d5e027ec9", "kycRequest": 0, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:05.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:04.430" endtime="20200402 12:57:05.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:05.990" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:57:05.989" endtime="20200402 12:57:05.990"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:05.991" endtime="20200402 12:57:05.992"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:05.992" endtime="20200402 12:57:05.993"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:04.424" endtime="20200402 12:57:05.993"></status>
</kw>
<doc>Valid: To Verify response if All mailingAddress{} parameter is entered valid and request sent with all mandatory fields</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:56:59.784" endtime="20200402 12:57:05.994" critical="yes"></status>
</test>
<test id="s1-t94" name="TC_110 UpdateSellerDetails with IdNumber is Invalid">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:08.999" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:05.998" endtime="20200402 12:57:08.999"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.001" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:09.000" endtime="20200402 12:57:09.001"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:09.001" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:09.001" endtime="20200402 12:57:09.002"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:09.002" endtime="20200402 12:57:09.002"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:09.003" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:09.002" endtime="20200402 12:57:09.003"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:09.003" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:09.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:09.003" endtime="20200402 12:57:09.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:09.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:09.176" endtime="20200402 12:57:09.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.177" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZhMms3VXJuWm9XSXYzeTZGUG1TN2RJczVqSG9wTGpEenpuTmJsaEg1ZEZjdkk1YjRxREliK0JjSXdxQXoyVnpIeEVBVkQ4a1JzcHF0anZWdm5jMjQ9IiwibmJmIjoxNTg1ODEyNDI2LCJleHAiOjE1ODU4MTI0ODYsImlhdCI6MTU4NTgxMjQyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.htvuMojGtl5sYleK-5MrjI-2HJJNGzwxGKH55HU_090</msg>
<status status="PASS" starttime="20200402 12:57:09.177" endtime="20200402 12:57:09.177"></status>
</kw>
<msg timestamp="20200402 12:57:09.178" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZhMms3VXJuWm9XSXYzeTZGUG1TN2RJczVqSG9wTGp...</msg>
<status status="PASS" starttime="20200402 12:57:09.000" endtime="20200402 12:57:09.178"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:09.179" level="INFO">${mobile} = 0012569519</msg>
<status status="PASS" starttime="20200402 12:57:09.179" endtime="20200402 12:57:09.179"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.180" level="INFO">${mobileNo} = 0012569519</msg>
<status status="PASS" starttime="20200402 12:57:09.179" endtime="20200402 12:57:09.180"></status>
</kw>
<msg timestamp="20200402 12:57:09.180" level="INFO">${MobNo} = 0012569519</msg>
<status status="PASS" starttime="20200402 12:57:09.178" endtime="20200402 12:57:09.180"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:09.182" level="INFO">${Emailnum} = 90198</msg>
<status status="PASS" starttime="20200402 12:57:09.181" endtime="20200402 12:57:09.182"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.182" level="INFO">${enum} = 90198</msg>
<status status="PASS" starttime="20200402 12:57:09.182" endtime="20200402 12:57:09.182"></status>
</kw>
<msg timestamp="20200402 12:57:09.182" level="INFO">${num} = 90198</msg>
<status status="PASS" starttime="20200402 12:57:09.181" endtime="20200402 12:57:09.182"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:09.183" level="INFO">${emailid} = pavan90198@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.183" endtime="20200402 12:57:09.183"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.183" level="INFO">${email} = pavan90198@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.183" endtime="20200402 12:57:09.184"></status>
</kw>
<msg timestamp="20200402 12:57:09.184" level="INFO">${emailid} = pavan90198@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.181" endtime="20200402 12:57:09.184"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.185" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:09.185" endtime="20200402 12:57:09.186"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:09.186" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:09.186" endtime="20200402 12:57:09.186"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:09.187" endtime="20200402 12:57:09.187"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:09.188" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:09.187" endtime="20200402 12:57:09.188"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:09.188" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:09.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:09.188" endtime="20200402 12:57:09.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:09.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:09.667" endtime="20200402 12:57:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.669" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTI1ck94dlJNeXNhNFp0SjhXSnA2NTRsenRNMit0QlJhZDZmN1RTUWZSWFg0WDVDYk1rWFBmUTE3NWFrZy93R3FiS0lRRGpZdENqVW1lYlpNUmw0OGs9IiwibmJmIjoxNTg1ODEyNDI3LCJleHAiOjE1ODU4MTI0ODcsImlhdCI6MTU4NTgxMjQyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.3JG2ArG05trWCqtiggUqZ-zO9Gko_jZAMyzWyIoMBUs</msg>
<status status="PASS" starttime="20200402 12:57:09.668" endtime="20200402 12:57:09.669"></status>
</kw>
<msg timestamp="20200402 12:57:09.669" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTI1ck94dlJNeXNhNFp0SjhXSnA2NTRsenRNMit0QlJ...</msg>
<status status="PASS" starttime="20200402 12:57:09.185" endtime="20200402 12:57:09.670"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:09.671" level="INFO">${Id} = 39922933435543</msg>
<status status="PASS" starttime="20200402 12:57:09.670" endtime="20200402 12:57:09.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.671" level="INFO">${IdNumber} = 39922933435543</msg>
<status status="PASS" starttime="20200402 12:57:09.671" endtime="20200402 12:57:09.672"></status>
</kw>
<msg timestamp="20200402 12:57:09.672" level="INFO">${idNum} = 39922933435543</msg>
<status status="PASS" starttime="20200402 12:57:09.670" endtime="20200402 12:57:09.672"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:09.673" level="INFO">${mobile} = 8201145505</msg>
<status status="PASS" starttime="20200402 12:57:09.673" endtime="20200402 12:57:09.673"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.674" level="INFO">${mobileNo} = 8201145505</msg>
<status status="PASS" starttime="20200402 12:57:09.674" endtime="20200402 12:57:09.674"></status>
</kw>
<msg timestamp="20200402 12:57:09.675" level="INFO">${MobNo} = 8201145505</msg>
<status status="PASS" starttime="20200402 12:57:09.672" endtime="20200402 12:57:09.675"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:09.676" level="INFO">${Emailnum} = 67589</msg>
<status status="PASS" starttime="20200402 12:57:09.676" endtime="20200402 12:57:09.676"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.677" level="INFO">${enum} = 67589</msg>
<status status="PASS" starttime="20200402 12:57:09.677" endtime="20200402 12:57:09.677"></status>
</kw>
<msg timestamp="20200402 12:57:09.678" level="INFO">${num} = 67589</msg>
<status status="PASS" starttime="20200402 12:57:09.675" endtime="20200402 12:57:09.678"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:09.678" level="INFO">${emailid} = pavan67589@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.678" endtime="20200402 12:57:09.678"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:09.679" level="INFO">${email} = pavan67589@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.679" endtime="20200402 12:57:09.679"></status>
</kw>
<msg timestamp="20200402 12:57:09.680" level="INFO">${emailid} = pavan67589@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:09.675" endtime="20200402 12:57:09.680"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:09.684" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:09.684" endtime="20200402 12:57:09.685"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:09.686" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:09.685" endtime="20200402 12:57:09.686"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:09.687" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:09.686" endtime="20200402 12:57:09.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:09.689" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:09.687" endtime="20200402 12:57:09.689"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:09.692" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:09.690" endtime="20200402 12:57:09.692"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:09.695" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '39922933435543', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8201145505', 'email': 'pavan67589@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:09.692" endtime="20200402 12:57:09.695"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:09.696" endtime="20200402 12:57:09.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:09.697" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTI1ck94dlJNeXNhNFp0SjhXSnA2NTRsenRN...</msg>
<status status="PASS" starttime="20200402 12:57:09.697" endtime="20200402 12:57:09.697"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:09.698" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:09.698" endtime="20200402 12:57:09.698"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:09.699" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNTI1ck94dlJNeXNhNFp0SjhXSnA2NTRsenRNMit0QlJhZDZmN1RTUWZSWFg0WDVDYk1rWFBmUTE3NWFrZy93R3FiS0lRRGpZdENqVW1lYlpNUmw0OGs9IiwibmJmIjoxNTg1ODEyNDI3LCJleHAiOjE1ODU4MTI0ODcsImlhdCI6MTU4NTgxMjQyNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.3JG2ArG05trWCqtiggUqZ-zO9Gko_jZAMyzWyIoMBUs'} 
data={"escrowCompanyId": "001", "idNumber": "39922933435543", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8201145505", "email": "pavan67589@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:10.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:09.698" endtime="20200402 12:57:10.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:10.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:10.934" endtime="20200402 12:57:10.935"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:10.935" endtime="20200402 12:57:10.936"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:10.936" endtime="20200402 12:57:10.937"></status>
</kw>
<msg timestamp="20200402 12:57:10.937" level="INFO">${sellerid} = 998af4df-66ed-424d-85ab-fe000415f97a</msg>
<status status="PASS" starttime="20200402 12:57:09.680" endtime="20200402 12:57:10.937"></status>
</kw>
<msg timestamp="20200402 12:57:10.937" level="INFO">${SellerId} = 998af4df-66ed-424d-85ab-fe000415f97a</msg>
<msg timestamp="20200402 12:57:10.938" level="INFO">${idnumber} = 39922933435543</msg>
<status status="PASS" starttime="20200402 12:57:09.184" endtime="20200402 12:57:10.938"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Invalid_IdNum}</var>
</assign>
<msg timestamp="20200402 12:57:10.939" level="INFO">${Invalid_IdNum} = 7383928582</msg>
<status status="PASS" starttime="20200402 12:57:10.938" endtime="20200402 12:57:10.939"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${Invalid_IdNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{Kyc1_Data}[1]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${1}</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:10.942" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:10.941" endtime="20200402 12:57:10.942"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:10.942" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:10.942" endtime="20200402 12:57:10.943"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:10.943" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:57:10.943" endtime="20200402 12:57:10.943"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:10.945" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:10.943" endtime="20200402 12:57:10.945"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:10.946" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:10.945" endtime="20200402 12:57:10.946"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:10.948" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '998af4df-66ed-424d-85ab-fe000415f97a', 'idNumber': '7383928582', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '0012569519', 'email': 'pavan90198@2c2p.c...</msg>
<status status="PASS" starttime="20200402 12:57:10.946" endtime="20200402 12:57:10.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:10.949" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZhMms3VXJuWm9XSXYzeTZGUG1TN2RJczVq...</msg>
<status status="PASS" starttime="20200402 12:57:10.949" endtime="20200402 12:57:10.949"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:10.950" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:10.950" endtime="20200402 12:57:10.950"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:10.951" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeGZhMms3VXJuWm9XSXYzeTZGUG1TN2RJczVqSG9wTGpEenpuTmJsaEg1ZEZjdkk1YjRxREliK0JjSXdxQXoyVnpIeEVBVkQ4a1JzcHF0anZWdm5jMjQ9IiwibmJmIjoxNTg1ODEyNDI2LCJleHAiOjE1ODU4MTI0ODYsImlhdCI6MTU4NTgxMjQyNiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.htvuMojGtl5sYleK-5MrjI-2HJJNGzwxGKH55HU_090'} 
data={"escrowCompanyId": "001", "SELLERId": "998af4df-66ed-424d-85ab-fe000415f97a", "idNumber": "7383928582", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "0012569519", "email": "pavan90198@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "PP3xxxx33786", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 1, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:12.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:10.950" endtime="20200402 12:57:12.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:12.114" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:57:12.114" endtime="20200402 12:57:12.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:12.115" endtime="20200402 12:57:12.116"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:12.116" endtime="20200402 12:57:12.117"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:10.939" endtime="20200402 12:57:12.117"></status>
</kw>
<doc>Invalid:To check API response when idNumber is enter invalid( with out check sum validation) and request is sent with all mandatory fields (KycRequest=1)</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:05.996" endtime="20200402 12:57:12.117" critical="yes"></status>
</test>
<test id="s1-t95" name="TC_111 UpdateSellerDetails with OtherVarification is Invalid">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:15.124" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:12.121" endtime="20200402 12:57:15.124"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.126" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:15.126" endtime="20200402 12:57:15.126"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:15.127" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:15.126" endtime="20200402 12:57:15.127"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:15.127" endtime="20200402 12:57:15.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:15.128" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:15.128" endtime="20200402 12:57:15.128"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:15.128" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:15.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.128" endtime="20200402 12:57:15.383"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:15.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.383" endtime="20200402 12:57:15.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.384" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmJLVmxXbjlrV01JNFRJWEVJWFhyN3p1ZW5GM3FkYmxPRWQ0QTVBL0RKUGlIMUlscEpIMEVBRHR6MjdzWk00U0dCc1RlS05OdGl2UlErUzBoYzNtblE9IiwibmJmIjoxNTg1ODEyNDMyLCJleHAiOjE1ODU4MTI0OTIsImlhdCI6MTU4NTgxMjQzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.e5uk2MJaooqQjbg5QM1C5pWBS9WPRsTiaXSZETyscV0</msg>
<status status="PASS" starttime="20200402 12:57:15.384" endtime="20200402 12:57:15.384"></status>
</kw>
<msg timestamp="20200402 12:57:15.385" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmJLVmxXbjlrV01JNFRJWEVJWFhyN3p1ZW5GM3FkYmx...</msg>
<status status="PASS" starttime="20200402 12:57:15.125" endtime="20200402 12:57:15.385"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:15.386" level="INFO">${mobile} = 6971963543</msg>
<status status="PASS" starttime="20200402 12:57:15.386" endtime="20200402 12:57:15.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.387" level="INFO">${mobileNo} = 6971963543</msg>
<status status="PASS" starttime="20200402 12:57:15.387" endtime="20200402 12:57:15.387"></status>
</kw>
<msg timestamp="20200402 12:57:15.387" level="INFO">${MobNo} = 6971963543</msg>
<status status="PASS" starttime="20200402 12:57:15.386" endtime="20200402 12:57:15.387"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:15.389" level="INFO">${Emailnum} = 42270</msg>
<status status="PASS" starttime="20200402 12:57:15.388" endtime="20200402 12:57:15.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.389" level="INFO">${enum} = 42270</msg>
<status status="PASS" starttime="20200402 12:57:15.389" endtime="20200402 12:57:15.389"></status>
</kw>
<msg timestamp="20200402 12:57:15.389" level="INFO">${num} = 42270</msg>
<status status="PASS" starttime="20200402 12:57:15.388" endtime="20200402 12:57:15.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:15.390" level="INFO">${emailid} = pavan42270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.390" endtime="20200402 12:57:15.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.391" level="INFO">${email} = pavan42270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.390" endtime="20200402 12:57:15.391"></status>
</kw>
<msg timestamp="20200402 12:57:15.391" level="INFO">${emailid} = pavan42270@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.388" endtime="20200402 12:57:15.391"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.392" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:15.392" endtime="20200402 12:57:15.393"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:15.393" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:15.393" endtime="20200402 12:57:15.393"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:15.393" endtime="20200402 12:57:15.394"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:15.395" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:15.394" endtime="20200402 12:57:15.395"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:15.396" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:15.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.395" endtime="20200402 12:57:15.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:15.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.598" endtime="20200402 12:57:15.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.599" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGo2cmxlNmlGV244aU1zUnNLeStpR3VoRWZYQWJEdHRBdEJkYmFhOVZxZUlqWll6OVdEYitUKzZhb083WEJTZHhVaWJzY3Q2L1R5OTZxbmRNNzUwWEE9IiwibmJmIjoxNTg1ODEyNDMzLCJleHAiOjE1ODU4MTI0OTMsImlhdCI6MTU4NTgxMjQzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7-AxbFwH5X7wE1wEEC08uNcc-yPoM_1cB4nw_GDema0</msg>
<status status="PASS" starttime="20200402 12:57:15.599" endtime="20200402 12:57:15.599"></status>
</kw>
<msg timestamp="20200402 12:57:15.600" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGo2cmxlNmlGV244aU1zUnNLeStpR3VoRWZYQWJEdHR...</msg>
<status status="PASS" starttime="20200402 12:57:15.392" endtime="20200402 12:57:15.600"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:15.601" level="INFO">${Id} = 09113615536019</msg>
<status status="PASS" starttime="20200402 12:57:15.600" endtime="20200402 12:57:15.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.602" level="INFO">${IdNumber} = 09113615536019</msg>
<status status="PASS" starttime="20200402 12:57:15.601" endtime="20200402 12:57:15.602"></status>
</kw>
<msg timestamp="20200402 12:57:15.602" level="INFO">${idNum} = 09113615536019</msg>
<status status="PASS" starttime="20200402 12:57:15.600" endtime="20200402 12:57:15.602"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:15.603" level="INFO">${mobile} = 4940182105</msg>
<status status="PASS" starttime="20200402 12:57:15.602" endtime="20200402 12:57:15.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.603" level="INFO">${mobileNo} = 4940182105</msg>
<status status="PASS" starttime="20200402 12:57:15.603" endtime="20200402 12:57:15.603"></status>
</kw>
<msg timestamp="20200402 12:57:15.604" level="INFO">${MobNo} = 4940182105</msg>
<status status="PASS" starttime="20200402 12:57:15.602" endtime="20200402 12:57:15.604"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:15.605" level="INFO">${Emailnum} = 13802</msg>
<status status="PASS" starttime="20200402 12:57:15.605" endtime="20200402 12:57:15.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.605" level="INFO">${enum} = 13802</msg>
<status status="PASS" starttime="20200402 12:57:15.605" endtime="20200402 12:57:15.606"></status>
</kw>
<msg timestamp="20200402 12:57:15.606" level="INFO">${num} = 13802</msg>
<status status="PASS" starttime="20200402 12:57:15.604" endtime="20200402 12:57:15.606"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:15.606" level="INFO">${emailid} = pavan13802@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.606" endtime="20200402 12:57:15.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:15.607" level="INFO">${email} = pavan13802@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.606" endtime="20200402 12:57:15.607"></status>
</kw>
<msg timestamp="20200402 12:57:15.607" level="INFO">${emailid} = pavan13802@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:15.604" endtime="20200402 12:57:15.607"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:15.609" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:15.609" endtime="20200402 12:57:15.610"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:15.610" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:15.610" endtime="20200402 12:57:15.610"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:15.611" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:15.610" endtime="20200402 12:57:15.611"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:15.612" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:15.611" endtime="20200402 12:57:15.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:15.614" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:15.613" endtime="20200402 12:57:15.614"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:15.616" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '09113615536019', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4940182105', 'email': 'pavan13802@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:15.614" endtime="20200402 12:57:15.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:15.617" endtime="20200402 12:57:15.617"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:15.618" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGo2cmxlNmlGV244aU1zUnNLeStpR3VoRWZY...</msg>
<status status="PASS" starttime="20200402 12:57:15.618" endtime="20200402 12:57:15.618"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:15.619" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:15.618" endtime="20200402 12:57:15.619"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:15.620" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMGo2cmxlNmlGV244aU1zUnNLeStpR3VoRWZYQWJEdHRBdEJkYmFhOVZxZUlqWll6OVdEYitUKzZhb083WEJTZHhVaWJzY3Q2L1R5OTZxbmRNNzUwWEE9IiwibmJmIjoxNTg1ODEyNDMzLCJleHAiOjE1ODU4MTI0OTMsImlhdCI6MTU4NTgxMjQzMywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.7-AxbFwH5X7wE1wEEC08uNcc-yPoM_1cB4nw_GDema0'} 
data={"escrowCompanyId": "001", "idNumber": "09113615536019", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4940182105", "email": "pavan13802@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:15.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.619" endtime="20200402 12:57:15.885"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:15.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.886" endtime="20200402 12:57:15.886"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:15.886" endtime="20200402 12:57:15.887"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:15.887" endtime="20200402 12:57:15.888"></status>
</kw>
<msg timestamp="20200402 12:57:15.888" level="INFO">${sellerid} = 986a7345-2e31-4497-9299-030e0cbb8904</msg>
<status status="PASS" starttime="20200402 12:57:15.607" endtime="20200402 12:57:15.888"></status>
</kw>
<msg timestamp="20200402 12:57:15.888" level="INFO">${SellerId} = 986a7345-2e31-4497-9299-030e0cbb8904</msg>
<msg timestamp="20200402 12:57:15.888" level="INFO">${idnumber} = 09113615536019</msg>
<status status="PASS" starttime="20200402 12:57:15.391" endtime="20200402 12:57:15.888"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{Kyc1_Data}[1]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${1}</arg>
<arg>R01</arg>
<arg>Validation failed</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:15.891" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:15.891" endtime="20200402 12:57:15.892"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:15.892" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:15.892" endtime="20200402 12:57:15.892"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:15.893" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:57:15.893" endtime="20200402 12:57:15.893"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:15.895" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:15.893" endtime="20200402 12:57:15.895"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:15.896" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:15.895" endtime="20200402 12:57:15.896"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:15.899" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '986a7345-2e31-4497-9299-030e0cbb8904', 'idNumber': '09113615536019', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '6971963543', 'email': 'pavan42270@2c...</msg>
<status status="PASS" starttime="20200402 12:57:15.896" endtime="20200402 12:57:15.899"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:15.899" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmJLVmxXbjlrV01JNFRJWEVJWFhyN3p1ZW5G...</msg>
<status status="PASS" starttime="20200402 12:57:15.899" endtime="20200402 12:57:15.899"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:15.900" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:15.899" endtime="20200402 12:57:15.900"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:15.901" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QMmJLVmxXbjlrV01JNFRJWEVJWFhyN3p1ZW5GM3FkYmxPRWQ0QTVBL0RKUGlIMUlscEpIMEVBRHR6MjdzWk00U0dCc1RlS05OdGl2UlErUzBoYzNtblE9IiwibmJmIjoxNTg1ODEyNDMyLCJleHAiOjE1ODU4MTI0OTIsImlhdCI6MTU4NTgxMjQzMiwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.e5uk2MJaooqQjbg5QM1C5pWBS9WPRsTiaXSZETyscV0'} 
data={"escrowCompanyId": "001", "SELLERId": "986a7345-2e31-4497-9299-030e0cbb8904", "idNumber": "09113615536019", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "6971963543", "email": "pavan42270@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "PP3xxxx33786", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 1, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:16.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:15.900" endtime="20200402 12:57:16.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:16.086" level="INFO">{"responseCode":"R01","resDescription":"Validation failed"}</msg>
<status status="PASS" starttime="20200402 12:57:16.085" endtime="20200402 12:57:16.086"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:16.087" endtime="20200402 12:57:16.087"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:16.088" endtime="20200402 12:57:16.088"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:15.889" endtime="20200402 12:57:16.088"></status>
</kw>
<doc>Invalid : To check API response when otherVerification is entered invalid and request is sent with all mandatory fields (KycRequest=1)</doc>
<tags>
<tag>R01</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:12.120" endtime="20200402 12:57:16.089" critical="yes"></status>
</test>
<test id="s1-t96" name="TC_112 UpdateSellerDetails with IdNumber is Invalid">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:19.092" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:16.091" endtime="20200402 12:57:19.092"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.093" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:19.093" endtime="20200402 12:57:19.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:19.095" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:19.095" endtime="20200402 12:57:19.095"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:19.096" endtime="20200402 12:57:19.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:19.097" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:19.096" endtime="20200402 12:57:19.097"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:19.097" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:19.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:19.097" endtime="20200402 12:57:19.592"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:19.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:19.592" endtime="20200402 12:57:19.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.594" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd1FHTUVYZ2NWK1NyMUkvQXcvYU1aUUpHbWFDVnZmK00rSS9WRGNSYzQrMlU5MDY0ditpRGVwcHQ4ZWtUR3VnSkhFZThybWRlWGJsbWNlKzh6bHJaRnc9IiwibmJmIjoxNTg1ODEyNDM3LCJleHAiOjE1ODU4MTI0OTcsImlhdCI6MTU4NTgxMjQzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zA2BhRpTzYL9O6ziBDZAXOwUyTa5LKeSVxUEhfbYuss</msg>
<status status="PASS" starttime="20200402 12:57:19.593" endtime="20200402 12:57:19.594"></status>
</kw>
<msg timestamp="20200402 12:57:19.595" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd1FHTUVYZ2NWK1NyMUkvQXcvYU1aUUpHbWFDVnZmK00...</msg>
<status status="PASS" starttime="20200402 12:57:19.093" endtime="20200402 12:57:19.595"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:19.598" level="INFO">${mobile} = 8206924634</msg>
<status status="PASS" starttime="20200402 12:57:19.597" endtime="20200402 12:57:19.599"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.601" level="INFO">${mobileNo} = 8206924634</msg>
<status status="PASS" starttime="20200402 12:57:19.599" endtime="20200402 12:57:19.601"></status>
</kw>
<msg timestamp="20200402 12:57:19.601" level="INFO">${MobNo} = 8206924634</msg>
<status status="PASS" starttime="20200402 12:57:19.596" endtime="20200402 12:57:19.601"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:19.604" level="INFO">${Emailnum} = 69973</msg>
<status status="PASS" starttime="20200402 12:57:19.604" endtime="20200402 12:57:19.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.605" level="INFO">${enum} = 69973</msg>
<status status="PASS" starttime="20200402 12:57:19.605" endtime="20200402 12:57:19.605"></status>
</kw>
<msg timestamp="20200402 12:57:19.606" level="INFO">${num} = 69973</msg>
<status status="PASS" starttime="20200402 12:57:19.604" endtime="20200402 12:57:19.606"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:19.606" level="INFO">${emailid} = pavan69973@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.606" endtime="20200402 12:57:19.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.607" level="INFO">${email} = pavan69973@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.607" endtime="20200402 12:57:19.607"></status>
</kw>
<msg timestamp="20200402 12:57:19.608" level="INFO">${emailid} = pavan69973@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.603" endtime="20200402 12:57:19.608"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.609" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:19.609" endtime="20200402 12:57:19.610"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:19.611" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:19.610" endtime="20200402 12:57:19.611"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:19.611" endtime="20200402 12:57:19.611"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:19.612" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:19.612" endtime="20200402 12:57:19.612"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:19.613" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:19.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:19.612" endtime="20200402 12:57:19.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:19.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:19.807" endtime="20200402 12:57:19.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.808" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0I0VnV3WTRNdUFWUU5GWi9reHZtaGtLWFZQTFpXUTNheGlIWmRwZmlReUFzRkJhSTFYTWt4d3dybXVWRGxxaDhYeDBlNnBJL01zWXVlN0NyVnpUUjg9IiwibmJmIjoxNTg1ODEyNDM3LCJleHAiOjE1ODU4MTI0OTcsImlhdCI6MTU4NTgxMjQzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BEs6GkPHyeKBSnguK6x_WyA09M87xTDappTcPT_CqCI</msg>
<status status="PASS" starttime="20200402 12:57:19.808" endtime="20200402 12:57:19.808"></status>
</kw>
<msg timestamp="20200402 12:57:19.809" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0I0VnV3WTRNdUFWUU5GWi9reHZtaGtLWFZQTFpXUTN...</msg>
<status status="PASS" starttime="20200402 12:57:19.609" endtime="20200402 12:57:19.809"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:19.810" level="INFO">${Id} = 60092155958421</msg>
<status status="PASS" starttime="20200402 12:57:19.809" endtime="20200402 12:57:19.810"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.810" level="INFO">${IdNumber} = 60092155958421</msg>
<status status="PASS" starttime="20200402 12:57:19.810" endtime="20200402 12:57:19.810"></status>
</kw>
<msg timestamp="20200402 12:57:19.811" level="INFO">${idNum} = 60092155958421</msg>
<status status="PASS" starttime="20200402 12:57:19.809" endtime="20200402 12:57:19.811"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:19.811" level="INFO">${mobile} = 3810887943</msg>
<status status="PASS" starttime="20200402 12:57:19.811" endtime="20200402 12:57:19.811"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.812" level="INFO">${mobileNo} = 3810887943</msg>
<status status="PASS" starttime="20200402 12:57:19.812" endtime="20200402 12:57:19.812"></status>
</kw>
<msg timestamp="20200402 12:57:19.812" level="INFO">${MobNo} = 3810887943</msg>
<status status="PASS" starttime="20200402 12:57:19.811" endtime="20200402 12:57:19.812"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:19.814" level="INFO">${Emailnum} = 08274</msg>
<status status="PASS" starttime="20200402 12:57:19.813" endtime="20200402 12:57:19.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.814" level="INFO">${enum} = 08274</msg>
<status status="PASS" starttime="20200402 12:57:19.814" endtime="20200402 12:57:19.814"></status>
</kw>
<msg timestamp="20200402 12:57:19.815" level="INFO">${num} = 08274</msg>
<status status="PASS" starttime="20200402 12:57:19.813" endtime="20200402 12:57:19.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:19.815" level="INFO">${emailid} = pavan08274@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.815" endtime="20200402 12:57:19.815"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:19.816" level="INFO">${email} = pavan08274@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.815" endtime="20200402 12:57:19.816"></status>
</kw>
<msg timestamp="20200402 12:57:19.816" level="INFO">${emailid} = pavan08274@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:19.812" endtime="20200402 12:57:19.816"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:19.818" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:19.818" endtime="20200402 12:57:19.819"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:19.819" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:19.819" endtime="20200402 12:57:19.819"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:19.820" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:19.820" endtime="20200402 12:57:19.820"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:19.821" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:19.820" endtime="20200402 12:57:19.821"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:19.823" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:19.821" endtime="20200402 12:57:19.823"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:19.825" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '60092155958421', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3810887943', 'email': 'pavan08274@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:19.823" endtime="20200402 12:57:19.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:19.826" endtime="20200402 12:57:19.827"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:19.828" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0I0VnV3WTRNdUFWUU5GWi9reHZtaGtLWFZQ...</msg>
<status status="PASS" starttime="20200402 12:57:19.827" endtime="20200402 12:57:19.828"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:19.829" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:19.828" endtime="20200402 12:57:19.829"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:19.831" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd0I0VnV3WTRNdUFWUU5GWi9reHZtaGtLWFZQTFpXUTNheGlIWmRwZmlReUFzRkJhSTFYTWt4d3dybXVWRGxxaDhYeDBlNnBJL01zWXVlN0NyVnpUUjg9IiwibmJmIjoxNTg1ODEyNDM3LCJleHAiOjE1ODU4MTI0OTcsImlhdCI6MTU4NTgxMjQzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BEs6GkPHyeKBSnguK6x_WyA09M87xTDappTcPT_CqCI'} 
data={"escrowCompanyId": "001", "idNumber": "60092155958421", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3810887943", "email": "pavan08274@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:20.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:19.829" endtime="20200402 12:57:20.072"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:20.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:20.072" endtime="20200402 12:57:20.073"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:20.073" endtime="20200402 12:57:20.074"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:20.074" endtime="20200402 12:57:20.074"></status>
</kw>
<msg timestamp="20200402 12:57:20.075" level="INFO">${sellerid} = 03937675-adc2-4560-8b7e-353af8bcad75</msg>
<status status="PASS" starttime="20200402 12:57:19.816" endtime="20200402 12:57:20.075"></status>
</kw>
<msg timestamp="20200402 12:57:20.075" level="INFO">${SellerId} = 03937675-adc2-4560-8b7e-353af8bcad75</msg>
<msg timestamp="20200402 12:57:20.075" level="INFO">${idnumber} = 60092155958421</msg>
<status status="PASS" starttime="20200402 12:57:19.608" endtime="20200402 12:57:20.075"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>@{Kyc1_Data}[0]</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{Kyc1_Data}[1]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${1}</arg>
<arg>R02</arg>
<arg>ข้อมูลที่ใช้ในการตรวจสอบไม่ถูกต้อง</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:20.081" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:20.080" endtime="20200402 12:57:20.081"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:20.082" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:20.081" endtime="20200402 12:57:20.082"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:20.082" level="INFO">${KeyReq} = 1</msg>
<status status="PASS" starttime="20200402 12:57:20.082" endtime="20200402 12:57:20.082"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:20.084" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:20.082" endtime="20200402 12:57:20.084"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:20.085" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:20.084" endtime="20200402 12:57:20.085"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:20.088" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '03937675-adc2-4560-8b7e-353af8bcad75', 'idNumber': '1101xxxx13655', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8206924634', 'email': 'pavan69973@2c2...</msg>
<status status="PASS" starttime="20200402 12:57:20.086" endtime="20200402 12:57:20.088"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:20.089" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd1FHTUVYZ2NWK1NyMUkvQXcvYU1aUUpHbWFD...</msg>
<status status="PASS" starttime="20200402 12:57:20.089" endtime="20200402 12:57:20.089"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:20.090" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:20.089" endtime="20200402 12:57:20.090"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:20.091" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd1FHTUVYZ2NWK1NyMUkvQXcvYU1aUUpHbWFDVnZmK00rSS9WRGNSYzQrMlU5MDY0ditpRGVwcHQ4ZWtUR3VnSkhFZThybWRlWGJsbWNlKzh6bHJaRnc9IiwibmJmIjoxNTg1ODEyNDM3LCJleHAiOjE1ODU4MTI0OTcsImlhdCI6MTU4NTgxMjQzNywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.zA2BhRpTzYL9O6ziBDZAXOwUyTa5LKeSVxUEhfbYuss'} 
data={"escrowCompanyId": "001", "SELLERId": "03937675-adc2-4560-8b7e-353af8bcad75", "idNumber": "1101xxxx13655", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8206924634", "email": "pavan69973@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "PP3xxxx33786", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 1, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:27.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:20.090" endtime="20200402 12:57:27.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:27.149" level="INFO">{"responseCode":"R02","resDescription":"ข้อมูลที่ใช้ในการตรวจสอบไม่ถูกต้อง"}</msg>
<status status="PASS" starttime="20200402 12:57:27.149" endtime="20200402 12:57:27.150"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:27.150" endtime="20200402 12:57:27.151"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:27.151" endtime="20200402 12:57:27.151"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:20.077" endtime="20200402 12:57:27.152"></status>
</kw>
<doc>Invalid: To check API reponse when IdNumber is enter invalid and request is sent with all mandatory fields (KycRequest=1)</doc>
<tags>
<tag>R02</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:16.090" endtime="20200402 12:57:27.152" critical="yes"></status>
</test>
<test id="s1-t97" name="TC_113 UpdateSellerDetails with Active SellerId">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:30.156" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:27.155" endtime="20200402 12:57:30.156"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.158" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:30.157" endtime="20200402 12:57:30.158"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:30.159" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:30.159" endtime="20200402 12:57:30.159"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:30.160" endtime="20200402 12:57:30.160"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:30.160" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:30.160" endtime="20200402 12:57:30.161"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:30.161" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:30.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:30.161" endtime="20200402 12:57:30.404"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:30.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:30.404" endtime="20200402 12:57:30.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.405" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHorclJXU0tmdVlneGtWU3p4RjlOaVhDZmp0NjBwZjg4QlpmOGYrQzUxenp3b3ZpMEFVWC9wYmc2eFRIWUU9IiwibmJmIjoxNTg1ODEyNDQ3LCJleHAiOjE1ODU4MTI1MDcsImlhdCI6MTU4NTgxMjQ0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b6ct1M9t3_IoOIjeDiX0c_oHbYejlBSoXajo7mQTzBI</msg>
<status status="PASS" starttime="20200402 12:57:30.405" endtime="20200402 12:57:30.406"></status>
</kw>
<msg timestamp="20200402 12:57:30.406" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHorclJXU0t...</msg>
<status status="PASS" starttime="20200402 12:57:30.157" endtime="20200402 12:57:30.406"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:30.408" level="INFO">${mobile} = 8701625899</msg>
<status status="PASS" starttime="20200402 12:57:30.408" endtime="20200402 12:57:30.408"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.409" level="INFO">${mobileNo} = 8701625899</msg>
<status status="PASS" starttime="20200402 12:57:30.408" endtime="20200402 12:57:30.409"></status>
</kw>
<msg timestamp="20200402 12:57:30.409" level="INFO">${MobNo} = 8701625899</msg>
<status status="PASS" starttime="20200402 12:57:30.407" endtime="20200402 12:57:30.409"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:30.411" level="INFO">${Emailnum} = 48447</msg>
<status status="PASS" starttime="20200402 12:57:30.410" endtime="20200402 12:57:30.411"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.411" level="INFO">${enum} = 48447</msg>
<status status="PASS" starttime="20200402 12:57:30.411" endtime="20200402 12:57:30.411"></status>
</kw>
<msg timestamp="20200402 12:57:30.412" level="INFO">${num} = 48447</msg>
<status status="PASS" starttime="20200402 12:57:30.410" endtime="20200402 12:57:30.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:30.412" level="INFO">${emailid} = pavan48447@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.412" endtime="20200402 12:57:30.412"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.413" level="INFO">${email} = pavan48447@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.412" endtime="20200402 12:57:30.413"></status>
</kw>
<msg timestamp="20200402 12:57:30.413" level="INFO">${emailid} = pavan48447@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.410" endtime="20200402 12:57:30.413"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.416" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:30.415" endtime="20200402 12:57:30.416"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:30.418" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:30.417" endtime="20200402 12:57:30.418"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:30.418" endtime="20200402 12:57:30.418"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:30.419" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:30.419" endtime="20200402 12:57:30.419"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:30.420" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:30.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:30.419" endtime="20200402 12:57:30.597"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:30.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:30.598" endtime="20200402 12:57:30.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.599" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzZrcjZOcXBNcHRVMENzaS85dlNCMG9jRk5YeTQ5NEpKUHd3NXZscFl0Y3J2Mlg1R244eE9WQk9tR3FCZHVNbERrVUFubXlNZWQ3YlFPeDZXVzBoYW89IiwibmJmIjoxNTg1ODEyNDQ4LCJleHAiOjE1ODU4MTI1MDgsImlhdCI6MTU4NTgxMjQ0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VtPTMTHpF3T9SxzaUGO3CxfTmwYe7Jo2FcNiDMoUjec</msg>
<status status="PASS" starttime="20200402 12:57:30.599" endtime="20200402 12:57:30.599"></status>
</kw>
<msg timestamp="20200402 12:57:30.600" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzZrcjZOcXBNcHRVMENzaS85dlNCMG9jRk5YeTQ5NEp...</msg>
<status status="PASS" starttime="20200402 12:57:30.414" endtime="20200402 12:57:30.600"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:30.601" level="INFO">${Id} = 05893568385908</msg>
<status status="PASS" starttime="20200402 12:57:30.601" endtime="20200402 12:57:30.601"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.602" level="INFO">${IdNumber} = 05893568385908</msg>
<status status="PASS" starttime="20200402 12:57:30.601" endtime="20200402 12:57:30.602"></status>
</kw>
<msg timestamp="20200402 12:57:30.602" level="INFO">${idNum} = 05893568385908</msg>
<status status="PASS" starttime="20200402 12:57:30.600" endtime="20200402 12:57:30.602"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:30.603" level="INFO">${mobile} = 3640136156</msg>
<status status="PASS" starttime="20200402 12:57:30.603" endtime="20200402 12:57:30.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.604" level="INFO">${mobileNo} = 3640136156</msg>
<status status="PASS" starttime="20200402 12:57:30.603" endtime="20200402 12:57:30.604"></status>
</kw>
<msg timestamp="20200402 12:57:30.604" level="INFO">${MobNo} = 3640136156</msg>
<status status="PASS" starttime="20200402 12:57:30.602" endtime="20200402 12:57:30.604"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:30.605" level="INFO">${Emailnum} = 66178</msg>
<status status="PASS" starttime="20200402 12:57:30.605" endtime="20200402 12:57:30.605"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.606" level="INFO">${enum} = 66178</msg>
<status status="PASS" starttime="20200402 12:57:30.605" endtime="20200402 12:57:30.606"></status>
</kw>
<msg timestamp="20200402 12:57:30.606" level="INFO">${num} = 66178</msg>
<status status="PASS" starttime="20200402 12:57:30.604" endtime="20200402 12:57:30.606"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:30.606" level="INFO">${emailid} = pavan66178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.606" endtime="20200402 12:57:30.606"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:30.607" level="INFO">${email} = pavan66178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.607" endtime="20200402 12:57:30.607"></status>
</kw>
<msg timestamp="20200402 12:57:30.607" level="INFO">${emailid} = pavan66178@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:30.604" endtime="20200402 12:57:30.607"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:30.610" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:30.609" endtime="20200402 12:57:30.610"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:30.611" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:30.610" endtime="20200402 12:57:30.611"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:30.611" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:30.611" endtime="20200402 12:57:30.611"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:30.613" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:30.611" endtime="20200402 12:57:30.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:30.615" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:30.613" endtime="20200402 12:57:30.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:30.619" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '05893568385908', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3640136156', 'email': 'pavan66178@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:30.616" endtime="20200402 12:57:30.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:30.619" endtime="20200402 12:57:30.620"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:30.621" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzZrcjZOcXBNcHRVMENzaS85dlNCMG9jRk5Y...</msg>
<status status="PASS" starttime="20200402 12:57:30.621" endtime="20200402 12:57:30.621"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:30.622" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:30.622" endtime="20200402 12:57:30.622"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:30.624" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNzZrcjZOcXBNcHRVMENzaS85dlNCMG9jRk5YeTQ5NEpKUHd3NXZscFl0Y3J2Mlg1R244eE9WQk9tR3FCZHVNbERrVUFubXlNZWQ3YlFPeDZXVzBoYW89IiwibmJmIjoxNTg1ODEyNDQ4LCJleHAiOjE1ODU4MTI1MDgsImlhdCI6MTU4NTgxMjQ0OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.VtPTMTHpF3T9SxzaUGO3CxfTmwYe7Jo2FcNiDMoUjec'} 
data={"escrowCompanyId": "001", "idNumber": "05893568385908", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3640136156", "email": "pavan66178@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:31.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:30.623" endtime="20200402 12:57:31.536"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:31.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:31.536" endtime="20200402 12:57:31.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:31.537" endtime="20200402 12:57:31.538"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:31.538" endtime="20200402 12:57:31.538"></status>
</kw>
<msg timestamp="20200402 12:57:31.539" level="INFO">${sellerid} = cb15c8c7-88f3-41c9-9b25-02a97a675f9f</msg>
<status status="PASS" starttime="20200402 12:57:30.607" endtime="20200402 12:57:31.539"></status>
</kw>
<msg timestamp="20200402 12:57:31.539" level="INFO">${SellerId} = cb15c8c7-88f3-41c9-9b25-02a97a675f9f</msg>
<msg timestamp="20200402 12:57:31.539" level="INFO">${idnumber} = 05893568385908</msg>
<status status="PASS" starttime="20200402 12:57:30.414" endtime="20200402 12:57:31.540"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${1}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:31.541" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:31.541" endtime="20200402 12:57:31.542"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:57:31.542" level="INFO">${STATUS1} = 1</msg>
<status status="PASS" starttime="20200402 12:57:31.542" endtime="20200402 12:57:31.543"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:31.543" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'cb15c8c7-88f3-41c9-9b25-02a97a675f9f', 'STATUS': 1}</msg>
<status status="PASS" starttime="20200402 12:57:31.543" endtime="20200402 12:57:31.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:31.544" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHor...</msg>
<status status="PASS" starttime="20200402 12:57:31.544" endtime="20200402 12:57:31.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:31.546" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:31.545" endtime="20200402 12:57:31.546"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:31.547" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHorclJXU0tmdVlneGtWU3p4RjlOaVhDZmp0NjBwZjg4QlpmOGYrQzUxenp3b3ZpMEFVWC9wYmc2eFRIWUU9IiwibmJmIjoxNTg1ODEyNDQ3LCJleHAiOjE1ODU4MTI1MDcsImlhdCI6MTU4NTgxMjQ0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b6ct1M9t3_IoOIjeDiX0c_oHbYejlBSoXajo7mQTzBI'} 
data={"escrowCompanyId": "001", "SELLERId": "cb15c8c7-88f3-41c9-9b25-02a97a675f9f", "STATUS": 1} 
json=None</msg>
<msg timestamp="20200402 12:57:32.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:31.546" endtime="20200402 12:57:32.056"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:32.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:32.056" endtime="20200402 12:57:32.057"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:31.540" endtime="20200402 12:57:32.057"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:32.060" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:32.060" endtime="20200402 12:57:32.061"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:32.061" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:32.061" endtime="20200402 12:57:32.061"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:32.062" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:32.061" endtime="20200402 12:57:32.062"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:32.063" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:32.062" endtime="20200402 12:57:32.064"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:32.065" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:32.064" endtime="20200402 12:57:32.065"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:32.068" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': 'cb15c8c7-88f3-41c9-9b25-02a97a675f9f', 'idNumber': '05893568385908', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8701625899', 'email': 'pavan48447@2c...</msg>
<status status="PASS" starttime="20200402 12:57:32.065" endtime="20200402 12:57:32.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:32.068" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHor...</msg>
<status status="PASS" starttime="20200402 12:57:32.068" endtime="20200402 12:57:32.068"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:32.070" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:32.069" endtime="20200402 12:57:32.070"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:32.070" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNG1TWnAyRjJidWdvdE5Mc2RraVIwWnd1ZHorclJXU0tmdVlneGtWU3p4RjlOaVhDZmp0NjBwZjg4QlpmOGYrQzUxenp3b3ZpMEFVWC9wYmc2eFRIWUU9IiwibmJmIjoxNTg1ODEyNDQ3LCJleHAiOjE1ODU4MTI1MDcsImlhdCI6MTU4NTgxMjQ0NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.b6ct1M9t3_IoOIjeDiX0c_oHbYejlBSoXajo7mQTzBI'} 
data={"escrowCompanyId": "001", "SELLERId": "cb15c8c7-88f3-41c9-9b25-02a97a675f9f", "idNumber": "05893568385908", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8701625899", "email": "pavan48447@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:32.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:32.070" endtime="20200402 12:57:32.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:32.303" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:57:32.302" endtime="20200402 12:57:32.303"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:32.303" endtime="20200402 12:57:32.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:32.304" endtime="20200402 12:57:32.305"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:32.057" endtime="20200402 12:57:32.305"></status>
</kw>
<doc>Valid: To check API response when sellerId parameter is entered Valid and request is sent with mandatory fields(when Seller Status is Active)</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:27.154" endtime="20200402 12:57:32.305" critical="yes"></status>
</test>
<test id="s1-t98" name="TC_114 UpdateSellerDetails with Locked SellerId and All valid data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:35.310" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:32.309" endtime="20200402 12:57:35.310"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.312" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:35.311" endtime="20200402 12:57:35.312"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:35.313" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:35.313" endtime="20200402 12:57:35.313"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:35.314" endtime="20200402 12:57:35.314"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:35.315" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:35.314" endtime="20200402 12:57:35.315"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:35.316" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:35.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:35.315" endtime="20200402 12:57:35.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:35.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:35.803" endtime="20200402 12:57:35.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.805" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFVYjlpcVE1RW0xK0E2K250c1pmSzUzNU5YR21iZ042WlNIU2FvREkxd3Axc2JtWGl2NXpGQlFuM3ozRjg9IiwibmJmIjoxNTg1ODEyNDUzLCJleHAiOjE1ODU4MTI1MTMsImlhdCI6MTU4NTgxMjQ1MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BHOo_ViuMqAM4LathdWbegpp47UEe4nTyUEWzP4yWXQ</msg>
<status status="PASS" starttime="20200402 12:57:35.804" endtime="20200402 12:57:35.805"></status>
</kw>
<msg timestamp="20200402 12:57:35.806" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFVYjlpcVE...</msg>
<status status="PASS" starttime="20200402 12:57:35.311" endtime="20200402 12:57:35.806"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:35.807" level="INFO">${mobile} = 3754207257</msg>
<status status="PASS" starttime="20200402 12:57:35.807" endtime="20200402 12:57:35.808"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.808" level="INFO">${mobileNo} = 3754207257</msg>
<status status="PASS" starttime="20200402 12:57:35.808" endtime="20200402 12:57:35.809"></status>
</kw>
<msg timestamp="20200402 12:57:35.809" level="INFO">${MobNo} = 3754207257</msg>
<status status="PASS" starttime="20200402 12:57:35.806" endtime="20200402 12:57:35.809"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:35.812" level="INFO">${Emailnum} = 16861</msg>
<status status="PASS" starttime="20200402 12:57:35.811" endtime="20200402 12:57:35.812"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.813" level="INFO">${enum} = 16861</msg>
<status status="PASS" starttime="20200402 12:57:35.812" endtime="20200402 12:57:35.813"></status>
</kw>
<msg timestamp="20200402 12:57:35.813" level="INFO">${num} = 16861</msg>
<status status="PASS" starttime="20200402 12:57:35.810" endtime="20200402 12:57:35.813"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:35.814" level="INFO">${emailid} = pavan16861@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:35.814" endtime="20200402 12:57:35.814"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.815" level="INFO">${email} = pavan16861@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:35.815" endtime="20200402 12:57:35.815"></status>
</kw>
<msg timestamp="20200402 12:57:35.816" level="INFO">${emailid} = pavan16861@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:35.810" endtime="20200402 12:57:35.816"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:35.818" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:35.818" endtime="20200402 12:57:35.819"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:35.820" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:35.819" endtime="20200402 12:57:35.820"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:35.820" endtime="20200402 12:57:35.821"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:35.822" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:35.821" endtime="20200402 12:57:35.822"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:35.823" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:37.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:35.822" endtime="20200402 12:57:37.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:37.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:37.326" endtime="20200402 12:57:37.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:37.328" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3A2TmNaV1pXVUdDbndGb0tPUU43WmFzaXBSQmhLTFh1cU02VVdaOU5KTEZJZjVhUitMYjJOZFUvQ2o1ZnFmZnBJbXUwNHdDSGdBQWZ3c1R0K2JuVUU9IiwibmJmIjoxNTg1ODEyNDU0LCJleHAiOjE1ODU4MTI1MTQsImlhdCI6MTU4NTgxMjQ1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BTNl2h5MmXXeEjswkHe1MRFSePjQ2UQQAvyeAQvVgTw</msg>
<status status="PASS" starttime="20200402 12:57:37.328" endtime="20200402 12:57:37.328"></status>
</kw>
<msg timestamp="20200402 12:57:37.329" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3A2TmNaV1pXVUdDbndGb0tPUU43WmFzaXBSQmhLTFh...</msg>
<status status="PASS" starttime="20200402 12:57:35.817" endtime="20200402 12:57:37.329"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:37.331" level="INFO">${Id} = 36960503549626</msg>
<status status="PASS" starttime="20200402 12:57:37.330" endtime="20200402 12:57:37.331"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:37.332" level="INFO">${IdNumber} = 36960503549626</msg>
<status status="PASS" starttime="20200402 12:57:37.331" endtime="20200402 12:57:37.332"></status>
</kw>
<msg timestamp="20200402 12:57:37.332" level="INFO">${idNum} = 36960503549626</msg>
<status status="PASS" starttime="20200402 12:57:37.329" endtime="20200402 12:57:37.332"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:37.334" level="INFO">${mobile} = 7153491574</msg>
<status status="PASS" starttime="20200402 12:57:37.333" endtime="20200402 12:57:37.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:37.335" level="INFO">${mobileNo} = 7153491574</msg>
<status status="PASS" starttime="20200402 12:57:37.334" endtime="20200402 12:57:37.335"></status>
</kw>
<msg timestamp="20200402 12:57:37.335" level="INFO">${MobNo} = 7153491574</msg>
<status status="PASS" starttime="20200402 12:57:37.332" endtime="20200402 12:57:37.335"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:37.337" level="INFO">${Emailnum} = 48406</msg>
<status status="PASS" starttime="20200402 12:57:37.337" endtime="20200402 12:57:37.337"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:37.338" level="INFO">${enum} = 48406</msg>
<status status="PASS" starttime="20200402 12:57:37.338" endtime="20200402 12:57:37.338"></status>
</kw>
<msg timestamp="20200402 12:57:37.339" level="INFO">${num} = 48406</msg>
<status status="PASS" starttime="20200402 12:57:37.336" endtime="20200402 12:57:37.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:37.340" level="INFO">${emailid} = pavan48406@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:37.339" endtime="20200402 12:57:37.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:37.341" level="INFO">${email} = pavan48406@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:37.340" endtime="20200402 12:57:37.341"></status>
</kw>
<msg timestamp="20200402 12:57:37.341" level="INFO">${emailid} = pavan48406@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:37.335" endtime="20200402 12:57:37.341"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:37.346" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:37.345" endtime="20200402 12:57:37.347"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:37.348" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:37.347" endtime="20200402 12:57:37.348"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:37.349" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:37.348" endtime="20200402 12:57:37.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:37.351" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:37.349" endtime="20200402 12:57:37.351"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:37.354" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:37.352" endtime="20200402 12:57:37.354"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:37.358" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '36960503549626', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7153491574', 'email': 'pavan48406@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:37.354" endtime="20200402 12:57:37.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:37.359" endtime="20200402 12:57:37.360"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:37.361" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3A2TmNaV1pXVUdDbndGb0tPUU43WmFzaXBS...</msg>
<status status="PASS" starttime="20200402 12:57:37.361" endtime="20200402 12:57:37.361"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:37.363" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:37.362" endtime="20200402 12:57:37.363"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:37.365" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QK3A2TmNaV1pXVUdDbndGb0tPUU43WmFzaXBSQmhLTFh1cU02VVdaOU5KTEZJZjVhUitMYjJOZFUvQ2o1ZnFmZnBJbXUwNHdDSGdBQWZ3c1R0K2JuVUU9IiwibmJmIjoxNTg1ODEyNDU0LCJleHAiOjE1ODU4MTI1MTQsImlhdCI6MTU4NTgxMjQ1NCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BTNl2h5MmXXeEjswkHe1MRFSePjQ2UQQAvyeAQvVgTw'} 
data={"escrowCompanyId": "001", "idNumber": "36960503549626", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7153491574", "email": "pavan48406@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:37.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:37.363" endtime="20200402 12:57:37.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:37.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:37.622" endtime="20200402 12:57:37.622"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:37.623" endtime="20200402 12:57:37.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:37.624" endtime="20200402 12:57:37.625"></status>
</kw>
<msg timestamp="20200402 12:57:37.625" level="INFO">${sellerid} = 9b04b522-dac1-4583-9d5f-567086e9d54a</msg>
<status status="PASS" starttime="20200402 12:57:37.342" endtime="20200402 12:57:37.625"></status>
</kw>
<msg timestamp="20200402 12:57:37.626" level="INFO">${SellerId} = 9b04b522-dac1-4583-9d5f-567086e9d54a</msg>
<msg timestamp="20200402 12:57:37.626" level="INFO">${idnumber} = 36960503549626</msg>
<status status="PASS" starttime="20200402 12:57:35.817" endtime="20200402 12:57:37.626"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${2}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:37.628" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:37.628" endtime="20200402 12:57:37.629"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:57:37.630" level="INFO">${STATUS1} = 2</msg>
<status status="PASS" starttime="20200402 12:57:37.629" endtime="20200402 12:57:37.630"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:37.631" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '9b04b522-dac1-4583-9d5f-567086e9d54a', 'STATUS': 2}</msg>
<status status="PASS" starttime="20200402 12:57:37.630" endtime="20200402 12:57:37.631"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:37.632" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFV...</msg>
<status status="PASS" starttime="20200402 12:57:37.632" endtime="20200402 12:57:37.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:37.633" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:37.633" endtime="20200402 12:57:37.633"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:37.635" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFVYjlpcVE1RW0xK0E2K250c1pmSzUzNU5YR21iZ042WlNIU2FvREkxd3Axc2JtWGl2NXpGQlFuM3ozRjg9IiwibmJmIjoxNTg1ODEyNDUzLCJleHAiOjE1ODU4MTI1MTMsImlhdCI6MTU4NTgxMjQ1MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BHOo_ViuMqAM4LathdWbegpp47UEe4nTyUEWzP4yWXQ'} 
data={"escrowCompanyId": "001", "SELLERId": "9b04b522-dac1-4583-9d5f-567086e9d54a", "STATUS": 2} 
json=None</msg>
<msg timestamp="20200402 12:57:38.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:37.634" endtime="20200402 12:57:38.182"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:38.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:38.182" endtime="20200402 12:57:38.183"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:37.626" endtime="20200402 12:57:38.183"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:38.190" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:38.189" endtime="20200402 12:57:38.191"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:38.192" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:38.191" endtime="20200402 12:57:38.192"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:38.193" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:38.192" endtime="20200402 12:57:38.193"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:38.195" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:38.193" endtime="20200402 12:57:38.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:38.197" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:38.196" endtime="20200402 12:57:38.198"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:38.202" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '9b04b522-dac1-4583-9d5f-567086e9d54a', 'idNumber': '36960503549626', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '3754207257', 'email': 'pavan16861@2c...</msg>
<status status="PASS" starttime="20200402 12:57:38.198" endtime="20200402 12:57:38.202"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:38.203" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFV...</msg>
<status status="PASS" starttime="20200402 12:57:38.203" endtime="20200402 12:57:38.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:38.204" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:38.204" endtime="20200402 12:57:38.205"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:38.206" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QNUZNUmlyMGkvVTdQK0RTbVVKWFdWZzF2UVFVYjlpcVE1RW0xK0E2K250c1pmSzUzNU5YR21iZ042WlNIU2FvREkxd3Axc2JtWGl2NXpGQlFuM3ozRjg9IiwibmJmIjoxNTg1ODEyNDUzLCJleHAiOjE1ODU4MTI1MTMsImlhdCI6MTU4NTgxMjQ1MywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.BHOo_ViuMqAM4LathdWbegpp47UEe4nTyUEWzP4yWXQ'} 
data={"escrowCompanyId": "001", "SELLERId": "9b04b522-dac1-4583-9d5f-567086e9d54a", "idNumber": "36960503549626", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "3754207257", "email": "pavan16861@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:38.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:38.205" endtime="20200402 12:57:38.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:38.450" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:57:38.450" endtime="20200402 12:57:38.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:38.451" endtime="20200402 12:57:38.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:38.452" endtime="20200402 12:57:38.452"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:38.185" endtime="20200402 12:57:38.452"></status>
</kw>
<doc>Valid: To check API response when sellerId parameter is entered Valid and request is sent with all valid fields(when Seller Status is Locked)</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:32.307" endtime="20200402 12:57:38.453" critical="yes"></status>
</test>
<test id="s1-t99" name="TC_115 UpdateSellerDetails with Suspended SellerId and All Valid Data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:41.458" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:38.456" endtime="20200402 12:57:41.458"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:41.459" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:41.459" endtime="20200402 12:57:41.460"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:41.461" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:41.460" endtime="20200402 12:57:41.461"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:41.461" endtime="20200402 12:57:41.461"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:41.462" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:41.461" endtime="20200402 12:57:41.462"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:41.463" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:42.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:41.462" endtime="20200402 12:57:42.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:42.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.094" endtime="20200402 12:57:42.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.095" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpXUWJLVEp2Zk1oRi9GMVUzNjlXdEVWMXBhSGV6T3BCRUJHSEJKR0JFVFJ6SjNhdXlJeUJ1d3M5REZNYVk9IiwibmJmIjoxNTg1ODEyNDU5LCJleHAiOjE1ODU4MTI1MTksImlhdCI6MTU4NTgxMjQ1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JGOvsJNZlmLXS24JwIF3FUVn4HCclVAGkC2IpZWYoN4</msg>
<status status="PASS" starttime="20200402 12:57:42.095" endtime="20200402 12:57:42.095"></status>
</kw>
<msg timestamp="20200402 12:57:42.096" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpXUWJLVEp...</msg>
<status status="PASS" starttime="20200402 12:57:41.458" endtime="20200402 12:57:42.096"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:42.098" level="INFO">${mobile} = 7609610051</msg>
<status status="PASS" starttime="20200402 12:57:42.097" endtime="20200402 12:57:42.098"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.098" level="INFO">${mobileNo} = 7609610051</msg>
<status status="PASS" starttime="20200402 12:57:42.098" endtime="20200402 12:57:42.098"></status>
</kw>
<msg timestamp="20200402 12:57:42.098" level="INFO">${MobNo} = 7609610051</msg>
<status status="PASS" starttime="20200402 12:57:42.097" endtime="20200402 12:57:42.098"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:42.100" level="INFO">${Emailnum} = 20421</msg>
<status status="PASS" starttime="20200402 12:57:42.100" endtime="20200402 12:57:42.100"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.101" level="INFO">${enum} = 20421</msg>
<status status="PASS" starttime="20200402 12:57:42.100" endtime="20200402 12:57:42.101"></status>
</kw>
<msg timestamp="20200402 12:57:42.101" level="INFO">${num} = 20421</msg>
<status status="PASS" starttime="20200402 12:57:42.099" endtime="20200402 12:57:42.101"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:42.101" level="INFO">${emailid} = pavan20421@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.101" endtime="20200402 12:57:42.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.102" level="INFO">${email} = pavan20421@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.102" endtime="20200402 12:57:42.102"></status>
</kw>
<msg timestamp="20200402 12:57:42.102" level="INFO">${emailid} = pavan20421@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.099" endtime="20200402 12:57:42.102"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.104" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:42.104" endtime="20200402 12:57:42.105"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:42.105" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:42.105" endtime="20200402 12:57:42.105"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:42.105" endtime="20200402 12:57:42.106"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:42.106" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:42.106" endtime="20200402 12:57:42.106"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:42.107" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:42.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.107" endtime="20200402 12:57:42.581"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:42.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.581" endtime="20200402 12:57:42.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.583" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd21hY3AweUdkVXVPSXFjMkVmMElyR3hBcHNjY1hOMFNIV0J0UHBjTHBKd1MybWJzRE1RY1J4TEx3djV4aHV6NWNSZXRGMDNodG5iR0FrZkJPc0Vra1E9IiwibmJmIjoxNTg1ODEyNDYwLCJleHAiOjE1ODU4MTI1MjAsImlhdCI6MTU4NTgxMjQ2MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.s_gcL0vdq7goL-f3GU-Z8zM2rOFzj1RA0tdSHhB7Sxk</msg>
<status status="PASS" starttime="20200402 12:57:42.582" endtime="20200402 12:57:42.583"></status>
</kw>
<msg timestamp="20200402 12:57:42.584" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd21hY3AweUdkVXVPSXFjMkVmMElyR3hBcHNjY1hOMFN...</msg>
<status status="PASS" starttime="20200402 12:57:42.103" endtime="20200402 12:57:42.584"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:42.585" level="INFO">${Id} = 73489698576514</msg>
<status status="PASS" starttime="20200402 12:57:42.585" endtime="20200402 12:57:42.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.586" level="INFO">${IdNumber} = 73489698576514</msg>
<status status="PASS" starttime="20200402 12:57:42.586" endtime="20200402 12:57:42.586"></status>
</kw>
<msg timestamp="20200402 12:57:42.586" level="INFO">${idNum} = 73489698576514</msg>
<status status="PASS" starttime="20200402 12:57:42.584" endtime="20200402 12:57:42.586"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:42.588" level="INFO">${mobile} = 8840123099</msg>
<status status="PASS" starttime="20200402 12:57:42.587" endtime="20200402 12:57:42.588"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.588" level="INFO">${mobileNo} = 8840123099</msg>
<status status="PASS" starttime="20200402 12:57:42.588" endtime="20200402 12:57:42.589"></status>
</kw>
<msg timestamp="20200402 12:57:42.589" level="INFO">${MobNo} = 8840123099</msg>
<status status="PASS" starttime="20200402 12:57:42.587" endtime="20200402 12:57:42.589"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:42.591" level="INFO">${Emailnum} = 81613</msg>
<status status="PASS" starttime="20200402 12:57:42.591" endtime="20200402 12:57:42.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.592" level="INFO">${enum} = 81613</msg>
<status status="PASS" starttime="20200402 12:57:42.592" endtime="20200402 12:57:42.592"></status>
</kw>
<msg timestamp="20200402 12:57:42.593" level="INFO">${num} = 81613</msg>
<status status="PASS" starttime="20200402 12:57:42.590" endtime="20200402 12:57:42.593"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:42.593" level="INFO">${emailid} = pavan81613@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.593" endtime="20200402 12:57:42.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:42.594" level="INFO">${email} = pavan81613@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.594" endtime="20200402 12:57:42.594"></status>
</kw>
<msg timestamp="20200402 12:57:42.594" level="INFO">${emailid} = pavan81613@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:42.589" endtime="20200402 12:57:42.595"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:42.598" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:42.598" endtime="20200402 12:57:42.599"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:42.600" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:42.599" endtime="20200402 12:57:42.600"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:42.601" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:42.600" endtime="20200402 12:57:42.601"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:42.603" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:42.601" endtime="20200402 12:57:42.604"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:42.606" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:42.604" endtime="20200402 12:57:42.606"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:42.611" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '73489698576514', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '8840123099', 'email': 'pavan81613@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:42.607" endtime="20200402 12:57:42.611"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:42.611" endtime="20200402 12:57:42.612"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:42.613" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd21hY3AweUdkVXVPSXFjMkVmMElyR3hBcHNj...</msg>
<status status="PASS" starttime="20200402 12:57:42.613" endtime="20200402 12:57:42.613"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:42.614" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:42.614" endtime="20200402 12:57:42.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:42.615" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd21hY3AweUdkVXVPSXFjMkVmMElyR3hBcHNjY1hOMFNIV0J0UHBjTHBKd1MybWJzRE1RY1J4TEx3djV4aHV6NWNSZXRGMDNodG5iR0FrZkJPc0Vra1E9IiwibmJmIjoxNTg1ODEyNDYwLCJleHAiOjE1ODU4MTI1MjAsImlhdCI6MTU4NTgxMjQ2MCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.s_gcL0vdq7goL-f3GU-Z8zM2rOFzj1RA0tdSHhB7Sxk'} 
data={"escrowCompanyId": "001", "idNumber": "73489698576514", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "8840123099", "email": "pavan81613@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:42.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.615" endtime="20200402 12:57:42.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:42.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.915" endtime="20200402 12:57:42.915"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:42.916" endtime="20200402 12:57:42.916"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:42.916" endtime="20200402 12:57:42.917"></status>
</kw>
<msg timestamp="20200402 12:57:42.917" level="INFO">${sellerid} = 4cc3cdaa-fd72-4b55-b793-1f75c403b34e</msg>
<status status="PASS" starttime="20200402 12:57:42.595" endtime="20200402 12:57:42.917"></status>
</kw>
<msg timestamp="20200402 12:57:42.918" level="INFO">${SellerId} = 4cc3cdaa-fd72-4b55-b793-1f75c403b34e</msg>
<msg timestamp="20200402 12:57:42.918" level="INFO">${idnumber} = 73489698576514</msg>
<status status="PASS" starttime="20200402 12:57:42.103" endtime="20200402 12:57:42.918"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${3}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:42.919" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:42.919" endtime="20200402 12:57:42.920"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:57:42.921" level="INFO">${STATUS1} = 3</msg>
<status status="PASS" starttime="20200402 12:57:42.920" endtime="20200402 12:57:42.921"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:42.921" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4cc3cdaa-fd72-4b55-b793-1f75c403b34e', 'STATUS': 3}</msg>
<status status="PASS" starttime="20200402 12:57:42.921" endtime="20200402 12:57:42.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:42.922" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpX...</msg>
<status status="PASS" starttime="20200402 12:57:42.922" endtime="20200402 12:57:42.922"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:42.923" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:42.922" endtime="20200402 12:57:42.923"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:42.924" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpXUWJLVEp2Zk1oRi9GMVUzNjlXdEVWMXBhSGV6T3BCRUJHSEJKR0JFVFJ6SjNhdXlJeUJ1d3M5REZNYVk9IiwibmJmIjoxNTg1ODEyNDU5LCJleHAiOjE1ODU4MTI1MTksImlhdCI6MTU4NTgxMjQ1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JGOvsJNZlmLXS24JwIF3FUVn4HCclVAGkC2IpZWYoN4'} 
data={"escrowCompanyId": "001", "SELLERId": "4cc3cdaa-fd72-4b55-b793-1f75c403b34e", "STATUS": 3} 
json=None</msg>
<msg timestamp="20200402 12:57:43.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:42.923" endtime="20200402 12:57:43.463"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:43.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:43.464" endtime="20200402 12:57:43.464"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:42.918" endtime="20200402 12:57:43.464"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:43.467" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:43.467" endtime="20200402 12:57:43.468"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:43.468" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:43.468" endtime="20200402 12:57:43.468"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:43.469" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:43.469" endtime="20200402 12:57:43.469"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:43.471" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:43.470" endtime="20200402 12:57:43.471"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:43.473" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:43.471" endtime="20200402 12:57:43.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:43.476" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '4cc3cdaa-fd72-4b55-b793-1f75c403b34e', 'idNumber': '73489698576514', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '7609610051', 'email': 'pavan20421@2c...</msg>
<status status="PASS" starttime="20200402 12:57:43.473" endtime="20200402 12:57:43.476"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:43.477" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpX...</msg>
<status status="PASS" starttime="20200402 12:57:43.477" endtime="20200402 12:57:43.477"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:43.478" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:43.477" endtime="20200402 12:57:43.478"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:43.478" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QOXBVR1hrejl3V2RDZ2ljajVnMnlSUFM4aWpXUWJLVEp2Zk1oRi9GMVUzNjlXdEVWMXBhSGV6T3BCRUJHSEJKR0JFVFJ6SjNhdXlJeUJ1d3M5REZNYVk9IiwibmJmIjoxNTg1ODEyNDU5LCJleHAiOjE1ODU4MTI1MTksImlhdCI6MTU4NTgxMjQ1OSwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.JGOvsJNZlmLXS24JwIF3FUVn4HCclVAGkC2IpZWYoN4'} 
data={"escrowCompanyId": "001", "SELLERId": "4cc3cdaa-fd72-4b55-b793-1f75c403b34e", "idNumber": "73489698576514", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "7609610051", "email": "pavan20421@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:44.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:43.478" endtime="20200402 12:57:44.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:44.736" level="INFO">{"responseCode":"000","resDescription":"Success"}</msg>
<status status="PASS" starttime="20200402 12:57:44.736" endtime="20200402 12:57:44.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:44.737" endtime="20200402 12:57:44.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:44.738" endtime="20200402 12:57:44.738"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:43.465" endtime="20200402 12:57:44.738"></status>
</kw>
<doc>Valid: To check API response when sellerId parameter is entered Valid and request is sent with all valid fields(when Seller Status is Suspended)</doc>
<tags>
<tag>000</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:38.454" endtime="20200402 12:57:44.739" critical="yes"></status>
</test>
<test id="s1-t100" name="TC_116 UpdateSellerDetails with Terminated SellerId and All Valid Data">
<kw name="Sleep" library="BuiltIn" type="setup">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 12:57:47.742" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200402 12:57:44.741" endtime="20200402 12:57:47.742"></status>
</kw>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:47.744" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:47.743" endtime="20200402 12:57:47.744"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:47.744" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:47.744" endtime="20200402 12:57:47.745"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:47.745" endtime="20200402 12:57:47.745"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:47.746" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:47.746" endtime="20200402 12:57:47.746"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:47.747" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:50.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:47.746" endtime="20200402 12:57:50.389"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:50.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.390" endtime="20200402 12:57:50.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.392" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gvaHZqT0JkSjdoREJFY0VhRGNvSm9UY2tsa1hpZTlBeDcxSnFmaDltSnJxNEhyS2RXM1JFR1YvczNldTQ9IiwibmJmIjoxNTg1ODEyNDY3LCJleHAiOjE1ODU4MTI1MjcsImlhdCI6MTU4NTgxMjQ2NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HXj14qc9SOjxs6C79yjjjKQgWTupUinQg0aqfw0bCA4</msg>
<status status="PASS" starttime="20200402 12:57:50.391" endtime="20200402 12:57:50.392"></status>
</kw>
<msg timestamp="20200402 12:57:50.392" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gvaHZqT0J...</msg>
<status status="PASS" starttime="20200402 12:57:47.742" endtime="20200402 12:57:50.393"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:50.395" level="INFO">${mobile} = 1465082918</msg>
<status status="PASS" starttime="20200402 12:57:50.395" endtime="20200402 12:57:50.395"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.396" level="INFO">${mobileNo} = 1465082918</msg>
<status status="PASS" starttime="20200402 12:57:50.396" endtime="20200402 12:57:50.397"></status>
</kw>
<msg timestamp="20200402 12:57:50.397" level="INFO">${MobNo} = 1465082918</msg>
<status status="PASS" starttime="20200402 12:57:50.394" endtime="20200402 12:57:50.397"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:50.399" level="INFO">${Emailnum} = 68403</msg>
<status status="PASS" starttime="20200402 12:57:50.398" endtime="20200402 12:57:50.399"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.400" level="INFO">${enum} = 68403</msg>
<status status="PASS" starttime="20200402 12:57:50.400" endtime="20200402 12:57:50.400"></status>
</kw>
<msg timestamp="20200402 12:57:50.401" level="INFO">${num} = 68403</msg>
<status status="PASS" starttime="20200402 12:57:50.398" endtime="20200402 12:57:50.401"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:50.402" level="INFO">${emailid} = pavan68403@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.401" endtime="20200402 12:57:50.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.403" level="INFO">${email} = pavan68403@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.402" endtime="20200402 12:57:50.403"></status>
</kw>
<msg timestamp="20200402 12:57:50.404" level="INFO">${emailid} = pavan68403@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.397" endtime="20200402 12:57:50.404"></status>
</kw>
<kw name="RegisterSellerID" library="Register_Global_Keywords">
<assign>
<var>${SellerId}</var>
<var>${idnumber}</var>
</assign>
<kw name="GetToken Escrow" library="Get Token">
<assign>
<var>${TokenEscrow}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Session</arg>
<arg>${URLEscrowAuthUAT}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.407" level="INFO">Creating Session using : alias=Session, url=http://172.31.2.28/escrow_core/api/v1/Authentication/oauth2, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:50.406" endtime="20200402 12:57:50.407"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:50.408" level="INFO">${header} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20200402 12:57:50.408" endtime="20200402 12:57:50.409"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${header}</arg>
<arg>Authorization</arg>
<arg>Basic ${Client_authKey}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:50.409" endtime="20200402 12:57:50.410"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>grant_type=client_credentials</arg>
</arguments>
<assign>
<var>${Body}</var>
</assign>
<msg timestamp="20200402 12:57:50.411" level="INFO">${Body} = {'grant_type': 'client_credentials'}</msg>
<status status="PASS" starttime="20200402 12:57:50.410" endtime="20200402 12:57:50.411"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Session</arg>
<arg>/token</arg>
<arg>data=${Body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:50.413" level="INFO">POST Request using : uri=/token, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic MDAxOmthaWRlZVNlY3JldEtleVRlc3Q='} 
data=grant_type=client_credentials 
json=None</msg>
<msg timestamp="20200402 12:57:50.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.412" endtime="20200402 12:57:50.608"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:50.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.609" endtime="20200402 12:57:50.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()['accessToken']}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.611" level="INFO">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ltYkljZ09vWEE3dlZGdWpJNG9iS1oyWmJvLzF1Y2U0bXNPUTdReHNScFl6ZlJhaG4wS2dKdThCM1BLRk0xVzdHYTg3MTZ4QmtVd0kweW1TbkxwZ3c9IiwibmJmIjoxNTg1ODEyNDY4LCJleHAiOjE1ODU4MTI1MjgsImlhdCI6MTU4NTgxMjQ2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.oNqu92f4gVuiiBd3AQtnBWWD5ru_dnNaiYInspqJ4Lg</msg>
<status status="PASS" starttime="20200402 12:57:50.610" endtime="20200402 12:57:50.611"></status>
</kw>
<msg timestamp="20200402 12:57:50.611" level="INFO">${TokenEscrow} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ltYkljZ09vWEE3dlZGdWpJNG9iS1oyWmJvLzF1Y2U...</msg>
<status status="PASS" starttime="20200402 12:57:50.405" endtime="20200402 12:57:50.611"></status>
</kw>
<kw name="Randome_IDNumber" library="Register_Global_Keywords">
<assign>
<var>${idNum}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>14</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Id}</var>
</assign>
<msg timestamp="20200402 12:57:50.613" level="INFO">${Id} = 32738613226855</msg>
<status status="PASS" starttime="20200402 12:57:50.612" endtime="20200402 12:57:50.613"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${IdNumber}</arg>
<arg>${Id}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.614" level="INFO">${IdNumber} = 32738613226855</msg>
<status status="PASS" starttime="20200402 12:57:50.614" endtime="20200402 12:57:50.614"></status>
</kw>
<msg timestamp="20200402 12:57:50.615" level="INFO">${idNum} = 32738613226855</msg>
<status status="PASS" starttime="20200402 12:57:50.612" endtime="20200402 12:57:50.615"></status>
</kw>
<kw name="Randome_MobileNumber" library="Register_Global_Keywords">
<assign>
<var>${MobNo}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${mobile}</var>
</assign>
<msg timestamp="20200402 12:57:50.616" level="INFO">${mobile} = 4025106690</msg>
<status status="PASS" starttime="20200402 12:57:50.616" endtime="20200402 12:57:50.616"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${mobileNo}</arg>
<arg>${mobile}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.618" level="INFO">${mobileNo} = 4025106690</msg>
<status status="PASS" starttime="20200402 12:57:50.617" endtime="20200402 12:57:50.618"></status>
</kw>
<msg timestamp="20200402 12:57:50.618" level="INFO">${MobNo} = 4025106690</msg>
<status status="PASS" starttime="20200402 12:57:50.615" endtime="20200402 12:57:50.618"></status>
</kw>
<kw name="Randome_EmailId" library="Register_Global_Keywords">
<assign>
<var>${emailid}</var>
</assign>
<kw name="Randome_Number" library="Register_Global_Keywords">
<assign>
<var>${num}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Emailnum}</var>
</assign>
<msg timestamp="20200402 12:57:50.621" level="INFO">${Emailnum} = 06100</msg>
<status status="PASS" starttime="20200402 12:57:50.620" endtime="20200402 12:57:50.621"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enum}</arg>
<arg>${Emailnum}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.622" level="INFO">${enum} = 06100</msg>
<status status="PASS" starttime="20200402 12:57:50.621" endtime="20200402 12:57:50.622"></status>
</kw>
<msg timestamp="20200402 12:57:50.622" level="INFO">${num} = 06100</msg>
<status status="PASS" starttime="20200402 12:57:50.619" endtime="20200402 12:57:50.622"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>pavan${num}@2c2p.com</arg>
</arguments>
<assign>
<var>${emailid}</var>
</assign>
<msg timestamp="20200402 12:57:50.623" level="INFO">${emailid} = pavan06100@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.623" endtime="20200402 12:57:50.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${email}</arg>
<arg>${emailid}</arg>
</arguments>
<msg timestamp="20200402 12:57:50.624" level="INFO">${email} = pavan06100@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.624" endtime="20200402 12:57:50.624"></status>
</kw>
<msg timestamp="20200402 12:57:50.625" level="INFO">${emailid} = pavan06100@2c2p.com</msg>
<status status="PASS" starttime="20200402 12:57:50.619" endtime="20200402 12:57:50.625"></status>
</kw>
<kw name="RegisterSeller with valid Data" library="Register_Seller_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${idNum}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>000</arg>
<arg>Success</arg>
</arguments>
<assign>
<var>${sellerid}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:50.629" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:50.628" endtime="20200402 12:57:50.629"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:50.630" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:50.629" endtime="20200402 12:57:50.630"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:50.630" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:50.630" endtime="20200402 12:57:50.630"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:50.632" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:50.631" endtime="20200402 12:57:50.632"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:50.635" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:50.633" endtime="20200402 12:57:50.636"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${MobCountryCode}</arg>
<arg>mobileNo=${MobNo}</arg>
<arg>email=${emailid}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:50.640" level="INFO">${body} = {'escrowCompanyId': '001', 'idNumber': '32738613226855', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '4025106690', 'email': 'pavan06100@2c2p.com', 'gender': 'M', 'titleEn': 'MR.', 'firstName...</msg>
<status status="PASS" starttime="20200402 12:57:50.636" endtime="20200402 12:57:50.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:50.640" endtime="20200402 12:57:50.641"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:50.642" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ltYkljZ09vWEE3dlZGdWpJNG9iS1oyWmJv...</msg>
<status status="PASS" starttime="20200402 12:57:50.642" endtime="20200402 12:57:50.642"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:50.643" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:50.643" endtime="20200402 12:57:50.643"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/register</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:50.644" level="INFO">POST Request using : uri=/seller/register, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9Qd2ltYkljZ09vWEE3dlZGdWpJNG9iS1oyWmJvLzF1Y2U0bXNPUTdReHNScFl6ZlJhaG4wS2dKdThCM1BLRk0xVzdHYTg3MTZ4QmtVd0kweW1TbkxwZ3c9IiwibmJmIjoxNTg1ODEyNDY4LCJleHAiOjE1ODU4MTI1MjgsImlhdCI6MTU4NTgxMjQ2OCwiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.oNqu92f4gVuiiBd3AQtnBWWD5ru_dnNaiYInspqJ4Lg'} 
data={"escrowCompanyId": "001", "idNumber": "32738613226855", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "4025106690", "email": "pavan06100@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:50.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.644" endtime="20200402 12:57:50.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:50.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.957" endtime="20200402 12:57:50.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:50.958" endtime="20200402 12:57:50.959"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:50.960" endtime="20200402 12:57:50.961"></status>
</kw>
<msg timestamp="20200402 12:57:50.961" level="INFO">${sellerid} = 3c20b2d3-7e4a-4a5d-9631-5865768f3126</msg>
<status status="PASS" starttime="20200402 12:57:50.625" endtime="20200402 12:57:50.961"></status>
</kw>
<msg timestamp="20200402 12:57:50.962" level="INFO">${SellerId} = 3c20b2d3-7e4a-4a5d-9631-5865768f3126</msg>
<msg timestamp="20200402 12:57:50.962" level="INFO">${idnumber} = 32738613226855</msg>
<status status="PASS" starttime="20200402 12:57:50.404" endtime="20200402 12:57:50.962"></status>
</kw>
<kw name="UpdateSeller to convert" library="UpdateSeller_Status_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{escrowCompId}[0]</arg>
<arg>${SellerId}</arg>
<arg>${4}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:50.963" level="INFO">Creating Session using : alias=UpdateSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:50.963" endtime="20200402 12:57:50.964"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<assign>
<var>${STATUS1}</var>
</assign>
<msg timestamp="20200402 12:57:50.964" level="INFO">${STATUS1} = 4</msg>
<status status="PASS" starttime="20200402 12:57:50.964" endtime="20200402 12:57:50.965"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>STATUS=${STATUS1}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:50.965" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '3c20b2d3-7e4a-4a5d-9631-5865768f3126', 'STATUS': 4}</msg>
<status status="PASS" starttime="20200402 12:57:50.965" endtime="20200402 12:57:50.965"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:50.966" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gv...</msg>
<status status="PASS" starttime="20200402 12:57:50.966" endtime="20200402 12:57:50.966"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:50.967" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:50.966" endtime="20200402 12:57:50.967"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>UpdateSeller</arg>
<arg>/seller/updatestatus</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:50.968" level="INFO">POST Request using : uri=/seller/updatestatus, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gvaHZqT0JkSjdoREJFY0VhRGNvSm9UY2tsa1hpZTlBeDcxSnFmaDltSnJxNEhyS2RXM1JFR1YvczNldTQ9IiwibmJmIjoxNTg1ODEyNDY3LCJleHAiOjE1ODU4MTI1MjcsImlhdCI6MTU4NTgxMjQ2NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HXj14qc9SOjxs6C79yjjjKQgWTupUinQg0aqfw0bCA4'} 
data={"escrowCompanyId": "001", "SELLERId": "3c20b2d3-7e4a-4a5d-9631-5865768f3126", "STATUS": 4} 
json=None</msg>
<msg timestamp="20200402 12:57:51.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:50.967" endtime="20200402 12:57:51.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200402 12:57:51.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200402 12:57:51.496" endtime="20200402 12:57:51.496"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:50.962" endtime="20200402 12:57:51.497"></status>
</kw>
<kw name="UpdateSeller with valid Data" library="UpdateSellerDetails_API">
<arguments>
<arg>${TokenEscrow}</arg>
<arg>@{valid_mobile_country_code}[0]</arg>
<arg>${SellerId}</arg>
<arg>${idnumber}</arg>
<arg>${3}</arg>
<arg>@{valid_mobile_country_code}[1]</arg>
<arg>${MobNo}</arg>
<arg>${emailid}</arg>
<arg>M</arg>
<arg>@{RegisterSellerData}[0]</arg>
<arg>@{RegisterSellerData}[1]</arg>
<arg>@{RegisterSellerData}[2]</arg>
<arg>@{RegisterSellerData}[3]</arg>
<arg>@{RegisterSellerData}[4]</arg>
<arg>@{RegisterSellerData}[5]</arg>
<arg>@{RegisterSellerData}[6]</arg>
<arg>@{v_nationalityId}</arg>
<arg>@{RegisterSellerData}[7]</arg>
<arg>@{RegisterSellerData}[8]</arg>
<arg>@{RegisterSellerData}[9]</arg>
<arg>@{RegisterSellerData}[10]</arg>
<arg>@{RegisterSellerData}[11]</arg>
<arg>@{RegisterSellerData}[12]</arg>
<arg>@{RegisterSellerData}[13]</arg>
<arg>${0}</arg>
<arg>E03</arg>
<arg>Invalid request</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>http://172.31.2.28/escrow_core/api/v1</arg>
</arguments>
<msg timestamp="20200402 12:57:51.502" level="INFO">Creating Session using : alias=RegisterNewSeller, url=http://172.31.2.28/escrow_core/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200402 12:57:51.502" endtime="20200402 12:57:51.503"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${typeOfID}</arg>
</arguments>
<assign>
<var>${typeID}</var>
</assign>
<msg timestamp="20200402 12:57:51.504" level="INFO">${typeID} = 3</msg>
<status status="PASS" starttime="20200402 12:57:51.503" endtime="20200402 12:57:51.504"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${kycRequest}</arg>
</arguments>
<assign>
<var>${KeyReq}</var>
</assign>
<msg timestamp="20200402 12:57:51.506" level="INFO">${KeyReq} = 0</msg>
<status status="PASS" starttime="20200402 12:57:51.505" endtime="20200402 12:57:51.506"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>homeAddress1=@{Address}[0]</arg>
<arg>homeAddress2=@{Address}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{Address}[3]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{Address}[5]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${UserAddress}</var>
</assign>
<msg timestamp="20200402 12:57:51.508" level="INFO">${UserAddress} = {'homeAddress1': 'homeaddr1', 'homeAddress2': 'homeaddr2', 'countryId': '764', 'stateId': '001', 'state': 'Bangkok', 'postalCode': '10100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:51.506" endtime="20200402 12:57:51.509"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>mailAddress1=@{MailingAddress}[0]</arg>
<arg>mailAddress2=@{MailingAddress}[1]</arg>
<arg>countryId=@{Address}[2]</arg>
<arg>stateId=@{MailingAddress}[2]</arg>
<arg>state=@{Address}[4]</arg>
<arg>postalCode=@{MailingAddress}[3]</arg>
<arg>addressDefine1=@{Address}[6]</arg>
<arg>addressDefine2=@{Address}[7]</arg>
<arg>addressDefine3=@{Address}[8]</arg>
<arg>addressDefine4=@{Address}[9]</arg>
</arguments>
<assign>
<var>${MailAddress}</var>
</assign>
<msg timestamp="20200402 12:57:51.512" level="INFO">${MailAddress} = {'mailAddress1': 'mailaddr1', 'mailAddress2': 'mailaddr2', 'countryId': '764', 'stateId': '002', 'state': 'Bangkok', 'postalCode': '11100', 'addressDefine1': 'addrdef1', 'addressDefine2': 'addrdef2', ...</msg>
<status status="PASS" starttime="20200402 12:57:51.509" endtime="20200402 12:57:51.512"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>escrowCompanyId=${escrowCompanyID}</arg>
<arg>SELLERId=${SELLERId}</arg>
<arg>idNumber=${idNumber}</arg>
<arg>typeOfId=${typeID}</arg>
<arg>mobileCountryCode=${mobileCountryCode}</arg>
<arg>mobileNo=${mobileNo}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>titleEn=${EnTitle}</arg>
<arg>firstNameEn=${EnFirstName}</arg>
<arg>lastNameEn=${EnLastName}</arg>
<arg>titleLocal=${LocalTitle}</arg>
<arg>firstNameLocal=${LocalFistName}</arg>
<arg>lastNameLocal=${LocalLastName}</arg>
<arg>dateOfBirth=${dob}</arg>
<arg>nationalityId=${Nationality}</arg>
<arg>otherVerification=${Verification}</arg>
<arg>workPlace=${WorkPlace}</arg>
<arg>userDefine1=${UserDef1}</arg>
<arg>userDefine2=${UserDef2}</arg>
<arg>userDefine3=${UserDef3}</arg>
<arg>userDefine4=${UserDef4}</arg>
<arg>userDefine5=${UserDef5}</arg>
<arg>kycRequest=${KeyReq}</arg>
<arg>address=${UserAddress}</arg>
<arg>mailingAddress=${MailAddress}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200402 12:57:51.517" level="INFO">${body} = {'escrowCompanyId': '001', 'SELLERId': '3c20b2d3-7e4a-4a5d-9631-5865768f3126', 'idNumber': '32738613226855', 'typeOfId': 3, 'mobileCountryCode': '67', 'mobileNo': '1465082918', 'email': 'pavan68403@2c...</msg>
<status status="PASS" starttime="20200402 12:57:51.512" endtime="20200402 12:57:51.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>bearer ${Token}</arg>
</arguments>
<assign>
<var>${AuthToken}</var>
</assign>
<msg timestamp="20200402 12:57:51.519" level="INFO">${AuthToken} = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gv...</msg>
<status status="PASS" starttime="20200402 12:57:51.518" endtime="20200402 12:57:51.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${AuthToken}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200402 12:57:51.521" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srb...</msg>
<status status="PASS" starttime="20200402 12:57:51.520" endtime="20200402 12:57:51.521"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>RegisterNewSeller</arg>
<arg>/seller/updatedetail</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200402 12:57:51.522" level="INFO">POST Request using : uri=/seller/updatedetail, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.23.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3VzZXJkYXRhIjoiOTE1b2srbFFFM2Ird3ZBU1hsdE9QeFFPYTExRXBuWUwwckt5T3JodWJpNzFMb0gvaHZqT0JkSjdoREJFY0VhRGNvSm9UY2tsa1hpZTlBeDcxSnFmaDltSnJxNEhyS2RXM1JFR1YvczNldTQ9IiwibmJmIjoxNTg1ODEyNDY3LCJleHAiOjE1ODU4MTI1MjcsImlhdCI6MTU4NTgxMjQ2NywiaXNzIjoiZXNjcm93LWNvcmUtYXBpIiwiYXVkIjoiZXNjcm93LWNvcmUtY2xpZW50In0.HXj14qc9SOjxs6C79yjjjKQgWTupUinQg0aqfw0bCA4'} 
data={"escrowCompanyId": "001", "SELLERId": "3c20b2d3-7e4a-4a5d-9631-5865768f3126", "idNumber": "32738613226855", "typeOfId": 3, "mobileCountryCode": "67", "mobileNo": "1465082918", "email": "pavan68403@2c2p.com", "gender": "M", "titleEn": "MR.", "firstNameEn": "Pavan", "lastNameEn": "Powar", "titleLocal": "\u0e19\u0e32\u0e22", "firstNameLocal": "\u0e2a\u0e21\u0e0a\u0e32\u0e22", "lastNameLocal": "\u0e02\u0e32\u0e22\u0e14\u0e35", "dateOfBirth": "20/02/1991", "nationalityId": "764", "otherVerification": "SM0928716357", "workPlace": "pavantest", "userDefine1": "UserDef1", "userDefine2": "UserDef2", "userDefine3": "UserDef3", "userDefine4": "UserDef4", "userDefine5": "UserDef5", "kycRequest": 0, "address": {"homeAddress1": "homeaddr1", "homeAddress2": "homeaddr2", "countryId": "764", "stateId": "001", "state": "Bangkok", "postalCode": "10100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}, "mailingAddress": {"mailAddress1": "mailaddr1", "mailAddress2": "mailaddr2", "countryId": "764", "stateId": "002", "state": "Bangkok", "postalCode": "11100", "addressDefine1": "addrdef1", "addressDefine2": "addrdef2", "addressDefine3": "addrdef3", "addressDefine4": "addrdef4"}} 
json=None</msg>
<msg timestamp="20200402 12:57:51.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200402 12:57:51.521" endtime="20200402 12:57:51.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.text}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20200402 12:57:51.732" level="INFO">{"responseCode":"E03","resDescription":"Invalid request"}</msg>
<status status="PASS" starttime="20200402 12:57:51.731" endtime="20200402 12:57:51.732"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['responseCode']}</arg>
<arg>${ResponseCode}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:51.733" endtime="20200402 12:57:51.733"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.json()['resDescription']}</arg>
<arg>${ResponseDescription}</arg>
</arguments>
<status status="PASS" starttime="20200402 12:57:51.734" endtime="20200402 12:57:51.735"></status>
</kw>
<status status="PASS" starttime="20200402 12:57:51.498" endtime="20200402 12:57:51.735"></status>
</kw>
<doc>Valid: To check API response when sellerId parameter is entered Valid and request is sent with all valid fields(when Seller Status is Terminated)</doc>
<tags>
<tag>E03</tag>
</tags>
<status status="PASS" starttime="20200402 12:57:44.740" endtime="20200402 12:57:51.736" critical="yes"></status>
</test>
<status status="FAIL" starttime="20200402 12:45:01.510" endtime="20200402 12:57:51.762"></status>
</suite>
<statistics>
<total>
<stat pass="95" fail="5">Critical Tests</stat>
<stat pass="95" fail="5">All Tests</stat>
</total>
<tag>
<stat pass="50" fail="5">000</stat>
<stat pass="9" fail="0">E03</stat>
<stat pass="1" fail="0">E04</stat>
<stat pass="11" fail="0">E05</stat>
<stat pass="12" fail="0">E11</stat>
<stat pass="8" fail="0">R01</stat>
<stat pass="1" fail="0">R02</stat>
<stat pass="3" fail="0">U01</stat>
</tag>
<suite>
<stat pass="95" fail="5" id="s1" name="UpdateSellerDetails Testcases">UpdateSellerDetails Testcases</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200402 12:45:02.089" level="ERROR">Error in file 'C:\Users\perennial\PycharmProjects\EscrowAPI\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Get Token.robot' does not exist.</msg>
<msg timestamp="20200402 12:45:02.090" level="ERROR">Error in file 'C:\Users\perennial\PycharmProjects\EscrowAPI\Resource\Keyword\All Keywords EscrowAPI.robot': Resource file '\Global Keyword\Register_Global_Keywords.robot' does not exist.</msg>
<msg timestamp="20200402 12:53:27.315" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x04D14550&gt;: Failed to establish a new connection: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond')': /escrow_core/api/v1/seller/register</msg>
</errors>
</robot>
